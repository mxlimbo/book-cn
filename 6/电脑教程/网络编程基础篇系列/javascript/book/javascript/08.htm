<html>
<head>
<title>网络编程基础篇之JavaScript</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="ebook.css" type="text/css">
</head>
<body leftmargin="0" topmargin="0" background="bg.jpg">
<table width="100%" cellspacing="0">
  <tr>
    <td valign="top" bgcolor="#FFD26A">
      <table width="180" height="100%">
        <tr align="center" valign="top">
          <td>
            <p><img src="image.jpg"></p>
            <p><a href="list.htm"><img src="bd.gif" border="0"></a><br>
              <a href="07.htm"><img src="ap.gif" border="0"></a></p>
          </td>
        </tr>
        <tr align="center" valign="bottom">
          <td><a href="end.htm"><img src="np.gif" border="0"></a></td>
        </tr>
      </table>
    </td>
    <td valign="top">
      <blockquote>
        <div align="center"><img src="title.gif"></div>
        <!--正文开始-->
        <font color="#0000FF">WEB页面信息的交互 </font>
<p>要实现动态交互，必须掌握有关窗体对象(Form)和框架对象(Frames)更为复杂的知识。</p>        
                <p><font color="#0000FF">一、窗体基础知识</font></p>        
                <p>窗体对象可以使设计人员能用窗体中不同的元素与客户机用户相交互，而用不着在之前首先进行数据输入，就可以实现动态改变Web文档的行为。</p>        
                <p>１、什么是窗体对象</p>        
                <p>窗体（Form）:它构成了Web页面的基本元素。通常一个Web页面有一个窗体或几个窗体，使用Forms[]数组来实现不同窗体的访问。</p>        
                
        <p>&lt;form Name=Form1&gt;<br>
          &lt;INPUT type=text...&gt;<br>
          &lt;Input type=text...&gt;<br>
          &lt;Inpup byne=text...&gt;<br>
          &lt;/form&gt;<br>
          &lt;form Name=Form2&gt;<br>
          &lt;INPUT type=text...&gt;<br>
          &lt;Input type=text...&gt;<br>
          &lt;/form&gt;</p>        
                <p>在Forms[0]中共有三个基本元素，而Forms[1]中只有两个元素。</p>        
                <p>窗体对象最主要的功能就是能够直接访问HTML文档中的窗体，它封装了相关的HTML代码：</p>        
                
        <p>&lt;Form<br>
          Name ="表的名称"<br>
          Target ="指定信息的提交窗口"<br>
          action ="接收窗体程序对应的URL"<br>
          Method =信息数据传送方式(get/post)<br>
          enctype ="窗体编码方式"<br>
          [onsubmit ="JavaScript代码"]&gt;<br>
          &lt;/Form&gt;</p>        
                <p>２、窗体对象的方法</p>        
                <p>窗体对象的方法只有一个--submit()方法，该方法主要功用就是实现窗体信息的提交。如提交Mytest窗体,则使用下列格式：</p>        
                <p>document.mytest.submit()</p>        
                <p>３、窗体对象的属性</p>        
                <p>窗体对象中的属性主要包括以下：elements name action target encoding         
                  method.</p>        
                <p>除Elements外，其它几个均反映了窗体中标识中相应属性的状态，这通常是单个窗体标识；而elements常常是多个窗体元素值的数组，例：         
                </p>        
                <p>elements[0].Mytable.elements[1]</p>        
                <p>４、访问窗体对象</p>        
                <p>在JavaScript中访问窗体对象可由两种方法实现：</p>        
                <p>（１）通过访问窗体</p>        
                <p>在窗体对象的属性中首先必须指定其窗体名，而后就可以通过下列标识访问窗体如：document.Mytable()。</p>        
                <p>（２）通过数组来访问窗体</p>        
                <p>除了使用窗体名来访问窗体外，还可以使用窗体对象数组来访问窗体对象。但需要注意一点，因窗体对象是由浏览器环境的提供的，而浏览器环境所提供的数组下标是由0到n。所以可通过下列格式实现窗体对象的访问：</p>        
                <p>document.forms[0]</p>        
                <p>document.forms[1]</p>        
                <p>document.forms[2]...</p>        
                <p>５、引用窗体的先决条件</p>        
                <p>在JavaScript中要对窗体引用的条件是：必须先在页面中用标识创建窗体，并将定义窗体部分放在引用之前。</p>        
                <p><font color="#0000FF">二、窗体中的基本元素</font></p>        
                <p>窗体中的基本元素由按钮、单选按钮、复选按钮、提交按钮、重置按钮、文本框等组成。<br>        
                  在JavaScript中要访问这些基本元素，必须通过对应特定的窗体元素的数组下标或窗体元素名来实现。每一个元素主要是通过该元素的属性或方法来引用。其引用的基本格式见下:</p>        
                <p>formName.elements[].methadName (窗体名.元素名或数组.方法)</p>        
                <p>formName.elemaent[].propertyName(窗体名.元素名或数组.属性)</p>        
                <p>下面分别介绍：</p>        
                <p>１、Text单行单列输入元素</p>        
                <p>　功能：对Text标识中的元素实施有效的控制。</p>
                <p>　基本属性：</p>
                <p>Name：设定提交信息时的信息名称。对应于HTML文档中的Name。</p>
                <p>Value：用以设定出现在窗口中对应HTML文档中Value的信息。</p>
                <p>defaultvalue：包括Text元素的默认值</p>
                <p>　基本方法：</p>
                <p>blur()：将当前焦点移到后台。</p>
                <p>select()：加亮文字。</p>
                <p>　主要事件：</p>
                <p>onFocus：当Text获得焦点时，产生该事件。</p>
                <p>OnBlur：从元素失去焦点时，产生该事件。</p>
                <p>Onselect：当文字被加亮显示后，产生该文件。</p>
                <p>onchange：当Text元素值改变时，产生该文件。</p>
                <p>例：...</p>
                
        <p>&lt;Form name="test"&gt;<br>
          &lt;input type="text" name="test" value="this 
          is a javascript" &gt;<br>
          &lt;/form&gt;<br>
          ...<br>
          &lt;script language ="Javascirpt"&gt;<br>
          document.mytest.value="that is a Javascript";<br>
          document.mytest.select();<br>
          document.mytest.blur(); <br>
          &lt;/script&gt;</p>
                <p>２、textarea多行多列输入元素</p>
                <p>　功能：实施对Textarea中的元素进行控制。</p>
                <p>　基本属性</p>
                <p>name：设定提交信息时的信息名称，对应HTML文档Textarea的Name。</p>
                <p>Value：用以设定出现在窗口中对应HTML文档中Value的信息。</p>
                <p>Default value：元素的默认值。</p>        
                <p>　方法：</p>        
                <p>blur()：将输入焦点失去</p>        
                <p>select()：将文字加亮后</p>        
                <p>　事件：</p>        
                <p>onBlur:当失去输入焦点后产生该事件</p>        
                <p>onFocus:当输入获得焦点后，产生该文件</p>        
                <p>Onchange:当文字值改变时，产生该事件</p>        
                <p>Onselect:当文字加亮后，产生该文件</p>        
                <p>３、Select选择元素</p>        
                <p>　功能：实施对滚动选择元素的控制。</p>        
                <p>　属性：</p>        
                <p>name:设定提交信息时的信息名称，对应文档select中的name。</p>        
                <p>Length:对应文档select中的length</p>        
                <p>options:组成多个选项的数组</p>        
                <p>selectIndex;该下标指明一个选项</p>        
                <p>select在中每一选项都含有以下属性：</p>        
                <p>Text:选项对应的文字</p>        
                <p>selected:指明当前选项是否被选中</p>        
                <p>Index:指明当前选项的位置</p>        
                <p>defaultselected:默认选项</p>        
                <p>　事件：</p>        
                <p>OnBlur：当select选项失去焦点时，产生该文件。</p>        
                <p>onFocas:当select获得焦点时，产生该文件。</p>        
                <p>Onchange:选项状态改变后，产生该事件。</p>        
                <p>４、Button按钮</p>        
                <p>　功能：实施对Button按钮的控制。</p>
                <p>　属性：</p>
                <p>Name:设定提交信息时的信息名称，对应文档中button的Name。</p>
                <p>Value:用以设定出现在窗口中对应HTML文档中Value的信息。</p>
                <p>　方法：</p>
                <p>click()该方法类似于一个按下的按钮。</p>
                <p>　事件：</p>
                <p>onclick当单击button按钮时，产生该事件。</p>
                <p>例 ： </p>
                
        <p>&lt;Form name="test"&gt;<br>
          &lt;input type="button" name="testcall" onclick=tmyest()&gt;<br>
          &lt;/form&gt;<br>
          ...<br>
          &lt;script language="javascirpt"&gt;<br>
          document.elements[0].value="mytest"; //通过元素访问<br>
          或 <br>
          document.testcallvalue="mytest"; // 通过名字访问<br>
          &lt;/script&gt; <br>
          .....　</p>        
                <p>５、checkbox检查框</p>
                <p>　功能：实施对一个具有复选框中元素的控制。</p>
                <p>　属性：</p>
                <p>name:设定提交信息时的信息名称。</p>
                <p>Value:用以设定出现在窗口中对应HTML文档中Value的信息。</p>
                <p>Checked:该属性指明框的状态true/false.</p>
                <p>defauitchecked:默认状态</p>
                <p>　方法：</p>
                <p>click()该方法使得框的某一个项被选中。</p>
                <p>　事件：</p>
                <p>onclick:当框的选被选中时，产生该事件。</p>
                <p>６、radio无线按钮</p>
                <p>　功能：实施对一个具单选功能的无线按钮控制。</p>
                <p>　属性：</p>
                <p>name:设定提交信息时的信息名称，对应HTML文档中的radio的name相同</p>
                <p>value:用以设定出现在窗口中对应HTML文档中Value的信息，对应HTML文档中的radio的name。</p>
                <p>length:单选按钮中的按钮数目。</p>
                <p>defalechecked:默认按钮。</p>
                <p>checked:指明选中还是没有选中。</p>
                <p>index:选中的按钮的位置。</p>
                <p>　方法：</p>
                <p>chick():选定一个按钮。</p>
                <p>　事件：</p>
                <p>onclick:单击按钮时，产生该事件。</p>
                <p>７、hidden:隐藏</p>
                <p>　功能：实施对一个具有不显示文字并能输入字符的区域元素的控制。</p>
                <p>　属性：</p>
                <p>name:设定提交信息时的信息名称，对应HTML文档的hidden中的Name。</p>
                <p>Value:用以设定出现在窗口中对应HTML文档中Value的信息，对应HTML文档hidden中的value。</p>
                <p>defaleitvalue:默认值</p>
                <p>８、Password口令</p>
                <p>　功能：实施对具有口令输入的元素的控制。</p>
                <p>　属性：</p>
                <p>Name:设定提交信息时的信息名称，对应HTML文档中password中的name。</p>
                <p>Value:用以设定出现在窗口中对应HTML文档中Value的信息，对应HTML文档中password中的Value。</p>
                <p>defaultvalu:默认值</p>
                <p>　方法</p>
                <p>select():加亮输入口令域。</p>
                <p>blur():使这丢失passward输入焦点。</p>
                <p>focus():获得password输入焦点。</p>
                <p>９、submit提交元素</p>
                <p>　功能：实施对一个具有提交功能按钮的控制。</p>
                <p>　属性：</p>
                <p>name:设定提交信息时的信息名称，对应HTML文档中submit。</p>
                <p>Value:用以设定出现在窗口中对应HTML文档中Value的信息，对应HTML文档中value。</p>
                <p>　方法</p>
                <p>click()相当于按下submit按钮。</p>
                <p>　事件：</p>
                <p>onclick()当按下该按钮时，产生该事件。</p>
                
        <p><font color="#0000FF">三、范例</font></p>
                <p>下面我们演示通过点击一个按钮（red）来改变窗口颜色，点击“调用动态按钮文档”调用一个动态按钮文档。<br>
                  test8_1.htm<br>
                  &lt;html&gt;<br>
                  &lt;head&gt;<br>
                  &lt;Script Language="JavaScript"&gt;<br>        
                  //原来的颜色<br>        
                  document.bgColor="blue";<br>        
                  document.vlinkColor="white";<br>        
                  document.linkColor="yellow";<br>        
                  document.alinkcolor="red";<br>        
                  //动态改变颜色<br>
          function changecolor(){<br>        
                  document.bgColor="red";<br>        
                  document.vlinkColor="blue";<br>        
                  document.linkColor="green";<br>        
                  document.alinkcolor="blue";<br>        
                  }<br>
          &lt;/script&gt;<br>        
                  &lt;/HEAD&gt;<br>        
                  &lt;body bgColor="White" &gt;<br>        
                  &lt;A href="test8_2.htm"&gt; 调用动态按钮文档&lt;/a&gt;<br>
          &lt;form &gt;<br>        
                  &lt;Input type="button" Value="red" onClick="changecolor()"&gt;<br>        
                  &lt;/form&gt;<br>        
                  &lt;/BODY&gt;<br>        
                  &lt;/HTML&gt;<br>        
                  <br>        
                  输出结果见图1所示。<br>
          <img src="008-1.gif"> </p>        
                <p> <br>        
                  图1<br>        
                  <br>        
                  <br>        
                  动态按钮程序。<br>        
                  test8_2.htm<br>        
                  &lt;HTML&gt;<br>        
                  &lt;HEAD&gt;<br>        
                  &lt;/HEAD&gt;<br>
          &lt;p align="center"&gt;　&lt;/p&gt;<br>
                  &lt;div align="center"&gt;&lt;center&gt;<br>
          &lt;table border="0" cellspacing="0" cellpadding="0"&gt;<br>        
                  &lt;tr&gt;<br>        
                  &lt;td width="100%"&gt;&lt;form name="form2"         
                  onSubmit="null"&gt;<br>        
                  &lt;p&gt;&lt;input type="submit" name="banner"         
                  VALUE="Submit"<br>        
                  onClick="alert('You have to put an \'action=[url]\' on         
                  the form <br>        
                  tag!!')"&gt; &lt;br&gt;<br>
          &lt;script language="JavaScript"&gt;<br>
          var id,pause=0,position=0;<br>        
                  function banner() {<br>        
                  // variables declaration<br>        
                  var i,k,msg=" 这里输入你要的内容";// increase msg<br>        
                  k=(30/msg.length)+1;<br>        
                  for(i=0;i&lt;=k;i++) msg+=" "+msg;<br>        
                  // show it to the window<br>        
                  document.form2.banner.value=msg.substring (position,position-30);<br>        
                  // set new position<br>        
                  if(position++==msg.length) position=0;<br>        
                  // repeat at entered speed <br>        
                  id=setTimeout("banner()",60); }<br>        
                  // end --&gt;<br>        
                  banner();<br>        
                  &lt;/script&gt;&lt;/p&gt;<br>        
                  &lt;/form&gt;<br>        
                  &lt;/td&gt;<br>        
                  &lt;/tr&gt;<br>        
                  &lt;/table&gt;<br>        
                  &lt;/center&gt;&lt;/div&gt;<br>
          &lt;p&gt;　&lt;/p&gt;<br>
          &lt;BODY&gt;<br>
                  &lt;A href="test8_1.htm"&gt; 返回&lt;/a&gt;<br>
          &lt;/BODY&gt;<br>        
                  &lt;/HTML&gt;<br>        
                  <br>        
                  输出结果见图2所示。<br>        
                  <br>
          <img src="008-2.gif"></p>        
                <p>图2　</p>
                <p>本讲介绍了使用JavaScript脚本实现Web页面信息交互的方法。其中主要介绍了窗体中的基本元素的主要功能和使用。</p>
        <!--正文结束-->
      <center>
      <hr>
      <p>本书由<a href="http://www.huiniao.com/">【灰鸟资讯】</a>免费制作<br>
          想要更多的免费电子图书，请光临<br>
          <a href="http://www.huiniao.com">http://www.huiniao.com</a></p>
      </center>
      </blockquote>
    </td>
  </tr>
</table>
</body>
</html>

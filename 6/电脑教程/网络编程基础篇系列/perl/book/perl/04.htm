<html>
<head>
<title>网络编程基础篇之PERL</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="ebook.css" type="text/css">
</head>
<body leftmargin="0" topmargin="0" background="bg.jpg">
<table width="100%" cellspacing="0">
  <tr>
    <td valign="top" bgcolor="#FFD26A">
      <table width="180" height="100%">
        <tr align="center" valign="top">
          <td>
            <p><img src="image.jpg"></p>
            <p><a href="list.htm"><img src="bd.gif" border="0"></a><br>
              <a href="03.htm"><img src="ap.gif" border="0"></a></p>
          </td>
        </tr>
        <tr align="center" valign="bottom">
          <td><a href="05.htm"><img src="np.gif" border="0"></a></td>
        </tr>
      </table>
    </td>
    <td valign="top">
      <blockquote>
        <div align="center"><img src="title.gif"></div>
        <!--正文开始-->
        <font color="#0000FF">列表和数组变量</font> 
        <p> <font color="#0000FF">一、列表</font><br>
          &nbsp;&nbsp;列表是包含在括号里的一序列的值，可以为任何数值，也可为空，如：(1, 5.3 , "hello" 
          , 2)，空列表：()。<br>
          &nbsp;&nbsp;注：只含有一个数值的列表(如：(43.2) )与该数值本身(即：43.2 )是不同的，但它们可以互相转化或赋值。<br>
          &nbsp;&nbsp;列表例：<br>
          &nbsp;&nbsp;&nbsp;&nbsp;(17, $var, "a string")<br>
          &nbsp;&nbsp;&nbsp;&nbsp;(17, 26 &lt;&lt; 2)<br>
          &nbsp;&nbsp;&nbsp;&nbsp;(17, $var1 + $var2)<br>
          &nbsp;&nbsp;&nbsp;&nbsp;($value, "The answer is $value")<br>
          <font color="#0000FF">二、数组--列表的存贮 </font><br>
          &nbsp;&nbsp;列表存贮于数组变量中，与简单变量不同，数组变量以字符"@"打头，如：<br>
          &nbsp;&nbsp;&nbsp;&nbsp;@array = (1, 2, 3);<br>
          &nbsp;&nbsp;注：<br>
          &nbsp;(1)数组变量创建时初始值为空列表：()。<br>
          &nbsp;(2)因为PERL用@和$来区分数组变量和简单变量，所以同一个名字可以同时用于数组变量和简单变量，如：<br>
          &nbsp;&nbsp;&nbsp;&nbsp;$var = 1;<br>
          &nbsp;&nbsp;&nbsp;&nbsp;@var = (11, 27.1 , "a string");<br>
          &nbsp;&nbsp;但这样很容易混淆，故不推荐。<br>
          <font color="#0000FF">1、数组的存取 </font><br>
          &nbsp;&nbsp;.对数组中的值通过下标存取，第一个元素下标为0。试图访问不存在的数组元素，则结果为NULL，但如果给超出数组大小的元素赋值，则数组自动增长，原来没有的元素值为NULL。如：<br>
          &nbsp;&nbsp;&nbsp;&nbsp;@array = (1, 2, 3, 4);<br>
          &nbsp;&nbsp;&nbsp;&nbsp;$scalar = $array[0];<br>
          &nbsp;&nbsp;&nbsp;&nbsp;$array[3] = 5; # now @array is (1,2,3,5)<br>
          &nbsp;&nbsp;&nbsp;&nbsp;$scalar = $array[4]; # now $scalar = null;<br>
          &nbsp;&nbsp;&nbsp;&nbsp;$array[6] = 17; # now @array is (1,2,3,5,"","",17)<br>
          &nbsp;&nbsp;.数组间拷贝<br>
          &nbsp;&nbsp;&nbsp;&nbsp;@result = @original; <br>
          &nbsp;&nbsp;.用数组给列表赋值<br>
          &nbsp;&nbsp;&nbsp;&nbsp;@list1 = (2, 3, 4);<br>
          &nbsp;&nbsp;&nbsp;&nbsp;@list2 = (1, @list1, 5); # @list2 = (1, 2, 3, 
          4, 5)<br>
          &nbsp;&nbsp;.数组对简单变量的赋值<br>
          &nbsp;&nbsp;&nbsp;&nbsp;(1) @array = (5, 7, 11);<br>
          &nbsp;&nbsp;&nbsp;&nbsp;($var1, $var2) = @array; # $var1 = 5, $var2 
          = 7, 11被忽略<br>
          &nbsp;&nbsp;&nbsp;&nbsp;(2) @array = (5, 7);<br>
          &nbsp;&nbsp;&nbsp;&nbsp;($var1, $var2, $var3) = @array; # $var1 = 5, 
          $var2 = 7, $var3 ="" (null)<br>
          &nbsp;&nbsp;.从标准输入(STDIN)给变量赋值<br>
          &nbsp;&nbsp;&nbsp;&nbsp;$var = &lt;STDIN&gt;;<br>
          &nbsp;&nbsp;&nbsp;&nbsp;@array = &lt;STDIN&gt;; # ^D为结束输入的符号<br>
          <font color="#0000FF">2 、字符串中的方括号和变量替换 </font><br>
          &nbsp;&nbsp;&nbsp;&nbsp;"$var[0]" 为数组@var的第一个元素。<br>
          &nbsp;&nbsp;&nbsp;&nbsp;"$var\[0]" 将字符"["转义，等价于"$var". 
          "[0]"，$var被变量替换，[0]保持不变。<br>
          &nbsp;&nbsp;&nbsp;&nbsp;"${var}[0]" 亦等价于"$var" ."[0]"。<br>
          &nbsp;&nbsp;&nbsp;&nbsp;"$\{var}"则取消了大括号的变量替换功能，包含文字：${var}.<br>
          <font color="#0000FF">3、列表范围</font><br>
          &nbsp;&nbsp;&nbsp;&nbsp;(1..10) = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)<br>
          &nbsp;&nbsp;&nbsp;&nbsp;(2, 5..7, 11) = (2, 5, 6, 7, 11)<br>
          &nbsp;&nbsp;&nbsp;&nbsp;(3..3) = (3)<br>
          &nbsp;&nbsp;.用于实数<br>
          &nbsp;&nbsp;&nbsp;&nbsp;(2.1..5.3) = (2.1, 3.1 ,4.1, 5.1)<br>
          &nbsp;&nbsp;&nbsp;&nbsp;(4.5..1.6) = ()<br>
          &nbsp;&nbsp;.用于字符串<br>
          &nbsp;&nbsp;&nbsp;&nbsp;("aaa".."aad") = ("aaa","aab", 
          "aac", "aad")<br>
          &nbsp;&nbsp;&nbsp;&nbsp;@day_of_month = ("01".."31")<br>
          &nbsp;&nbsp;.可包含变量或表达式<br>
          &nbsp;&nbsp;&nbsp;&nbsp;($var1..$var2+5)<br>
          &nbsp;&nbsp;.小技巧：<br>
          &nbsp;&nbsp;&nbsp;&nbsp;$fred = "Fred";<br>
          &nbsp;&nbsp;&nbsp;&nbsp;print (("Hello, " . $fred . "!\n") 
          x 2); <br>
          &nbsp;&nbsp;其结果为：<br>
          &nbsp;&nbsp;&nbsp;&nbsp;Hello, Fred!<br>
          &nbsp;&nbsp;&nbsp;&nbsp;Hello, Fred! <br>
          <font color="#0000FF">4、数组的输出</font><br>
          (1) @array = (1, 2, 3);<br>
          &nbsp;&nbsp;&nbsp;&nbsp;print (@array, "\n");<br>
          &nbsp;&nbsp;结果为：<br>
          &nbsp;&nbsp;&nbsp;&nbsp;123<br>
          (2) @array = (1, 2, 3);<br>
          &nbsp;&nbsp;&nbsp;&nbsp;print ("@array\n");<br>
          &nbsp;&nbsp;结果为：<br>
          &nbsp;&nbsp;&nbsp;&nbsp;1 2 3<br>
          <font color="#0000FF">5、列表/数组的长度</font> <br>
          &nbsp;&nbsp;当数组变量出现在预期简单变量出现的地方，则PERL解释器取其长度。<br>
          &nbsp;&nbsp;&nbsp;&nbsp;@array = (1, 2, 3);<br>
          &nbsp;&nbsp;&nbsp;&nbsp;$scalar = @array; # $scalar = 3,即@array的长度<br>
          &nbsp;&nbsp;&nbsp;&nbsp;($scalar) = @array; # $scalar = 1,即@array第一个元素的值<br>
          &nbsp;&nbsp;注：以数组的长度为循环次数可如下编程：<br>
          &nbsp;&nbsp;&nbsp;&nbsp;$count = 1;<br>
          &nbsp;&nbsp;&nbsp;&nbsp;while ($count &lt;= @array) {<br>
          &nbsp;&nbsp;&nbsp;&nbsp;print ("element $count: $array[$count-1]\n");<br>
          &nbsp;&nbsp;&nbsp;&nbsp;$count++;<br>
          &nbsp;&nbsp;&nbsp;&nbsp;}<br>
          <font color="#0000FF">6、子数组 </font><br>
          &nbsp;&nbsp;&nbsp;&nbsp;@array = (1, 2, 3, 4, 5);<br>
          &nbsp;&nbsp;&nbsp;&nbsp;@subarray = @array[0,1]; # @subarray = (1, 2)<br>
          &nbsp;&nbsp;&nbsp;&nbsp;@subarray2 = @array[1..3]; # @subarray2 = (2,3,4)<br>
          &nbsp;&nbsp;&nbsp;&nbsp;@array[0,1] = ("string", 46); # @array 
          =("string",46,3,4,5) now <br>
          &nbsp;&nbsp;&nbsp;&nbsp;@array[0..3] = (11, 22, 33, 44); # @array = 
          (11,22,33,44,5) now<br>
          &nbsp;&nbsp;&nbsp;&nbsp;@array[1,2,3] = @array[3,2,4]; # @array = (11,44,33,5,5) 
          now<br>
          &nbsp;&nbsp;&nbsp;&nbsp;@array[0..2] = @array[3,4]; # @array = (5,5,"",5,5) 
          now<br>
          &nbsp;&nbsp;可以用子数组形式来交换元素：<br>
          &nbsp;&nbsp;&nbsp;&nbsp;@array[1,2] = @array[2,1];<br>
          <font color="#0000FF">7、有关数组的库函数 </font><br>
          (1)sort--按字符顺序排序<br>
          &nbsp;&nbsp;&nbsp;&nbsp;@array = ("this", "is", 
          "a","test");<br>
          &nbsp;&nbsp;&nbsp;&nbsp;@array2 = sort(@array); # @array2 = ("a","is", 
          "test", "this")<br>
          &nbsp;&nbsp;&nbsp;&nbsp;@array = (70, 100, 8);<br>
          &nbsp;&nbsp;&nbsp;&nbsp;@array = sort(@array); # @array = (100, 70, 
          8) now<br>
          ( 2)reverse--反转数组<br>
          &nbsp;&nbsp;&nbsp;&nbsp;@array2 = reverse(@array);<br>
          &nbsp;&nbsp;&nbsp;&nbsp;@array2 = reverse sort (@array);<br>
          (3)chop--数组去尾<br>
          &nbsp;&nbsp;&nbsp;&nbsp;chop的意义是去掉STDIN（键盘）输入字符串时最后一个字符--换行符。而如果它作用到数组上，则将数组中每一个元素都做如此处理。<br>
          &nbsp;&nbsp;&nbsp;&nbsp;@list = ("rabbit", "12345","quartz");<br>
          &nbsp;&nbsp;&nbsp;&nbsp;chop (@list); # @list = ("rabbi", 
          "1234","quart") now<br>
          ( 4)join/split--连接/拆分<br>
          &nbsp;&nbsp;&nbsp;&nbsp;join的第一个参数是连接所用的中间字符，其余则为待连接的字符数组。<br>
          &nbsp;&nbsp;&nbsp;&nbsp;$string = join(" ", "this", 
          "is","a", "string"); # 结果为"this is 
          a string"<br>
          &nbsp;&nbsp;&nbsp;&nbsp;@list = ("words","and");<br>
          &nbsp;&nbsp;&nbsp;&nbsp;$string = join("::", @list, "colons"); 
          #结果为"words::and::colons"<br>
          &nbsp;&nbsp;&nbsp;&nbsp;@array = split(/::/,$string); # @array = ("words","and", 
          "colons") now<br><br>
          <!--正文结束-->
        <center>
      <hr>
      <p>本书由<a href="http://www.huiniao.com/">【灰鸟资讯】</a>免费制作<br>
          想要更多的免费电子图书，请光临<br>
          <a href="http://www.huiniao.com">http://www.huiniao.com</a></p>
      </center>
      </blockquote>
    </td>
  </tr>
</table>
</body>
</html>

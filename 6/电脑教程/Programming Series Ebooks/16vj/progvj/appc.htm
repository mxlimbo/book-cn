<HTML>
<HEAD><LINK REL="STYLESHEET" TYPE="text/css" HREF="Library.css">
<TITLE>Flow Control</TITLE>


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("appb.htm", "appd.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>
<A NAME="20"><H1>Flow Control</H1></A>

<p>Java provides a full set of flow control statements. These flow controls are 
statements, not expressions&#8212;meaning that they don't have a value or a type.

<A NAME="21"><h2>The <I>if</I> Statement</h2></A>
<p>The simplest flow control statement is the 
<I>if</I> statement:

<p><pre>
if (boolexpr)
{
    // any number of statements
}
else
{
    // any number of statements
}
</PRE>

<p>First Java evaluates the <I>boolean</I> expression. If it's true, the 
statements contained in the first block are executed. If not, the statements contained in the 
<I>else</I> block are executed. Of course, the 
<I>else</I> clause is optional.

<A NAME="22"><h2>The <I>while</I> loop</h2></A>
<p>The easiest of the Java loop structures is the 
<I>while</I> loop. The <I>while</I> loop comes in two variations.

<p>The first variation:

<p><pre>
while (boolexpr)
{
    // statements
}
</PRE>

<p>The second variation:

<p><pre>
do
{
    // statements
} while (boolexpr);
</PRE>

<p>In the first variation, the <I>boolean</I> expression 
<I>boolexpr</I> is evaluated. If it's <I>true</I>, the Java statements within the block are executed. Once all of the statements 
within the braces have been executed, control loops back up to the top of the 
<I>while</I> loop and the <I>boolean</I> expression is reevaluated, thereby starting the whole process 
over again. If <I>boolexpr</I> isn't <I>true</I>, control jumps to the first statement after the closed brace.

<p>The second variation is similar to the first, except that the 
<I>boolean</I> expression isn't evaluated until after the Java statements within the block have executed, so 
the statements within the block will be executed at least once. If the expression is 
<I>true</I>, control passes up to the top of the block; if the expression is 
<I>false,</I> control passes to the statement immediately following the 
<I>while</I>.

<A NAME="23"><h2>The <I>for</I> loop</h2></A>
<p>The most common of the loops is the <I>for</I> loop. A 
<I>for</I> loop is defined as follows:

<p><pre>
for (int a = 0; a &lt; 10; a++)
{
    // statements
}
</PRE>

<p>This is equivalent to the following:

<p><pre>
{
    int a = 0;
    while(a &lt; 10)
    {
        .
        .
        .
        a++;
    }
}
</PRE>

<A NAME="24"><h2>The<I> break</I> and <I>continue </I>Statements</h2></A>
<p>The keywords <I>break</I> and 
<I>continue</I> allow the program to abort execution of the 
statements from within a loop. The unlabeled 
<I>break</I> statement passes control outside of the loop immediately. In contrast, the 
<I>break</I> statement can be labeled to allow control to pass out of multiple loops at one time.

<p><div class="note"><blockquote>
<b>NOTE</b><hr>The labeled break addresses the primary reason that 
programmers say they need a <I>goto</I> statement. This controlled exit is about as close as Java comes to 
a <I>goto</I> statement.</blockquote></div>


<p>The <I>continue</I> statement passes control to the closed brace of a loop, 
causing control to pass directly to the conditional expression. The 
<I>continue</I> statement can also carry a label, in which case control passes to the closing brace of the labeled loop.

<A NAME="25"><h2>The <I>switch</I> Statement</h2></A>
<p>The <I>switch</I> statement is useful when you are selecting from a number of 
alternatives:

<p><pre>
switch(expr)
{
  case cexpr1:
    // Java statements
    break;
  case cexpr2:
    // more Java statements
    break;
  default:
    // even more Java statements
}
</PRE>

<p>Java evaluates the expression <I>expr</I>. Its value is then compared to each of 
the constant integer expressions (<I>cexprn</I>) listed after the 
<I>case</I> statements. (A constant expression is an expression whose value can be computed at compile time.) 
Control passes to the <I>case</I> statement whose expression value matches. If none of the 
<I>case</I> statements match, control passes to the optional 
<I>default</I> case. If no <I>default</I> case is provided, then no case is selected and control passes to the first statement after 
the closed brace.

<p>The <I>break</I> at the end of each case isn't required; however, without it 
control passes straight through to the next case.

</BODY>
</HTML>





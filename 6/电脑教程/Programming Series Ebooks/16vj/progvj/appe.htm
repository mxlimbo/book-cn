<HTML>
<HEAD><LINK REL="STYLESHEET" TYPE="text/css" HREF="Library.css">
<TITLE>Other Class-Related Concepts</TITLE>


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("appd.htm", "appf.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>
<A NAME="49"><H1>Other Class-Related Concepts</H1></A>

<A NAME="50"><H2>Packages</H2></A>

<p>A package is a loose affiliation of classes. Classes that are in the same package 
can access other classes and members in the package, whether you declare them 
public or not.

<A NAME="51"><H3>Defining a package</H3></A>

<p>The first line of a Java source code file can include the keyword 
<I>package,</I> followed by the package name. Classes contained within a source file that don't include 
the keyword <I>package</I> are put into the default package.

<A NAME="52"><H3>Accessing the members of a package</H3></A>

<p>Classes that are members of the same package as the current class are 
automatically accessible to the current class.

<p>The current class can access classes contained in other packages. To do so, 
the current class specifies the entire class name, including the package name, as in 
the following example:

<p><pre>
class TV
{
    com.ms.wfc.ui.Button button = new com.ms.wfc.ui.Button();
}
</PRE>

<p>A class in another package can be made directly accessible by importing it 
using the <I>import</I> keyword:

<p><pre>
import com.ms.wfc.ui.Button;
class TV
{
    Button button = new Button();
}
</PRE>

<p>All of the classes of a given package can be imported at the same time using 
a wildcard character, as follows:

<p><pre>
import com.ms.wfc.ui.*;
class TV
{
    Button button = new Button();
}
</PRE>

<p>It's not possible to import all of the subpackages of a package using the 
wildcard character. Thus, <I>import</I> <I>com.ms.wfc.* 
</I>doesn't import the <I>com.ms.wfc.ui</I> package. 
In addition, no other wildcard character than * is allowed.

<A NAME="53"><H3>Default packages</H3></A>

<p>Since the packages <I>java.lang</I> and 
<I>java.util</I> are critical to the operation of any 
Java program, Java automatically imports these packages.

<A NAME="54"><h2>The <I>Object</I> Class</h2></A>
<p><I>Object</I> is the base class of all classes. If you don't specify a base class, your 
class extends <I>Object</I> directly. Thus, the following two class definitions are 
completely equivalent:

<p><pre>
class MyClass1              // extends Object by default
{
}

class MyClass2 extends Object
{
}
</PRE>

<p>A method can pass any object to a method that accepts an instance of 
class <I>Object</I> as its argument.

<A NAME="55"><H2>The <I>String</I> Class</H2></A>

<p>The class <I>String</I> represents Unicode character strings. The 
<I>String</I> class offers a series of useful methods, such as 
<I>concat()</I> to concatenate two strings, 
<I>compareTo()</I> to compare two strings, 
<I>toUpperCase()</I> to convert the string to all uppercase 
characters, and <I>toLowerCase()</I> to convert the string to all lowercase characters. The following 
two properties&#8212;double quotes and +&#8212;are reserved to the class 
<I>String</I>.

<p>You can create an object of class 
<I>String</I> by encompassing a string of 
characters within double quotes. Thus, the two following declarations are equivalent:

<p><pre>
String s1 = &quot;This is a string&quot;;
String s2 = new String(&quot;This is a string&quot;);
</PRE>

<p>In addition, the + operator is extended to the 
<I>String</I> class to perform conversion (if necessary) and concatenation:

<p><pre>
int count = 1;
String s = &quot;This is the number &quot; + count + &quot; string in the list&quot;;
</PRE>

</BODY>
</HTML>





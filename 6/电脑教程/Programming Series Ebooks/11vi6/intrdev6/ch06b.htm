<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="Library.css" TYPE="text/css">
<TITLE>Using DTCs</TITLE>


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch06a.htm", "ch07a.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>
<A NAME="105"><H1>Using DTCs</H1></A>
<P>You have seen several examples of using DTCs earlier in the book. 
Those examples were created using the drag-and-drop features of the Data 
Environment to hook up the DTCs to a data command object. In this section, 
we will explore how to use DTCs in our applications and either set their properties or 
manually link them to a database.

</P>
<P>You can use DTCs in any ASP or HTML application. Like any HTML 
control, DTCs have properties and they can be driven by scripting exactly like 
HTML controls can. However, DTCs are quite different from HTML controls 
because they expose an event model that allows you to script activities for them on 
both the client and the server.

</P>
<P>To use a DTC, simply place it on a page. The easiest way to do this is 
to drag the control from the Toolbox and drop it onto a page, as illustrated by 
the following steps:

</P>
<OL>
<P><LI>  Open the file you wish to work on in the editor.

</LI>
</P>
<P><LI>  Drag the DTC from the Toolbox.

</LI>
</P>
<P><LI>  Drop the DTC onto the page.
</LI>
</P>
</OL>




<P>The DTC will be added into the location where you drop it. If the 
page contains HTML tags, you can insert the DTC into a specific tag. For example, 
if your page contains an HTML table, you can place DTCs in the table. To 
demonstrate how to work with DTCs in production applications, I created a 
simple page that contains an HTML table and a few DTCs. The HTML table is used 
for formatting. The DTCs will contain the data. Figure 6-9 shows the page with a title and a subtitle. I typed both of these elements 
directly into the page using Design view. Then I highlighted each element and 
formatted its text with the HTML toolbar (the one containing the word Normal 
and showing the other style buttons).

</P>
<P><A HREF="javascript:fullSize('f06lh09x.htm')"> <IMG SRC="images/f06lh09.jpg" width=404 height=296 border=0 ALT="Click to view at full size."> </A>
</P>
<P>
<!-- CAPTION --><B>Figure 6-9.</B> <I>Using Design view is the easiest way to add new visual features 
to a page.</I><!-- /CAPTION -->

</P>
<P>Next I selected Insert Table from the Table menu. This command 
displayed the dialog box shown in Figure 6-10.

</P>
<P><A HREF="javascript:fullSize('f06lh10x.htm')"> <IMG SRC="images/f06lh10.jpg" width=404 height=351 border=0 ALT="Click to view at full size."> </A>
</P>
<P>
<!-- CAPTION --><B>Figure 6-10.</B> <I>The Insert Table dialog box allows you to quickly insert an 
HTML table or change an existing HTML table's properties.</I><!-- /CAPTION -->

</P>
<P>Then I clicked OK to close the dialog box and insert the table. This 
resulted in the following code being inserted into the file:

</P>
<P><PRE>
&lt;TABLE align=center border=2 cellPadding=1 cellSpacing=1 
    width=85%&gt;
    &lt;TR&gt;
        &lt;TD&gt;&lt;/TD&gt;
        &lt;TD&gt;&lt;/TD&gt;
        &lt;TD&gt;&lt;/TD&gt;&lt;/TR&gt;
    &lt;TR&gt;
        &lt;TD&gt;&lt;/TD&gt;
        &lt;TD&gt;&lt;/TD&gt;
        &lt;TD&gt;&lt;/TD&gt;&lt;/TR&gt;
    &lt;TR&gt;
        &lt;TD&gt;&lt;/TD&gt;
        &lt;TD&gt;&lt;/TD&gt;
        &lt;TD&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TABLE&gt;
</PRE>

</P>
<P>Using the HTML toolbar and other features&#8212;such as the Table 
menu&#8212;simplifies many of the standard procedures for building a Web application 
with Visual InterDev.

</P>
<P>Now that we have a table in the page, we can add DTCs to it.

</P>
<OL>
<P><LI>  Drag a DTC from the Toolbox.

</LI>
</P>
<P><LI>  Drop it into the appropriate cell in the table.
</LI>
</P>
</OL>




<P>The results of this operation are shown in Figure 6-11.

</P>
<P><A HREF="javascript:fullSize('f06lh11x.htm')"> <IMG SRC="images/f06lh11.jpg" width=404 height=296 border=0 ALT="Click to view at full size."> </A>
</P>
<P>
<!-- CAPTION --><B>Figure 6-11.</B> <I>DTCs can be used with other HTML elements.</I><!-- /CAPTION -->

</P>
<P>To complete the interface settings, I changed the widths of the 
Textbox DTCs from 20 characters to 30 characters. This also adjusted the DTCs' 
widths in the table.

</P>
<A NAME="106"><H2>Working with Data-Bound Controls</H2></A><P>Now let's look at how to wire up DTCs to a page without dragging and 
dropping them from the Data Environment and a data command object. First 
you must place a Recordset DTC onto the page.

</P>
<OL>
<P><LI> Open an ASP file in the editor.

</LI>
</P>
<P><LI> Drag a Recordset DTC from the Toolbox.

</LI>
</P>
<P><LI> Drop the Recordset DTC onto the page.

</LI>
</P>
<P><LI> Right-click the Recordset DTC, and select Properties from the 
context menu.

</LI>
</P>
<P><LI> Change the properties for the Recordset DTC. To do so, you can 
enter the SQL for the command directly into the DTC, you can select a 
data command object, or you can use the SQL Builder button to start 
the Query Designer and build the query graphically. When you 
have finished updating the Recordset DTC's properties, click Close.
</LI>
</P>
</OL>




<P>Now that you have a Recordset DTC on the page, you can add your 
other DTCs and bind them to the Recordset DTC.

</P>
<OL>
<P><LI> Drag a DTC from the Toolbox, and drop it onto the page.

</LI>
</P>
<P><LI> Right-click the DTC, and choose Properties.

</LI>
</P>
<P><LI> In the Recordset drop-down list, select the name of the 
Recordset DTC that will supply the data to this DTC.

</LI>
</P>
<P><LI> In the Field drop-down list, select the name of the recordset 
field that the data-bound DTC will display.
</LI>
</P>
</OL>




<P>The above steps link the new DTC to the Recordset DTC. Figure 6-12 
shows the <I>txtCompany</I> Textbox DTC. The Properties window shows the 
<I>Recordset</I> property set to Recordset1 and the 
<I>DataField</I> property set to CompanyName.

</P>
<P>To complete the page shown in Figure 6-12, I added two more 
Textbox DTCs and the RecordsetNavbar DTC. The Textbox DTCs are wired to 
Recordset1, and their <I>DataField</I> property is set to the appropriate field from the 
recordset. The RecordsetNavbar DTC has its 
<I>Recordset</I> property set to Recordset1.

</P>
<P><A HREF="javascript:fullSize('f06lh12x.htm')"> <IMG SRC="images/f06lh12.jpg" width=404 height=291 border=0 ALT="Click to view at full size."> </A>
</P>
<P>
<!-- CAPTION --><B>Figure 6-12.</B> <I>You can use the data-binding features of certain DTCs to wire 
the DTCs to a recordset.</I><!-- /CAPTION -->

</P>
<P>If you change the <I>Update On Move</I> property of the RecordsetNavbar 
DTC to True, this DTC will let any user update the records displayed in the 
page. For example, to change the company name, you just make the change in 
the <I>txtCompany</I> Textbox and then click one of the RecordsetNavbar scroll 
buttons. The completed page is shown in the browser in Figure 6-13.

</P>
<P>The following DTCs can be bound to data sources:

</P>
<UL>
<P><LI>Textbox

</LI>
</P>
<P><LI>Listbox

</LI>
</P>
<P><LI>Checkbox

</LI>
</P>
<P><LI>OptionGroup (radio buttons)

</LI>
</P>
<P><LI>Label

</LI>
</P>
<P><LI>Grid

</LI>
</P>
<P><LI>Recordset

</LI>
</P>
<P><LI>RecordsetNavbar
</LI></P>
</UL>




<P><A HREF="javascript:fullSize('f06lh13x.htm')"> <IMG SRC="images/f06lh13.jpg" width=404 height=322 border=0 ALT="Click to view at full size."> </A>
</P>
<P>
<!-- CAPTION --><B>Figure 6-13.</B> <I>A Recordset DTC, a RecordsetNavbar DTC, and 
data-bound Textbox DTCs combine to produce a simple database-driven Web page.</I><!-- /CAPTION -->

</P>
<P>When working with the Recordset DTC, you might see an error pop 
up. Figure 6-14 shows the error message you might receive when you drop 
a Recordset DTC on a page and the DTC cannot find the data connection it 
attempts to default to. The Recordset DTC tries to set itself to the first data 
connection (in alphabetical order) it finds. If it cannot find the first connection, it retries 
for several seconds and finally shows the message in Figure 6-14.

</P>
<P><A HREF="javascript:fullSize('f06lh14x.htm')"> <IMG SRC="images/f06lh14.jpg" width=404 height=102 border=0 ALT="Click to view at full size."> </A>
</P>
<P>
<!-- CAPTION --><B>Figure 6-14.</B> <I>The Recordset DTC generates this error when it cannot find 
the default data connection.</I><!-- /CAPTION -->

</P>
<A NAME="107"><H2>Adding Other DTC Features</H2></A><P>A number of DTCs included with Visual InterDev 6 allow you to better 
control both the appearance and the usability of a page.

</P>
<A NAME="108"><H3>Using the Textbox DTC</H3></A><P>To demonstrate the Textbox DTC (and the rest of the DTCs in this chapter), 
the remaining examples will use a new ASP file. This file will start with the 
Recordset DTC and the Textbox DTC and then be modified to include other DTCs as well.

</P>
<P>The first version of the page (CustomerInformation.asp) is shown 
in Figure 6-15.

</P>
<P><A HREF="javascript:fullSize('f06lh15x.htm')"> <IMG SRC="images/f06lh15.jpg" width=404 height=291 border=0 ALT="Click to view at full size."> </A>
</P>
<P>
<!-- CAPTION --><B>Figure 6-15.</B> <I>This page contains one Recordset DTC and two Textbox DTCs 
that are linked to the Recordset DTC.</I><!-- /CAPTION -->

</P>
<P>The first thing you notice is that the two Textbox DTCs do not line 
up. We will fix this in the next version when we add the Label DTC.

</P>
<P>Let's take a look at the Textbox DTCs and their properties. Figure 6-16 
shows the Properties dialog box for one of the Textbox DTCs. You can see that we 
have changed the name of the DTC to <I>txtName</I>. The 
<I>Display Width</I> and <I>Max Characters</I> properties have been changed to 30. You can change one of these 
properties without changing the other, so be careful when modifying these properties.

</P>
<P><IMG SRC="images/f06lh16.gif" width=401 height=325 border="0">
</P>
<P>
<!-- CAPTION --><B>Figure 6-16.</B> <I>The Properties dialog box for the 
</I>txtName <I>Textbox DTC.</I><!-- /CAPTION -->

</P>
<P>You can set the <I>Style</I> property to one of these options:

</P>
<UL>
<P><LI><B> Textbox</B> Standard single-line text box

</LI>
</P>
<P><LI><B> Text Area</B> Provides a multiline text box

</LI>
</P>
<P><LI><B> Password</B> Provides an HTML password field for password data
</LI></P>
</UL>




<P>The default for the <I>Style</I> property is Textbox. If you set 
<I>Style</I> to Text Area, the <I>Lines</I> property is enabled, allowing you to specify how many lines of display are allowed in the DTC.

</P>
<P>If you want to hide the DTC when the page displays, you can 
uncheck the <I>Visible</I> property. This property can be set to True via script at run time.

</P>
<P>The <I>Enabled</I> property allows users to edit data in the DTC. If you 
uncheck <I>Enabled</I>, the DTC will be read-only.

</P>
<A NAME="109"><H3>Using the Label DTC</H3></A><P>The Label DTC can be used to insert read-only text onto a page. For 
example, let's say you want to retrieve a field such as CustomerName from the 
database, display it on an editable page, but restrict users from editing the field. The 
Label DTC is perfect for this task because it is always read-only. The text can be 
stored in the DTC or retrieved from a database by binding the Label DTC to a recordset.

</P>
<P>Figure 6-17 shows the second version of the 
CustomerInformation.asp page. First I added an HTML table and placed the DTCs in it to align 
them. Then I replaced the first Textbox DTC with a Label DTC. Now the 
CustomerName field is read-only.

</P>
<P>The data-binding properties for the Label DTC are set to the same 
settings as the Textbox DTC in the first version of the page. You cannot see the 
table in this example because the table has a border size of zero and is used 
merely to align the fields. By following the steps below, you can set Design view 
to display a border on tables (and other elements that have a zero border), 
making them easier to work with.

</P>
<OL>
<P><LI>  Select Options from the Tools menu.

</LI>
</P>
<P><LI>  Expand the HTML branch.

</LI>
</P>
<P><LI>  Click the HTML Editor node.

</LI>
</P>
<P><LI>  Check the <I>Borders</I> property in the Design View Display section.
</LI>
</P>
</OL>




<P>The Format tab of the Label Properties dialog box is shown in Figure 
6-18. The properties have been changed to specify a particular font and font size.

</P>
<P>If you do not specify any properties on the Format tab, the Label DTC 
will use the properties currently in use in the page where the Label DTC is 
located. If you want to place the Label DTC on a page but not have it show, 
uncheck the Visible check box.

</P>
<P><A HREF="javascript:fullSize('f06lh17x.htm')"> <IMG SRC="images/f06lh17.jpg" width=404 height=291 border=0 ALT="Click to view at full size."> </A>
</P>
<P>
<!-- CAPTION --><B>Figure 6-17.</B> <I>The Label DTC provides an easy way to display 
read-only information.</I><!-- /CAPTION -->

</P>
<P><IMG SRC="images/f06lh18.gif" width=401 height=279 border="0">
</P>
<P>
<!-- CAPTION --><B>Figure 6-18.</B> <I>The Format tab of the Label Properties dialog box allows you 
to control the appearance of the Label DTC.</I><!-- /CAPTION -->

</P>
<P>The Data Contains HTML check box should be checked when the 
field contains HTML coding. When you check this box, the field will be output 
with <I>Response.HTMLEncode </I>to ensure users that the HTML code is properly 
handled. If the field contains HTML and this option is not checked, the Label will 
display the field and HTML codes. If the option is checked, the Label will 
correctly display the field.

</P>
<A NAME="110"><H3>Using the Listbox DTC</H3></A><P>The Listbox DTC can be used to display data from a database, look up data 
from a database, and display values from a static list. It works similarly to the 
Listbox control in Visual Basic.

</P>
<P>Figure 6-19 shows the CustomerInformation3.asp file in Design view. 
The page now contains a Listbox DTC that displays the contact's title. The 
Listbox DTC is live in Design view&#8212;click the Listbox's arrow, and the options in 
the list will display. Figure 6-19 shows President (the first item in the list) as 
the first setting.

</P>
<P><A HREF="javascript:fullSize('f06lh19x.htm')"> <IMG SRC="images/f06lh19.jpg" width=404 height=291 border=0 ALT="Click to view at full size."> </A>
</P>
<P>
<!-- CAPTION --><B>Figure 6-19.</B> <I>The Listbox DTC provides an easy way to set up 
user-selectable lists in a Web page.</I><!-- /CAPTION -->

</P>
<P>Like the other DTCs, the Listbox is linked to the recordset using the 
data-binding properties, as shown in Figure 6-20. The 
<I>Style</I> property sets the type of list to display&#8212;this example uses a drop-down list. The other option is 
to set <I>Style</I> to ListBox, which will display a multirow list. If you select the 
ListBox option, you can control the number of lines that appear in the list by using 
the <I>Lines</I> property.

</P>
<P>Also like most other DTCs, the Listbox DTC contains the 
<I>Visible</I> and <I>Enabled</I> properties.

</P>
<P><IMG SRC="images/f06lh20.gif" width=401 height=325 border="0">
</P>
<P>
<!-- CAPTION --><B>Figure 6-20.</B> <I>The General tab of the Listbox Properties dialog box is used to 
set the data-binding properties and the style attributes.</I><!-- /CAPTION -->

</P>
<P>The values in the list are static and are set using the Lookup tab of 
the Listbox Properties dialog box, shown in Figure 6-21.

</P>
<P><IMG SRC="images/f06lh21.gif" width=401 height=325 border="0">
</P>
<P>
<!-- CAPTION --><B>Figure 6-21.</B> <I>The Lookup tab of the Listbox Properties dialog box lets you 
specify how the list will be populated.</I><!-- /CAPTION -->

</P>
<P>You set the static list's values by following these steps:

</P>
<OL>
<P><LI>  Click the Static List option button.

</LI>
</P>
<P><LI>  Click the first Bound Value cell, and enter the value of the first 
item in the list.

</LI>
</P>
<P><LI>  Click the Display cell, and enter the name to display in the list.

</LI>
</P>
<P><LI>  Repeat steps 2 and 3, as necessary, to populate the rest of the list.
</LI>
</P>
</OL>




<P>When the application executes, the Listbox DTC will display the first 
item from the Display column of the static list. The value of the Listbox DTC is 
the item from the corresponding Bound Value column of the static list. When 
the user clicks the arrow for the list, he or she can select a new item. The DTC 
will update its display and value to match the entry selected from the list. For 
instance, if the user selects &quot;Business Owner&quot; from the list shown in Figure 
6-21, the Listbox DTC displays &quot;Business Owner&quot; and its value is set to &quot;Owner.&quot;

</P>
<P>The Listbox DTC uses an intrinsic HTML Select list to display the list 
and provide the interaction for the user. Below is the list code inserted in the 
HTML stream for this example:

</P>
<P><PRE>
&lt;SELECT name=lstTitle id=lstTitle size=1&gt;
&lt;OPTION value=&quot;President&quot;&gt;President&lt;/OPTION&gt;
&lt;OPTION value=&quot;Owner&quot;&gt;Business Owner&lt;/OPTION&gt;
&lt;OPTION value=&quot;Marketing Manager&quot;&gt;Marketing Manager&lt;/OPTION&gt;
&lt;/SELECT&gt;
</PRE>

</P>
<P>The Listbox DTC automates the process of binding the Select list to 
the database for both retrieval and update operations.

</P>
<P>You can also set the properties on the Lookup tab to populate the list 
from a database. Populating the list from a database will be covered in 
later chapters.

</P>
<A NAME="111"><H3>Using the Checkbox DTC</H3></A><P>The Checkbox DTC creates a Checkbox for a page. The DTC uses the 
intrinsic HTML check box but makes it bindable to a recordset, like the Listbox and 
other DTCs.

</P>
<P>Figure 6-22 shows CustomerInformation4.asp with a Checkbox DTC 
in Design view. To create this page, I added a couple of rows to the existing 
table. To insert a row into a table, you must click a cell of the table and then 
select Insert Row from the Table menu. The new row is inserted just before the 
row of the cell you clicked.

</P>
<P>Next I dropped a Checkbox DTC into the table, as shown in Figure 
6-22. In the figure, the Checkbox DTC is bound to the rsCustomer recordset. The 
<I>Field</I> property of the Checkbox DTC is set to the MailBrochures field of the 
recordset. The MailBrochures field has an Access Yes/No data type. If you check 
the Checkbox DTC, its value will be set to 1, while unchecking the DTC sets its 
value to 0. The <I>Name</I> and <I>Caption</I> properties were changed to reflect the data 
contained in the DTC.

</P>
<P>Table 6-1 (taken from the Visual InterDev documentation) lists the 
various values for a particular data type that will result in a checked or cleared 
Checkbox DTC. The MailBrochures field used in our example is an Access Yes/No 
field and results in 1 showing checked and 0 showing cleared. Make sure you 
understand the various options before you bind the Checkbox to a recordset field.

</P>
<P><A HREF="javascript:fullSize('f06lh22x.htm')"> <IMG SRC="images/f06lh22.jpg" width=404 height=265 border=0 ALT="Click to view at full size."> </A>
</P>
<P>
<!-- CAPTION --><B>Figure 6-22.</B> <I>The Checkbox DTC can be bound to a database column.</I><!-- /CAPTION -->

</P>
<P><B>Table 6-1.</B>

<TABLE CELLPADDING=5 WIDTH="95%"><TR>

<TH VALIGN="TOP"><B><I>Data Type of DataField</I></B></TH>
<TH VALIGN="TOP"><B><I>Displays Checked</I></B></TH>
<TH VALIGN="TOP"><B><I>Displays Cleared</I></B></TH>
</TR>

<TR>
<TD VALIGN="TOP">Boolean</TD>
<TD VALIGN="TOP">True</TD>
<TD VALIGN="TOP">False</TD>
</TR>

<TR>
<TD VALIGN="TOP">Bit</TD>
<TD VALIGN="TOP">1</TD>
<TD VALIGN="TOP">0</TD>
</TR>

<TR>
<TD VALIGN="TOP">String, Char</TD>
<TD VALIGN="TOP">&quot;True&quot;</TD>
<TD VALIGN="TOP">&quot;&quot;</TD>
</TR>

<TR>
<TD VALIGN="TOP">Integer</TD>
<TD VALIGN="TOP">Nonzero</TD>
<TD VALIGN="TOP">0</TD>
</TR>

<TR>
<TD VALIGN="TOP">Floating-point</TD>
<TD VALIGN="TOP">Nonzero</TD>
<TD VALIGN="TOP">0</TD>
</TR>

<TR>
<TD VALIGN="TOP">Currency</TD>
<TD VALIGN="TOP">Nonzero</TD>
<TD VALIGN="TOP">0</TD>
</TR>

<TR>
<TD VALIGN="TOP">Date/Time</TD>
<TD VALIGN="TOP">N/A</TD>
<TD VALIGN="TOP">N/A</TD>
</TR>

<TR>
<TD VALIGN="TOP">All other data types </TD>
<TD VALIGN="TOP">N/A</TD>
<TD VALIGN="TOP">N/A</TD>
</TR>
</TABLE>



</P>
<P>The value that is written to the recordset depends on the field's 
data type and the Checkbox DTC's state. Table 6-2 below 
(also taken from the Visual InterDev documentation) lists the various values 
for a particular data type that will be stored in the recordset when the 
user checks or clears the check box.

</P>

<P><B>Table 6-2.</B>

<TABLE CELLPADDING=5 WIDTH="95%">
<TR>
<TH VALIGN="TOP"><B><I>Data Type</I></B></TH>
<TH VALIGN="TOP"><B><I>Checked</I></B></TH>
<TH VALIGN="TOP"><B><I>Cleared</I></B></TH>
</TR>

<TR>
<TD VALIGN="TOP">Boolean</TD>
<TD VALIGN="TOP">True</TD>
<TD VALIGN="TOP">False</TD>
</TR>

<TR>
<TD VALIGN="TOP">Bit</TD>
<TD VALIGN="TOP">1</TD>
<TD VALIGN="TOP">0</TD>
</TR>

<TR>
<TD VALIGN="TOP">String, Char</TD>
<TD VALIGN="TOP">&quot;True&quot;</TD>
<TD VALIGN="TOP">&quot;&quot;</TD>
</TR>

<TR>
<TD VALIGN="TOP">Integer</TD>
<TD VALIGN="TOP">-1</TD>
<TD VALIGN="TOP">0</TD>
</TR>

<TR>
<TD VALIGN="TOP">Floating-point</TD>
<TD VALIGN="TOP">-1.0</TD>
<TD VALIGN="TOP">0.0</TD>
</TR>

<TR>
<TD VALIGN="TOP">Currency</TD>
<TD VALIGN="TOP">-1</TD>
<TD VALIGN="TOP">00.0</TD>
</TR>

<TR>
<TD VALIGN="TOP">Date/Time</TD>
<TD VALIGN="TOP">N/A</TD>
<TD VALIGN="TOP">N/A</TD>
</TR>

<TR>
<TD VALIGN="TOP">All other data types</TD>
<TD VALIGN="TOP">N/A</TD>
<TD VALIGN="TOP">N/A</TD>
</TR>
</TABLE>

</P>
<P>


</P>
<A NAME="112"><H3>Using the OptionGroup DTC</H3></A><P>The OptionGroup DTC uses the intrinsic HTML radio buttons to create a 
group of buttons the user can choose from. Unlike a group of Checkbox DTCs, 
the user can choose only one button from the OptionGroup DTC. This allows 
you to create a group of mutually-exclusive items and let the user select one 
without your having to check the user's actions with script.

</P>
<P>Figure 6-23 shows CustomerInformation4.asp with an OptionGroup 
DTC in Design view. To create this page, I added a new table with one row. Next 
I dropped the OptionGroup DTC into the table. Then I configured the DTC 
using the Properties dialog box.

</P>
<P><A HREF="javascript:fullSize('f06lh23x.htm')"> <IMG SRC="images/f06lh23.jpg" width=404 height=266 border=0 ALT="Click to view at full size."> </A>
</P>
<P>
<!-- CAPTION --><B>Figure 6-23.</B> <I>The OptionGroup Properties dialog box allows you to 
configure the OptionGroup DTC and bind it to a database.</I><!-- /CAPTION -->

</P>
<P>Figure 6-23 shows the configuration of the properties to bind the 
OptionGroup DTC to a database table and to set the border for the control. The 
other properties on the General tab are set at their default values.

</P>
<P>The OptionGroup buttons can be set from either a static list or from 
a database table. The values in the list are static and, as was the case with 
the Listbox DTC, are set using the Lookup tab of the OptionGroup Properties 
dialog box. You enter the list by following these steps:

</P>
<OL>
<P><LI> Click the Static List option button.

</LI>
</P>
<P><LI> Click the first Bound Value cell, and enter the value of the first 
option button.

</LI>
</P>
<P><LI> Click the corresponding Display cell, and enter the label that 
will appear next to the option button.

</LI>
</P>
<P><LI> Repeat steps 2 and 3 as necessary.
</LI>
</P>
</OL>




<P>You can set the OptionGroup buttons from a database by binding the 
DTC to a field. The steps to accomplish this are:

</P>
<OL>
<P><LI> Display the OptionGroup Properties dialog box.

</LI>
</P>
<P><LI> Click the Lookup tab.

</LI>
</P>
<P><LI> Click the Recordset option button in the List Source section of 
the page.

</LI>
</P>
<P><LI> Select the Recordset DTC to use from the Row Source 
drop-down list.

</LI>
</P>
<P><LI> Select the field that will represent the values for the option 
buttons from the Bound Column drop-down list.

</LI>
</P>
<P><LI> Select the field that will provide the labels for the option buttons 
from the List Field drop-down list.
</LI>
</P>
</OL>




<A NAME="113"><H3>Using the Grid DTC</H3></A><P>The Grid DTC allows you to build a page that displays data from a 
database and lets the user navigate through the rows in the recordset. The Grid 
Properties dialog box lets you easily set the properties that control the Grid DTC's 
run-time characteristics.

</P>
<P>Figure 6-24 below shows the Grid DTC just after 
being dropped onto the CustomerList.asp file in Design view and having its 
properties displayed. The General tab allows you to select from a number of 
preset Autoformat styles for the Grid DTC. In this example, the Autoformat style is 
set to Basic Navy. The Autoformat style controls the appearance of the Grid 
DTC. The Preview box shows a sample of what the Grid DTC will look like at 
run time. If you select an Autoformat style and then change any formatting 
properties, Preview is disabled.

</P>
<P>You can also uncheck the Display Header Row check box to turn off 
the header.

</P>
<P><A HREF="javascript:fullSize('f06lh24x.htm')"> <IMG SRC="images/f06lh24.jpg" width=404 height=265 border=0 ALT="Click to view at full size."> </A>
</P>
<P>
<!-- CAPTION --><B>Figure 6-24.</B> <I>The General property page is used to change the layout and 
style of the Grid DTC.</I><!-- /CAPTION -->

</P>
<P>Figure 6-25 shows the Data property page, which is used to bind the 
Grid DTC to a Recordset DTC. First, select the appropriate Recordset DTC from 
the Recordset drop-down list. Then, to add a field to the Grid DTC, check the 
check box to the left of the field's name in the Available Fields list. You can 
remove a field from the Grid DTC by unchecking this field.

</P>
<P>You can also format the titles used for the header row on this 
page. Figure 6-25 shows the page after the titles have been reformatted:

</P>
<UL>
<P><LI>CompanyName becomes Company

</LI>
</P>
<P><LI>ContactName becomes Name

</LI>
</P>
<P><LI>ContactTitle becomes Title
</LI></P>
</UL>




<P>To reformat a header caption, select the field to reformat in the 
Grid Columns list, change the caption for it in the 
<I>Header</I> property in the Edit Columns section, and then click the Update button.

</P>
<P><IMG SRC="images/f06lh25.gif" width=401 height=434 border="0">
</P>
<P>
<!-- CAPTION --><B>Figure 6-25.</B> <I>The Data property page is used to bind the Grid DTC to 
a Recordset DTC and to set the Grid DTC's related data-bound properties.</I><!-- /CAPTION -->

</P>
<P>The <I>Field/Expression</I> property can contain expressions to reformat the 
data in the column. The following expression can be used to create an anchor 
tag that allows the user to link to another page based upon the company's name:

</P>
<P><PRE>
=&quot;&lt;a href=www.&quot; + [CompanyName] + &quot;.com&gt;&quot; + 
    [CompanyName] + &quot;&lt;/a&gt;&quot;
</PRE>

</P>
<P>For example, the line above will output the following HTML if the 
CompanyName field contains the string &quot;32X&quot;:

</P>
<P><PRE>
&lt;a href=www.32X.com&gt;32X&lt;/a&gt;
</PRE>

</P>
<P>You can use this technique with a Web address to format the data in any 
way you need to, such as creating an FTP link or an email link. You can also 
use HTML formatting and JScript functions in the 
<I>Field/Expression</I> property.

</P>
<P>The Navigation page shown in Figure 6-26 below sets 
the properties that control how users navigate through the data in the Grid 
DTC. If you want to let users scroll through the data one page at a time, set this 
functionality by checking the Enable Paging check box and setting the 
<I>Records/Page</I> property. The default is 20, but it is often best to set it to 5 or 10, 
depending upon the length of the fields you are displaying.

</P>
<P><IMG SRC="images/f06lh26.gif" width=401 height=434 border="0">
</P>
<P>
<!-- CAPTION --><B>Figure 6-26.</B> <I>The Navigation property page is used to specify how the user 
can navigate through the data in a Grid DTC.</I><!-- /CAPTION -->

</P>
<P>If you enable paging, the following default buttons are used to 
navigate through the pages in the recordset:

</P>
<UL>
<P><LI><B>&#124;&lt;</B> Goes to the first page

</LI>
</P>
<P><LI><B>&lt;&lt;</B> Goes back one page

</LI>
</P>
<P><LI><B>&gt;&gt;</B> Goes forward one page

</LI>
</P>
<P><LI><B>&gt;&#124;</B> Goes to the last page
</LI></P>
</UL>




<P>Checking the Enable Row Navigation check box allows the user to 
navigate through the page one row at a time. If you enable this option, the &lt; 
and &gt; buttons will move the highlight bar one row at a time.

</P>
<P>You can also control exactly how the Grid DTC looks at run time by 
using the Borders page and the Format page, shown in Figures 6-27 and 6-28. 
The Borders page controls the style of borders used for the Grid DTC. Figure 
6-27 shows the 3D border selected and a gray background color selected in the 
<I>Grid Background</I> property.

</P>
<P>The Format property page controls the formatting of the Grid DTC. 
This page will override the default properties of one of the Autoformat styles. If 
you change a property here, the Preview box on the General tab will no longer work.

</P>
<P><IMG SRC="images/f06lh27.gif" width=401 height=434 border="0">
</P>
<P>
<!-- CAPTION --><B>Figure 6-27.</B> <I>The Borders property page is used to set the border properties of the Grid DTC.</I><!-- /CAPTION -->

</P>
<P><IMG SRC="images/f06lh28.gif" width=401 height=434 border="0">
</P>
<P>
<!-- CAPTION --><B>Figure 6-28.</B> <I>The Format property page is used to change the formatting of 
the Grid DTC.</I><!-- /CAPTION -->

</P>
<P>The Format property page is useful for explicitly controlling the 
format of the Grid DTC. You can change the format for the header, the detail rows, 
or any particular column. First click the corresponding button at the top of the 
property page to select the area to change. Then make your changes, and click 
the Apply button when you are finished. You must click the Apply button 
before you move to the next section.

</P>
<P>You can change the size of the columns directly by using the mouse. 
First click the Grid DTC to select it, then move the mouse over the border 
between two columns until you see it turn into a pointer with an arrow on each 
end. Now click the border and drag the mouse to change the size of the 
column. You can also change the size of the Grid DTC by dragging the sizing 
handles on either side to the right or left.

</P>
<P>Figure 6-29 shows the Grid DTC in the CustomerList.asp page in 
Internet Explorer. You can see the formatting that was applied with the Grid 
DTC property pages.

</P>
<P><A HREF="javascript:fullSize('f06lh29x.htm')"> <IMG SRC="images/f06lh29.jpg" width=404 height=404 border=0 ALT="Click to view at full size."> </A>
</P>
<P>
<!-- CAPTION --><B>Figure 6-29.</B> <I>The finished Grid DTC in action.</I><!-- /CAPTION -->

</P>
<P>The first row in the data area has a darker background than the 
others because it is the current row. If you click the &lt; or &gt; buttons, the highlight 
moves down one record at a time.
</P>
</BODY>
</HTML>





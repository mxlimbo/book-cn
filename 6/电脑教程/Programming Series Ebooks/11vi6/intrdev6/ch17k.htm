<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="Library.css" TYPE="text/css">
<TITLE>The Index Server Query Object</TITLE>


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch17j.htm", "ch17l.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>
<A NAME="331"><H1>The Index Server <I>Query</I> Object</H1></A>
<P>Index Server 2.0 is the latest version of Microsoft's search engine that is 
integrated with IIS 4.0 and the Windows NT Server 4.0 operating system. 
Index Server allows you to use any Web browser to perform full text searching 
of HTML, text, and Microsoft Office documents. This includes documents in 
Microsoft Word, Microsoft Excel, and Microsoft PowerPoint. This is a powerful feature 
of Index Server &#8212;you don't need to convert all your content to HTML! Just 
place your documents out on the Web server&#8212;Index Server can do all the work 
for you and return detailed summaries and hyperlinks to the actual documents.

</P>
<P>The Index Server <I>Query</I> object allows you to customize your 
interaction with Index Server through ASP scripting. This is a new feature introduced 
with Index Server 2.0 and IIS 4.0. 

</P>
<P><div class="note"><blockquote>
<B>NOTE</B><HR>Prior to the introduction of Index Server 2.0, developers had 
to use the HTML/IDQ/HTX technique to customize Index Server. This 
technique consists of using three separate files for the various operations 
that need to take place: the HTML file is used for the query form, the IDQ file 
is used to process the search, and the HTX file is used to format the 
results. It remains a good option when compared to the other techniques such 
as SQL and ASP scripting because of its fast performance.
</blockquote></div>

</P>
<P>The syntax to instantiate the Index Server 
<I>Query</I> object is as follows, where<I> objQuery 
</I>refers to the new object.

</P>
<P><PRE>&lt;OBJECT RUNAT=server PROGID=IXSSO.Query id=objQuery&gt;
&lt;/OBJECT&gt;
</PRE>

</P>
<P>The following code in Figure 17-14, taken from the 
IndexServerQuery.asp file within the Components project on the CD-ROM, shows an example of 
how to use the <I>Query</I> object. First it builds a simple query using the 
<I>SetQueryFromURL</I> method. The query contains a search on the word &quot;Sample&quot; with the 
maximum number of hits to be returned specified as 25. These types of values could 
easily be obtained via an HTML form that allows end users to specify their own 
queries. There are also many other properties that can be queried, including 
metaproperties such as author name, filename, and file size.

</P>
<P><B>Figure 17-14.</B> <I>Source code for the IndexServerQuery.asp file, which queries 
Index Server and returns a recordset to the browser.</I>

</P>
<P><PRE>
&lt;%@ Language=VBScript %&gt;
&lt;HTML&gt;
&lt;HEAD&gt;
&lt;META NAME=&quot;GENERATOR&quot; Content=&quot;Microsoft Visual Studio 6.0&quot;&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;

&lt;H2&gt;Index Server Query Sample&lt;/H2&gt;
&lt;HR&gt;

&lt;OBJECT RUNAT=server PROGID=IXSSO.Query id=objQuery&gt;
&lt;/OBJECT&gt;

&lt;%
If IsObject(objQuery) = False Then
    Response.Write &quot;Index Server Query object not installed.&quot;
Else
    ' Build the query string
    ' Set the search to &quot;Sample&quot; and the maximum hits to 25
    iRequest = &quot;qu='Sample'&amp;mh=25&quot;
    objQuery.SetQueryFromURL(iRequest)
   
    ' Define the columns for the recordset
    objQuery.Columns = &quot;filename, vpath, size, write&quot;
    Set rs = objQuery.CreateRecordset(&quot;sequential&quot;)
End If
%&gt;

&lt;FONT SIZE=&quot;2&quot;&gt;
&lt;TABLE BORDER=1&gt;
&lt;TR&gt;
&lt;TH&gt;Record&lt;/TH&gt;
&lt;TH&gt;File name&lt;/TH&gt;
&lt;TH&gt;Path&lt;/TH&gt;
&lt;TH&gt;Size&lt;/TH&gt;
&lt;TH&gt;Write&lt;/TH&gt;
&lt;/TR&gt;

&lt;%
' Loop over the recordset
NextRecordNumber = 1 
Do While NOT Rs.EOF
%&gt;
&lt;TR&gt;
&lt;TD&gt;&lt;%=NextRecordNumber %&gt;&lt;/TD&gt;
&lt;TD&gt;&lt;%=rs(&quot;Filename&quot;) %&gt;&lt;/TD&gt;
&lt;TD&gt;&lt;A HREF=&quot;&lt;%=rs(&quot;vpath&quot;) %&gt;&quot;&gt;&lt;%=rs(&quot;vpath&quot;) %&gt;&lt;/A&gt;&lt;/TD&gt;
&lt;TD&gt;&lt;%=rs(&quot;Size&quot;) %&gt;&lt;/TD&gt;
&lt;TD&gt;&lt;%=rs(&quot;Write&quot;) %&gt;&lt;/TD&gt;
&lt;/TR&gt;
&lt;%
rs.MoveNext
NextRecordNumber = NextRecordNumber + 1
Loop
%&gt;
&lt;/TABLE&gt;
&lt;/FONT&gt;

&lt;/BODY&gt;
&lt;/HTML&gt;
</PRE>

</P>
<P>Next the code defines the columns that are required for the recordset 
using the <I>Columns</I> property of the 
<I>Query</I> object. These columns include the 
filename, the file size, the virtual path to the file, and the time stamp of the file. 
After defining the columns to be returned by the recordset, the 
<I>CreateRecordset</I> method is called for the 
<I>Query</I> object and the results are stored in the 
<I>rs</I> recordset.

</P>
<P>Now that the query portion is complete, all that's left is for the code 
to loop over the recordset and display the results in the browser. This is done 
using a standard Do Loop syntax and by using an HTML table to control the 
formatting of the resulting output. Figure 17-15 shows an example of the 
resulting output in the browser.

</P>
<P>
<A HREF="javascript:fullSize('f17lh15x.htm')"> <IMG SRC="images/f17lh15.jpg" width=404 height=303 border=0 ALT="Click to view at full size."> </A>

</P>
<P>
<!-- CAPTION --><B>Figure 17-15.</B> <I>Output from the IndexServerQuery.asp page, which performs a simple search and formats the results in an HTML table.</I><!-- /CAPTION -->

</P>
</BODY>
</HTML>





<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="Library.css" TYPE="text/css">
<TITLE>Web Architectures</TITLE>


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch17a.htm", "ch17c.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>
<A NAME="307"><H1>Web Architectures</H1></A>
<P>Prior to diving into the details of building n-tier applications using 
Visual InterDev 6.0, Visual Basic 6.0, and other tools, let's take a quick look from 
the 30,000-foot level at how these various n-tier applications can be wired together.

</P>
<P>Within a large corporation, you can utilize several different models for 
your Web architectures based upon the demands placed upon each specific 
application. For example, you can use a three-tier architecture with server-side 
components and MTS for part of your external Internet site. However, you 
might use a simpler two-tier architecture on your Intranet site to speed the 
development process and reduce the application complexity. When deciding upon 
the appropriate technical architectures to use for your applications, keep in 
mind the application requirements: functionality, scalability, performance, 
security, reliability, manageability, and maintainability.

</P>
<A NAME="308"><H2>Two-Tier Architectures</H2></A><P>The basic two-tier architecture for a Microsoft Web solution involves the 
browser, the Web server, and the database. This may well involve Internet Explorer, 
IIS, and SQL Server. On the browser end, you are free to deliver plain HTML 
or Dynamic HTML (DHTML) for breadth of deployment and Java applets 
and/or ActiveX controls for depth of functionality. Of course, this is a trade-off 
and depends upon your target audience and the required sophistication of your 
user interface. If you are trying to reach the largest audience possible (with a 
variety of browser types) on an Internet or extranet site, you might want to 
deliver plain HTML. If you know your target audience, perhaps on an intranet site, 
or are in the position to dictate browser requirements and you need a richer 
GUI than HTML allows, you might want to take advantage of DHTML, Java 
applets, or ActiveX controls.

</P>
<P>On the server side, the only real stake in the ground is that you 
must be running Windows NT 4.0 and IIS 4.0 to execute the ASP Web pages 
you have generated from Visual InterDev. This is changing somewhat, 
however, as vendors such as Chili!Soft produce software that can run ASP code 
on UNIX platforms such as Sun Solaris. The database that you interface with 
can be any ODBC-compliant database. Figure 17-2 shows the typical 
two-tier Web architecture.

</P>
<P>
<A HREF="javascript:fullSize('f17lh02x.htm')"> <IMG SRC="images/f17lh02.jpg" width=404 height=291 border=0 ALT="Click to view at full size."> </A>

</P>
<P>
<!-- CAPTION --><B>Figure 17-2.</B> <I>Microsoft two-tier Web architecture.</I><!-- /CAPTION -->

</P>
<A NAME="309"><H2>Three-Tier Architectures</H2></A><P>The three-tier architecture for a Microsoft Web solution takes the basic 
two-tier architecture and extends it by adding server-side components. These 
server-side components are COM components that contain nonvisual business logic. 
They can be either nontransactional or transactional. Transactional components 
are placed under MTS, which manages the transactions and handles 
multithreading, security, database connection pooling, and so on.

</P>
<P>Three-tier architectures generally take longer to develop and test than 
two-tier architectures, but they provide a more robust infrastructure for 
running business-critical Web applications. As noted earlier, middle-tier components 
can also be reused across different applications or even across different 
channels. Application maintenance is also simplified since the business logic is more 
likely to be contained within a single component. Figure 17-3 shows the typical 
three-tier Web architecture.

</P>
<P>
<A HREF="javascript:fullSize('f17lh03x.htm')"> <IMG SRC="images/f17lh03.jpg" width=404 height=307 border=0 ALT="Click to view at full size."> </A>

</P>
<P>
<!-- CAPTION --><B>Figure 17-3.</B> <I>Microsoft three-tier Web architecture.</I><!-- /CAPTION -->

</P>
<P>The Visual InterDev 6.0 Toolbox allows you to access several 
prebuilt components that extend ASP to make an enormous impact. As we shall see 
in the following chapters, you can also write your own components using 
Visual Basic, Microsoft Visual C++, Microsoft Visual J++, or any other development 
tool that supports creating Active Server components. Also, just as ActiveX 
controls are proliferating all over the Web, many Active Server components are 
now available for purchase from third-party software vendors. These software 
vendors are incorporating functionality that pushes the extremely flexible 
architecture of Active Server components to the limit.

</P>
</BODY>
</HTML>





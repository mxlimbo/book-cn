<html>
<head>
<title>Chapter 11 -- User Context</title>
<link rel="STYLESHEET" type="text/css" href="prosrvwin.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<BODY bgcolor="#ffffff" text="#000000">
<A HREF="ch10c.htm">[Previous]</A> <A HREF="ch11b.htm">[Next]</A><P>


<font size="+3">Chapter 11</font>

<A NAME="231"><h1>User Context</h1></A>
<p>In the <a href="ch10a.htm">previous chapter</a>, we focused on the Microsoft Windows implementation of <i>access control</i>. Access control in Windows is user-based, allowing system administrators and security programmers to control who can access objects in the system to a very fine granularity. For this control to work, the system must maintain an identity for any code executing in the system. This identity is referred to as <i>user context</i>. Sometimes user context is referred to as <i>security context</i> or <i>user security context</i>.</p>

<p>In addition to the system's need to maintain a sense of identity, a secure service must also be able to maintain a sense of its clients' identities. Two goals for your service software are as follows:</p>

<ol>
<p><li>Identify the client connecting to your service.</li></p>

<p><li>Ensure that the service executes code <i>appropriate</i> for the client connecting to your service, regardless of the requests the client makes.</li></p>
</ol>

<p>This chapter describes the features you can use to develop your service so that Windows security meets these goals.</p>

</BODY>
</HTML>





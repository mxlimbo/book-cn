<HTML>
<HEAD>
<TITLE>What Is the Event Log?</TITLE>
<link rel="STYLESHEET" type="text/css" href="prosrvwin.css">
<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR = "#ffffff">
<A HREF="ch06a.htm">[Previous]</A> <A HREF="ch06c.htm">[Next]</A><P>

<A NAME="92"><h1>What Is the Event Log?</h1></A>
<p>From the system administrator's point of view, the event log is little more than a list of messages posted by the system or by application software. This list of messages is organized into logical groups called <i>log files</i> (or <i>logs</i>). The collection of logs is referred to generally as the <i>event log</i>. The system administrator's window to the event log is the Event Viewer snap-in of the Microsoft Management Console (MMC), which is installed with Windows 2000. You can open the Event Viewer by clicking Start, pointing to Programs, pointing to Administrative Tools, and then choosing the Event Viewer option. You can also access the Event Viewer by choosing Computer Management in Administrative Tools. Figure 61 shows the Event Viewer snap-in in Computer Management.</p>

<p>
<A HREF="javascript:fullSize('F06FJ01x.htm')"> <img src="images/F06FJ01.JPG" width=404 height=206 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 6-1.</b> <i>The Event Viewer snap-in in Computer Management</i><!-- /caption -->
</p>

<p>In the Event Viewer node in the MMC, you see a set of logs. When you select a log, the right-hand pane displays the list of that log's events. Double-clicking on an event entry gives you detailed information about the event. I will discuss the information found in each event in a moment, but first we need to discuss the purpose of the different logs.</p>

<p>By default, your system's event log contains three logs: Application, System, and Security. Applications can add their own custom logs to the system; however, this is not typically necessary or common. If you decide to report to your own custom log file, you tell the Event Viewer snap-in about it by selecting the Event Viewer node in the left-hand pane and choosing Open Log File from the Action menu. This produces an Open dialog box that allows you to open a log file. You must report at least one event to a custom log before viewing the log with the Event Viewer snap-in.</p>

<p>Table 6-1 describes the three standard event logs. Since the subject of this book is writing server applications, the Application log will be of most interest to us.</p>

<p><b>Table 6-1.</b> <i>Standard event logs in Event Viewer</i></p>

<p>
<table cellpadding=5 width="95%">
<tr> 
<th>Log Name  </th>
<th>Description  </th></tr>
<tr>
<td valign="top">Application  </td>
<td valign="top">Contains events generated by application software and services  </td></tr>
<tr>
<td valign="top">System   </td>
<td valign="top">Contains events generated by device drivers and other operating system components  </td></tr>
<tr>
<td valign="top">Security  </td>
<td valign="top">Contains events generated by security audits  </td></tr>
</table></p>


<p>Now let's take a moment to dissect a logged event entry. An event is a single entry in an event log and consists of the following information fields: event type, date and time generated, date and time written, event source, event category, event ID, user, and system. In addition to this information, each event can contain a detailed textual description and have binary data associated with it. The Event Viewer snap-in is capable of displaying most of this information. Table 6-2 offers a brief description of each field.</p>

<p>Most of the fields are self-explanatory, but the event source, event ID, event category, and event type deserve more explanation.</p>

<p>The event source represents the application, service, or system component that reported the event. Typically a one-to-one relationship exists between the reporting agent and event source. However, the code that is reporting the event decides which source it is reporting as, so a single application can report as multiple sources. Likewise, multiple applications can report as a single source. Windows does not restrict this reporting flexibility in any way.</p>

<p>The event ID is a source-defined value that identifies a certain type of event. Any event can be identified via a composite of the event's source and ID. For example, the Browser service defines event ID 8021 as &quot;The browser was unable to retrieve a list of servers from the browser master <i>&lt;servername&gt;</i> on the network &#8230;&quot; and event ID 8033 as &quot;The browser has forced an election &#8230;.&quot;</p>

<p>The event category is an optional source-defined category for the event. It is helpful for applications and system components that report a large number of different types of events to be further broken down into logical categories.</p>

<p><b>Table 6-2.</b> <i>Fields for an entry in an event log</i></p>

<p>
<table cellpadding=5 width="95%">
<tr> 
<th>Field  </th>
<th>Description  </th></tr>
<tr>
<td valign="top">Event type  </td>
<td valign="top">Identifies the type of event. The system defines five different event types, listed in Table 6-3.  </td></tr>
<tr>
<td valign="top">Date and time generated </td>
<td valign="top">Identifies the time that the source wanted the event  added to a log.  </td></tr>
<tr>
<td valign="top">Date and time written </td>
<td valign="top">Identifies the time that the system recorded the entry in a log.  </td></tr>
<tr>
<td valign="top">Event source  </td>
<td valign="top">Identifies the component responsible for adding the event to a log. Usually the source is an application or a service.  </td></tr>
<tr>
<td valign="top">Event category  </td>
<td valign="top">Identifies a source-defined category for the event.  </td></tr>
<tr>
<td valign="top">Event ID  </td>
<td valign="top">Identifies a source-defined number that uniquely indicates the nature of the incident that caused an entry to be added to a log.  </td></tr>
<tr>
<td valign="top">User  </td>
<td valign="top">Identifies the user account context that generated the event entry. This value is a user's security identifier (SID). See <A HREF="ch09a.htm">Chapter 9</A> for more discussion on SIDs.  </td></tr>
<tr>
<td valign="top">System  </td>
<td valign="top">Identifies the machine on which the incident occurred.  </td></tr>
</table></p>


<p>You must decide whether the event category is necessary or useful for your software. If an event source chooses to ignore categories, the Event Viewer snap-in will report no categories for events from that source.</p>

<p>The event type can be one of five system-defined event types shown in Table 6-3. The software that is reporting the event selects the event type.</p>

<p><b>Table 6-3.</b> <i>Event types</i></p>

<p>
<table cellpadding=5 width="95%">
<tr> 
<th>Event Type  </th>
<th>Description  </th></tr>
<tr>
<td valign="top">EVENTLOG_INFORMATION_TYPE  </td>
<td valign="top">Information events indicate a situation or an operation that occurred that is not problematic to the application or system&#8212;for example, the starting or stopping of a service application.  </td></tr>
<tr>
<td valign="top">EVENTLOG_WARNING_TYPE  </td>
<td valign="top">Warning events signify potential or future problem situations&#8212;for example, relatively low memory or disk space, which might become problematic if resources continue to be consumed.  </td></tr>
<tr>
<td valign="top">EVENTLOG_ERROR_TYPE  </td>
<td valign="top">Error events are logged when an application or a system component actually failed some part of its functionality&#8212;for example, an inability to write data to a disk, which resulted in data loss.  </td></tr>
<tr>
<td valign="top">EVENTLOG_AUDIT_SUCCESS  </td>
<td valign="top">Success audit events are logged by Windows security when an audited action is performed successfully.  </td></tr>
<tr>
<td valign="top">EVENTLOG_AUDIT_FAILURE  </td>
<td valign="top">Failure audit events are logged by Windows security when an audited action is attempted and fails.  </td></tr>
</table></p>

</BODY>
</HTML>





<HTML>
<HEAD>
<TITLE>Windows 2000 and Unicode</TITLE>
<link rel="STYLESHEET" type="text/css" href="advwin4.css">
<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch02c.htm">[Previous]</A> <A HREF="ch02e.htm">[Next]</A><P>

<A NAME="10"><H1>Windows 2000 and Unicode</H1></A>

<p>Windows 2000 is built from the ground up using Unicode. All of the
core functions for creating windows, displaying text, performing string
manipulations, and so forth require Unicode strings. If you call any
Windows function and pass it an ANSI string, the system first converts
the string to Unicode and then passes the Unicode string to the
operating system. If you are expecting ANSI strings back from a
function, the system converts the Unicode string to an ANSI string
before returning to your application. All these conversions occur
invisibly to you. Of course, there is time and memory overhead involved
for the system to carry out all these string conversions.</p>

<p>For example, if you call <i>CreateWindowEx</i> and pass non-Unicode
strings for the class name and window caption text, <i>
CreateWindowEx</i> must allocate blocks of memory (in your
process's default heap), convert the non-Unicode strings to Unicode
strings and store the result in the allocated memory blocks, and make a
function call to the Unicode version of <i>CreateWindowEx</i>.</p>

<p>For functions that fill buffers with strings, the system must
convert from Unicode to non-Unicode equivalents before your application
can process the string. Because the system must perform all these
conversions, your application requires more memory and runs slower. You
can make your application perform more efficiently by developing your
application using Unicode from the start.</p>

</BODY>
</HTML>







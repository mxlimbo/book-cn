<HTML>
<HEAD>
<TITLE>Calling UnhandledExceptionFilter Yourself</TITLE>
<link rel="STYLESHEET" type="text/css" href="advwin4.css">
<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch25c.htm">[Previous]</A> <A HREF="ch25e.htm">[Next]</A><P>

<A NAME="342"><h1>Calling <i>UnhandledExceptionFilter</i> Yourself</h1></A>
<p>The <i>UnhandledExceptionFilter</i> function is a fully documented
Windows function that you can call directly from within your own code.
Here is an example of how you can use it:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<PRE>
void Funcadelic() {
   _ _try {

      <img src="images/grayvellip.JPG" width=3 height=13 border=0>

   }
   _ _except (ExpFltr(GetExceptionInformation())) {

      <img src="images/grayvellip.JPG" width=3 height=13 border=0>

   }
}

LONG ExpFltr(PEXCEPTION_POINTERS pEP) {
   DWORD dwExceptionCode = pEP-&gt;ExceptionRecord.ExceptionCode;

   if (dwExceptionCode == EXCEPTION_ACCESS_VIOLATION) {
      // Do some work here....
      return(EXCEPTION_CONTINUE_EXECUTION);
   }

   return(UnhandledExceptionFilter(pEP));
}
</pre></td></tr></table></p>

<p>In the <i>Funcadelic</i> function, an exception in the <i>try</i>
block causes the <i>ExpFltr</i> function to be called. The <i>
ExpFltr</i> function is passed the return value from <i>
GetExceptionInformation</i>. Inside the exception filter, the exception
code is determined and compared with EXCEPTION_ACCESS_VIOLATION. If an
access violation has occurred, the exception filter corrects the
situation and returns EXCEPTION_CONTINUE_EXECUTION from the filter. The
return value causes the system to continue execution at the instruction
that originally caused the exception in the first place.</p>

<p>If any other exception has occurred, <i>ExpFltr</i> calls <i>
UnhandledExceptionFilter</i>, passing it the address of the
EXCEPTION_POINTERS structure. <i>UnhandledExceptionFilter</i> then
displays a message box that allows you to terminate the process or to
begin debugging the process. The return value from <i>
UnhandledExceptionFilter</i> is returned from <i>ExpFltr</i>.</p>

</BODY>
</HTML>







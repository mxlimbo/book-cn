<HTML>
<HEAD>
<TITLE>Reserving a Region and Committing Storage Simultaneously</TITLE>
<link rel="STYLESHEET" type="text/css" href="advwin4.css">
<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch15c.htm">[Previous]</A> <A HREF="ch15e.htm">[Next]</A><P>

<A NAME="194"><H1>Reserving a Region and Committing Storage Simultaneously</H1></A>

<p>At times, you'll want to reserve a region and commit storage to it simultaneously. You can do this by placing a single call to <i>VirtualAlloc</i> as follows:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<PRE>
PVOID pvMem = VirtualAlloc(NULL, 99 * 1024,
   MEM_RESERVE | MEM_COMMIT, PAGE_READWRITE);
</pre>
</td></tr></table></p>

<p>This call is a request to reserve a 99-KB region and commit 99 KB of physical storage to the region. When the system processes this call, it first searches your process's address space to find a contiguous area of unreserved address space large enough to hold 100 KB (on a 4-KB page machine) or 104 KB (on an 
8-KB page machine).</p>

<p>The system searches the address space because I specified NULL as the <i>pvAddress</i> parameter. If I had specified a memory address for <i>pvAddress</i>, the system would see whether there was enough unreserved address space at that memory address. If the system could not find enough unreserved address space, <i>VirtualAlloc</i> would return NULL.</p>

<p>If a suitable region can be reserved, the system commits physical storage to the entire region. Both the region and the committed storage will be assigned PAGE_READWRITE protection.</p>

<p>Finally, <i>VirtualAlloc</i> returns the virtual address of the reserved and committed region, which is then saved in the <i>pvMem</i> variable. If the system couldn't find a large enough address space or commit the physical storage, <i>VirtualAlloc</i> returns NULL.</p>

<p>It is certainly possible when reserving a region and committing physical storage this way to pass a specific address as the <i>pvAddress</i> parameter to <i>VirtualAlloc</i>. Or you might need to have the system select a suitable region toward the top of your process's address space by ORing the MEM_TOP_DOWN flag to the <i>fdwAllocationType</i> parameter and passing NULL for the <i>pvAddress</i> parameter.</p>

</BODY>
</HTML>







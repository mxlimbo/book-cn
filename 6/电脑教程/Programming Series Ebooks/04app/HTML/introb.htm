<HTML>
<HEAD>
<TITLE>Today's Windows Platforms</TITLE>
<link rel="STYLESHEET" type="text/css" href="advwin4.css">
<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="introa.htm">[Previous]</A> <A HREF="introc.htm">[Next]</A><P>

<A NAME="394"><H1>Today's Windows Platforms</H1></A>

<P>Currently Microsoft ships three different operating system kernels. Each 
kernel is optimized for a particular computing scenario. Microsoft is trying to 
lure software developers to Windows by stating that each platform offers the 
same <I>application programming interface </I>(API). This simply means that when you 
learn how to write a Windows application for one kernel, you 
know how to write a Windows application for any of the kernels.</P>

<P>Since this book explains how to write applications 
using the Windows API, whatever you learn from this book 
applies&#8212;theoretically&#8212;to all the kernels. In reality, 
the kernels are different and so the operating system's 
functions are implemented in different ways. This means that 
the underlying concepts are the same for the different 
kernels, but the details might vary.</P>

<P>Let me start by introducing the three different Windows kernels.</P>

<A NAME="395"><H2>The Windows 2000 Kernel</H2></A>

<P>Windows 2000 is Microsoft's high-end operating system. It has a long 
shopping list of features. Here are some of them (in no particular order):</P>

<UL>
<P><LI>It is designed to run as a workstation, server, or data center.</LI></P>
<P><LI>The system is robust, which prevents a poorly written 
application from crashing the system.</LI></P>
<P><LI>The system is secure, which prevents unauthorized access to 
resources (such as files and printers) managed by the system.</LI></P>
<P><LI>The tools and utilities used to manage the system are very rich 
for the administrators within an organization.</LI></P>
<P><LI>     The kernel is mostly written in C and C++, which makes the 
system easily portable to other CPU architectures.</LI></P>
<P><LI>     The system natively supports Unicode, which makes localization 
and working with international languages easy.</LI></P>
<P><LI>     The memory-management features offer extremely rich 
capabilities and high efficiency.</LI></P>
<P><LI>     Structured exception handling (SEH) features allow for easy 
error recovery.</LI></P>
<P><LI>     Dynamic-Link Libraries (DLLs) allow for easy extensibility.</LI></P>
<P><LI>     Multithreading and support for multiple 
processors offer easy scalability to improve performance.</LI></P>
<P><LI>     File system features offer great ways of 
tracking how users manipulate data on their machines.</LI></P>
</UL>

<A NAME="396"> <H2>The Windows 98 Kernel</H2></A>
 
<P>Windows 98 is Microsoft's consumer-oriented operating 
system kernel. It has many of the features of Windows 2000 
but it is missing some of the key features. For example, 
Windows 98 is not robust (an application can crash the 
system), it is not secure, it is a uniprocessor kernel 
(which restricts its ability to scale), and it does not offer 
the same degree of Unicode support.</P>
<P>Microsoft's goal is to kill off the Windows 98 kernel. This is because 
the Windows 98 kernel does not offer the features of the Windows 2000 
kernel, and changing the Windows 98 kernel to support these features is too 
difficult. Plus, if they did modify the kernel to support these features, the kernel 
would match the Windows 2000 kernel anyway. So the Windows 2000 kernel 
should be with us for a long time, and the Windows 98 kernel has just a few years 
(if that) left in it.</P>

<P>Why does the Windows 98 kernel exist at all? The answer is that 
Windows 98 is more end user-friendly than Windows 2000. Consumers don't like to 
log on to their computers, they don't like to administer their computers, and so 
on. Plus, consumers (arguably) tend to play games more than corporate 
employees do. Many older games tend to access hardware directly, which can crash 
the machine. Windows 2000&#8212;a robust operating system kernel&#8212;doesn't allow 
this. Any application that attempts direct hardware access on Windows 2000 is 
immediately terminated with no ill effect on the machine or other applications.</P>

<P>For these reasons, Windows 98 is still with us, and the consumer 
market for it is quite large. Microsoft is actively working on making Windows 2000 
more end user-friendly, and a version of the Windows 2000 kernel will soon be 
available for the consumer market. Because the Windows 2000 and Windows 
98 kernels have similar feature sets, and because both kernels have a huge 
installed base, I have decided to concentrate on these two kernels in this book.</P>
<P>Throughout the book, I discuss various Windows features. Where 
appropriate, I have placed notes with kernel-specific icons in the text&#8212;as shown 
here&#8212;to draw attention to implementation details particular to one kernel or the other.</P>


<p><div class="note"><blockquote><b>Windows 98</b><HR>
This is an implementation detail specific to the Windows 98 platform.
</blockquote></div></p>


<p><div class="note"><blockquote><b>Windows 2000</b><HR>
This is an implementation detail specific to the Windows 2000 platform.
</blockquote></div></p>

<P>Even though I don't explicitly mention Windows 95 in this book, 
the information that I present for Windows 98 applies equally well to Windows 
95 since both operating systems use the exact same kernel. I simply refer to 
Windows 98 in the book&#8212;rather than always mentioning both Windows 95 
and Windows 98&#8212;to allow for a more readable text.</p>

<A NAME="397"><H2>The Windows CE Kernel</H2></A>

<P>Windows CE is Microsoft's most recent Windows kernel. This new 
operating system was created to fit the needs of small hardware devices such as 
handheld computers, auto PCs, smart terminals, toasters, microwave ovens, and 
vending machines. These devices typically must use a minimal amount of power, 
have small amounts of memory, and have little (if any) persistent storage (such as 
a disk drive). Because of these hardware restrictions, Microsoft was forced to 
create a new operating system kernel that had a smaller footprint than that of 
either Windows 2000 or Windows 98.</P>
<P>Amazingly enough, Windows CE is quite powerful and offers 
many features. Since Windows CE machines are geared toward the individual, 
the kernel does not need a lot of support for administration, scalability, and so 
on. Although I don't specifically cover Windows CE in this book, many of 
the concepts discussed throughout apply to this platform. Differences that do 
exist are usually due to the limitations Windows CE has on the various functions. 
The material presented in this book should be thought of as a companion to 
any additional information regarding Windows CE.</P>

</BODY>
</HTML>







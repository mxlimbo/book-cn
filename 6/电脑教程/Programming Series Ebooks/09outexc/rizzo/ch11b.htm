<HTML>
<HEAD>
<TITLE>What Is CDO?</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch11a.htm", "ch11c.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="354"><H1>What Is CDO?</H1></A>

<P>CDO is an object library that exposes the interfaces of the Messaging 
Application Programming Interface (MAPI), but instead of requiring the C/C++ 
language as MAPI does, CDO can be programmed using any development 
tool that creates COM objects, such as ASP, Visual Basic, and Microsoft Visual C++.</p>

<P>CDO has had several incarnations, and previous versions shipped 
with different names and functionality. For example, in Microsoft Exchange 
Server version 4.0, CDO was named OLE Messaging, and in Exchange Server 
5.0, CDO was named Active Messaging. With the advent of Exchange Server 
version 5.5 and Microsoft Outlook 98, the library was renamed Collaboration 
Data Objects to better describe its services&#8212;CDO provides much more than 
messaging functionality. Even though the names have changed from version 
to version, any older applications using a previous version of CDO are 
compatible with the latest version of the library. (At the time this book goes to press, 
the latest released version of CDO is version 1.21.)</p>

<P>You install CDO by installing either Outlook 98 on your machine or 
Outlook Web Access on your web server. CDO is actually divided into two 
DLLs: CDO.dll and CDOHTML.dll. CDO.dll contains the core collaborative 
functionality of CDO, such as sending messages, accessing the directory, and 
viewing free/busy calendar information. CDOHTML.dll is the CDO 
Rendering library. This library allows you to automatically convert information stored 
inside Exchange Server to HTML by using custom views, colors, and formats. 
The CDO Rendering library is installed when you install Outlook Web Access 
on your web server. Throughout this chapter, you will learn how to use both 
CDO libraries in your applications.</p>

<A NAME="355"><H2>CDO and the Outlook Object Library</H2></A>

<P>CDO and the Outlook object library are complementary technologies. 
The Account Tracking application discussed in <A HREF="ch07a.htm">Chapter 7</A> illustrates how the 
CDO library is used in conjunction with the Outlook object library. You might 
be wondering when to use each library. To help you make a decision, take 
into consideration account criteria such as where the application will run and 
what type of information the application will access. As you develop applications, 
you will find that deciding whether to use the Outlook library or the CDO library 
will almost never be simple. Use the Outlook object library to do the following:</p>

<UL>
<P><LI>Access special information stored in Outlook, such as Tasks and 
Journal items, that CDO does not support</li></p>

<P><LI>Open another user's information, such as the Calendar or Inbox</li></p>

<P><LI>Sort or filter complex Outlook properties</li></p>
</UL>

 <P>Use the CDO library to do the following:</p>

<UL>
<P><LI>Render objects or data into HTML</li></p>

<P><LI>Create multiuser server-based applications</li></p>

<P><LI>Access detailed information stored in the directory or display 
address books for users to pick from</li></p>
</UL>

<A NAME="356"><H2>CDO and the CDO for NTS Library</H2></A>

<P>When you install Microsoft Internet Information Server (IIS) 4.0, you 
have the option to install an SMTP component and an NNTP component on 
your web server. These components are subsets, functionally, of the CDO 
library named CDO for NTS. The CDO for NTS library allows you to quickly 
build applications that do not require the complete functionality of CDO. For 
example, if on your web page you wanted to build a simple way for users to send 
comments through e-mail, you would use the CDO for NTS object library 
rather than CDO. If your application required looking up a user in a directory 
server, however, you would want to use the advanced functionality of the full 
CDO library. Another difference between CDO and CDO for NTS is that CDO 
for NTS uses only SMTP and NNTP to communicate with a server. The use of 
these protocols to talk with the server limits the functionality that the CDO for 
NTS library can provide. With that said, you should use the CDO for NTS 
library to do the following:</p>

<UL>
<P><LI>Send unauthenticated e-mail from a web page</li></p>

<P><LI>Send bulk mailings via e-mail</li></p>

<P><LI>Support MHTML (Mime HTML)</li></p>
</UL>

 <P>Use the CDO library to do the following:</p>

<UL>
<P><LI>Use authenticated or anonymous access to information, but 
not anonymous e-mails</li></p>

<P><LI>Access or create calendaring information</li></p>

<P><LI>Access a directory and its information</li></p>
</UL>

</BODY>
</HTML>






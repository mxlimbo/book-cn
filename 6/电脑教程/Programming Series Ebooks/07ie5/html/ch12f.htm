<HTML>
<head>
<link rel="STYLESHEET" type="text/css" href="Progie5.css">
<TITLE>Registering and Unregistering a BHO</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch12e.htm">[Previous]</A> <A HREF="chaaa.htm">[Next]</A><P>

<A NAME="283"><H1>Registering and Unregistering a BHO</H1></A>

<p>For Internet Explorer to be able to load IEHelper, IEHelper must be registered as 
a Browser Helper Object in the Registry. You can edit the Registry manually, or 
you can change the default Registry script that the ATL Object Wizard creates to 
include the needed Registry information. To simplify this process for the user, we'll 
change the default Registry script. This way, any time you register or unregister a 
Browser Helper Object by using Regsvr32, the Registry is updated automatically.</p>

<p>First you must add information to the bottom of the IEHlprObj.rgs file to 
create a key for the CLSID of IEHlprObj. You will also use this Registry script to 
remove the Registry entries when you unregister a Browser Helper Object. The following 
code shows how the completed Registry script will look. Replace the CLSID for 
IEHlprObj with the CLSID for your object.</p>

<p><table cellpadding=5 width="95%"><TR><TD>
<PRE>HKCR
{
   IEHlprObj.IEHlprObj.1 = s 'IEHlprObj Class'
   {
      CLSID = s '{CE7C3CF0-4B15-11D1-ABED-709549C10000}'
   }
   IEHlprObj.IEHlprObj = s 'IEHlprObj Class'
   {
      CurVer = s 'IEHlprObj.IEHlprObj.1'
   }
   NoRemove CLSID
   {
      ForceRemove {CE7C3CF0-4B15-11D1-ABED-709549C10000}
         = s 'IEHlprObj Class'
      {
         ProgID = s 'IEHlprObj.IEHlprObj.1'
         VersionIndependentProgID = s 'IEHlprObj.IEHlprObj'
         ForceRemove 'Programmable'
         InprocServer32 = s '%MODULE%'
         {
            val ThreadingModel = s 'Apartment'
         }
      }
   }
}

HKLM
{
   SOFTWARE
   {
      Microsoft
      {
         Windows
         {
            CurrentVersion
            {
               Explorer
               {
                  'Browser Helper Objects'
                  {
                     {CE7C3CF0-4B15-11D1-ABED-709549C10000}
                  }
               }
            }
         }
      }
   }
}
</PRE>
</td></tr></table></p>

<p>This code is just basic Registry script. It specifies the keys that should be 
created automatically when registering your Browser Helper Object and those that 
should be deleted when unregistering your BHO. If you need more information about 
Registry scripts, please refer to one of the great ATL books offered by Microsoft Press, 
<I>Inside ATL</I>, by George Shepherd and Brad King (1999). If you need more information 
about the Windows Registry, take a look at <I>Inside the Microsoft Windows 98 
Registry</I> by G&uuml;nter Born (Microsoft Press, 1998). As always, another great source of 
information is the MSDN Online Libraries 
(<I><a href="http://msdn.microsoft.com" target="_window2">http://msdn.microsoft.com</a></I>/).</p>

<p>To register IEHelper, run the Regsvr32 utility as follows:</p>

<p><table cellpadding=5 width="95%"><TR><TD>
<PRE>regsvr32 IEHelper.dll
</PRE>
</td></tr></table></p>

<p>To unregister IEHelper, run Regsvr32 like this:</p>

<p><table cellpadding=5 width="95%"><TR><TD>
<PRE>regsvr32 /u IEHelper.dll  
</PRE>
</td></tr></table></p>

<p>See? Didn't I tell you that Browser Helper Objects are a lot easier to use 
than DDE to control running instances of Internet Explorer? And they provide much 
greater functionality, too. As this chapter shows, you can control Internet Explorer and 
even handle Internet Explorer events by using BHOs.</p>

<p>
<div class="sidebar"><blockquote><b>Where Do You Want to Go Today (or Tomorrow)?</b><hr>

So we've finally reached the end. I think I'm going to cry...I'll miss you all 
so much! At least I know that now you're empowered to create Web-based 
applications by using the Internet Explorer development platform. I challenge 
you to create the most imaginative applications you can think of using 
Internet Explorer technologies. You can take advantage of DHTML, HTML 
Applications, the WebBrowser control, and everything else you've learned about in this 
book to make your applications the best in the business. I hope to hear about 
the new and exciting applications that you create based on Internet Explorer!
</blockquote></div>
</p>
</BODY>
</HTML>






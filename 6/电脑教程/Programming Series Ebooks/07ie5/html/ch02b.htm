<HTML>
<head>
<link rel="STYLESHEET" type="text/css" href="Progie5.css">
<TITLE>Introduction to HTML</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch02a.htm">[Previous]</A> <A HREF="ch02c.htm">[Next]</A><P>

<A NAME="26"><H1>Introduction to HTML</H1></A>

<P>According to the definition in the MSDN Library, &quot;Hypertext Markup Language, or HTML, is a system of marking up or tagging a document so that it can be published on the World Wide Web. Documents prepared in HTML include reference graphics and formatting tags. You use a Web browser (such as Microsoft Internet Explorer) to view these documents.&quot; That pretty much sums it up. HTML is a way of marking 
text so that the text is formatted in a specific way when displayed by a Web browser. 
One of the great characteristics of HTML and the World Wide Web is that they follow 
a set of standards as dictated by the World Wide Web Consortium, or W3C. (The 
W3C URL is <I><A HREF="http://www.w3.org" TARGET="_window2">http://www.w3.org</A>.</I>) Consequently, as long as the Web browser that 
you're using follows the W3C standards, HTML that you write for one browser will work 
in other browsers, without needing to be changed, as long as those other browsers 
follow the standards. Internet Explorer 5 follows the HTML 4 specification as dictated by 
W3C, so if you create HTML for Internet Explorer, that HTML will work the same in 
other browsers that follow the W3C standards.</P>

<A NAME="27"><H2>Tags</H2></A>

<P>All HTML pages consist of a number of markup tags. A tag begins with a less 
than sign (&lt;) and ends with a greater than sign (&gt;). In between the less-than and 
greater-than signs is text that indicates the purpose of the tag and any number of 
attributes. An attribute describes some characteristic of the tag. Some examples of valid 
HTML tags follow:</P>

<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>&lt;HTML&gt; - Start of HTML
&lt;HEAD&gt; - Start of HEAD section
&lt;BODY&gt; - Start of BODY section
&lt;SCRIPT LANGUAGE=&quot;VBScript&quot;&gt;  - Script tag with LANGUAGE attribute.
&lt;/H1&gt;  - End of H1 block
</PRE>
</td></tr></table></p>

<P>If an HTML tag is a block tag, it is required to have an opening tag and a 
corresponding closing tag. Tags that are not block tags do not require a closing tag. 
An opening tag opens a block of HTML code and consists of the less-than sign, 
followed by the name of the tag and any attributes, and finally the greater-than sign. The 
closing tag closes a block of HTML code and consists of the less-than sign, a forward 
slash (/), the name of the tag and any attributes, and finally the greater-than sign. The 
tag &lt;/H1&gt;, shown in the example above, is a closing tag.</p>
<P>Valid HTML code must be wrapped in the opening &lt;HTML&gt; tag and the 
closing &lt;/HTML&gt; tag, and all other HTML tags must fall within them. The following 
code shows you the smallest HTML page you can create, but it doesn't produce any 
results.</p>
<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>&lt;HTML&gt;
&lt;/HTML&gt;
</PRE>
</td></tr></table></p>

<P>An HTML page typically has two sections, the head section and the body 
section. The head section is surrounded by opening and closing head tags, shown here:</P>
<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>&lt;HEAD&gt;
&lt;/HEAD&gt;
</PRE>
</td></tr></table></p>
<P>You can include certain HTML tags within the head section that describe 
your HTML page. Anything you include within the head section is read and 
interpreted by Internet Explorer before the actual Web page is displayed. One of the most 
important tags that you'll want to include in the head section is the &lt;TITLE&gt; tag. 
The text that you place within the opening and closing title tags is displayed in 
Internet Explorer's title bar while the page is still loading, so the user will know that she 
has reached the correct page. The following HTML code displays the title &quot;My Web Page&quot; in the title bar, as shown in Figure 2-1.</P>

<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>&lt;HTML&gt;
&lt;HEAD&gt;
   &lt;TITLE&gt;My Web Page&lt;/TITLE&gt;
&lt;/HEAD&gt;
&lt;/HTML&gt;
</PRE>
</td></tr></table></p>

<P>
<A HREF="javascript:fullSize('F02ii01x.htm')"> <img src="images/F02ii01.JPG" width=404 height=58 border=0 ALT = "Click to view at full size."> </A>
</P><P>
<!-- caption --><B>Figure 2-1.</B> <I>Internet Explorer title bar.</I><!-- /caption -->
</P>

<P>Another tag that is typically placed in the head section is the &lt;SCRIPT&gt; tag. 
It is usually best to place all your script functions within the head section so that 
Internet Explorer reads and interprets this script before the actual Web page is 
displayed. This way, all calls to script functions will succeed if nothing is wrong with the 
script functions.</P>

<P><DIV CLASS="NOTE"><BLOCKQUOTE><B>NOTE</B><HR>
For information about other tags that you can place within the 
head section, take a look at the HTML references section of the MSDN Online Web 
 Workshop: 
<I><A HREF="http://msdn.microsoft.com/workshop" TARGET="_window2">http://msdn.microsoft.com/workshop</A></I>.
</BLOCKQUOTE></DIV></P>

<P>The second section of an HTML page, the body section, follows the head 
section and is surrounded by opening and closing body tags, shown here:</P>
<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>&lt;BODY&gt;
&lt;/BODY&gt;
</PRE>
</td></tr></table></p>
<P>The body section is where you put all the elements that you want 
displayed on your Web page, including any text, buttons, and text boxes. Creating a 
simple HTML page is easy. If you want to display some unformatted text on your Web 
page, all you have to do is type that text between the opening and closing body tags, as 
in this example:</P>
<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>&lt;HTML&gt;
&lt;HEAD&gt;
   &lt;TITLE&gt;My Web Page&lt;/TITLE&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;
   This is my very simple Web page that includes only unformatted text.
&lt;/BODY&gt;
&lt;/HTML&gt;
</PRE>
</td></tr></table></p>

<P><DIV CLASS="NOTE"><BLOCKQUOTE><B>NOTE</B><HR>
Content in an HTML document includes 
<I>tags</I>, such as &lt;B&gt; and &lt;/B&gt;, that specify the presentation of text in a document. When the browser 
accesses a page, the HTML parser reads the contents of the file and creates HTML 
elements from the tags.  It is the HTML 
<I>elements</I>  that you can program.  However, the terms &quot;HTML tag&quot; and &quot;HTML element&quot; are often used interchangeably.
</BLOCKQUOTE></DIV></P>

<P>See how easy it is! Now we have a real Web page that will work in any 
Web browser. This page is really boring, though. Without text formatting, Web 
pages wouldn't be any more exciting than a document that you created using 
Microsoft Windows Notepad. Let's take a look at some formatting options that will make 
your Web pages more exciting.</P>

<A NAME="28"><H2>Headings</H2></A>

<P>In HTML, you can create different heading levels in your document to help 
you organize the document into sections, just as you might do when writing a book. 
The book you are reading now uses several different levels of headings. For example, 
the section &quot;<A HREF="ch02b.htm#26">Introduction to HTML</A>&quot; uses heading level 1 (H1). This section uses 
heading level 2 (H2). HTML provides you with six levels of headings: H1, H2, H3, H4, 
H5, and H6, with H1 being the largest and H6 being the smallest. Heading tags are 
block tags, and you must specify opening and closing tags. Examples of each of 
these headings are shown in Figure 2-2.</P>
<P>To create a heading, you simply include text within the opening and 
closing heading tags, as in this example code:</P>
<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>&lt;BODY&gt;
   &lt;H1&gt;This is heading level 1.&lt;/H1&gt;
   &lt;H2&gt;This is heading level 2.&lt;/H2&gt;
   &lt;H3&gt;This is heading level 3.&lt;/H3&gt;
   &lt;H4&gt;This is heading level 4.&lt;/H4&gt;
   &lt;H5&gt;This is heading level 5.&lt;/H5&gt;
   &lt;H6&gt;This is heading level 6.&lt;/H6&gt;
&lt;/BODY&gt;
</PRE>
</td></tr></table></p>

<P>
<A HREF="javascript:fullSize('F02ii02x.htm')"> <img src="images/F02ii02.JPG" width=404 height=303 border=0 ALT = "Click to view at full size."> </A>
</P><P>
<!-- caption --><B>Figure 2-2.</B> <I>HTML headings.</I><!-- /caption -->
</P>

<A NAME="29"><H2>Formatting Text </H2></A>

<P>In addition to creating headings for your document, you can format normal text 
that you want to display. You can center the text, underline it, use a specific color, and 
so on. The possibilities are endless. The most important formatting tags are 
described next.</P>

<A NAME="30"><H3>Paragraphs</H3></A>

<P>Along with using headings to structure your Web page, you can add structure 
by grouping common text into paragraphs. HTML provides a paragraph tag, &lt;P&gt;, 
which groups text into paragraphs. The paragraph tag inserts a blank line on your Web 
page before the text that follows the paragraph tag and after the closing paragraph 
tag. The paragraph tag is a block tag and the only case in which closing tags aren't 
required. If you don't specify a closing paragraph tag, a new paragraph will start when 
Internet Explorer encounters another paragraph tag. So it's considered good coding 
practice to include the closing paragraph tag. And future versions of Internet Explorer 
might require it. Here's an example of using the paragraph tag:</P>
<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>&lt;P&gt;This is a paragraph.&lt;/P&gt;
</PRE>
</td></tr></table></p>

<A NAME="31"><H3>Blank lines</H3></A>

<P>You might sometimes want to insert a line break into your page. You could just 
use a paragraph tag, but using a break tag, &lt;BR&gt;, is often more convenient and 
sometimes makes more sense. If you just want to include blank lines but aren't 
actually creating a new paragraph of text, using the break tag is more suitable. The break 
tag isn't a block tag, so it doesn't require a closing tag. You can place the break 
tag wherever you want to insert a line break. The following examples use the break tag:</P>
<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>Here is some text followed by a line break.&lt;BR&gt;
&lt;BR&gt;&lt;BR&gt;
The above inserts two blank lines into the Web page.&lt;BR&gt;
</PRE>
</td></tr></table></p>

<A NAME="32"><H3>Alignment</H3></A>

<P>Perhaps you want to align your text a certain way on a page. HTML provides a 
couple of techniques to do this. Most HTML tags have an attribute named ALIGN, which 
you can use to center, right-justify, or left-justify the text within the element. If you 
don't specify this attribute, the text is left-justified by default.</P>

<P><DIV CLASS="NOTE"><BLOCKQUOTE><B>NOTE</B><HR>
Not all tags support this attribute.  Check out the MSDN Online 
Web Workshop to determine whether a specific element supports this attribute.  
</BLOCKQUOTE></DIV></P>

<P>Let's look at a few examples of the ALIGN attribute. The heading and 
paragraph tags both support the ALIGN attribute. Here are three examples of tags that show 
how to use the ALIGN attribute:</P>
<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>&lt;H1 ALIGN=LEFT&gt;This is heading level 1.&lt;/H1&gt;
&lt;H2 AlIGN=RIGHT&gt;This is heading level 2.&lt;/H2&gt;
&lt;P ALIGN=CENTER&gt;This is a centered paragraph.&lt;/P&gt;
</PRE>
</td></tr></table></p>
<P>If you just want to center a block of text, you can use the &lt;CENTER&gt; tag. 
(Note that not all browsers support this tag.) The &lt;CENTER&gt; tag is a block tag, and it 
requires you to specify the closing tag. If you do not specify the closing tag, all 
the elements on your Web page that follow the opening &lt;CENTER&gt; tag will be 
centered. Using the &lt;CENTER&gt; tag is different from using the ALIGN=CENTER 
attribute&#8212;the &lt;CENTER&gt; tag can be used to center a block of HTML, whereas the 
ALIGN=CENTER attribute centers only the text contained within the tag to which the ALIGN 
attribute is applied. Here's an example of using the &lt;CENTER&gt; tag:</P>

<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>&lt;CENTER&gt;Here is some text that is centered.&lt;/CENTER&gt;
</PRE>
</td></tr></table></p>

<P>The results of this HTML code are shown in Figure 2-3.</P>

<P>
<A HREF="javascript:fullSize('F02ii03x.htm')"> <img src="images/F02ii03.JPG" width=404 height=263 border=0 ALT = "Click to view at full size."> </A>
</P><P>
<!-- caption --><B>Figure 2-3.</B> <I>Aligning text on a Web page.</I><!-- /caption -->
</P>

<A NAME="33"><H3>Bold, underline, italic, and strikethrough</H3></A>

<P>HTML also provides text-highlighting tags that enable you to style your text with 
bold, underline, italic, and strikethrough. To make your text appear bold, use either 
the &lt;B&gt; or the &lt;STRONG&gt; tag. The &lt;STRONG&gt; tag is the preferred method of 
bolding text because it allows Internet Explorer to choose the correct method for 
applying the style according to the user's current settings. To underline text, use the &lt;U&gt; 
tag. To italicize text, use the &lt;I&gt; or the &lt;EM&gt; tag. The &lt;EM&gt; tag is preferred over &lt;I&gt; 
for the same reason that &lt;STRONG&gt; is preferred over &lt;B&gt;. For strikethrough type, 
you can use either the &lt;S&gt; or the &lt;STRIKE&gt; tag. In this case, &lt;S&gt; is as good as 
&lt;STRIKE&gt;. These text-formatting tags are all block tags, and the closing tag is required for 
each. Here are some examples of the text-formatting tags:</P>

<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>&lt;B&gt;Here is some text in bold type.&lt;/B&gt;&lt;BR&gt;
&lt;STRONG&gt;Here is some text in strong type, 
   which is usually shown in bold.&lt;/STRONG&gt;&lt;BR&gt;
&lt;U&gt;Here is some underlined text.&lt;/U&gt;&lt;BR&gt;
&lt;I&gt;Here is some text in italic type.&lt;/I&gt;&lt;BR&gt;
&lt;EM&gt;Here is some text that is emphasized, 
   which is usually shown in italic type.&lt;/EM&gt;&lt;BR&gt;
&lt;S&gt;Here is some text in strikethrough type.&lt;/S&gt;&lt;BR&gt;
&lt;STRIKE&gt;Here is some more text in strikethrough type.&lt;/STRIKE&gt;&lt;BR&gt;
</PRE>
</td></tr></table></p>

<P>The results of these tags are shown in Figure 2-4.</P>

<P>
<A HREF="javascript:fullSize('F02ii04x.htm')"> <img src="images/F02ii04.JPG" width=404 height=191 border=0 ALT = "Click to view at full size."> </A>
</P><P>
<!-- caption --><B>Figure 2-4.</B> <I>Text-formatting tags.</I><!-- /caption -->
</P>

<A NAME="34"><H3>Font</H3></A>

<P>Using the &lt;FONT&gt; tag, you can change the font face, size, and color of text. 
The &lt;FONT&gt; tag is a block tag, and the closing tag is required. To specify a font 
face, size, or color that's different from the default, use the &lt;FONT&gt; tag's FACE, SIZE, 
and COLOR attributes. For the FACE attribute, you specify the name of the font face 
you want to use. For the SIZE attribute, you specify a size from 1 through 7, where 1 
is the smallest and 7 is the largest. For the COLOR attribute, you specify the name 
of the color or the red-green-blue (RGB) color value for the color. (The MSDN 
Online Web Workshop lists all the colors that Internet Explorer supports.) The 
following examples use the &lt;FONT&gt; tag and its attributes to change font face, size, and 
color. Figure 2-5 shows the results of using the &lt;FONT&gt; tag.</P>
<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>&lt;FONT FACE=&quot;Arial&quot; SIZE=&quot;2&quot; COLOR=&quot;DarkViolet&quot;&gt;
   Face=Arial, Size=2, Color=DarkViolet
&lt;/FONT&gt;
&lt;BR&gt;
&lt;FONT FACE=&quot;Times New Roman&quot; SIZE=&quot;4&quot; COLOR=&quot;#0000FF&quot;&gt;
   Face=Times New Roman, Size=4, Color=Blue
&lt;/FONT&gt;
&lt;BR&gt;
&lt;FONT FACE=&quot;Courier&quot; SIZE=&quot;5&quot; COLOR=&quot;DarkMagenta&quot;&gt;
   Face=Courier, Size=5, Color=DarkMagenta
&lt;/FONT&gt;
</PRE>
</td></tr></table></p>

<P>
<A HREF="javascript:fullSize('F02ii05x.htm')"> <img src="images/F02ii05.JPG" width=404 height=150 border=0 ALT = "Click to view at full size."> </A>
</P><P>
<!-- caption --><B>Figure 2-5.</B> <I>Using the &lt;FONT&gt; tag can change font face, size, and color.</I><!-- /caption -->
</P>

<A NAME="35"><H3>Horizontal lines</H3></A>

<P>Sometimes when structuring your Web pages, you'll want to draw horizontal 
lines of differing sizes. To draw horizontal lines, use the &lt;HR&gt; tag. (HR is an acronym 
for horizontal rule, by the way.) The &lt;HR&gt; tag has attributes that allow you to 
change the alignment, color, size, and width of the line being drawn. You've already 
seen the ALIGN and COLOR attributes. The SIZE and WIDTH attributes both take a 
value that's the size or width of the line, in pixels. Here are a few examples of 
different lines that you can draw using the &lt;HR&gt; tag:</P>

<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>A standard line
&lt;HR&gt;
&lt;BR&gt;
A right-justified line with width of 300
&lt;HR ALIGN=RIGHT WIDTH=300&gt;
&lt;BR&gt;
A centered blue line of size 10 and width of 200
&lt;HR ALIGN=CENTER SIZE=10 COLOR=&quot;Blue&quot; WIDTH=200&gt;
</PRE>
</td></tr></table></p>

<P>The results of this HTML code are shown in Figure 2-6.</P>

<P>
<A HREF="javascript:fullSize('F02ii06x.htm')"> <img src="images/F02ii06.JPG" width=404 height=181 border=0 ALT = "Click to view at full size."> </A>
</P><P>
<!-- caption --><B>Figure 2-6.</B> <I>Horizontal lines.</I><!-- /caption -->
</P>

<A NAME="36"><H2>Hyperlinks</H2></A>

<P>What good would a Web page be if it didn't contain links to other Web pages? 
Inserting hyperlinks to other Web pages is easy using the anchor tag, &lt;A&gt;. Like 
many other tags, the anchor tag is a block tag, and the closing tag &lt;/A&gt; is required. 
The most important attribute of the anchor tag is the HREF attribute. The value of 
HREF is the Uniform Resource Locator (URL), which indicates where Internet 
Explorer should navigate when a user clicks the hyperlink.</P>
<P>To create a hyperlink, you simply insert some text between the opening 
and closing anchor tags in your Web page. The text should describe what Internet 
Explorer will do when the user clicks on the hyperlink. Of course, for the hyperlink to 
respond when clicked, you'll have to include the HREF attribute and a URL. In addition, 
you can wrap any text or other HTML tag on your Web page using the anchor tags, 
as you'll see in the next section. Here are some examples of hyperlinks that you 
can create with the anchor tag:</P>

<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>&lt;A HREF=&quot;http://www.microsoft.com&quot;&gt;Microsoft Home Page&lt;/A&gt;
&lt;A HREF=&quot;file://C:\&quot;&gt;View the Contents of your C: drive&lt;/A&gt;
</PRE>
</td></tr></table></p>

<A NAME="37"><H2>Images</H2></A>

<P>So far, I've explained only how to insert text into your Web pages. If that were 
all you could do, your Web page would be pretty boring, don't you think? 
Luckily, Internet Explorer also allows you to insert images into your Web pages using 
the &lt;IMG&gt; tag. The &lt;IMG&gt; tag has many attributes, but SRC is the most important 
one. The SRC attribute is to the &lt;IMG&gt; tag what the HREF attribute is to the anchor 
tag. The SRC attribute is a URL that tells Internet Explorer where to get the image that 
you want to display. Internet Explorer can display many types of images&#8212;.bmp, 
.emf, .gif, .jpeg, .jpg, .png, and .wmf files, to name a few.</P>
<P>You can also change the size of images that you want to display by using 
the HEIGHT and WIDTH attributes, which take the number of pixels that you want 
for the height and width of the image. One other attribute of particular interest is 
the BORDER attribute. By default, Internet Explorer displays a border around an 
image. The BORDER attribute takes a number that specifies the thickness of the border 
drawn around the image. You can turn off the border by specifying 0 for the BORDER 
attribute. Here are a few examples of ways you can display images on your Web pages:</P>

<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>&lt;IMG SRC=&quot;MyBitmap.bmp&quot;&gt;
&lt;IMG BORDER=0 SRC=&quot;file://c:\SomeJPG.jpg&quot;&gt;
&lt;IMG HEIGHT=500 WIDTH=500 SRC=&quot;http://yourserver.com/SomeGif.gif&quot;&gt;
</PRE>
</td></tr></table></p>
<P>One cool advantage of including an image on your Web page is that you 
can turn it into a hyperlink&#8212;when a user clicks on it, Internet Explorer navigates to 
the URL you specify. All you have to do is wrap the &lt;IMG&gt; tags with anchor tags. 
Easy, huh? Here are a few examples:</P>
<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>&lt;A HREF=&quot;http://yourserver.com/default.htm&quot;&gt;&lt;IMG SRC=&quot;MyBitmap.bmp&quot;&gt;&lt;/A&gt;
&lt;A HREF=&quot;http://www.microsoft.com/ie/&quot;&gt;&lt;IMG SRC=&quot;IE.jpg&quot;&gt;&lt;/A&gt;
</PRE>
</td></tr></table></p>

<A NAME="38"><H2>Ordered and Unordered Lists</H2></A>

<P>Sometimes when providing information on a Web page, you'll want to list 
information either in an ordered list or in an unordered list. HTML provides the &lt;OL&gt; tag 
to enable you to create ordered lists and the &lt;UL&gt; tag to create unordered lists. 
Both of these tags are block tags, and the corresponding closing tags are required. 
By default, the ordered lists are numbered using decimal numbers starting at 1, and 
the unordered lists are bulleted lists. However, you can use the TYPE attribute with 
either the ordered or unordered lists to change their styles. For example, you 
could create an ordered list using letters or roman numerals. Table 2-1 shows the 
different styles that you can specify with the TYPE attribute. (Although both the &lt;OL&gt; and 
&lt;UL&gt; tags have a TYPE attribute, the attribute is seldom used because it doesn't make 
sense to specify that an unordered list be numbered. However, you 
<I>can </I>do it!)</P>

<P><B>Table 2-1.</B> <i>Values for the Type Attribute</i></P>

<P><TABLE CELLPADDING="5" WIDTH="95%"><TR>
<TH><I>Value</I></TH>
<TH><I>Description</I></TH>
</TR><TR>
<TD VALIGN="TOP">1</TD>
<TD VALIGN="TOP">List items are numbered.</TD>
</TR><TR>
<TD VALIGN="TOP">a</TD>
<TD VALIGN="TOP">List items are labeled with lowercase letters.</TD>
</TR><TR>
<TD VALIGN="TOP">A</TD>
<TD VALIGN="TOP">List items are labeled with uppercase letters.</TD>
</TR><TR>
<TD VALIGN="TOP">i</TD>
<TD VALIGN="TOP">List items are labeled with lowercase roman numerals.</TD>
</TR><TR>
<TD VALIGN="TOP">I</TD>
<TD VALIGN="TOP">List items are labeled with uppercase roman numerals.</TD>
</TR></table></P>


<P>To include items in a list, you use the list-item tag, &lt;LI&gt;. The &lt;LI&gt; tag also 
has a TYPE attribute that takes the same values as those listed in Table 2-1, so you 
can change the style anywhere in the list. Typically, however, you'll want to maintain 
the same style throughout the entire list. Here's code for an ordered list of items that 
uses uppercase roman numerals:</P>
<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>&lt;OL TYPE=&quot;I&quot;&gt;
   &lt;LI&gt;List Item 1
   &lt;LI&gt;List Item 2
   &lt;LI&gt;List Item 3
   &lt;LI&gt;List Item 4
&lt;/OL&gt;
</PRE>
</td></tr></table></p>
<P>The results of this HTML code are shown in Figure 2-7.</P>

<P>
<A HREF="javascript:fullSize('F02ii07x.htm')"> <img src="images/F02ii07.JPG" width=404 height=144 border=0 ALT = "Click to view at full size."> </A>
</P><P>
<!-- caption --><B>Figure 2-7.</B> <I>Ordered list using uppercase roman numerals.</I><!-- /caption -->
</P>

<P>The following HTML code will display an unordered list:</P>
<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>&lt;UL&gt;
   &lt;LI&gt;List Item 1
   &lt;LI&gt;List Item 2
   &lt;LI&gt;List Item 3
   &lt;LI&gt;List Item 4
&lt;/UL&gt;
</PRE>
</td></tr></table></p>
<P>Figure 2-8 shows the results of this HTML code.</P>

<P>
<A HREF="javascript:fullSize('F02ii08x.htm')"> <img src="images/F02ii08.JPG" width=404 height=146 border=0 ALT = "Click to view at full size."> </A>
</P><P>
<!-- caption --><B>Figure 2-8.</B> <I>Unordered list using bullets.</I><!-- /caption -->
</P>

<P>In addition to specifying one level of items in a list, you can nest &lt;OL&gt; or 
&lt;UL&gt; tags so that you'll have multiple levels in your list. Here's HTML code for a 
multilevel, unordered list:</P>
<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>&lt;UL&gt;
   &lt;LI&gt;List Item 1
   &lt;LI&gt;List Item 2
   &lt;UL&gt;
      &lt;LI&gt;List Item 3
      &lt;LI&gt;List Item 4
   &lt;/UL&gt;
&lt;/UL&gt;
</PRE>
</td></tr></table></p>
<P>The results of this HTML code are shown in Figure 2-9. As you can see, 
the type of bullet used for the second level of items in the list is different to reflect 
the new level.</P>

<P>
<A HREF="javascript:fullSize('F02ii09x.htm')"> <img src="images/F02ii09.JPG" width=404 height=143 border=0 ALT = "Click to view at full size."> </A>
</P><P>
<!-- caption --><B>Figure 2-9.</B> <I>Multilevel, unordered list using bullets.</I><!-- /caption -->
</P>

<A NAME="39"><H2>Select Boxes</H2></A>

<P>A select box contains a list of items from which you can choose one. This list is 
typically in a drop-down style. Before the list is opened, the first item in the list is 
usually displayed. The other items can be displayed by clicking a down arrow 
button next to the drop-down list. Although the default is to display only the first item 
in the list, you can alter this behavior. You can choose to show the first item, the 
first two items, or all the items in the list.</P>
<P>To create a select box, you use the &lt;SELECT&gt; tag. The &lt;SELECT&gt; tag is a 
block tag, and the closing tag is required. Within the opening and closing select tags, 
you include &lt;OPTION&gt; tags that specify items in the list. (The &lt;OPTION&gt; tag isn't a 
block tag.) When including an &lt;OPTION&gt; tag, you'll also usually supply the VALUE 
attribute to associate a value with the item in the select box. This attribute is typically 
used for referencing the item in script in the select box. You can also specify the 
attribute named SELECTED for the item that you want selected by default. Here's an 
example of a select box that contains three items:</P>
<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>&lt;SELECT&gt;
   &lt;OPTION VALUE=&quot;1&quot; SELECTED&gt;Item 1
   &lt;OPTION VALUE=&quot;2&quot;&gt;Item 2
   &lt;OPTION VALUE=&quot;3&quot;&gt;Item 3
&lt;/SELECT&gt;
</PRE>
</td></tr></table></p>

<P>Figure 2-10 shows the results of this HTML code:</P>

<P>
<A HREF="javascript:fullSize('F02ii10x.htm')"> <img src="images/F02ii10.JPG" width=404 height=127 border=0 ALT = "Click to view at full size."> </A>
</P><P>
<!-- caption --><B>Figure 2-10.</B> <I>Select box.</I><!-- /caption -->
</P>

<A NAME="40"><H2>Tables</H2></A>

<P>Tables provide you with a way to group information into columns and rows. 
HTML's &lt;TABLE&gt; tag enables you to build tables. The &lt;TABLE&gt; tag is a block tag, and 
the closing tag is required. A discussion of tables could go on for a long time, so I'll 
just provide you with the basics for creating them.</P>
<P>To create a basic table, you first insert the opening and closing table tags in 
your Web page. If you want a border displayed around your rows and columns, use 
the BORDER attribute to specify the size of the border. You can also specify the 
height and width of your table using the HEIGHT and WIDTH attributes. In the case of 
tables, these attributes take values in either pixels or percentages.</P>
<P>To create rows in your table, use the &lt;TR&gt; tag. Use the &lt;TH&gt; tag to 
create headings in your table, and use the &lt;TD&gt; tag to create columns. The &lt;TR&gt;, 
&lt;TH&gt;, and &lt;TD&gt; tags are all block tags, and the corresponding closing tags are 
required. The following HTML code demonstrates how to create a simple table:</P>
<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>&lt;TABLE BORDER=1 WIDTH=&quot;50%&quot;&gt;
   &lt;TR&gt;
      &lt;TH&gt;Heading 1&lt;/TH&gt;
      &lt;TH&gt;Heading 2&lt;/TH&gt;
   &lt;/TR&gt;
   &lt;TR&gt;
      &lt;TD&gt;Row 1 - Column 1&lt;/TD&gt;
      &lt;TD&gt;Row 1 - Column 2&lt;/TD&gt;
   &lt;/TR&gt;
   &lt;TR&gt;
      &lt;TD&gt;Row 2 - Column 1&lt;/TD&gt;
      &lt;TD&gt;Row 2 - Column 2&lt;/TD&gt;
   &lt;/TR&gt;
&lt;/TABLE&gt;
</PRE>
</td></tr></table></p>
<P>The results of this HTML code are shown in Figure 2-11.</P>

<P>
<A HREF="javascript:fullSize('F02ii11x.htm')"> <img src="images/F02ii11.JPG" width=404 height=162 border=0 ALT = "Click to view at full size."> </A>
</P><P>
<!-- caption --><B>Figure 2-11.</B> <I>Simple HTML table.</I><!-- /caption -->
</P>

<A NAME="41"><H2>Intrinsic Controls</H2></A>

<P>Internet Explorer provides you with a number of intrinsic controls&#8212;buttons, 
text boxes, select boxes, and so forth&#8212;that are natively supported by Internet 
Explorer and HTML. You can insert an intrinsic control into your Web page using the 
&lt;INPUT&gt; tag. This tag has an attribute named TYPE that allows you to specify the type of 
control you want to insert into your Web page. Table 2-2 lists the types of intrinsic 
controls that you can insert. We'll discuss the controls that are used mainly with forms 
later in this chapter.</P>

<P><B>Table 2-2.</B> <i>Types of Intrinsic Controls</i></P>

<P><TABLE CELLPADDING="5" WIDTH="95%"><TR>
<TH><I>Type of Control</I></TH>
<TH><I>Description</I></TH>
</TR><TR>
<TD VALIGN="TOP">Button </TD>
<TD VALIGN="TOP">Button control.</TD>
</TR><TR>
<TD VALIGN="TOP">Checkbox</TD>
<TD VALIGN="TOP">Check box that is either checked or unchecked.</TD>
</TR><TR>
<TD VALIGN="TOP">File</TD>
<TD VALIGN="TOP">File upload control. Used mainly with forms.</TD>
</TR><TR>
<TD VALIGN="TOP">Hidden</TD>
<TD VALIGN="TOP">Hidden control.</TD>
</TR><TR>
<TD VALIGN="TOP">Image</TD>
<TD VALIGN="TOP">Image control that causes the form to be uploaded.</TD>
</TR><TR>
<TD VALIGN="TOP">Password</TD>
<TD VALIGN="TOP">Similar to the text control except that the text entered 
isn't displayed.</TD>
</TR><TR>
<TD VALIGN="TOP">Radio</TD>
<TD VALIGN="TOP">Radio button control that is used for mutually exclusive 
sets of values.</TD>
</TR><TR>
<TD VALIGN="TOP">Reset</TD>
<TD VALIGN="TOP">Button that resets the data in a form when clicked. 
Used mainly with forms.</TD>
</TR><TR>
<TD VALIGN="TOP">Submit</TD>
<TD VALIGN="TOP">Button that submits the form when clicked. Used mainly 
with forms.</TD>
</TR><TR>
<TD VALIGN="TOP">Text</TD>
<TD VALIGN="TOP">Single-line text entry control.</TD>
</TR></TABLE></P>

    
<P>Another important attribute of the &lt;INPUT&gt; tag is VALUE. You can use it 
to specify the text that is displayed for certain controls. The VALUE attribute has a 
different meaning depending on the type of control you're using. For instance, if 
you specify the type of control as Button, the text you specify for the VALUE attribute 
will appear inside the button. If the type of control is Text, the text you specify for 
the VALUE attribute will appear inside the text box. Other controls require other 
attributes. For example, the Radio control type requires that you specify a NAME attribute.</P>

<P><DIV CLASS="NOTE"><BLOCKQUOTE><B>NOTE</B><HR>
Refer to the documentation for the &lt;INPUT&gt; tag in the MSDN 
Online Web Workshop for more information about required attributes.  
</BLOCKQUOTE></DIV></P>

<P>Here are some examples of intrinsic controls that you can create with 
the &lt;INPUT&gt; tag. We'll use a few of these controls in the <a href="ch03a.htm">next chapter</a> when we 
examine DHTML.</P>

<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>&lt;INPUT TYPE=BUTTON VALUE=&quot;Button&quot;&gt;
&lt;BR&gt;
&lt;INPUT TYPE=TEXT VALUE=&quot;Some Text&quot;&gt;
&lt;BR&gt;
&lt;INPUT TYPE=PASSWORD VALUE=&quot;MyPassword&quot;&gt;
&lt;BR&gt;
&lt;INPUT TYPE=CHECKBOX&gt;Check Box
&lt;BR&gt;
&lt;INPUT TYPE=RADIO NAME=&quot;Radio1&quot;&gt;Radio Button 1
&lt;INPUT TYPE=RADIO NAME=&quot;Radio2&quot;&gt;Radio Button 2
</PRE>
</td></tr></table></p>

<P>Figure 2-12 displays the results of this HTML code.</P>

<P>
<A HREF="javascript:fullSize('F02ii12x.htm')"> <img src="images/F02ii12.JPG" width=404 height=184 border=0 ALT = "Click to view at full size."> </A>
</P><P>
<!-- caption --><B>Figure 2-12.</B> <I>Examples of intrinsic controls.</I><!-- /caption -->
</P>

<A NAME="42"><H2>Comments</H2></A>

<P>Commenting involves adding information on your Web page that will help 
describe what you intended when you created the Web page. A user trying to navigate 
your Web page can't view the text that you include in a comment; the text is viewable 
only when a user looks at the source of your Web page.</P>
<P>Commenting your Web pages is extremely important. Suppose you spent 
hours creating a Web page with a specific goal in mind. If you didn't include 
comments, months down the road when you or somebody else had to make changes to the 
page, hours could be spent figuring out what you were originally trying to accomplish.</P>
<P>HTML provides you with two methods to include comments in your HTML 
code. The first, and more traditional, method is to use the &lt;!-- and --&gt; tags. As long as 
these tags do not appear in the Script block, Internet Explorer ignores any elements 
you place within the tags and the browser won't display the elements as part of your 
Web page. The other method for including comments is to use the &lt;COMMENT&gt; tag. 
The &lt;COMMENT&gt; tag is a block tag, and the closing tag is required. Again, the 
browser won't display anything you place within the &lt;COMMENT&gt; tags. Here are a 
couple of examples of using comment tags:</P>
<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>&lt;!-- This is a comment using the traditional comment tags.  --&gt;
&lt;COMMENT&gt; Here is a comment using the newer comment tags. &lt;/COMMENT&gt;
</PRE>
</td></tr></table></p>

<A NAME="43"><H2>Frames</H2></A>

<P>Frames are a little bit more complicated than the other HTML elements we've 
been discussing. Frames provide a way to show multiple Web pages in one window. 
One HTML page&#8212;which contains HTML code that specifies how the frames are to 
appear&#8212;is the driver page. The &lt;FRAMESET&gt; tag is used to describe the structure 
of the frames. It is a block tag, and the closing tag is required. You use one of two 
attributes to describe how the page is to look. If you want the frames to be laid 
out horizontally, you use the ROWS attribute. If you want the frames to be laid out 
vertically, you use the COLS attribute. The values that you specify for the ROWS 
and COLS attributes indicate the size of each frame. You can specify these values in 
pixels, as a percentage of the total available space, or as a percentage of the 
remaining space available. Usually, you'll use a percentage to indicate the size of each 
frame. For example, to create a frameset that will contain three frames laid out 
vertically, you would code the &lt;FRAMESET&gt; tag like this:</P>
<P><table cellpadding=5 width="95%"><TR><TD>
<PRE> &lt;FRAMESET COLS=&quot;33%, 33%, *&quot;&gt;
 &lt;/FRAMESET&gt;
</PRE>
</td></tr></table></p>
<P>The preceding code creates three frames. The first two are each 33 percent 
of the entire width of the page. The last frame takes up all the remaining space in 
the window.</P>
<P>The &lt;FRAMESET&gt; tag creates only the frames. To load pages into each 
frame, you use the &lt;FRAME&gt; tag. Two attributes of the &lt;FRAME&gt; tag are important: the 
SRC attribute, which indicates which URL to load into the frame; and the NAME 
attribute, which indicates the name of the frame. This name can be used in anchor tags to 
indicate which frame should load the URL. The following HTML code uses the 
frameset defined in the preceding code to load the three pages into the frames.</P>
<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>&lt;FRAMESET COLS=&quot;33%, 33%, *&quot;&gt;
   &lt;FRAME NAME=&quot;FRAME1&quot; SRC=&quot;http://www.microsoft.com/&quot;&gt;
   &lt;FRAME NAME=&quot;FRAME2&quot; SRC=&quot;http://mspress.microsoft.com/&quot;&gt;
   &lt;FRAME NAME=&quot;FRAME3&quot; SRC=&quot;http://www.microsoft.com/ie/&quot;&gt;
&lt;/FRAMESET&gt;
</PRE>
</td></tr></table></p>
<P>The results of this HTML code are shown in Figure 2-13. For the driver 
page, note that you should include the opening and closing HTML tags, but 
<I>not</I> the opening and closing body tags. You can include &lt;HEAD&gt; tags if you want to.</P>

<P>
<A HREF="javascript:fullSize('F02ii13x.htm')"> <img src="images/F02ii13.JPG" width=404 height=291 border=0 ALT = "Click to view at full size."> </A>
</P><P>
<!-- caption --><B>Figure 2-13.</B> <I>Frames.</I><!-- /caption -->
</P>

<A NAME="44"><H2>HTML Forms</H2></A>

<P>HTML forms enable you to create Web-based forms for your users that are just 
like paper-based forms. You use the &lt;FORM&gt; tag to create them. (The &lt;FORM&gt; tag is 
a block tag, and the closing tag is required.) The &lt;FORM&gt; tag allows you to 
group together intrinsic controls, such as text boxes, check boxes, radio buttons, and 
submit buttons, that will enable your users to enter information and then submit 
that information to a program that is running on your Web server. Typically, forms 
are submitted to your server when the user clicks a submit button. Remember that 
the submit button is created by inserting an &lt;INPUT&gt; tag with the TYPE attribute 
set to Submit.</P>
<P>Besides the ID attribute, which is used to identify the form and all HTML 
tags, the most important attribute of the &lt;FORM&gt; tag is the ACTION attribute. The 
value of the ACTION attribute indicates the URL of the application that will be 
executed when a user presses the submit button.</P>
<P>Another important attribute is the METHOD attribute, which indicates how 
the form data is sent to the server application. The METHOD attribute has two 
values: Get and Post. If you specify Get, the form data is appended to the URL specified 
by the ACTION attribute before opening that URL. If you specify Post, the form data 
is sent through an HTTP post transaction. In both cases, the form data is sent as a 
series of name=value pairs, where name is the name of a form element (such as 
&quot;Text1&quot; in the next example), and value is either the value entered by the user or, if 
nothing is entered by the user, the value specified by the VALUE attribute. These 
name=value pairs are separated by ampersand characters (&amp;).</P>
<P>Let's take a look at a simple example. The following HTML code is for a 
form that contains one text box and a submit button. When the submit button is 
pressed, the program indicated by the METHOD attribute is executed.</P>
<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>&lt;FORM METHOD=&quot;GET&quot; ACTION=&quot;http://<I>yourserver.com</I>/DoSomething.asp&quot;
   ID=&quot;Form1&quot;&gt;
   &lt;INPUT TYPE=&quot;TEXT&quot; NAME=&quot;Text1&quot;&gt;
   &lt;INPUT TYPE=&quot;SUBMIT&quot;&gt;
&lt;/FORM&gt;
</PRE>
</td></tr></table></p>
<P>In this example, after I pressed the submit button, the value I entered into 
the text box was appended to the URL specified by the ACTION attribute before that 
URL was opened. For example, if I entered the text 
<I>Something</I> into the text box, the URL that would open is 
<I>http://</I>yourserver.com<I>/DoSomething.asp?Text1
=Something</I>.</P>

<P><DIV CLASS="NOTE"><BLOCKQUOTE><B>NOTE</B><HR>
Well, that concludes the introduction to HTML. For information 
about HTML tags not covered in this chapter, check out the MSDN Online Web 
Workshop 
<I>(<a href="http://msdn.microsoft.com/workshop" target="_window2">http://msdn.microsoft.com/workshop</a>)</I> or study one of the many 
great Microsoft Press books on the topic, such as 
<I>HTML in Action</I>,<I> </I>by Bruce Morris (1996), and 
<I>Dynamic HTML Reference and Software Development Kit: 
Comprehensive Reference to DHTML for Microsoft Internet Explorer 
5</I>, by Microsoft Corporation (1999).
</BLOCKQUOTE></DIV></P>

</BODY>
</HTML>







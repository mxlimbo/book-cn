<HTML>
<head>
<link rel="STYLESHEET" type="text/css" href="Progie5.css">
<TITLE>Creating an HTA with a Client Area</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch04b.htm">[Previous]</A> <A HREF="ch04d.htm">[Next]</A><P>

<A NAME="117"><H1>Creating an HTA with a Client Area</H1></A>

<p>In a Windows application, you don't typically redraw the entire application 
window. You usually redraw only the client area of an application window. Redrawing 
the entire window means redrawing the menus, toolbars, and the status bar for 
the application. I mentioned earlier in this chapter that if you click on 
a hyperlink in an HTA, a new instance of Internet Explorer is created to navigate to the 
hyperlink. If you want the navigation to occur in your HTML Application, you can create a 
client area by using frames. (If you don't recall how to implement frames, 
refer to the discussion of the <I>frames </I>collection in <A HREF="ch02a.htm">Chapter 2</A>.) When you use frames, the client area can take up the entire HTA window or just a portion of it.</p>

<p>Because HTML Applications are considered trusted, they aren't subject to 
the same security restrictions as Web pages. For instance, when a Web page that is 
loaded into Internet Explorer contains frames, one frame can't access the DHTML 
Object Model of other frames if the frames aren't in the same domain. In other words, in 
Internet Explorer, frames that are in different domains aren't considered trusted. In 
HTML Applications, frames can be considered trusted, whether they are in the same or 
in different domains.</p>

<p>To specify that a frame is trusted, use the 
TRUSTED<I> </I>attribute of the &lt;FRAME&gt; or &lt;IFRAME&gt; tags. The value of the TRUSTED attribute is a Boolean and is 
<I>no </I>by default. If you set the value of TRUSTED to 
<I>yes</I>, Internet Explorer's normal security rules will not be applied to the frame. For a frame to be trusted, all parent 
frames must also be trusted.</p>


<p>
<div class="note"><blockquote><b>NOTE</b><hr>
An &lt;IFRAME&gt; element creates a sort of inline frame that can be 
inserted in a web page. By default the frame looks like a window within your Web 
page. For more information about &lt;IFRAME&gt; tags, refer to the MSDN Online 
Web Workshop.
</blockquote></div>
</p>


<p>To see how to create a client area in the HTA, let's develop a Web 
browser application named MyBrowser that allows you to navigate to Web pages in an 
IFRAME window. This HTA can have Back, Forward, and Go buttons just as Internet 
Explorer does. Figure 4-4 shows a running instance of MyBrowser.</p>


<p>
<A HREF="javascript:fullSize('F04ii04x.htm')"> <img src="images/F04ii04.JPG" width=404 height=265 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!-- caption --><B>Figure 4-4.</B> <i>MyBrowser.</i><!-- /caption -->
</p>


<p>The code for MyBrowser is shown in Listing 4-4. You can also find the 
code on the companion CD in the folder \Samples\Chap04.</p>


<p><B>Listing 4-4.</B></p>

<p><table cellpadding=5 width="95%"><TR><TD>
<A NAME="118"><H3>MyBrowsr.hta</H3></A>
<PRE>&lt;HTML&gt;
&lt;HEAD&gt;
   &lt;TITLE&gt;MyBrowser&lt;/TITLE&gt;
   &lt;HTA:APPLICATION
      ID=&quot;oHTA&quot;
      ICON=&quot;MyBrowser.ico&quot;
   &gt;
 
   &lt;SCRIPT LANGUAGE=&quot;VBScript&quot;&gt;
      Option Explicit

      Sub btnGo_onclick
         Dim strAddr

         strAddr = txtAddress.value

         If InStr(1, strAddr, &quot;://&quot;) = 0 Then
            strAddr = &quot;http://&quot; &amp; strAddr
         End If

         frmClient.document.location.href = strAddr
      End Sub

      Sub btnBack_onclick
         frmClient.history.back
      End Sub

      Sub btnFwd_onclick
         frmClient.history.forward
      End Sub
   &lt;/SCRIPT&gt;
&lt;/HEAD&gt;
&lt;BODY scroll=&quot;no&quot;&gt;
   &lt;B&gt;Address:&lt;/B&gt;
   &lt;INPUT TYPE=&quot;Text&quot; ID=&quot;txtAddress&quot;&gt;&amp;nbsp;
   &lt;INPUT TYPE=&quot;Submit&quot; ID=&quot;btnGo&quot; VALUE=&quot;Go&quot;&gt;
   &lt;BUTTON ID=&quot;btnBack&quot; STYLE=&quot;position:relative;left:50px&quot;&gt;
       &amp;lt; Back&lt;/BUTTON&gt;&amp;nbsp;
   &lt;BUTTON ID=&quot;btnFwd&quot; STYLE=&quot;position:relative;left:50px&quot;&gt;
      Forward &amp;gt;&lt;/BUTTON&gt;
   &lt;P&gt;
   &lt;IFRAME ID=&quot;frmClient&quot;
      TRUSTED=&quot;yes&quot;
      SRC=&quot;http://www.microsoft.com&quot;
      WIDTH=&quot;100%&quot;
      HEIGHT=&quot;90%&quot;
   &gt;
   &lt;/IFRAME&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;
</PRE>
</td></tr></table></p>

<p>In the MyBrowser<I> </I>example, you can type a URL in the text box and 
navigate to the URL by pressing the Enter key or by clicking the Go button. (The Go 
button is a Submit button.) When the Enter key is pressed or the Go button is clicked, 
the <I>btnGo_onclick </I>event handler is called. In this event handler, if the user didn't 
supply the Internet protocol type (in other words, HTTP, FILE, and so on), the 
MyBrowser application assumes that the user wanted the HTTP protocol and prepends the 
string &quot;http://&quot; to the value that was entered in the text box. Then the MyBrowser 
application navigates to the new Web page by changing the 
<I>href </I>property of the <I>location</I> object for the frame.</p>

<p>To obtain the <I>location </I>object, you use the 
<I>location </I>property of the <I>document</I> object. You can obtain the 
<I>document</I> object by referencing the <I>document 
</I>property of <I>frmClient</I>. Remember that if you supply an ID for an HTML element, you 
can reference that element by name in script. Because frame objects are really 
<I>window </I>objects, you can access the <I>document 
</I>object of the frame by using the window's <I>document 
</I>property.</p>

<p>You can also navigate backward and forward in the navigation history just 
as you can with Internet Explorer. When you click either the Back button or the 
Forward button, a corresponding event handler is called. In either event handler, 
the <I>history </I>object is obtained from the frame window. Then either the 
<I>back </I>or the <I>forward </I>method of the 
<I>history </I>object is called to navigate backward or forward in 
the history list.</p>

</BODY>
</HTML>






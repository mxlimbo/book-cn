<HTML>
<head>
<link rel="STYLESHEET" type="text/css" href="Progie5.css">
<TITLE>IDocHostShowUI</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch09d.htm">[Previous]</A> <A HREF="ch09f.htm">[Next]</A><P>

<A NAME="224"><H1><I>IDocHostShowUI</I></H1></A>
<p><I>IDocHostShowUI</I>, another advanced hosting interface that a WebBrowser hosting 
application can implement, allows you to manage message boxes and help for 
the WebBrowser control. When the WebBrowser control needs to display a message 
box, MSHTML calls the <I>ShowMessage </I>method of your 
<I>IDocHostShowUI</I> implementation. You can turn off the message box by returning 
<I>S_OK</I>. (Or leave it alone by returning 
<I>S_FALSE</I>.)</p>

<p>The <I>ShowMessage </I>method's input parameters include information about 
the message that you can use when displaying your own message. For instance, 
maybe the WebBrowser control is displaying a confusing message to your users. You 
can trap this confusing message in the 
<I>ShowMessage</I> method, and then display a 
different message that pertains to your users. Table 9-4 describes the input parameters 
of the <I>ShowMessage</I> method.</p>

<p><b>Table 9-4.</b> <i>Input Parameters of the </I>ShowMessage<I> Method</i></p>

<p>
<table valign="top" cellpadding="5" width="95%">
<tr>
<th><i>Parameter</i></th>
<th><i>Description</i></th>
</tr>

<tr>
<td valign="top"><I>hwnd</I></td>
<td valign="top">Handle to the owner window.</td>
</tr>

<tr>
<td valign="top"><I>lpstrText</I></td>
<td valign="top">Text for the message box.</td>
</tr>

<tr>
<td valign="top"><I>lpstrCaption</I></td>
<td valign="top">Caption for the message box.</td>
</tr>

<tr>
<td valign="top"><I>dwType</I></td>
<td valign="top">Type flags. These flags correspond to the constants 
for the Win32 API's <I>MessageBox </I>function.</td>
</tr>

<tr>
<td valign="top"><I>lpstrHelpFile</I></td>
<td valign="top">Name of a help file associated with this message.</td>
</tr>

<tr>
<td valign="top"><I>dwHelpContext</I></td>
<td valign="top">Help context identifier.</td>
</tr>

<tr>
<td valign="top"><I>plResult</I></td>
<td valign="top">Button clicked by the user. The allowable values for 
this parameter are taken from the Win32 API's 
<I>MessageBox </I>function. If you show your own message box, set 
this parameter to the return value of the <I>MessageBox 
</I>function.</td>
</tr>
</table>
</p>

<p><I>IDocHostShowUI</I> also gives you control over help that the WebBrowser 
control displays. For instance, when the user presses the F1 key, MSHTML calls your 
implementation of <I>IDocHostShowUI::ShowHelp</I>. Again, you can turn off the 
WebBrowser's help by returning <I>S_OK</I> and display your own help instead of MSHTML's default 
help. (Or you can allow the default help to be displayed by returning 
<I>S_FALSE</I>.)</p>

<p>The AtlBrowser example that we looked at earlier in this chapter contains 
a menu item on the UI Control menu called Use AtlBrowser Help. When you select 
this menu item, you are effectively telling AtlBrowser to show its own help and 
return <I>S_OK</I> from the <I>ShowHelp </I>method.</p>

<p>Try running AtlBrowser<I> </I>and pressing the F1 key. When you do, MSHTML 
queries AtlBrowser for <I>IDocHostShowUI </I>and calls 
<I>ShowHelp</I>. If the Use AtlBrowser Help menu item is selected, AtlBrowser displays its About dialog box and returns 
<I>S_OK</I>. If this menu item isn't selected, 
AtlBrowser<I> </I>returns <I>S_FALSE</I> to allow MSHTML 
to display its own help.</p>

<p>Here's the implementation of <I>ShowHelp</I> in the 
<I>CAtlBrCon </I>class:</p>

<p><table cellpadding=5 width="95%"><TR><TD>
<PRE>STDMETHOD(ShowHelp)(HWND hwnd, LPOLESTR pszHelpFile, UINT uCommand,
                    DWORD dwData, POINT ptMouse,
                    IDispatch *pDispatchObjectHit)
{
   ATLTRACE(_T(&quot;IDocHostShowUI::ShowHelp\n&quot;));

   if (m_bAtlBrowserHelp)
   {
      CAboutBox dlg(m_hWnd);
      dlg.DoModal();
      return S_OK;
   }

   return S_FALSE;
}
</PRE>
</td></tr></table></p>

</BODY>
</HTML>






<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="basicIE4.css" TYPE="text/css">
<TITLE>Conclusion</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY>
<A NAME="763"><H1>Conclusion</H1></A>
<P>ActiveX Controls are one of the most widely used applications of COM in 
the real world today. To summarize, ActiveX controls are just COM objects 
that happen to implement a number of standard interfaces that environments 
like Visual C++ and Visual Basic understand how to use. These interfaces deal 
with rendering, persistence, and events, allowing you to drop these components 
into the aforementioned programming environments and use them right away.
<P>In the past, MFC was the only practical way to implement ActiveX 
Controls. However, these days ATL provides a reasonable way of 
implementing ActiveX Controls, provided you're willing to follow ATL's rules. For 
example, if you buy into the ATL architecture for writing controls, you'll have to dip 
down into Windows and start working with window handles and device 
context handles in their raw forms. However, the tradeoff is often worthwhile, 
because ATL provides more flexibility when developing ActiveX controls. 
For example, dual interfaces are free when using ATL, whereas they're a real 
pain to implement in MFC.
</BODY>
</HTML>




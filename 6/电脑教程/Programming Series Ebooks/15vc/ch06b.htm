<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="basicIE4.css" TYPE="text/css">
<TITLE>Modal vs. Modeless Dialogs</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY>
<A NAME="131"><H1>Modal vs. Modeless Dialogs</H1></A><P>The <I>CDialog</I> base class supports both modal and modeless dialogs. With a modal dialog, such as the Open File dialog, the user cannot work elsewhere in the same application (more correctly, in the same user interface thread) until the dialog is closed. With a modeless dialog, the user can work in another window in the application while the dialog remains on the screen. Microsoft Word's Find and Replace dialog is a good example of a modeless dialog; you can edit your document while the dialog is open.
<P>Your choice of a modal or a modeless dialog depends on the application. Modal dialogs are much easier to program, which might influence your decision.<P>
<DIV CLASS=note>
<BLOCKQUOTE>
<B>FYI</B><P>
The 16-bit versions of Windows support a special kind of modal dialog called a <U>system</U> <U>modal</U> <U>dialog</U>, which prevents the user from switching to another application. Win32 also supports system modal dialogs but with weird results: the user can switch to another application, but the dialog remains as the top window. You probably don't want to use system modal dialogs in Win32 applications.
</BLOCKQUOTE></DIV>
<P>
</BODY>
</HTML>




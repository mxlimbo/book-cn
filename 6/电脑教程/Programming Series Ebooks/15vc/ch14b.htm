<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="basicIE4.css" TYPE="text/css">
<TITLE>Control Bars and the Application Framework</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY>
<A NAME="278"><H1>Control Bars and the Application Framework</H1></A>
<P>The toolbar is an object of class <I>CToolBar</I>, and the status bar is an object of class <I>CStatusBar</I>. Both these classes are derived from class <I>CControlBar</I>, which is itself derived from <I>CWnd</I>. The <I>CControlBar</I> class supports control bar windows that are positioned inside frame windows. These control bar windows resize and reposition themselves as the parent frame moves and changes size. The application framework takes care of the construction, window creation, and destruction of the control bar objects. AppWizard generates control bar code for its derived frame class located in the files MainFrm.cpp and MainFrm.h.
<P>In a typical SDI application, a <I>CToolBar</I> object occupies the top portion of the <I>CMainFrame</I> client area and a <I>CStatusBar</I> object occupies the bottom portion. The view occupies the remaining (middle) part of the frame.
<P>Beginning with Microsoft Foundation Class (MFC) Library version 4.0, the toolbar has been built around the toolbar common control that first became available with Microsoft Windows 95. Thus the toolbar is fully dockable. The programming interface is much the same as it was in earlier versions of the MFC library, however. The button images are easy to work with because a special resource type is supported by the resource editor. The old global <I>buttons</I> array is gone.
<P>Assuming that AppWizard has generated the control bar code for your application, the user can enable and disable the toolbar and the status bar 
individually by choosing commands from the application's View menu. When a control bar is disabled, it disappears and the view size is recalculated. Apart 
from the common behavior just described, toolbar and status bar objects operate independently of each other and have rather different characteristics.
<P>In Visual C++ 6.0, a new MFC toolbar was introduced called the <U>rebar</U>. The rebar is based on the controls that come as part of Microsoft Internet Explorer 4.0 and provides a Microsoft Internet Explorer-style &quot;sliding&quot; toolbar. We will cover this later in this chapter.
</BODY>
</HTML>





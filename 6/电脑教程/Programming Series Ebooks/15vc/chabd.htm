<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="basicIE4.css" TYPE="text/css">
<TITLE>Dynamic Creation</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY>
<A NAME="1003"><H1>Dynamic Creation</H1></A><P>You've already learned that the <I>DECLARE</I> and 
<I>IMPLEMENT</I> macros add a static <I>CRuntimeClass</I> object to a class. If you use the 
<I>DECLARE_DYNCREATE</I> or <I>DECLARE_SERIAL</I> macro (and the corresponding 
<I>IMPLEMENT</I> macro), you get an additional static member function 
<I>CreateObject</I> (distinct from 
<I>CRuntimeClass::CreateObject</I>) in your class. Here's an example:
<P><PRE>CObject* CMyClass::CreateObject()
{
    return new CMyClass;
}</PRE>
<P>Obviously, <I>CMyClass</I> needs a default constructor. This constructor is 
declared protected in wizard-generated classes that support dynamic creation.
<P>Now look at the code for the 
<I>CRuntimeClass::CreateObject</I> function:
<P><PRE>CObject* CRuntimeClass::CreateObject()
{
    return (*m_pfnCreateObject)();
}</PRE>
<P>This function makes an indirect call to the 
<I>CreateObject</I> function in the target class. Here's how you would dynamically construct an object of 
class <I>CMyClass</I>:
<P><PRE>CRuntimeClass* pRTC = RUNTIME_CLASS(CMyObject);
CMyClass* pMyObject = (CMyClass*)pRTC-&gt;CreateObject();</PRE>
<P>Now you know how document templates work. A document 
template object has three <I>CRuntimeClass*</I> data members initialized at construction 
to point to the static <I>CRuntimeClass</I> data members for the document, frame, 
and view classes. When <I>CWinApp::OnFileNew</I> is called, the framework calls 
the <I>CreateObject</I> functions for the three stored pointers.
</BODY>
</HTML>




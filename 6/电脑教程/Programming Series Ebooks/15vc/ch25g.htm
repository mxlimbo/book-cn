<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="basicIE4.css" TYPE="text/css">
<TITLE>The IDispatch Interface</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY>
<A NAME="531"><H1><B>The <I>IDispatch</I> Interface</B></H1></A>
<P><I>IDispatch</I> is the heart of Automation. It's fully supported by COM marshaling (that is, Microsoft has already marshaled it for you), as are all the other standard COM interfaces, and it's supported well by the MFC library. At the component end, you need a COM class with an <I>IDispatch</I> interface (plus the prerequisite class factory, of course). At the client end, you use standard 
COM techniques to obtain an <I>IDispatch</I> pointer. (As you'll see, the MFC library and the wizards take care of a lot of these details for you.)

<P>Remember that <I>Invoke</I> is the principal member function of <I>IDispatch</I>. If you looked up 
<I>IDispatch::Invoke</I> in the Visual C++ online documentation, you'd see a really ugly set of parameters. Don't worry about those now. The MFC library steps in on both sides of the <I>Invoke</I> call, using a data-driven scheme to call component functions based on dispatch map parameters that you define with macros.

<P><I>Invoke</I> isn't the only <I>IDispatch </I>member function. Another function your controller might call is <I>GetIDsOfNames</I>. From the VBA programmer's point of view, properties and methods have symbolic names, but C++ programmers prefer more efficient integer indexes. <I>Invoke</I> uses integers to specify properties and methods, so <I>GetIDsOfNames</I> is useful at the start of a program for converting each name to a number if you don't know the index numbers at compile time. You've already seen that <I>IDispatch</I> supports symbolic names for methods. In addition, the interface supports symbolic names for a method's parameters. The <I>GetIDsOfNames</I> function returns those parameter names along with the method name. Unfortunately, the MFC <I>IDispatch</I> implementation doesn't support named parameters.

</BODY>
</HTML>




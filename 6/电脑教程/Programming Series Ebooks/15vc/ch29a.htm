<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="basicIE4.css" TYPE="text/css">
<TITLE>Chapter Twenty-Nine -- Introducing the Active Template Library</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY>

<font size="+3">Chapter Twenty-Nine</font>
<A NAME="696"><H1>Introducing the Active Template Library</H1></A><P>In this chapter, you'll take a look at the second framework (MFC being the 
first) now included within Microsoft Visual C++&#151;the Active Template 
Library (ATL). You'll start by quickly revisiting the Component Object Model 
(COM) and looking at an alternative method of writing <A HREF="ch24a.htm">Chapter 24</A>'s 
<I>CSpaceship</I> object, illustrating that there is more than one way to write a COM class. (This 
will become important as you examine ATL's class composition methods.) 
Next you'll investigate the Active Template Library, focusing first on 
C++ templates and raw C++ smart pointers and how they might be useful in COM 
development. You'll cover the client side of ATL programming and examine some 
of ATL's smart pointers. Finally you'll check out the server side of ATL 
programming, reimplementing the <A HREF="ch24a.htm">Chapter 24</A> spaceship example using ATL to get a 
feel for ATL's architecture.
</BODY>
</HTML>




<html>
<head>
<title>Questions That Should Be Asked More Frequently</title>
<LINK REL=STYLESHEET HREF="progado.css" TYPE="text/css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<BODY bgcolor="#ffffff" text="#000000">
<A HREF="ch07f.htm">[Previous]</A> <A HREF="ch08a.htm">[Next]</A><P>

<A NAME="263"><H1>Questions That Should Be Asked More Frequently</H1></A>

<p><b>Q. <i>What type of cursor should I use?</i></b></p>

<p><b>A. </b>Whatever is appropriate in your application.</p>

<p>In most cases, what's appropriate is what will perform well with
large numbers of simultaneous users. The simplest advice I provide to
customers is to use client-side cursors because of the functionality
they provide and because they don't put undue stress on the
database system.</p>

<p><b>Q. <i>Why shouldn't I use the dynamic cursors? They seem to provide the most functionality, and I like functionality.</i></b></p>

<p><b>A. </b>You pay for the functionality you get.</p>

<p>With forward-only cursors, you're asking the database system to
provide minimal functionality. If you want to scroll back and forth
through your data, you need to store it on your own or in the ADO
Cursor Engine. The more functionality you ask your database server to
provide in the cursor, the more work it needs to perform. Remember that
every time ADO asks for more data to fill its cache, the query
processor reexamines the tables referenced by the query, determines
which records satisfy the query criteria, and then generates the
requested records in the cursor. Sure, a dynamic cursor provides more
functionality, but there's a heavy price to pay for that
functionality.</p>
</BODY>
</html>







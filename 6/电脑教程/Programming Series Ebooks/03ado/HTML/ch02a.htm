<html>
<head>
<title>Chapter 2 -- A Brief Overview of the ADO Object Model</title>
<link rel="STYLESHEET" type="text/css" href="progado.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>

<BODY bgcolor="#ffffff" text="#000000">
<A HREF="ch01d.htm">[Previous]</A> <A HREF="ch02b.htm">[Next]</A><P>


<font size="+3">Chapter 2</font>

<A NAME="11"><H1>A Brief Overview of the ADO Object Model</H1></A>

<p>Those of you familiar with the Data Access Objects (DAO) and Remote
Data Objects (RDO) object models might find the ADO object model
somewhat of a departure. For example, ADO allows you to retrieve data
from a database into a Recordset object without having to create a
Connection object or any other object variables. You can create most of
ADO's objects on their own without calling a function on another
object to generate them.</p>

<p>ADO's creatable objects provide developers with a great deal of
flexibility in how they build their applications; nevertheless,
creatable objects can present a challenge to someone learning to use
ADO. A developer who provides code in a magazine or Web site article to
illustrate how he used ADO in his application doesn't usually
explain why he chose to implement his solution that way. As a result,
the reader of that article only picks up a small piece of the
puzzle.</p>

<p>This chapter will briefly cover the three main ADO
objects&#8212;Connection, Command, and Recordset&#8212;treating them
initially as a hierarchy to show how they relate to each other. (See
Figure 2-1.) Then we'll talk about how to avoid using the object
hierarchy, and when it's appropriate to do so. (In subsequent
chapters, we'll take a closer look at each of these objects and discuss ADO's use of
dynamic properties.) After that, we'll explain the different ways
you can create a disconnected recordset&#8212;one that is not connected
to any database. Finally, we'll discuss ADO 2.5's additions to
the object model: the Record object and the Stream object.</p>

<p>
<A HREF="javascript:fullSize('F02no01x.htm')"> <img src="images/F02no01.JPG" width=404 height=332 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 2-1</b> <i>The ADO object model.</i><!-- /caption -->
</p>


</BODY>
</HTML>







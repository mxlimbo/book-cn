<html>
<head>
<TITLE>Disconnected Recordsets</title>
<link rel="STYLESHEET" type="text/css" href="progado.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<BODY bgcolor = "#ffffff" text="#000000">
<A HREF="ch09d.htm">[Previous]</A> <A HREF="ch09f.htm">[Next]</A><P>

<A NAME="283"><H1>Disconnected Recordsets</H1></A>

<p>What do you need to consider when you communicate with your database
infrequently? For example, let's say that when your application
starts up you want to retrieve data from your database but that you
might not need to communicate with the database again during the
lifetime of your application.</p>

<p>You might not want to keep a connection to your database open during
long stretches of time when you're not actively using it. When
using the ADO Cursor Engine, you can simply set the ActiveConnection
property on your Recordset object to Nothing, and then close your
Connection object and still have access to the data in your Recordset
object. In fact, you can use the Cursor Engine's batch updating
functionality and modify the contents of your Recordset object without
a live connection to your database. You can later reopen your
Connection object, reset the ActiveConnection property on the Recordset
object, and call the object's <i>UpdateBatch</i> method to submit
the changes to your database. This process is demonstrated in the
following code:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>
strSQL = &quot;SELECT CustomerID, CustomerName, BalanceDue FROM Customers&quot;
rsCustomers.CursorLocation = adUseClient
rsCustomers.Open strSQL, cnDatabase, adOpenStatic, adLockBatchOptimistic
Set rsCustomers.ActiveConnection = Nothing
cnDatabase.Close
<img src="images/grayvellip.JPG" width=3 height=13 border=0>

'Modify your Recordset object while it's off line.
<img src="images/grayvellip.JPG" width=3 height=13 border=0>
'Reconnect to the database.
cnDatabase.Open
Set rsCustomers.ActiveConnection = cnDatabase
rsCustomers.UpdateBatch
</pre>
</td></tr></table>
</p>

<p>It's that easy. We won't discuss this feature, per se, in
later chapters. However, we will talk about ways to use it more
effectively in the chapters on updating your database with the ADO
Cursor Engine (<A HREF="ch10a.htm">Chapter 10</A>), handling optimistic updating conflicts
(<A HREF="ch12a.htm">Chapter 12</A>), and persisting your Recordset (<A HREF="ch13a.htm">Chapter 13</A>).</p>

</BODY>
</HTML>







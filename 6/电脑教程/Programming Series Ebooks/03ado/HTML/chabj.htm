<HTML>
<HEAD>
<TITLE>Replication</title>
<link rel="STYLESHEET" type="text/css" href="progado.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<BODY bgcolor="#ffffff" text="#000000">
<A HREF="chabi.htm">[Previous]</A> <A HREF="bioa.htm">[Next]</A><P>

<h1>Replication</h1>

<p>The Replication sample is designed to serve as an introduction to
using the replication and synchronization features of Jet and
Replication Objects (JRO), discussed in <a href="chaaa.htm">Appendix A</a>. This sample creates
three new Access 2000 databases in the sample code's directory:
Master.mdb, Replica.mdb, and Partial.mdb. The first database acts as
the master database in the replication topology. The second database
represents a full replica, and the third represents a partial
replica.</p>

<p>The first step is to create and populate the master database. The
sample code uses ADOX to create a table that will participate in
replication, and then uses ADO to insert three rows into the table
before marking the database as replicable. You might not want all the
tables in your database to participate in replication, so the sample
also creates a table named Local, which it marks as nonreplicable.</p>

<p>The sample then uses the master database to create the new full and
partial replica databases. Once that's done, the code connects to
the partial replica database and sets up a filter to determine which
data from the master database gets replicated to the partial
replica.</p>

<p>To demonstrate JRO's synchronization features, the sample
modifies two rows in both the master and the full replica, and then
synchronizes both databases. Note that there's an overlap&#8212;one
row (CustomerID = 3) is modified in both databases. This will cause a
conflict when the databases are synchronized.</p>

<p>After synchronizing these two databases, the sample code checks for
conflicts. If conflicts occurred, the code displays a dialog box asking
whether you want to resolve the conflicts. Jet stores information about
conflicts in special system tables. If you indicate that you want to
resolve the conflicts programmatically, the code loops through these
system tables and deletes their contents.</p>

<p>Although this doesn't realistically constitute resolving the
conflicts, the Jet engine assumes that if you clear the contents of
these tables, you've resolved the conflicts. If you tell the sample
that you don't want to resolve the conflicts programmatically, the
next time you open the databases in Access 2000, Access will display
dialog boxes indicating that conflicts occurred.</p>

<p>As I explained in the &quot;<a href="chaad.htm#459">Questions That Should Be Asked More
Frequently</a>&quot; section of Appendix A, resolving conflicts is not
easy. Actually, I intentionally based the Replication sample on a
scenario I felt was a common but unwise one. If at all possible, you
should avoid using replication in scenarios where such conflicts
occur.</p>
</body>
</html>






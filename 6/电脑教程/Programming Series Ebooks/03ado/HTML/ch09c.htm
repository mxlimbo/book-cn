<html>
<head>
<TITLE>Updates: Simple and Batched</title>
<link rel="STYLESHEET" type="text/css" href="progado.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<BODY bgcolor = "#ffffff" text="#000000">
<A HREF="ch09b.htm">[Previous]</A> <A HREF="ch09d.htm">[Next]</A><P>

<A NAME="281"><H1>Updates: Simple and Batched</H1></A>

<p>Of course, the ADO Cursor Engine wouldn't be widely accepted
unless you could use it to update the data in your database. You can
update your database by simply modifying the appropriate field in the
recordset and calling the Recordset object's <i>Update</i> method,
as follows:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>
strSQL = &quot;SELECT CustomerID, CustomerName, BalanceDue FROM Customers&quot;
rsCustomers.CursorLocation = adUseClient
rsCustomers.Open strSQL, cnDatabase, adOpenStatic, adLockOptimistic
rsCustomers.Fields(&quot;BalanceDue&quot;) = rsCustomers.Fields(&quot;BalanceDue&quot;) + 50
rsCustomers.Update
</pre>
</td></tr></table>
</p>

<p>The ADO Cursor Engine also includes the ability to cache updates you
make to your Recordset object and send them to your database in a batch
at a later time by calling the <i>UpdateBatch</i> method. You'll
notice that the previous code used the adLockOptimistic constant in the
call to the Recordset's <i>Open</i> method. The following code uses
adLockBatchOptimistic in the call to <i>Open</i> so the database
isn't updated until <i>UpdateBatch</i> is called. For more
information, see the &quot;<A HREF="ch04b.htm#96">LockType Property</A>&quot; section in Chapter
4.</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>
strSQL = &quot;SELECT CustomerID, CustomerName, BalanceDue FROM Customers&quot;
rsCustomers.CursorLocation = adUseClient
rsCustomers.Open strSQL, cnDatabase, adOpenStatic, adLockBatchOptimistic
rsCustomers.Fields(&quot;BalanceDue&quot;) = rsCustomers.Fields(&quot;BalanceDue&quot;) + 50
rsCustomers.Update
rsCustomers.MoveNext
rsCustomers.Fields(&quot;BalanceDue&quot;) = _
                   rsCustomers.Fields(&quot;BalanceDue&quot;) + 125
rsCustomers.Update
rsCustomers.UpdateBatch
</pre>
</td></tr></table>
</p>

<p>In <A HREF="ch10a.htm">Chapter 10</A>, you'll see in much greater detail how ADO updates
the data in your database.</p>

</BODY>
</HTML>







<html>
<head>
<title>Questions That Should Be Asked More Frequently</title>
<LINK REL=STYLESHEET HREF="progado.css" TYPE="text/css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<BODY bgcolor="#ffffff" text="#000000">
<A HREF="ch14e.htm">[Previous]</A> <A HREF="ch15a.htm">[Next]</A><P>

<A NAME="384"><H1>Questions That Should Be Asked More Frequently</H1></A>

<p><b>Q.<i> How does the StayInSync property on the Recordset object
work? I can never make it work the way I want.</i></b> </p>

<p><b>A.</b> The StayInSync property controls whether a reference to a child
level of a hierarchy will remain synchronized with the current position
of its parent level. Say you open a customers and orders hierarchy with
the customer data as the parent and obtain a reference to the orders
level of the hierarchy. By default, as you navigate through the
customer data, the orders Recordset object variable will always contain
the orders for the current customer. Suppose you want to reference
orders for a customer without the contents of the orders object
variable changing when you move to another customer. You can set the
StayInSync property on the customers Recordset to False before
obtaining a reference to the orders level of the hierarchy, as shown
here:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>
rsCustomers.Open strHierarchicalQuery, cnDatabase, adOpenStatic, _
                 adLockReadOnly, adCmdText
rsCustomers.StayInSync = False
Set rsOrders = rsCustomers.Fields(&quot;Orders&quot;).Value
</pre>
</td></tr></table>
</p>

<p>For more information on the Recordset's StayInSync property, see
<A HREF="ch04a.htm">Chapter 4</A>.</p>

<p><b>Q.<i> I want to base the relationship
of a hierarchy on an auto-incrementing field, but I'm having
problems when adding new records to the parent and child. What should I
do?</i></b> </p>

<p><b>A.</b> This is a fairly common question, so I created a sample
named Identity In Hierarchy to address it. The sample uses the Orders
and Order Details tables in the SQL Server Northwind database. You can
view this sample on the companion CD and learn more about it in
<a href="chaba.htm">Appendix B</a>.</p>

<p><b>Q.<i> When programming in Visual
Basic, do I need to use the Value property on the Field object when
referencing a child level of a hierarchical Recordset?</i></b> </p>

<p><b>A.</b> Yes. The following code makes use of the fact that the
default property on the Field object is the Value property. The Value
property on the CompanyName Field object will be stored in the <i>
strCompanyName</i> string variable:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>
Dim strCompanyName As String
strCompanyName = rsCustomers.Fields(&quot;CompanyName&quot;)
</pre>
</td></tr></table>
</p>

<p>The following code, however, will fail with a type mismatch
error:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>
Dim rsOrders As ADODB.Recordset
Set rsOrders = rsCustomers.Fields(&quot;CompanyName&quot;)
</pre>
</td></tr></table>
</p>

<p>Why? Using the Set keyword means you want to reference an object, so
this code will actually try to set a Recordset object variable to a
Field object. Thus, you need to write your code as shown here:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>
Dim rsOrders As ADODB.Recordset
Set rsOrders = rsCustomers.Fields(&quot;CompanyName&quot;).Value
</pre>
</td></tr></table>
</p>
</BODY>
</html>








<html>
<head>
<TITLE>RDS Handlers</title>
<link rel="STYLESHEET" type="text/css" href="progado.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<BODY bgcolor = "#ffffff" text="#000000">
<A HREF="ch16e.htm">[Previous]</A> <A HREF="ch16g.htm">[Next]</A><P>

<A NAME="437"><H1>RDS Handlers</H1></A>

<p>Now that you've seen what RDS has to offer, you might be a
little nervous about security. With the DataControl or DataFactory
object, a user could access your database by simply submitting any
connection string and any query string. If that doesn't scare you,
consider the queries that a user could submit:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>
SELECT * FROM Employees
UPDATE Employees SET Salary = 1000000 WHERE EmployeeID = 42275
DELETE FROM Employees WHERE EmployeeID = 1
DROP TABLE Employees
DROP DATABASE MyBusiness
</pre>
</td></tr></table>
</p>

<p>Now do you care?</p>

<p><div class="note"><blockquote><b>NOTE</b><hr>Of course, you don't have to worry about queries
like these because you've set up a secure database. A user could
never submit queries like these unless he or she had the appropriate
privileges, right?</blockquote></div>
</p>

<p>To help tighten the security of your RDS applications, you can use a
handler. RDS includes a simple handler in the form of an .ini file that
lets you control access to connections, queries, and logging errors.
This file is MSDFMap.ini, and its contents might look something like
this:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>
[connect default]
;Do not allow access to connections that don't have an entry in the
; handler.
Access=NoAccess

[connect CustomerDatabase]
;Allow read/write access to the customer database
; by substituting the connection string below.
Access=ReadWrite
Connect=&quot;Provider=SQLOLEDB;Data Source=ScepHome;  &#140;
Initial Catalog=Northwind;User ID=RDSUser;Password=RDSPassword;&quot;

[sql default]
;Do not allow access to queries that don't have an entry in the handler
; by supplying any invalid query.
sql=&quot;InvalidQuery&quot;

[sql GetAllCustomers]
;Allow access to the customer table with the query below.
sql=&quot;SELECT * FROM Customers&quot;

[sql GetACustomer]
;Allow access to the customer table with the parameterized query below.
sql=&quot;SELECT * FROM Customers WHERE CustomerID = ?&quot;
</pre>
</td></tr></table>
</p>

<p><div class="note"><blockquote><b>NOTE</b><hr>There's more information on the options available
for the MSDFMap.ini file in the Data Access Services portion of the
Platform SDK. Look for the topic &quot;Understanding the Customization
File.&quot;</blockquote></div>
</p>

<p>If you use this handler with your RDS code, you must supply a
connection string and query string from the lists in the file
(CustomerDatabase, GetAllCustomers, and so on). To retrieve a specific
customer with RDS and this handler, use this code:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>
With DataControl
    .Server = &quot;http://MyServer&quot;
    .Handler = &quot;MSDFMap.Handler&quot;
    .Connect = &quot;CustomerDatabase&quot;
    .SQL = &quot;GetACustomer('ALFKI')&quot;
    .Refresh
End With
</pre>
</td></tr></table>
</p>

<p>Notice that you're using a parameterized query and treating it
almost the same way you would a function by supplying the
customer's name&#8212;including the string delimiter&#8212;as a
parameter to that function.</p>

<p>The Data Access portion of the Platform SDK covers RDS handlers at
length. You'll find documentation on which features are available
in the connect, sql, userlist, and logs sections of the DataFactory
handler (also called a customization file). The SDK also shows how you
can build your own customized handler objects in Visual Basic and
Visual C++.</p>

<p>If you plan to use a handler other than the MSDFMap.ini file, be
sure that you check the SDK to see how to mark the handler as
&quot;safe for scripting&quot; to ensure secure Internet access.</p>

<p>If you want to force all RDS code to use a handler in order to prevent
users from running any query against any database, you can place the
following entry in the specified key in the Microsoft Windows Registry
for your IIS server:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>
HandlerRequired=1
HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\DataFactory\HandlerInfo
</pre>
</td></tr></table>
</p>

<p>In fact, to tighten security, Windows 2000 automatically places this
entry in the Registry when you install it. This means that by default,
you cannot use the RDS DataControl or RDSServer DataFactory object with
Windows 2000 without specifying a handler. You can manually change the
Registry key to HandlerRequired=0 in order to remove this
restriction.</p>

<p>Installing MDAC 2.5 on a machine running Microsoft Windows NT 4 will
not impose this restriction.</p>

</BODY>
</HTML>







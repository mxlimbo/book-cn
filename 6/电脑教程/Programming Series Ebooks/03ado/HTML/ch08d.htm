<html>
<head>
<title>Questions That Should Be Asked More Frequently</title>
<LINK REL=STYLESHEET HREF="progado.css" TYPE="text/css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<BODY bgcolor="#ffffff" text="#000000">
<A HREF="ch08c.htm">[Previous]</A> <A HREF="ch09a.htm">[Next]</A><P>

<A NAME="275"><H1>Questions That Should Be Asked More Frequently</H1></A>

<p><b>Q. <i>So what's the best way for me to
update my database? Should I write all the code myself, or should I use
updatable Recordset objects throughout my application? Should I believe
the marketing hype, or should I believe the gurus who say that if you
want a job done right you must do it yourself?</i></b></p>

<p><b>A.</b> The simple answer is that there's no simple answer. You
can go to either extreme, or you can look for some middle ground. Keep
an open mind, and try a variety of techniques.</p>

<p>One recommendation: try new techniques, but give yourself time to
experiment with them. If you plan ahead and design your application
well, you might be able to move from one method to another. For
example, you could build an initial version of your application that
passes Recordset objects across process boundaries in a three-tiered
application and uses the ADO Cursor Engine to modify data in your
database. In later releases, you could use the Recordset objects to
interact with the user and store changes he makes. Then you could
examine those changes and call your own stored procedures to update the
database. You could later modify your components to use two-dimensional
arrays, Variants, or UDTs to store the results of queries and maintain
data. Almost anything is possible.</p>

<p>The more you experiment with the different ways to update your
database, the better equipped you'll be to decide what's right
for you. Think about what you need in functionality and performance.
Then figure out a way to determine whether a particular approach will
give you what you need.</p>

<p>In Part II of this book, we'll discuss features of the ADO
Cursor Engine. As you read about these features, you'll discover
what the ADO Cursor Engine has to offer&#8212;and you might decide to
use it in your applications. Or you might develop a clearer
understanding of how to implement similar features in your own
libraries.</p>
</BODY>
</html>








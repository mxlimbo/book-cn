<HTML>
<HEAD>
<TITLE>ODBC Connection Pooling</TITLE>
</HEAD>
<BODY BGCOLOR = "#ffffff">
<H1>ODBC Connection Pooling</H1>
<P>ODBC connection pooling is necessary for scaling sites. As stated earlier, 
IIS provides ODBC connection pooling automatically, based on a registry 
setting, but this pooling is not done when you call an out-of-process 
component&#151;you have to provide the pooling as a separate feature. Fortunately, MTS 
includes ODBC connection pooling for modified Visual Basic code that supports it.
<P>When creating Visual Basic applications, most developers don't 
concern themselves with ODBC connection pooling. Front-end components 
routinely open connections at the beginning of a session and leave them open until 
the application is terminated. Under MTS, ODBC connections are not opened 
by the front end or by the Web page but rather by the business object itself. 
Therefore, the ActiveX DLLs you create in Visual Basic must open a connection, 
read or write to the data source, and then close the connection. The Web page 
never accesses the database directly.
<P>You might wonder how the data could appear on the page if the Web 
page itself never has direct access to a recordset. A Web page calling MTS 
objects relies on the objects to return data from a data source in a predictable 
format. This format can be as simple as a delimited string or as complex as a 
collection of objects. In any case, the business object is responsible for 
selecting records from the database, packaging them, and returning them to ASP.
<P>As a simple example, Listing 10-1 shows the complete code for a 
Visual Basic business object that reads entries from a data source and returns 
them as a delimited string. The ASP page parses the returned string and places 
the entries in a &lt;SELECT&gt; tag. This is a typical technique for creating lookup lists.
<P>
<B>Listing 10-1.</b> <I>Returning a lookup list.</i>
<HR><BLOCKQUOTE>
<PRE WIDTH="0">
Public&#160;Function&#160;GetPublishers()&#160;As&#160;String
On&#160;Error&#160;GoTo&#160;GetPublishersErr
&#160;&#160;&#160;&#160;GetPublishers&#160;=&#160;&quot;&quot;

&#160;&#160;&#160;&#160;'&#160;Open&#160;connection
&#160;&#160;&#160;&#160;Dim&#160;objConnection&#160;As&#160;RDO.rdoConnection
&#160;&#160;&#160;&#160;Dim&#160;objResultset&#160;As&#160;RDO.rdoResultset
&#160;&#160;&#160;&#160;
&#160;&#160;&#160;&#160;Set&#160;objConnection&#160;=&#160;New&#160;RDO.rdoConnection
&#160;&#160;&#160;&#160;objConnection.Connect&#160;=&#160;&quot;DSN=Biblio&quot;
&#160;&#160;&#160;&#160;objConnection.EstablishConnection&#160;rdDriverNoPrompt,&#160;True
&#160;&#160;&#160;&#160;
&#160;&#160;&#160;&#160;'&#160;Run&#160;query
&#160;&#160;&#160;&#160;Set&#160;objResultset&#160;=&#160;objConnection.OpenResultset&#160;_
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(&quot;SELECT&#160;Name&#160;FROM&#160;Publishers&#160;ORDER&#160;BY&#160;Name&quot;)
&#160;&#160;&#160;&#160;
&#160;&#160;&#160;&#160;'&#160;Create&#160;return&#160;string
&#160;&#160;&#160;&#160;Dim&#160;strTemp&#160;As&#160;String
&#160;&#160;&#160;&#160;strTemp&#160;=&#160;&quot;&quot;
&#160;&#160;&#160;&#160;
&#160;&#160;&#160;&#160;Do&#160;While&#160;Not&#160;objResultset.EOF
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;strTemp&#160;=&#160;strTemp&#160;&amp;&#160;objResultset!Name&#160;&amp;&#160;&quot;|&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;objResultset.MoveNext
&#160;&#160;&#160;&#160;Loop

&#160;&#160;&#160;&#160;GetPublishers&#160;=&#160;strTemp

&#160;&#160;&#160;&#160;'&#160;Close&#160;connection
&#160;&#160;&#160;&#160;objResultset.Close
&#160;&#160;&#160;&#160;objConnection.Close
&#160;&#160;&#160;&#160;Set&#160;objResultset&#160;=&#160;Nothing
&#160;&#160;&#160;&#160;Set&#160;objConnection&#160;=&#160;Nothing
&#160;&#160;&#160;&#160;
GetPublishersExit:
&#160;&#160;&#160;&#160;Exit&#160;Function

GetPublishersErr:
&#160;&#160;&#160;&#160;GetPublishers&#160;=&#160;Err.Description
&#160;&#160;&#160;&#160;Resume&#160;GetPublishersExit
End&#160;Function
</PRE></blockquote><HR>
<P>In the example, the business object is an ActiveX DLL with one 
method, GetPublishers. The object uses Remote Data Objects (RDO) to access an 
ODBC data source created from the BIBLIO.MDB database that ships with 
Visual Basic. The component opens a connection to the data source and reads 
out all publisher names. The names are added to a string that is delimited by 
pipe characters (|). The component is compiled and placed in MTS Explorer. 
Note how the object opens a connection at the beginning of the function and 
closes the connection before returning the string of publishers. This coding style 
is required by MTS to allow ODBC connection pooling.
<P>The string is returned to an ASP page through a call to the business 
object. Listing 10-2 shows the complete Web page code for building a lookup list. 
The publishers are parsed and added as entries to a &lt;SELECT&gt; tag. Other 
applications, such as Visual Basic front ends, can use the same object to fill a 
lookup list as well.
<P><B>Listing 10-2.</b> <I>Building a lookup list.</i>
<HR><BLOCKQUOTE>
<PRE WIDTH="0">
&lt;%@&#160;LANGUAGE=&quot;VBSCRIPT&quot;&#160;%&gt;

&lt;HTML&gt;
&lt;HEAD&gt;
&lt;META&#160;NAME=&quot;GENERATOR&quot;&#160;Content=&quot;Microsoft&#160;Visual&#160;InterDev&#160;1.0&quot;&gt;
&lt;META&#160;HTTP-EQUIV=&quot;Content-Type&quot;&#160;content=&quot;text/html;&#160;
&#160;&#160;&#160;&#160;charset=iso-8859-1&quot;&gt;
&lt;TITLE&gt;Document&#160;Title&lt;/TITLE&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;

&lt;%
&#160;&#160;&#160;&#160;'&#160;Variables
&#160;&#160;&#160;&#160;Dim&#160;objQuery

&#160;&#160;&#160;&#160;'&#160;Create&#160;the&#160;business&#160;object
&#160;&#160;&#160;&#160;Set&#160;objQuery&#160;=&#160;Server.CreateObject(&quot;QueryPublishers.List&quot;)

&#160;&#160;&#160;&#160;'&#160;Run&#160;the&#160;query
&#160;&#160;&#160;&#160;Dim&#160;strReturn
&#160;&#160;&#160;&#160;strReturn&#160;=&#160;objQuery.GetPublishers
&#160;&#160;&#160;&#160;
&#160;&#160;&#160;&#160;'&#160;Fill&#160;the&#160;list&#160;box
&#160;&#160;&#160;&#160;Dim&#160;intStart
&#160;&#160;&#160;&#160;Dim&#160;intCurrent
&#160;&#160;&#160;&#160;
&#160;&#160;&#160;&#160;intStart&#160;=&#160;1
&#160;&#160;&#160;&#160;intCurrent&#160;=&#160;1
&#160;&#160;&#160;&#160;
&#160;&#160;&#160;&#160;'&#160;Parse&#160;the&#160;returned&#160;string
%&gt;
&#160;&#160;&#160;&#160;
&#160;&#160;&#160;&#160;&lt;FORM&gt;
&#160;&#160;&#160;&#160;&lt;SELECT&#160;SIZE=20&gt;
&lt;%
&#160;&#160;&#160;&#160;Do&#160;While&#160;intCurrent&#160;&lt;&#160;Len(strReturn)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;intCurrent&#160;=&#160;InStr(intStart,&#160;strReturn,&#160;&quot;|&quot;)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;If&#160;intCurrent&#160;=&#160;0&#160;Then&#160;Exit&#160;Do
%&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;OPTION&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;%=Mid(strReturn,&#160;intStart,&#160;intCurrent&#160;-&#160;intStart)%&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/OPTION&gt;
&lt;%
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;intStart&#160;=&#160;intCurrent&#160;+&#160;1
&#160;&#160;&#160;&#160;Loop
%&gt;
&#160;&#160;&#160;&#160;&lt;/SELECT&gt;
&#160;&#160;&#160;&#160;&lt;/FORM&gt;

&lt;/BODY&gt;
&lt;/HTML&gt;
</PRE></blockquote><HR>
<P>As your site gets more complicated, you will want to return more than 
a simple list from a lookup table&#151;you will want complete sets of records. 
This example uses an array to retrieve records and return them to the Web 
page. Listing 10-3 shows the code for a method that reads the BIBLIO.MDB 
data source and returns information about the authors contained in the 
database. The information is packed as entries in an array and returned to the 
client Web page.<P>
The GetRows method of the Recordset object is specifically designed 
to create a Variant array from a Recordset. This array can be returned to 
the client, where it is unpacked and displayed.
<P><B>Listing 10-3.</b> <I>Returning a set of records.</i>
<HR><BLOCKQUOTE>
<PRE WIDTH="0">
Public&#160;Function&#160;GetAuthors(ByRef&#160;ReturnData&#160;As&#160;Variant)&#160;As&#160;Boolean
On&#160;Error&#160;GoTo&#160;GetAuthorsErr

&#160;&#160;&#160;&#160;GetAuthors&#160;=&#160;False
&#160;&#160;&#160;&#160;
&#160;&#160;&#160;&#160;'&#160;Open&#160;connection
&#160;&#160;&#160;&#160;Dim&#160;objConnection&#160;As&#160;RDO.rdoConnection
&#160;&#160;&#160;&#160;Dim&#160;objResultset&#160;As&#160;RDO.rdoResultset
&#160;&#160;&#160;&#160;
&#160;&#160;&#160;&#160;Set&#160;objConnection&#160;=&#160;New&#160;RDO.rdoConnection
&#160;&#160;&#160;&#160;objConnection.Connect&#160;=&#160;&quot;DSN=Biblio&quot;
&#160;&#160;&#160;&#160;objConnection.EstablishConnection&#160;rdDriverNoPrompt,&#160;True
&#160;&#160;&#160;&#160;
&#160;&#160;&#160;&#160;'&#160;Run&#160;query
&#160;&#160;&#160;&#160;Set&#160;objResultset&#160;=&#160;objConnection.OpenResultset&#160;_
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(&quot;SELECT&#160;Author,&#160;[Year&#160;Born]&#160;FROM&#160;Authors&#160;ORDER&#160;BY&#160;Author&quot;,&#160;_
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;rdOpenStatic)
&#160;&#160;&#160;&#160;
&#160;&#160;&#160;&#160;'&#160;Evaluate&#160;the&#160;query&#160;results
&#160;&#160;&#160;&#160;If&#160;objResultset.BOF&#160;And&#160;objResultset.EOF&#160;Then
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Err.Raise&#160;vbObjectError,&#160;&quot;QueryAuthors&quot;,&#160;&quot;No&#160;Records&#160;Returned!&quot;
&#160;&#160;&#160;&#160;End&#160;If
&#160;&#160;&#160;&#160;
&#160;&#160;&#160;&#160;'&#160;Fill&#160;the&#160;array
&#160;&#160;&#160;&#160;ReturnData&#160;=&#160;objResultset.GetRows(200)

&#160;&#160;&#160;&#160;GetAuthors&#160;=&#160;True

&#160;&#160;&#160;&#160;'&#160;Close&#160;connection
&#160;&#160;&#160;&#160;objResultset.Close
&#160;&#160;&#160;&#160;objConnection.Close
&#160;&#160;&#160;&#160;Set&#160;objResultset&#160;=&#160;Nothing
&#160;&#160;&#160;&#160;Set&#160;objConnection&#160;=&#160;Nothing
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;
GetAuthorsExit:
&#160;&#160;&#160;&#160;Exit&#160;Function

GetAuthorsErr:
&#160;&#160;&#160;&#160;GetAuthors&#160;=&#160;False
&#160;&#160;&#160;&#160;ReDim&#160;ReturnData(0&#160;To&#160;1,&#160;1&#160;To&#160;1)
&#160;&#160;&#160;&#160;ReturnData(0,&#160;1)&#160;=&#160;Err.Description
&#160;&#160;&#160;&#160;ReturnData(1,&#160;1)&#160;=&#160;Err.Source
&#160;&#160;&#160;&#160;Resume&#160;GetAuthorsExit
End&#160;Function
</PRE></blockquote><HR>
<P>When the array arrives in the Web page, ASP reads all the entries 
and builds an HTML table with the data. In this way, a complete set of data can 
be returned without having direct access to an ODBC connection in the Web 
page. The page can also write data back by calling methods that perform SQL 
Update functions inside of Visual Basic business objects. Listing 10-4 shows 
the complete code for building a table of records.
<P><B>Listing 10-4.</b> <I>Building a table of records.</i>
<HR><BLOCKQUOTE>
<PRE WIDTH="0">
&lt;%@&#160;LANGUAGE=&quot;VBSCRIPT&quot;&#160;%&gt;

&lt;HTML&gt;
&lt;HEAD&gt;
&lt;META&#160;NAME=&quot;GENERATOR&quot;&#160;Content=&quot;Microsoft&#160;Visual&#160;InterDev&#160;1.0&quot;&gt;
&lt;META&#160;HTTP-EQUIV=&quot;Content-Type&quot;&#160;content=&quot;text/html;&#160;
&#160;&#160;&#160;&#160;charset=iso-8859-1&quot;&gt;
&lt;TITLE&gt;Document&#160;Title&lt;/TITLE&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;

&lt;%
&#160;&#160;&#160;&#160;'&#160;Create&#160;business&#160;object
&#160;&#160;&#160;&#160;Dim&#160;blnReturn
&#160;&#160;&#160;&#160;Dim&#160;objAuthors
&#160;&#160;&#160;&#160;Dim&#160;varReturn
&#160;&#160;&#160;&#160;Set&#160;objAuthors&#160;=&#160;Server.CreateObject(&quot;QueryAuthors.Table&quot;)

&#160;&#160;&#160;&#160;'&#160;Run&#160;query
&#160;&#160;&#160;&#160;blnReturn&#160;=&#160;objAuthors.GetAuthors(varReturn)
%&gt;
&lt;H2&gt;Here&#160;are&#160;the&#160;authors!&lt;/H2&gt;
&lt;TABLE&#160;BORDER&gt;
&lt;%

'&#160;Fill&#160;the&#160;grid&#160;with&#160;first&#160;10&#160;rows
&#160;&#160;&#160;&#160;For&#160;i&#160;=&#160;0&#160;To&#160;9
%&gt;
&#160;&#160;&#160;&#160;&lt;TR&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;TD&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;%=varReturn(0,&#160;i)%&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/TD&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;TD&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;%=varReturn(1,&#160;i)%&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/TD&gt;
&#160;&#160;&#160;&#160;&lt;/TR&gt;
&lt;%
&#160;&#160;&#160;&#160;Next
%&gt;
&lt;/TABLE&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;
</PRE></blockquote><HR>
<P>Add, edit, and delete functionality can be provided through objects 
under MTS. The objects are subsequently available, without rewriting, to all 
applications on the enterprise.







</BODY>
</HTML>

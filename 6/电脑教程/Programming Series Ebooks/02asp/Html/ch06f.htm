<HTML>
<HEAD>
<TITLE>Part IV: Using ActiveX Controls</TITLE>
</HEAD>
<BODY BGCOLOR = "#ffffff">
<H1>Part IV: Using ActiveX Controls</h1>
<P>In this part of the project, you will insert an ActiveX control, the 
Microsoft Agent, into the DEFAULT.HTM file. The Agent control presents an 
animated character that can help users navigate your site. In this exercise, the 
Agent control will provide help in locating and ordering a book.


<P><H2>Step 1</h2>
<P>Before you can use the Agent control, you must install it on your machine. 
Run the setup program provided on the CD-ROM that accompanies this 
book. Place the control in a directory named C:\PROGRAM 
FILES\MICROSOFT AGENT. Once installed, the Agent is just like any other ActiveX control 
you might use.


<P><H2>Step 2</h2>
<P>If you don't already have the Bookstore project open, open it now. 
Open DEFAULT.HTM in the Visual InterDev text editor. Locate the beginning of 
the Web page body, as indicated by the &lt;BODY&gt; tag. Create a new line below 
the &lt;BODY&gt; tag, and place your cursor there. This is where you will insert the 
code to render the Agent.
<P>Insert the Agent control by selecting Into HTML/ActiveX Control 
from the Insert menu. In the ActiveX Control dialog box, locate the Microsoft 
Agent control, select the control, and click the OK button. Visual InterDev will 
display an icon representing the Agent control and a Properties dialog box.
<P>Click the All tab, and examine all the properties of the Agent 
control. Change its ID property to Wizard. If you were to actually use this control in 
a Web site, you would also have to set the CodeBase property of the Agent 
to refer to the location where the files for the ActiveX control were kept. 
This allows a client browser to download the Agent control automatically if it is 
not installed on the client's machine. Internet Explorer 4.0 ships with the 
Agent control, so no CODEBASE attribute is required.
<P>Return to the code by closing the Properties window and the 
Graphical Layout window. You should see the following code added by Visual InterDev:
<P><PRE>&lt;OBJECT&#160;ID=&quot;Wizard&quot;&#160;WIDTH=100&#160;HEIGHT=51
&#160;&#160;&#160;&#160;CLASSID=&quot;CLSID:F5BE8BD2-7DE6-11D0-91FE-00C04FD701A5&quot;&gt;
&lt;/OBJECT&gt;</pre>
<P>The &lt;OBJECT&gt; tag is used to insert an ActiveX control in the Web 
page. Internet Explorer determines which control to insert based on the 
CLSID attribute, which is a unique serial number for the requested control. 
The &lt;OBJECT&gt; tag is sufficient to address the ActiveX control, but the Agent 
control has no visible interface until you load one of the character files that 
contain the animations for the Agent.
<P>The Agent character should be loaded when the page is first loaded 
into the browser. This can be accomplished with the Window_OnLoad event. In 
the same SCRIPT section where you created the monthly special, add the 
following code:
<P><PRE>Sub&#160;Window_OnLoad()
End&#160;Sub</pre>
<P>You will load the Agent animation files in the OnLoad event. These 
files exist as ACS files, which are typically loaded during the setup process for 
the Microsoft Agent. This exercise assumes that you have installed the Agent 
in the directory C:\PROGRAM FILES\MICROSOFT AGENT 
and also assumes that the character files are located in C:\PROGRAM 
FILES\MICROSOFT AGENT\CHARACTERS. If you have installed the files in a different 
location, you must modify the code accordingly.
<P>Add the following code to the OnLoad event to load the Agent character:
<P><PRE>`&#160;Initialize&#160;the&#160;variables&#160;when&#160;the&#160;page
`&#160;is&#160;fully&#160;loaded

`&#160;Dimension&#160;variables
Dim&#160;Agents
Dim&#160;AgentPath

`&#160;Set&#160;variables
Set&#160;Agents&#160;=&#160;Wizard.Characters
AgentPath&#160;=&#160;&quot;c:\program&#160;files\microsoft&#160;agent\characters\&quot;

`&#160;Load&#160;character
Agents.Load&#160;&quot;WIZARD&quot;,&#160;AgentPath&#160;&amp;&#160;&quot;Merlin.acs&quot;</pre>
<P>Save your work, and preview DEFAULT.HTM by selecting Preview 
In Browser from the File menu. The Agent should be visible.


<P><H2>Step 3</h2>
<P>Now you can add some functionality to the Agent. The Agent control 
supports custom commands, which you can assign to the Agent as soon as the entire 
Web page is loaded. The custom commands are displayed whenever the user 
right-clicks the Agent. Use the OnLoad event of the Window object to create 
the custom commands. Here is the code:
<P><PRE>`&#160;Create&#160;custom&#160;commands
Agents(&quot;WIZARD&quot;).Commands.Caption&#160;=&#160;&quot;Custom&#160;Commands&quot;

`&#160;Name,&#160;Caption,&#160;Voice&#160;Command,&#160;Enabled,&#160;Visible
Agents(&quot;WIZARD&quot;).Commands.Add&#160;&quot;Search&quot;,&#160;&quot;Search&quot;,&#160;&quot;Search&quot;,&#160;True,&#160;True
Agents(&quot;WIZARD&quot;).Commands.Add&#160;&quot;Find&#160;Book&quot;,&#160;&quot;Find&#160;Book&quot;,&#160;&quot;Find&#160;Book&quot;,&#160;_
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;True,&#160;True

`&#160;Show&#160;Agent
Agents(&quot;WIZARD&quot;).Show
Agents(&quot;WIZARD&quot;).Play&#160;&quot;Surprised&quot;
Agents(&quot;WIZARD&quot;).Speak&#160;&quot;Welcome&#160;to&#160;WebPages!&quot;</pre>
<P>Place the following code in the SCRIPT section to hide the Agent 
when the user exits the current page:
<P><PRE>Sub&#160;Window_OnUnload()
&#160;&#160;&#160;&#160;Wizard.Characters(&quot;WIZARD&quot;).Hide
End&#160;Sub</pre>


<P><H2>Step 4</h2>
<P>When a user right-clicks the Agent and chooses a custom command, the 
Agent control fires the Command event and the Command event performs the 
function appropriate to the menu item. In this step of the exercise, you will 
direct the browser to the SEARCH.HTM page whenever the Search item is 
selected from the Agent menu. Add the following code to a new SCRIPT section 
to handle the Command event:
<P><PRE>&lt;SCRIPT&#160;LANGUAGE=&quot;VBScript&quot;&gt;
&lt;!--

Sub&#160;Wizard_Command(UserInput)
&#160;&#160;&#160;&#160;`&#160;Set&#160;variables
&#160;&#160;&#160;&#160;Dim&#160;Agent
&#160;&#160;&#160;&#160;Set&#160;Agent&#160;=&#160;Wizard.Characters(&quot;WIZARD&quot;)

&#160;&#160;&#160;&#160;`&#160;Go&#160;to&#160;search&#160;page
&#160;&#160;&#160;&#160;If&#160;UserInput.Voice&#160;=&#160;&quot;Search&quot;&#160;Or&#160;UserInput.Name&#160;=&#160;&quot;Search&quot;&#160;Then
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Window.Navigate&#160;&quot;search.htm&quot;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<P>
&#160;&#160;&#160;&#160;End&#160;If
End&#160;Sub

--&gt;
&lt;/SCRIPT&gt;</pre>
<P>When your program navigates to the search page, the Agent will 
reappear through the use of an &lt;OBJECT&gt; tag. Although the Agent is actually 
hiding between pages, it seems to be present throughout the site.


<P><H2>Step 5</h2>
<P>Save your work, and open DEFAULT.HTM in Internet Explorer. When the 
page opens and the Agent becomes visible (Figure 6-6), right-click the Agent 
and choose Search from the pop-up menu. The Agent navigates to the search 
page and gives you some instructions. If you have a multimedia computer with 
a working microphone, try speaking a command to the Agent!
<P><img src="pictures/F06XF06.JPG" width=600 height=441 border=0>
<P><B>Figure 6-6.</B> 


<I>The Agent control.</I>


<P><H2>Step 6</h2>
<P>Open SEARCH.HTM in Visual InterDev. You need to add functionality to 
the Agent, enabling it to respond when a user navigates to the search page 
either by using the hyperlink on the home page or by commanding the Agent.
<P>Insert the Agent control into SEARCH.HTM just as you did for the 
home page. Add a SCRIPT section to your code to load the character animations 
and to take action when the page is loaded. Use the following code:
<P><PRE>&lt;SCRIPT&#160;LANGUAGE=&quot;VBScript&quot;&gt;
&lt;!--

&#160;&#160;&#160;&#160;Sub&#160;Window_OnLoad()
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;`&#160;Dimension&#160;variables
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Dim&#160;Agents
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Dim&#160;AgentPath
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;`&#160;Set&#160;variables
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Set&#160;Agents&#160;=&#160;Wizard.Characters
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;AgentPath&#160;=&#160;&quot;c:\program&#160;files\microsoft&#160;agent\characters\&quot;

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;`&#160;Load&#160;character
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Agents.Load&#160;&quot;WIZARD&quot;,&#160;AgentPath&#160;&amp;&#160;&quot;Merlin.acs&quot;

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;`&#160;Show&#160;Agent
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Agents(&quot;WIZARD&quot;).Show

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;`&#160;Move&#160;Agent
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Agents(&quot;WIZARD&quot;).MoveTo&#160;0,&#160;0

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;`&#160;Give&#160;instructions
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Agents(&quot;WIZARD&quot;).Speak&#160;_
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;Use&#160;this&#160;page&#160;to&#160;perform&#160;full&#160;text&#160;searches.&quot;

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;`&#160;Move&#160;again
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Agents(&quot;WIZARD&quot;).MoveTo&#160;Window.Screen.Width&#160;-&#160;100,&#160;0
&#160;&#160;&#160;&#160;End&#160;Sub

&#160;&#160;&#160;&#160;Sub&#160;Window_OnUnload()
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Wizard.Characters(&quot;WIZARD&quot;).Hide
&#160;&#160;&#160;&#160;End&#160;Sub

--&gt;
&lt;/SCRIPT&gt;</pre>







<P>
</BODY>
</HTML>

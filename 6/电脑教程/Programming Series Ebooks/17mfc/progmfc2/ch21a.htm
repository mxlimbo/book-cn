<HTML>
<HEAD>
<link rel="STYLESHEET" type="text/css" href="Library.css">
<TITLE>Chapter 21 -- ActiveX Controls</TITLE>


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch20d.htm", "ch21b.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>


<P><font size="+3">Chapter 21</font></P>


<A NAME="655"><H1>ActiveX Controls</H1></A>

<P>In the minds of most people, the term 
<I>ActiveX</I> conjures up visions of ActiveX controls displaying fancy animations and video streams in Web pages. In truth, 
ActiveX controls are just one piece of the puzzle called ActiveX. But as the penultimate 
COM technology and the most visible member of the ActiveX family, ActiveX controls 
enjoy a special distinction that sets them apart from run-of-the-mill COM objects.
</P>

<P>ActiveX controls began their life in 1994 as &quot;OLE controls.&quot; The first version 
of the OLE control specification, which is now referred to as OCX 94, outlined the 
structure of what would one day be known as ActiveX controls and was intended to 
provide developers with a generic, COM-based architecture for building reusable 
Microsoft Windows controls. The OLE control of 1994 was a replacement for custom 
control DLLs and Visual Basic controls (VBXs). The specification was revised in 1996 
(OCX 96), and later that same year, OLE controls were officially renamed ActiveX 
controls and Microsoft Internet Explorer gained the ability to host ActiveX controls in 
Web pages. To this day, ActiveX controls serve a dual purpose. (See Figure 21-1.) 
Application developers can use them to enhance their programs, and Web developers 
can use them to create interactive Web content&#8212;&quot;interactive&quot; because unlike Active 
Server Pages and Common Gateway Interface (CGI) scripts, ActiveX controls execute on 
the client side of an HTTP connection.
</P>

<P>
<A HREF="javascript:fullSize('F21mg01x.htm')"> <img src="images/F21mg01.JPG" width=404 height=315 border=0 ALT="Click to view at full size."> </A>
</p><p>
<!-- CAPTION --><B>Figure 21-1.</B> <I>Two instances of an ActiveX calendar control displayed side by side&#8212;in Internet Explorer and in an application program.</I><!-- /CAPTION -->
</p>

<P>Microsoft provides a number of tools for writing ActiveX controls, but none 
offer the balance of power and ease of use that Visual C++ and MFC do. Writing an 
ActiveX control from scratch can require weeks or even months of development time. 
You can write the same control with MFC in a matter of hours. In fact, you can write 
a simple control that works equally well in an application or a Web page in 
minutes with the tools that Visual C++ provides. One of those tools is the MFC 
ActiveX ControlWizard, which generates the initial source code for a control project. But 
make no mistake: it's MFC that's the belle of the ball, and without MFC or a similar 
class library to help out, writing an ActiveX control would be right up there on a list of 
fun things to do with having your fingernails pulled out.
</P>

<P>In this chapter, I'll begin with an overview of ActiveX controls and an 
explanation of how they work. I'll conclude with a few topics that aren't treated at 
length elsewhere in the chapter. In between, you'll learn how MFC supports ActiveX 
controls. Then you'll write your own control and an application that uses the 
control. You'll even test the control in a Web page. When you're done, I think you'll 
agree that even a subject as complex as ActiveX controls can be downright enjoyable 
when MFC is there to do the bulk of the work.
</P>


</BODY>
</HTML>





<HTML>
<HEAD>
<link rel="STYLESHEET" type="text/css" href="Library.css">
<TITLE>Chapter 14 -- Timers and Idle Processing</TITLE>


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch13e.htm", "ch14b.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>


<P><font size="+3">Chapter 14</font></P>
<A NAME="424"><H1>Timers and Idle Processing</H1></A>

<P>Not all actions that Microsoft Windows applications undertake are performed in 
response to user input. Some processing is inherently time-based, such as 
autosave operations that save documents at 10-minute intervals and updates that involve a 
clock displayed in a status bar. Windows helps out by providing 
<I>timers</I> that you can program to send notifications at regular intervals. Another form of temporal 
processing is <I>idle processing</I>&#8212;work performed during &quot;idle&quot; periods when no messages 
are waiting in the message queue. MFC supplies a framework for idle-time processing 
in the form of a virtual function named <I>OnIdle</I> that is called whenever the message 
pump in <I>CWinThread</I> goes to the message queue and finds it empty.</p>

<P>In the first half of this chapter, we'll examine timers, which can be 
programmed for intervals as low as 55 milliseconds. Here are just a few of the ways in which 
you can put timers to use:</p>

<UL>
<P><LI>In applications that display wall-clock time. Most such applications set a timer to fire at intervals ranging from a half second to as many as 60 seconds. When a timer notification arrives, these applications update the display to reflect the current time.</li></p>
<P><LI>In unattended backup programs, disk defragmenters, and other applications that lie dormant until a specified time.</li></p>
<P><LI>In resource monitors, free-memory gauges, and other applications that monitor the state of the system.</li></p>
</UL>

<P>In the second half of the chapter, we'll look at idle processing&#8212;what it is, how it works, and how you can use it to perform background processing tasks in MFC applications.</p>

</BODY>
</HTML>





<HTML>
<HEAD>
<link rel="STYLESHEET" type="text/css" href="Library.css">
<TITLE>Chapter 18 -- MFC and the Component Object Model</TITLE>


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch17d.htm", "ch18b.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>



<P><font SIZE="+3">Chapter 18</font></P>


<A NAME="564"><H1>MFC and the Component Object Model</H1></A>

<P>In the beginning, when MFC was still in its infancy, C++ programmers who 
began migrating from the Microsoft Windows API in favor of MFC did so because they 
wanted a class library to aid them in developing Windows applications. The 
conventional wisdom at the time said that MFC made Windows programming easier, but the 
truth of the matter was that Windows programming was still Windows programming. 
MFC simplified certain aspects of the development process, and for those few 
programmers prescient enough to adopt it early on, it eased the pain of porting 16-bit 
Windows applications to 32 bits. But even MFC could hardly claim to put a dent in 
the legendary Windows learning curve. That was true then, and it's still true today.
</P>

<P>Today there is another, more compelling reason to use MFC. If the 
applications you develop have anything whatsoever to do with COM, OLE, or ActiveX, MFC 
can dramatically simplify the development process. By that, I mean MFC can cut the 
time required to develop an application (or a software component) by an order of 
magnitude. In this day and time, there is simply no good reason to develop certain types 
of software from scratch given that such good class libraries are available. COM, 
OLE, and ActiveX have been criticized for being overly complex and hopelessly 
arcane, but for better or worse, they're here to stay, and there's a very real chance that in 
the future you'll have to be a COM programmer if you want to program Windows.
</P>

<P>So what are COM, OLE, and ActiveX, and what does MFC do to make them 
so much easier to program? I'm glad you asked, because the rest of this book is 
about MFC's support for all things COM. In this chapter, I'll begin by defining COM, 
OLE, and ActiveX, and then I'll introduce some of the unique and interesting ways in 
which MFC wraps its arms around them. In subsequent chapters, we'll tackle specific 
COM-based technologies such as Automation and ActiveX controls and you'll see how 
to use MFC to make them come to life.
</P>


</BODY>
</HTML>





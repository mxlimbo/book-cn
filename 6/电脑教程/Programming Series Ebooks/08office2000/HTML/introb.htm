<HTML>
<HEAD>
<TITLE>About the Book</TITLE>
<link rel="STYLESHEET" type="text/css" href="webcomp.css">
<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="introa.htm">[Previous]</A> <A HREF="introc.htm">[Next]</A><P>

<A NAME="237"><H1>About the Book</H1></A>

<P>I believe that to learn a new technology, you need both a conceptual overview 
and examples of the technology used in a larger context. Conceptual information is 
critical to your general understanding of the technological principles at work, but to be 
truly successful at applying a new technology, you must also see it at work in a 
real-world solution and not just in conveniently packaged demonstrations that exist in a 
vacuum. Only then can you see how the technology interacts with related technologies 
and how to overcome the sometimes confusing quirks that all technologies have.</P>
<P>For this reason, I divided this book into two parts. Part I contains a 
conceptual overview of the Office Web Components, and Part II documents a number of 
solutions I built using OWC and related technologies. Part II also contains a final chapter 
on deployment. The chapters in Part II build on the conceptual foundation laid in Part 
I, so even if you have some familiarity with the Office Web Components, you 
should at least browse through Part I to ensure that you know all the concepts.</P>
<P><A HREF="ch01a.htm">Chapter 1</A> discusses the OWC library as a whole, explaining why it was 
created and for what uses it was intended. It provides a brief introduction to each of the 
components in the library and lists the supported containers in which you can use them.</P>
<P>Chapters <a href="ch02a.htm">2</a>, <a href="ch03a.htm">3</a>, <a href="ch04a.htm">4</a>, and <a href="ch05a.htm">5</a> cover the Spreadsheet, Chart, PivotTable, and Data 
Source components. Each chapter discusses its respective component in depth, listing 
relevant features, describing how to accomplish the most common programming tasks 
with sample source code, and describing some powerful advanced functionality that 
you might not notice at first glance.</p>
<P><A HREF="ch06a.htm">Chapter 6</A> begins the second part of the book. This chapter shows you how 
to build interactive web sites that display critical business metrics in graphical form. 
Most businesses have a set of critical metrics by which executives measure the health 
of the company or its processes, and this chapter shows you how to present those 
metrics in easy-to-read charts&#8212;a key element in an executive's information dashboard.</p>
<P><A HREF="ch07a.htm">Chapter 7</A> shows you how to use the PivotTable and Chart components to 
create an interactive data analysis system. This solution shows you how to connect the 
Office Web Components to an OLAP (Online Analytical Processing) data source and 
provide rich data analysis right in a web browser. It also demonstrates a few tricks, such 
as saving and reloading reports, adjusting chart types to display all the totals in 
your report, and combining the multidimensional extensions to ADO (Microsoft 
ActiveX Data Objects) with the PivotTable component to enable more sophisticated 
data analysis. The techniques you learn in this chapter apply equally well to the 
analysis of other kinds of data.</p>
<P><A HREF="ch08a.htm">Chapter 8</A> describes how to build solutions that not only provide 
analytical capabilities, but also involve grid-based data entry. The solution in this chapter is 
a system for creating and tracking timesheets, showing you how to use the 
Spreadsheet component in the context of data entry. The techniques you learn in this chapter 
are similar to those used when developing an expense reporting or budgeting system.</p>
<P><A HREF="ch09a.htm">Chapter 9</A> teaches you how to leverage new or existing spreadsheet 
models using the Spreadsheet component. The solution in this chapter illustrates how to 
use a mortgage calculation model both on a web server and in an interactive 
Spreadsheet control on the client. The techniques you learn in this chapter apply equally well 
to any system in which you want to employ spreadsheet models.</p>
<P><A HREF="ch10a.htm">Chapter 10</A> shows you how to feed real-time data into the Spreadsheet 
component. It describes a real-time data source I built for returning stock information 
and demonstrates how you can bind cells in a spreadsheet model to properties of a 
real-time data source. The techniques you will learn in this chapter are the same ones 
you would use when loading any kind of real-time data into the Spreadsheet component.</p>
<P><A HREF="ch11a.htm">Chapter 11</A> discusses how to build custom function add-ins for the 
Spreadsheet component. A function add-in is an incredibly powerful mechanism that allows 
you to offer any kind of custom calculation to your users, including calculations that 
access other network resources or data sources.</p>
<P><A HREF="ch12a.htm">Chapter 12</A>, the final chapter in the book, discusses how to deploy the 
Office Web Components with your solution. The components come with a special 
Web Installer that you can use to deploy the components to users who do not already 
have Office 2000. This chapter also lists all the files installed by the Web Installer.</p>
<P>Woven throughout the chapters are tips on the components' more 
esoteric features and stories about how we developed the Office Web Components. 
These tips and anecdotes appear as sidebars in the text, so you can read those that 
interest you and skip the ones that don't.</p>

</BODY>
</HTML>






<HTML>
<HEAD>
<TITLE>Returning an Interactive Spreadsheet Component</TITLE>
<link rel="STYLESHEET" type="text/css" href="webcomp.css">
<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch09i.htm">[Previous]</A> <A HREF="ch09k.htm">[Next]</A><P>

<A NAME="192"><H1>Returning an Interactive Spreadsheet Component</H1></A>

<P>If the client browser supports COM controls (indicated by the ActiveXControls 
property of the BrowserType object), I allow the user to request an interactive 
Spreadsheet control containing the results of his or her mortgage calculation. The code 
to output this is amazingly easy:</P>

<P><table cellpadding=5 width="95%"><tr><td>
<PRE>
        ' Write an object tag for the Spreadsheet control
        ' and a couple parameter tags to tell it where the model is
        Response.Write &quot;&lt;object &quot; &amp; _
            &quot;classid=&quot;&quot;clsid:0002E510-0000-0000-C000-&quot; &amp; _
            &quot;000000000046&quot;&quot; style=&quot;&quot;width:100%;height:75%;&quot;&quot;&quot; &amp; _
            &quot;id=ssMort&gt;&quot;
        Response.Write &quot;&lt;param name=HTMLURL value=&quot;&quot;Mortgage.htm&quot;&quot;&gt;&quot;
        Response.Write &quot;&lt;param name=DataType value=&quot;&quot;HTMLURL&quot;&quot;&gt;&quot;
        Response.Write &quot;&lt;/object&gt;&quot;
        Response.Write &quot;&lt;script language=vbscript&gt;&quot;
        Response.Write &quot;ssMort.ActiveSheet.Range(&quot;&quot;B2:B6&quot;&quot;).Value=&quot;
        Response.Write &quot;Array(&quot; &amp; m_nPrice &amp; &quot;,&quot; &amp;  m_nPctDown &amp; &quot;,&quot; &amp; _
            m_nRate &amp; &quot;,&quot; &amp; m_nYears &amp; &quot;,&quot; &amp; _
            m_nAddPayment &amp; &quot;)&quot;
        Response.Write &quot;&lt;/script&gt;&quot;
</pre></td></tr></table></p>

<P>To cause the browser to load an interactive Spreadsheet control into the 
page, I simply have to write back an &lt;object&gt; tag with the appropriate COM class ID. 
To tell the Spreadsheet control from where to load the model, I include two 
&lt;param&gt; tags, one specifying the relative URL to the Mortgage.htm spreadsheet model 
and another telling the Spreadsheet to use this instead of expecting an HTMLData 
&lt;param&gt; tag. Because the HTMLURL property loads via HTTP and a URL, the 
Spreadsheet control can load the same file I used on the web server.</P>
 
<P>The only remaining task is pushing the loan variables into the 
Spreadsheet control so that it will recalculate the mortgage information based on the inputs. I 
do that by emitting the same code I used to push the values into the Spreadsheet 
component on the server, and since this script executes as soon as it is parsed, the 
new values are almost instantly set into the Spreadsheet control.</P>

</BODY>
</HTML>






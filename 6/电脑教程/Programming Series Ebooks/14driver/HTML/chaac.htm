<HTML>
<HEAD>
<TITLE>Determining the Operating System Version</TITLE>
<link rel="STYLESHEET" type="text/css" href="waltoney.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<BODY bgcolor="#ffffff" text="#000000">
<p>
<A HREF="chaab.htm">[Previous]</A> <A HREF="chaba.htm">[Next]</a>
</p>

<A NAME="435"><H1>Determining the Operating System Version</H1></A>

<p>Once you've managed to get your device driver loaded&#8212;a feat that might require, as
I've just discussed, arranging to define Windows 98 stubs for certain support
routines&#8212;you may need to base run-time decisions on which version of the operating system
happens to be in charge of the computer. You might want, for example, to call functions that
aren't, strictly speaking, part of the WDM. <b>IoReportTargetDeviceChangeAsynchronous</b>,
which I used in the PNPEVENT sample, is such a function.</p>

<p>It's very easy for an application to learn the operation system platform by calling <b>GetVersionEx</b>. The closest equivalent function in kernel mode is <b>IoIsWdmVersionAvailable</b>:</p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>BOOLEAN IoIsWdmVersionAvailable(MajorVersion, MinorVersion);</pre>
</td></tr>
</table>
</p>

<p>Windows 2000 supports WDM version 1.10, which corresponds to the WDM_MAJORVERSION (1) and WDM_MINORVERSION (10) constants in the file WDM.H. Windows 98
(including Windows 98, Second Edition) supports WDM version 1.0 only. You can use this
difference in support level to tell which platform you happen to be running on.</p>

<P><div class="sidebar"><blockquote>
<p><b>Other Heuristics for Operating System Version</b></p>

<p>I used to rely on different heuristics for determining the operating system version until
experience and changes in the operating system made them obsolete. In the original retail
release of Windows 98, for example, the <b>DriverExtension</b> of your driver object had a <b>
ServiceKeyName</b> with zero length when the system invoked your <b>DriverEntry</b> in a normal
way. Windows 2000, on the other hand, supplies a nonempty string for this parameter. So do
later editions of Windows 98, which makes this heuristic useful only for detecting the original
Windows 98.</p>

<p>Vireo Software used to suggest using the presence of a registry key named \Registry\Machine\SAM
as an indicator for Windows 2000. This test isn't reliable for drivers that load during
Windows 2000 startup, though, so you shouldn't rely on this test either. The company
currently recommends a test based on the facts that the registry key
HKLM\System\CurrentControlSet\Control\Class will exist in Windows 2000 but not Windows 98 and
that the key HKLM\System\CurrentControlSet\Services\Class will exist in Windows 98 but not
Windows 2000.</p>
</blockquote></div>
</P>
</body>
</html>








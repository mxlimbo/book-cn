<HTML>
<HEAD>
	<link rel="STYLESHEET" type="text/css" href="Library.css">
<TITLE>Linking Forms to Data</TITLE>


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch05c.htm", "ch05e.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="180"><H1>Linking Forms to Data</H1></A>

<P>Access has always let you bind forms to data simply and easily. This is one major reason why it is a rapid application development environment.</P>


<A NAME="181"><H2>Using the AutoForm Wizard</H2></A>

<P>To bind a form to data, you can use the AutoForm wizard. Select a table or 
query in the database window and click the New Object: AutoForm button on 
the Database toolbar. The wizard opens a new form that binds directly to the 
selected data source. Figure 5-5 below shows a sample form 
based on the <I>Order Details</I> table in this chapter's sample database. You could use 
this form for browsing, editing, adding, and deleting records in the 
<I>Order Details</I> table.</P>


<P><img SRC="Images/F05QH05.GIF" width=355 height=175 border=0>
</P><P><!-- CAPTION --><B>Figure 5-5.</B> <I>A form created by the AutoForm wizard.</I><!-- /CAPTION -->
</P>


<P>Because the data source for the form's <I>Product</I> field is a lookup field in the underlying <I>Order Details</I> table, the <I>Product</I> field automatically appears as a combo box that displays product names instead of the underlying 
<I>ProductID</I> values. All of this functionality was provided automatically by the wizard.
</P>


<A NAME="182"><H2>Conditional Formatting</H2></A>

<P>Access 2000 lets you conditionally format the data displayed by a text box 
or combo box control without programming. You can selectively apply 
formatting to form controls for both bound and calculated fields.</P>

<P>Figure 5-6 shows three instances of the same form. I used conditional 
formatting to control the appearance of the 
<I>Discount</I> and <I>Extended Price</I> fields. 
The <I>Discount</I> field in the top form is disabled. The middle form highlights the 
value in the <I>Extended Price</I> field using bold and italic formatting. The bottom 
form enables the <I>Discount</I> field and highlights the value in the 
<I>Extended Price</I> field.</P>

<P>The <I>Extended Price</I> field is calculated; it does not derive its value 
directly from an underlying table. An expression in the text box's 
<I>Control Source</I> property setting ([UnitPrice]*[Quantity]*(1-[Discount])) computes the value when 
the user moves to a new record or updates the 
<I>UnitPrice</I>, <I>Quantity</I>, or 
<I>Discount</I> fields of the current record. (The terms in brackets reference controls, not 
field names for the underlying data source.)</P>


<P><DIV CLASS="NOTE"><BLOCKQUOTE><B>NOTE</B><HR>Beginners sometimes give fields and controls the same 
name. This practice can be confusing and lead to errors. (The AutoForm 
wizard is also guilty of this practice.) Consider adding prefixes to control 
names to distinguish them from their underlying field names. For example, a 
good name for a text box control that is bound to a field named 
<I>UnitPrice</I> is <I>txtUnitPrice</I>.
</BLOCKQUOTE></DIV></P>
 

<P><A HREF="javascript:fullSize('F05qh06x.htm')"> <img src="Images/F05qh06.JPG" width=404 height=930 border=0 ALT="Click to view at full size."> </A>
</P><P><!-- CAPTION --><B>Figure 5-6.</B> <I>Conditional formatting controls the appearance of the </I>Extended Price<I> and </I>Discount<I> fields on this form.</I><!-- /CAPTION -->
</P>


<P>To apply conditional formatting to a control, select the control and 
choose Conditional Formatting from the Format menu to open the Conditional 
Formatting dialog box, shown in Figure 5-7. Every control with conditional 
formatting has at least two formats&#8212;a default format and a special format when a 
specified condition is true. You can format based on a control's field value, its 
expression value, or when it gets the focus. When you work with the field 
value for a control, you can select from a list of comparison operators, such as 
equal to (=), greater than (&gt;), and less than (&lt;). The condition for the 
<I>Discount</I> field in Figure 5-7 is <I>Field value is equal to 
0</I>. The formatting option for this condition disables the control when the discount is 0.</P>


<P><A HREF="javascript:fullSize('F05QH07x.htm')"> <img src="Images/F05QH07.JPG" width=404 height=148 border=0 ALT="Click to view at full size."> </A>
</P><P><!-- CAPTION --><B>Figure 5-7.</B> <I>The Conditional Formatting dialog box.</I><!-- /CAPTION -->
</P>


<P>If you apply conditional formatting to a calculated field, such as 
<I>Extended Price</I>, you must write an expression using standard VBA operators. The 
condition for the <I>Extended Price</I> field is 
<I>Expression is text4.value&gt;500</I>. 
(<I>Text4</I> is the control that displays the calculated value.) When the field is greater than 
500, bold and italic formatting highlight the text box contents.</P>


<P>You can easily apply another condition and special format to a control 
by clicking the Add button in the Conditional Formatting dialog box and 
specifying the new condition and its formatting information.
</P>


<A NAME="183"><H2>Subforms</H2></A>

<P>A <I>subform</I>, one of the most popular ways of displaying data in Access, is a 
form embedded within a main form. The main form holds general information 
about an object (such as an order or a patient name). One or more hierarchically 
related details (such as order line items or patient visits) appear in one or 
more subforms on the main form. At least one common field must tie the record 
source of the main form and each subform together. The common field enables 
the subform to show only records that match the current record in the main 
form. When the user moves to a new record on the main form, the subform 
displays a new set of records that tie uniquely to the new record in the main form.</P>


<P>Figure 5-8 shows a main form, <I>MyOrders</I>, which contains an 
embedded <I>MyOrderDetails</I> subform. The 
<I>MyOrders</I> form links the <I>MyOrders</I> query and 
the <I>MyOrderDetails</I> query based on a shared 
<I>OrderID</I> field. (These queries and their underlying tables are from the Northwind database.) When I created the 
main form and the subform, I did not create a relationship between the two 
queries in the Relationships window or by using subdatasheets. (See <a href="ch04a.htm">Chapter 4</a> for 
a discussion of subdatasheets.)</P>


<P><A HREF="javascript:fullSize('F05qh08x.htm')"> <img src="Images/F05qh08.JPG" width=404 height=258 border=0 ALT="Click to view at full size."> </A>
</P><P><!-- CAPTION --><B>Figure 5-8.</B> <I>A form that contains a subform.</I><!-- /CAPTION -->
</P>


<P>To create a subform, open the main form in Design view, make sure 
that the Control Wizards button on the Toolbox is depressed, and then drag a 
table, query, or form from the Database window and drop it on the main form. 
The subform appears as a control on the main form. To synchronize the main 
form and the subform, you must designate at least one common field. Select 
the subform container and set its <I>Link 
Child</I> and <I>Link Master</I> properties to the 
common field. For the <I>MyOrders</I> and 
<I>MyOrderDetails</I> queries, the common field is 
<I>OrderID</I>.</P>


<P>A main form can have multiple subforms. The only requirement is that 
the record source for each subform share at least one common field with the 
record source for the main form. For example, if the main form in Figure 5-8 
contained an <I>EmployeeID</I> field, the form could have a second subform based on 
the <I>Employees</I> table.</P>


<P>If you define relationships between tables and queries in the 
Relationships window or by using the properties of a subdatasheet, you can create a 
main form with an embedded subform as easily as you create a simple bound 
form. In the Database window, select the table or query on which the main form 
will be based, and then click the New Object: AutoForm button. The AutoForm 
wizard will build a main form with an embedded subform. The subform uses 
the information in the Relationships windows or the subdatasheet. You can 
manually drag other tables, queries, or forms to the main form in Design view to 
create additional subforms.</P>

</BODY>
</HTML>





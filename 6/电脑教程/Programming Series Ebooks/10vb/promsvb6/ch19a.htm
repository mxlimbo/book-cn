<html>
<HEAD>
<TITLE>Chapter 19 -- Dynamic HTML Applications</TITLE>
<LINK REL=STYLESHEET HREF="Library.css" TYPE="text/css">


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch18e.htm", "ch19b.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>



<font size="+3">Chapter 19</font>

<A NAME="907"><h1>Dynamic HTML Applications</h1></A>
<p>In the beginning, there was just HTML (Hypertext Markup Language). All Web 
pages were inherently static, but they were appealing enough to fuel Web mania. Then 
came Common Gateway Interface (CGI) applications, external applications that ran on 
the server and, for the first time, allowed for pages whose content wasn't fixed. The 
next step toward dynamic content was client-side scripting, routines, or simple 
programs written in macro languages, such as Microsoft Visual Basic, Scripting Edition (VBScript), 
or scripting languages complying with the ECMAScript 
specification, that execute inside the browser. Microsoft has recently delivered new proprietary technologies 
for creating dynamic content in the browser, such as ActiveX Controls and 
ActiveX documents, whereas other vendors have focused mostly on applets written in 
Java. The most interesting, powerful, and widely accepted server-side technology is 
based on server-side scripting and Active Server Pages (ASP). The most powerful way 
to create dynamic pages on the client side is based on Dynamic HTML (DHTML).</p>

<p>All these technologies have some flaws, however. CGI applications aren't 
very efficient, they can't be easily scaled to hundreds of clients, and they aren't powerful enough for large Internet or intranet applications. Client-side scripting is definitely 
more suitable for a Visual Basic programmer, especially if the programmer uses 
VBScript. Alas, VBScript isn't currently supported by Netscape Navigator; therefore, you 
should use it only for intranet installations. Neither does Netscape Navigator support 
ActiveX controls and ActiveX documents. Many Internet developers consider Active 
Server pages (ASP) the best way to deliver pure HTML dynamic pages to any browser, but 
it's a fact that building and maintaining a large ASP-based application isn't a trivial 
task. In addition, scripts on the server aren't the most efficient solution as the number 
of clients increases.</p>

<p>Visual Basic 6 introduces two fresh approaches to Internet programming 
that might be the answer to all your needs because they combine the flexibility of 
proven Internet technologies with the power and the ease of the Visual Basic 
language. <I>DHTML applications </I>are in-process components (DLLs) that run on the client 
machine inside Microsoft Internet Explorer and trap events fired by the elements on the 
DHTML page, such as when the user clicks a button or follows a hyperlink. 
<I>IIS applications </I>(also known as 
<I>WebClasses</I>) are DLLs that run on the server machine inside 
Microsoft Internet Information Server and intercept the requests coming from the client 
browsers. Neither approach can be considered a brand-new technology because they 
simply expand what's already available. But the ability to write an entire Internet 
application using the full-featured Visual Basic language (instead of just a limited script 
language), test it inside the IDE, and then produce optimized and highly scalable 
native code (as opposed to less efficient script code) is very appealing to most developers.</p>

<p>In this chapter, I explain how to create DHTML applications. (I cover 
WebClasses in <a href="ch20a.htm">Chapter 20</a>.) But before diving into the most interesting stuff, we need to go 
over a few basic concepts.</p>

</BODY>
</HTML>






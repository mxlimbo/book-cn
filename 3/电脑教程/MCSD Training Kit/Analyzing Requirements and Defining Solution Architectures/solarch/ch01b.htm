<HTML>
<HEAD>
<TITLE>What Is Architecture?</title>
<link rel="STYLESHEET" type="text/css" href="library.css">


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch01a.htm", "ch01c.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="26"><H1>What Is Architecture?</H1></A>

<p>For the purposes of this book, architecture is a coherent, unified
technology plan. IT architecture emphasizes a holistic framework of
process, interactivity, and technology, intensely focused on achieving
business goals and objectives. An IT architect is a person who designs
and guides a technology plan that is 
coherent and unified. In other words, both the architecture and the
architect provide direction for IT work. By concentrating on these
essentials, an <i>architecture-first approach</i> endeavors to achieve
results that can be implemented effectively, while minimizing
artificial complexity.</p>

<p>A common example of the need for direction is articulated in a scene
from Lewis Carroll's <i>Alice's Adventures In
Wonderland</i>:</p>

<p><blockquote><i>
<p>&quot;Would you tell me, please, which way I ought to go from
here?&quot; asked Alice.</p>

<p>&quot;That depends a good deal on where you want to get to,&quot;
said the Cat.</p>

<p>&quot;I don't much care where,&quot; said Alice.</p>

<p>&quot;Then, it doesn't matter which way you go,&quot; said the
Cat.</p>
</i></blockquote></p>

<p>This example directly speaks to the need of an architecture-first
approach for planning, building, and managing almost any business
activity. So many companies are like Alice, trying to get somewhere
without really knowing where they are trying to go.</p>

<p>At the heart of this architecture-first approach are the simple
questions we can ask regarding any project:</p>

<ul>
<p><li> How did we get to this point?</li></p>

<p><li> How do we know where we are going?</li></p>

<p><li> Why are we going there?</li></p>

<p><li> What tasks are necessary to get there?</li></p>

<p><li> In what order should we do the tasks?</li></p>

<p><li> How will we know when we have arrived?</li></p>

<p><li> What else do we need to consider?</li></p>
</ul>



<p>An architecture-first approach strives to answer these questions
early in the life of a project, and to continually provide a reference
guide throughout the project. Additionally, an architecture-first
approach helps an organization strike the appropriate balance
between:</p>

<ul>
<p><li> Business-driven requirements.</li></p>

<p><li> Critical design decisions.</li></p>

<p><li> Human-resource requirements over the life of the project.</li></p>

<p><li> Financial impacts on the organization.</li></p>
</ul>



<A NAME="27"><H2>Making a Commitment to Architecture-First Design and Practice</H2></A>

<p>Unfortunately, many organizations honor architecture, as well as
project planning, in word but not in deed. Instead of developing a
clear idea of where they want to go, they simply go everywhere, hoping
that where they wind up will be better than where they currently are.
Many senior managers, in fact, feel that the job won't get done if
they take time to plan.</p>

<p>The only way to break out of this cycle is if all management within
an organization makes a commitment to an architecture-first approach.
This approach includes the simple concept that time spent designing and
planning up-front will save time in the end.</p>

<p><div class="note"><blockquote><b>NOTE</b><hr> This commitment to planning does not mean that
work cannot be started until the architecture is established. As we
explain in this and succeeding chapters, we advocate a <i>
plan-while-building approach</i>. In other words, planning, building,
and managing constantly follow one another in an iterative fashion,
often overlapping to some extent.</blockquote></div>
</p>

<p>Being committed to architecture-first design and practice means that
all three parts of the IT task&#8212;planning, building, and
managing&#8212;are based on a coherent, higher-level architecture; that
the architecture has been worked out before the start of the coding
work; and that the architecture drives the work. Before this level of
architecture can take place for an individual application, higher level
architecture and planning must occur for the entire enterprise.</p>

<p>When an organization makes a commitment to architecture-first design
and practice, the natural inclination of its IT department is to start
at the beginning, designing an architecture for the entire enterprise.
Enthusiasm is high, and the IT group thinks nothing is going to stop it
from building a completely comprehensive document and then recreating
the entire IT environment to match.</p>

<p>When the IT department takes a serious look at what is involved,
though, they begin to have second thoughts. The project begins to look
more and more daunting. Finally, they have to ask themselves, &quot;Is
there any way we can get a handle on this? And considering the work
involved, why should we try?&quot;</p>

<p>The majority of our book strives to answer the first question, so
let's quickly address the second. Why should busy IT professionals
spend the time necessary to design and implement an enterprise
architecture? The answer is simple: Every organization has an
enterprise architecture whether or not it is planned. The organization
can assess and plan, or be a victim of a random enterprise architecture
that doesn't necessarily meet its business needs. Only by doing the
work involved in building an enterprise architecture can IT
professionals gain some control.</p>

<A NAME="28"><H2>Challenges of the IT Environment</H2></A>

<p>Consider for a moment the challenges that characterize the business
environment today. We face rapidly changing domestic and global market
conditions, accompanied by diverse and complex products and services.
Management expects shorter product development cycles and faster
times-to-market. To remain competitive, we must continually learn to
understand an increasingly complex technology environment. To deal with
these challenges, organizations may respond with the following measures
(see Figure 1.1):</p>

<ul>
<p><li> Streamlining business processes.</li></p>

<p><li> Flattening organizational hierarchies.</li></p>

<p><li> Introducing complex technologies at a rapid rate.</li></p>
</ul>



<P>
<IMG SRC="images/f01ar01.jpg" WIDTH=404 HEIGHT=244 BORDER=0>
</P><P>
<!-- caption --><b>Figure 1.1</b> <i>Organizational evolutions</i><!-- /caption -->
</P>

<p>As the pace of operational changes accelerates, information systems
must be flexible enough to quickly support them. Consider what's
expected of the typical IT organization in this new and rapidly
changing environment:</p>

<ul>
<p><li> <b>Dual focus</b> It must be specific and intensely concentrated
on the needs of users, while maintaining focus on the business
vision.</li></p>

<p><li> <b>Flexibility</b> It must be able to accommodate a constantly
shifting technology landscape, at the same time coping with the
pressure for &quot;better, faster, cheaper&#8212;now!&quot;</li></p>
</ul>



<p>For the organization to remain competitive, the IT department must
be responsive to changes in business and user requirements. They must
be able to create applications quickly, and be able to modify them just
as quickly. Flexible, incremental development methods that produce
reusable code and reusable components are the key to an
organization's success.</p>

<p>The challenge to most organizations is to respond quickly and
incrementally to business needs at a relatively low financial cost.
Whether an organization is trying to establish a competitive advantage
by beating a competitor to market, to increase service levels and
responsiveness to customer needs, or to deliver a less expensive
product without sacrificing quality, IT plays a vital role. Key
organizational functions such as product development, marketing,
manufacturing, finance, and sales all require IT as an underlying
foundation. These functions also require IT to seamlessly integrate and
cooperate across the organization's functional or operational
boundaries.</p>

<p>Additionally, organizations face enormously challenging application
requirements. New applications are extremely demanding for a multitude
of reasons, including:</p>

<ul>
<p><li> <b>Broad distribution</b> Applications may be distributed
worldwide, via wide area networks (WANs) or the Internet.</li></p>

<p><li> <b>Broad user base</b> There are potentially millions of users for
these applications. In many cases, these users will be unknown to and
outside the control of the company's IT organization.</li></p>

<p><li> <b>Connection limitations</b> Connections between users and
applications might be temporary or of limited bandwidth. For example,
employees might use portable computers that are connected to the
corporate network only part of the time. Customers might connect to the
application via the Internet over a low-speed modem.</li></p>

<p><li> <b>Storage limitations</b> Data required by applications might be
stored on multiple computers. These computers might be geographically
dispersed and might not be available at all times.</li></p>

<p><li> <b>Hardware limitations</b> Existing hardware and software
investments must be leveraged. Users might have different types of
computers with differing capabilities. Data might be stored in
different types of databases. New applications might need to interact
with existing applications running on different platforms.</li></p>
</ul>



<p>Add all these factors together, along with the number of systems in
the environment, and anyone would agree that distributed application
development is just plain <i>hard</i>. The combination of business
problems, technology evolution, and the organization's existing
complex applications drives a consistent set of key concerns for senior
IT professionals. We can sum up these concerns as three
imperatives:</p>

<ul>
<p><li> <b>Deliver business value</b> Tightly align IT to business
objectives.</li></p>

<p><li> <b>Control costs</b> Squeeze every ounce of leverage from existing
IT investments and make careful and informed future investments.</li></p>

<p><li> <b>Sense and respond</b> Improve the cross-functional capabilities
within the organization and extend those capabilities outside the
organization to reach customers, suppliers, and partners more
effectively.</li></p>
</ul>



<A NAME="29"><H2>How Enterprise Architecture Responds to IT Challenges</H2></A>

<p>Technology implementation can either accelerate or impede an
organization's ability to adapt to changing business conditions.
Today's IT solutions must fully meet business requirements, be
sufficiently flexible to integrate new and emerging technologies, and
yet not compromise the functionality and daily operations of the
existing enterprise architecture. With these concepts in mind, any
approach to enterprise architecture should:</p>

<ul>
<p><li> Place first priority on addressing business needs.</li></p>

<p><li> Provide a technical solution that focuses on making the simple
things easy and the hard things possible and cost-effective.</li></p>

<p><li> Deliver the flexibility required to adapt to the natural
evolution of technology and business.</li></p>
</ul>



<p>A key factor in achieving these goals is to establish a
comprehensive, high-level enterprise architecture. The enterprise
architecture provides the framework for an ongoing process of discovery
and refinement. This process is implemented as a series of projects
geared towards getting the entire organization's IT infrastructure
and application systems to their desired future state. This approach
creates a strong framework for aligning IT strategy and day-to-day
activities with the overall business strategy.</p>

<A NAME="30"><H2>Goal of Enterprise Architecture</H2></A>

<p>As we noted in the opening discussion about architecture, providing
a direction or goal is an important part of the architecture task. The
goal when developing an enterprise architecture is:</p>

<p><blockquote><i>
To provide a logically consistent plan of activities and coordinated
projects that guide the progression of an organization's
application systems and infrastructure. The plan should move
incrementally from the current state to a desired future state based on
current and projected business objectives and processes.</i></blockquote></p>

<p>Let's examine this goal in more detail:</p>

<ul>
<p><li> <b>Logically consistent</b> When two or more parts of the
architecture are compared, they fit together logically.</li></p>

<p><li> <b>Activities and coordinated projects</b> The architecture
addresses both ongoing activities and stand-alone projects.</li></p>

<p><li> <b>Progression from current state to desired future state</b> The
architecture does more than simply describe the current situation. It
also offers a vision of the desired future situation. Most importantly,
the architecture articulates a clear path to get from the current
situation to the desired situation through versioned releases.</li></p>

<p><li> <b>Current and projected business objectives and processes</b> An
enterprise architecture plan is ultimately worthless if it is not built
upon both the current business situation and the projected business
plan and processes. It is possible, however, for the business plan to
be shaped by developments in the IT arena, such as global Internet
access, which is driving the creation of electronic commerce divisions
within companies.</li></p>
</ul>



<p>It is important to remember these points while considering the
details of enterprise architecture in the rest of this chapter.
It's also important to use these points to analyze the completeness
of any enterprise architecture plan.</p>

</BODY>
</HTML>



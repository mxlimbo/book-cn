<HTML>
<HEAD>
<TITLE>Chapter 9 -- Summary</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">

</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch09d.htm", "ch09f.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>


<A NAME="366"><H1>Summary </H1></A>

<P>MTS simplifies development of distributed, component-based applications because you can use your existing skills with Visual Basic to build sophisticated n-tier applications. In MTS applications, application logic components run under the control of MTS and are invoked by presentation services running on various types of clients.</P>

<P>An MTS component is a COM DLL that executes in the MTS run-time environment and uses DCOM to communication between components. Because of this, DCOM support for Windows 95 must be installed on Windows 95 clients. In addition, Windows NT clients must install Windows NT Service Pack 3 or later to ensure DCOM support. Most MTS components run on a remote server, and most of component development is done on a workstation. To configure a development computer to use the MTS type libraries, you should choose the Transaction Server Development option when you set up MTS. When developing MTS components with Visual Basic, you should also make sure that the Binary Compatibility option is set for the project. This will ensure the CLSIDs and IIDs for the component will maintain compatibility on each compile.</P>

<P>When a COM DLL is added to MTS, the CLSIDs for its components are modified to reroute the activation requests made by clients to MTS. Transactional components must request a reference to an ObjectContext object by calling the GetObjectContext function. Then, other instances of MTS objects can be used to complete a series of tasks within a single transaction. When working with transactions, use the SetComplete and SetAbort methods to notify MTS of the completion status of the work performed by your object.</P>

<P>After you have developed and tested your MTS application in a development environment, you will deploy the application to production servers and clients by creating an MTS package. You can then add your components to the package and export it. A Clients folder is created with the package, and contains an executable file that you can use to configure a client computer to access the package components.</P>

</BODY>
</HTML>




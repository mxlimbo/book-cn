<HTML>
<HEAD>
<TITLE>Lab: Using Programmatic Security in an MTS Component </TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">

</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch10f.htm", "ch10h.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>


<A NAME="409"><H1>Lab: Using Programmatic Security in an MTS Component </H1></A>

<P>In this lab, you will add a role to the MTS package that you created in lab 9. You will then add a user to the role and write code in the Chateau.dll to implement programmatic security. The code that you write will check to see if security is enabled, and make sure that the calling client is in the package's role.</P>

<img src="images/video.gif" width=78 height=54 border=0>

<P>To see a demonstration of this lab, run the Lab10.exe animation located in the Animations folder on the Supplemental Course Materials CD-ROM that accompanies this book. </P>

<p><div class="note"><blockquote><b>NOTE</b><hr>
Before you can complete this lab, you must have imported the Chateau database into SQL Server by completing the lab in Chapter 9, &quot;<A HREF="ch09a.htm#329">Using Microsoft Transaction Server</A>.&quot;
</blockquote></div></p>


<b>Estimated lesson time: 45 minutes</b>


<A NAME="410"><H2>Exercise 1: Adding a Role to your MTS Component</H2></A>

<P>In this exercise, you will use MTS to create a Front-Desk role in the Chateau package that you created in lab 9.</P>

<P><li><B> To add a role to the Chateau package</B></li></P>

<ol>
<p><li>If you have completed lab 9, skip to step 3. If you have not completed lab 9, add a new package to MTS.</li></p>

<p>The Package Wizard appears, as illustrated in Figure 10.18.</p>

<P>
<A HREF="javascript:fullSize('F10xx18x.htm')"> <img src="images/F10xx18.JPG" width=404 height=374 border=0 ALT = "Click to view at full size."> </A>
</P><P>
<!--caption--><b>Figure 10.18</b> <i>Adding a new package with the Package Wizard</i><!--/caption-->
</P>


<p><li>Click <B>Install pre-built packages</B>, and select the Chateau.pak file located in the Labs\Lab10\Partial\Build folder.</li></p>

<p><li>Enable security authentication on the Chateau package.</li></p>

<p><li>Set the Chateau package to run as the interactive user.</li></p>

<p><li>Add a role to the Chateau package named Front-Desk, as illustrated in Figure 10.19.</li></p>

<P>
<A HREF="javascript:fullSize('F10xx19x.htm')"> <img src="images/F10xx19.JPG" width=404 height=269 border=0 ALT = "Click to view at full size."> </A>
</P><P>
<!--caption--><b>Figure 10.19</b> <i>The Front-Desk role added to the Chateau package</i><!--/caption-->
</P>


<p><li>Add a new user to the Front-Desk role.</li></p>

<p>You can use an existing user account on your Windows NT domain or create a test user account. The illustration in Figure 10.20 shows a new user account named MTSTestUser added to the Front-Desk role.</p>

<P>
<A HREF="javascript:fullSize('F10xx20x.htm')"> <img src="images/F10xx20.JPG" width=404 height=229 border=0 ALT = "Click to view at full size."> </A>
</P><P>
<!--caption--><b>Figure 10.20</b> <i>MTSTestUser user account added to the Front-Desk role</i><!--/caption-->
</P>


</ol>

<A NAME="411"><H2>Exercise 2: Writing Code to Implement Programmatic Security</H2></A>

<P>In this exercise, you will use the IsSecurityEnabled and IsCallerInRole methods to allow access to the CheckInGuest method of the CService component in the Chateau package.</P>

<P><li><B> To use programmatic security in the CService component</B></li></P>

<ol>
<p><li>Open the Chateau.vbp project that you created in Lab 9.</li></p>

<p><li>Call the IsSecurityEnabled method of the ctxObject variable declared in the CheckInGuest method.</li></p>

<p>If security is not enabled on the package, do not allow access to the caller. Use the Exit Function statement and return a value of False if security is not enabled.</p>

<p><li>Call the IsCallerInRole method of the ctxObject variable to determine if the caller is in the Front-Desk role.</li></p>

<p>If the caller is not in the Front-Desk role, do not allow access. Your code should look similar to the following.</p>

<P><TABLE CELLPADDING=5 WIDTH="95%"><TR><TD><PRE>
If Not ctxObject.IsCallerInRole(&quot;Front-Desk&quot;) Then
    ' Invalid user - do not allow access
    CheckInGuest = False
    Exit Function
End If
</pre></td></tr></table></p>

<p><li>Right-click the <B>Chateau</B> package in MTS, then click <B>Shut</B> <B>Down</B>.</li></p>

<p><li>Recompile the Chateau.vbp project.</li></p>

<p><li>From the <B>Run</B> menu, click <B>Start</B>.</li></p>

<p>If the Debugging tab of the Project Properties dialog box appears, select <B>Wait for components</B> to be created, then click <B>OK</B>.</p>

<p>This will run your MTS component interactively in Visual Basic.</p>

<p><li>Log into your Windows NT domain with the user account that you implemented in the Front-Desk role of the Chateau package.</li></p>

<p><li>Run the client project that you created in lab 9 and enter the last name <B>Chai</B>, first name <B>Sean</B>, and Check-in date <B>5/26/99</B>, then click the <B>Check</B> <B>In</B> button.</li></p>

<p>If you did not complete lab 9, you can run the Lab10.vbp project located in the Labs\Lab10\Solution folder. The check-in process is successful because the user account is in the Front-Desk role.</p>

<p><li>Stop the Chateau project, stop the client project, and save the changes made to your projects.</li></p>

<p><li>Log into your Windows NT domain with a user account that is not mapped to the Front-Desk role of the Chateau package.</li></p>

<p><li>Run the Chateau.vbp project.</li></p>

<p><li>Run the client project that you created in lab 9 and enter the last name <B>Oberg</B>, first name <B>Bruce,</B> Check-in date <B>4/8/99</B>, then click <B>Check</B> <B>In</B>.</li></p>

<p>The guest was not checked-in successfully because the calling client is not in the Front-Desk role.</p>

<p><li>Stop the Chateau project and then stop the client project.</li></p>
</ol>

</BODY>
</HTML>




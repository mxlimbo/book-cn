<HTML>
<HEAD>
<TITLE>Chapter 2 -- Summary</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">

</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch02c.htm", "ch02e.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>


<A NAME="111"><H1>Summary </H1></A>

<P>When creating an application, you can add ActiveX controls to increase the functionality of your application.  The two types of ActiveX controls are the standard controls, which Visual Basic includes in the Toolbox by default, and custom controls.  The Professional edition and Enterprise edition of Visual Basic allow you to create your own ActiveX controls. You use the Components dialog box to add custom controls to the Toolbox. Remember to register ActiveX controls, if necessary, before adding them to your project. To reduce file size and overhead, remove any unused ActiveX controls in your project before you package it.</P>

<P>To group controls that share the same name, type, and event procedures, use a control array. Controls retain their individual property settings when you use control arrays. Creating controls at run time consists of using the Load statement and Add method of the Controls collection.  To delete controls, simply use the Unload statement and Remove method.</P>

<P>Visual Basic events are triggered by either the operating system or by a user's action.  A single user action can trigger one or more events. An object's type determines its events. Each object fires its events independently. Form events fire in this order: Initialize, Load, Activate/Deactivate, QueryUnload, Unload, and Terminate.</P>

<P>Menus facilitate navigation in an application.  The tool that creates the menu is the Menu Editor with which you can create menus such as pop-up menus. Use control arrays to add or delete menus and menu items at run time. To hide a run time menu, use the Hide method or set a menu control's Visible property to false.</P>

<P>The two validation methods that Visual Basic offers are form-level validation and the field-level validation. Use the form-level validation to check all data entered into controls on a form, and be sure and include visual cues for the user. Use field-level validation to check the data entered into each field individually.</P>



</BODY>
</HTML>




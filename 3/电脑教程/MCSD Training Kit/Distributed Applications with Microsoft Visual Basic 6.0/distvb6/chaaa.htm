<HTML>
<HEAD>
<TITLE>Appendix A -- Questions and Answers</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">


</head>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch11f.htm", "chaba.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>




<A NAME="447"><H1>Appendix A -- Questions and Answers</H1></A>

<A NAME="448"><H2>Chapter 1</H2></A>

<A NAME="449"><H3>Review Questions</H3></A>

<ol>

<p><li><a name="100"> Identify and explain the design model from the Microsoft Solutions Framework that you focus on in this course.</a></li></p>

<P><B>In this course, you will focus on key areas of the Solutions Design Model and the design phases involved in the model. The Solutions Design Model provides a step-by-step strategy for designing business-oriented solutions driven by a specific business need. The Solutions design model consists of conceptual, logical, and physical design phases.</B></P>

<p><li><a name="101"> Discuss the purpose of the DCOM configuration tool.</a></li></p>

<P><B>The DCOM configuration tool (Dcomcnfg.exe) allows you to specify the location on which a DCOM application will run. In addition, you can change security settings to specify users that can access DCOM applications, and to set authentication and impersonation levels.</B></P>

<p><li><a name="102"> Explain these terms and state whether they relate to distributed or enterprise applications: scalable, extensive, mission critical, and efficient.</a></li></p>

<ul>
<p><li><b> Scalable applications adapt to increases in workload and number of users.</b></li></p>

<p><li><b> Extensive applications can manipulate huge amounts of data and utilize parallel processing, network-distributed resources, includes complex logic.</b></li></p>

<p><li><b> Mission critical applications must be robust enough to sustain continuous operation.</b></li></p>

<p><li><b> Efficient applications do their work quickly and are effective at helping  users reach their goals.</b></li></p>
</ul>

<p><li><a name="103"> Although there can be more than three tiers in a distributed application, what are the three typical layers in a distributed application?</a></li></p>

<P><B>A typical distributed application consists of three elements: presentation, application logic, and data services.</B></P>

</ol>

<A NAME="450"><H2>Chapter 2</H2></A>

<A NAME="451"><H3>Review Questions</H3></A>

<ol>

<p><li><a name="104"> Discuss the three sources of ActiveX controls and the steps you must take to use them in a project.</a></li></p>

<P><B>Types of controls:</B></P>

<P><B>Standard</B></P>

<P><B>Common</B></P>

<P><B>Third-party</B></P>

<P><B>From the Project menu, select Components. Select the contols you want to add to your project.</B></P>

<p><li><a name="105"> Explain how to create controls at run time.</a></li></p>

<P><B>Using the Add and Remove methods or the Load and Unload statements.</B></P>

<p><li><a name="106"> Discuss the Controls collection in Visual Basic, including its properties, use, and how to create it.</a></li></p>

<P><B>A collection is a grouping of related objects. There are many types of collections in Visual Basic. A project can have a collection of forms and a form can have a collection of controls. </B></P>

<P><B>You can use the For Each...Next statement or the For...Next statement to enumerate the members in a collection. Use the Add method to add items to your collection.</B></P>

<p><li><a name="107"> Explain how to create a menu or menu item at run time.</a></li></p>

<P><B>You must use a control array to create a menu control at run time. Each time you add a menu item to the array at run time, additional menu controls are loaded into the array, making the menu grow.</B></P>

<P><B>You can create a menu dynamically by using the Load statement. Controls created at run time can be hidden by using the Hide method or by setting the control's Visible property to False. If you want to remove a control in a control array from memory, use the Unload statement.</B></P>

<p><li><a name="108"> Explain the difference between form-level and field-level validation.</a></li></p>

<P><B>Form-level validation takes place after a user has filled in all fields on a form.</B></P>

<P><B>Field-level validation takes place as each field on a form is filled in.</B></P>

</ol>

<A NAME="452"><H2>Chapter 3</H2></A>

<A NAME="453"><H3>Review Questions</H3></A>

<ol>

<p><li><a name="109"> Identify the three types of property procedures in Visual Basic and state when you would use them.</a></li></p>

<P><B>The three types of property procedures are Property Get, Property Let, and Property Set. Property Get procedures return the current property value. Property Let procedures change the value of the property. Property Set procedures change the value of a property, but are used for properties that have an Object data type.</B></P>

<p><li><a name="110"> Identify the built-in events for class modules and explain custom events.</a></li></p>

<P><B>Built-in events for class modules include Initialize and Terminate. You can also create your own event procedures-called custom events-to provide notification to client applications.</B></P>

<p><li><a name="111"> Explain the process for using a class module in an application.</a></li></p>

<P><B>To use a class module is to create an instance of the class. An instance of a class is called an object. You can instantiate an object using the Dim As New statement, the New operator, or the CreateObject function. When you instantiate an object, you can use its properties, methods, and events.</B></P>

<p><li><a name="112"> Explain early and late binding and the effect of each on the performance of an application.</a></li></p>

<P><B>When you set a reference to an object's type library, you can use early binding by declaring the object variable by its type. For example:</B></P>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>Dim XL As Excel.Application</pre>
</td></tr>
</table>
</p>

<P><B>Early binding is always faster than late binding; however, you can use late binding when you don't know what type of object will be created until run time. When you use late binding, you declare your object variable As Object. For example:</B></P>

<P><B>Dim XL As Object</B></P>

</ol>

<A NAME="454"><H2>Chapter 4</H2></A>

<A NAME="455"><H3>Review Questions</H3></A>

<ol>

<p><li><a name="113"> How does COM relate to interface-based programming?</a></li></p>

<P><B>COM is an interfaced-based programming model that provides the ability for objects to communicate with each other both in-process and out-of-process. </B></P>

<p><li><a name="114"> What is the role of interfaces in COM?</a></li></p>

<P><B>In COM, communication between components is achieved through the use of interface pointers. For example, when a client application calls a method of a COM object, the client uses the interface pointer to access the method.</B></P>

<p><li><a name="115"> What reasons are there for creating custom interfaces?</a></li></p>

<P><B>Creating custom interfaces allows you to use polymorphism in your appliciations. Polymorphism is a powerful object-oriented programming feature that can help you write code more effectively. In addition, you can create custom interfaces to provide version compatibility for components.</B></P>

<p><li><a name="116"> What are custom business objects and what are they used for?</a></li></p>

<P><B>Custom business objects implement the business rules for an application and are part of the middle-tier of a three-tier architecture. The goal of business objects is to separate the business rules from application logic. This separation helps to protect client and data tier from having to be updated. Custom business objects are created from middle-tier components. These middle-tier components contain business rules. The goal of business objects is to separate business rules and application logic.This separation helps protect business rules and data from redistribution.</B></P>

<p><li><a name="117"> What is an object model and how do they benefit software development?</a></li></p>

<P><B>An object model is a hierarchical representation of objects that exists within an applications framework. The object models that you create for your applications give your objects structure and priority. An object model is composed of objects and collections that can be reused by other developers.</B></P>

</ol>

<A NAME="456"><H2>Chapter 5</H2></A>

<A NAME="457"><H3>Review Questions</H3></A>

<ol>

<p><li><a name="118"> What is Universal Data Access?</a></li></p>

<P><B>Universal Data Access (UDA) is the Microsoft strategy for providing access to all types of information across the enterprise. It provides high-performance access to a variety of information sources including relational data and non-relational data. These data sources include mainframe ISAM/VSAM, hierarchical databases, e-mail, file systems, text, and graphical data.</B></P>

<p><li><a name="119"> What is OLE DB and how does it relate to ADO?</a></li></p>

<P><B>OLE DB is the Microsoft strategic low-level interface that enables Universal Data Access. Microsoft ActiveX Data Objects (ADO) is the Microsoft strategic, high-level interface to all kinds of data. Because ADO is built on top of OLE DB, ADO benefits from the universal data access infrastructure.</B></P>

<p><li><a name="120"> What is the difference between a dynamic cursor and a keyset cursor?</a></li></p>

<P><B>Dynamic cursors allow you to view additions, changes, and deletions by other users. They also allow all types of movement through the recordset. A keyset cursor behaves like a dynamic cursor, except that it prevents you from seeing records that other users add and prevents access to records that other users delete. Data changes by other users are still visible.</B></P>

</ol>

<A NAME="458"><H2>Chapter 6</H2></A>

<A NAME="459"><H3>Review Questions</H3></A>

<ol>

<p><li><a name="121"> What is the property of the Connection object that contains information about the data source, such as server name?</a></li></p>

<P><B>ConnectionString</B></P>

<p><li><a name="122"> Why should you consider using an explicit connection when creating a Recordset object?</a></li></p>

<P><B>Although a recordset can create its own implicit connection, client and server resources are used for all connections to a data source. Using an existing Connection object saves on system resources and is more efficient because more than one recordset can be created from a single connection.</B></P>

<p><li><a name="123"> What are the two properties of a text box that are used to bind it to a recordset object?</a></li></p>

<P><B>DataSource and DataField</B></P>

</ol>

<A NAME="460"><H2>Chapter 7</H2></A>

<A NAME="461"><H3>Review Questions</H3></A>

<ol>

<p><li><a name="124"> What are the ACID properties for a transaction?</a></li></p>

<ul>
<p><li><b>Atomicity</b></li></p>

<P><B>A transaction must be an atomic unit of work; either all of its data modifications are performed, or none of them is performed. </B></P>

<p><li><b>Consistency</b></li></p>

<P><B>When completed, a transaction must leave all data in a consistent state. In a relational database, all rules must be applied to the transaction's modifications to maintain all data integrity. All of the data source's internal data structures must be accurate at the end of the transaction. </B></P>

<p><li><b>Isolation</b></li></p>

<P><B>Isolation is the ability to shield transactions from the effects of updates performed by other concurrent transactions. Modifications made by one transaction must be isolated from the modifications made by any other coexisting transactions. A transaction either sees data in the state it was in before another transaction modified it, or it sees the data after the second transaction has completed. However, it does not see an intermediate state. </B></P>

<p><li><b>Durability</b></li></p>

<P><B>Durability means that after a transaction has completed, its effects are permanently in place in the system. The modifications persist even in the event of a system failure, and automatically roll back any uncompleted transactions to the point of the system failure.</B></P>
</ul>

<p><li><a name="125"> What methods can you use to manage transactions in your applications?</a></li></p>

<P><B>Your application can manage explicit transactions by using one of three transaction methods: BeginTrans, RollbackTrans, or CommitTrans.</B></P>

<p><li><a name="126"> What is a cursor? What two locations can cursors exist?</a></li></p>

<P><B>A cursor is a database object used by applications to manipulate data by rows. The cursor is called a client-side cursor when these resources are located on the client machine. The cursor is called a server-side cursor when these resources are located on the server machine.</B></P>


<p><li><a name="127"> When working with disconnected Recordsets, what is the difference between the Update and UpdateBatch methods?</a></li></p>

<P><B>While disconnected from the data source, you can use the Update method to apply changes to the disconnected recordset cached on the client. Once you reconnect to the data source, you can use the ADO UpdateBatch method to apply changes to the actual data source. The UpdateBatch method applies all pending new, updated, and deleted records to the Recordset object.</B></P>

<p><li><a name="128"> What is the difference between a will event and a complete event?</a></li></p>

<P><B>Event handlers that are called after an operation completes are referred to as complete events. Some complete events are BeginTransComplete, ConnectComplete, ExecuteComplete, FetchComplete, and CommitTransComplete.</B></P>

<P><B>Events that are called before an operation starts, allowing you to examine or modify the operation parameters, are referred to as will events. Some will events are WillConnect, WillExecute, WillMove, WillChangeField, WillChangeRecord, and WillChangeRecordset.</B></P>

<p><li><a name="129"> What are the isolation levels supported by SQL Server?</a></li></p>

<P><B>SQL-92 defines four isolation levels, all of which are supported by SQL Server: </B></P>

<ul>
<p><li><b>Read uncommitted</b></li></p>

<P><B>Read uncommitted is the lowest level where transactions are isolated just enough to ensure that physically corrupt data is not read.</B></P>

<p><li><b>Read committed</b></li></p>

<P><B>The Read committed isolation level is the SQL Server default level. A transaction operating at the Read Committed level cannot see changes made by other transactions until those transactions are committed.</B></P>

<p><li><b>Repeatable read</b></li></p>

<P><B>A transaction operating at the Repeatable Read level is guaranteed not to see any changes made by other transactions in values it has already read.</B></P>

<p><li><b>Serializable</b></li></p>

<P><B>The serializable isolation level is the highest level, where transactions are completely isolated from one another. A transaction operating at the Serializable level guarantees that all concurrent transactions interact only in ways that produce the same effect as if each transaction were executed separately one after the other. At this isolation level, dirty reads, nonrepeatable reads, and phantoms are not possible.</B></P>
</ul>

<p><li><a name="130"> What are the three types of transactions supported by SQL Server?</a></li></p>

<P><B>SQL Server operates in three transaction modes: </B></P>

<ul>
<p><li><b>Autocommit transactions </b></li></p>

<P><B>Each individual SQL command issued to the database is a transaction. </B></P>

<p><li><b>Explicit transactions </b></li></p>

<P><B>Each transaction is explicitly started with the Begin Transaction statement and explicitly ended with a Commit or Rollback statement. The ADO methods equivalent to the Begin Transaction, Commit, and Rollback statements are: BeginTrans, CommitTrans, and RollbackTrans.</B></P>

<p><li><b>Implicit transactions </b></li></p>

<P><B>A new transaction is implicitly started when the prior transaction completes, but each transaction is explicitly committed or rolled back.</B></P>
</ul>
</ol>

<A NAME="462"><H2>Chapter 8</H2></A>

<A NAME="463"><H3>Review Questions</H3></A>

<ol>

<p><li><a name="131"> What are stored procedures and how do they benefit your applications?</a></li></p>

<P><B>A stored procedure is a precompiled object that contains one or more SQL statements, and is processed as a single task. By coding business logic into a single stored procedure, you provide a single point of control for ensuring that business rules are correctly enforced. This can be extremely useful when building a client/server application that accesses a SQL Server database because stored procedures can encapsulate business rules and integrity rules so that the rules do not need to be addressed on the client or in a middle tier component.</B></P>

<p><li><a name="132"> How do you use the ADO Command object to run a stored procedure with parameters?</a></li></p>

<P><B>The Command object allows you to run stored procedures using the Execute method. ADO Parameter objects represent a stored procedure parameter. To create a Parameter on the Command object, use the Append and CreateParameter methods. The CreateParameter method allows you to set the name of the parameter and its data type. You can also specify the optional Direction argument to specify if the parameter is used for input or output.</B></P>

<p><li><a name="133"> How can you create a stored procedure?</a></li></p>

<P><B>You can create stored procedures in SQL Server using the Create Procedure Transact-SQL statement. You can also use the Data View window in Visual Basic to create stored procedures in a database.</B></P>

<p><li><a name="134"> When are all transactions included in a nested transaction committed to the database?</a></li></p>

<P><B>The entire transaction is either committed or rolled back based on whether or not the outermost transaction is committed. If the outer transaction is committed, the inner nested transactions are also committed. If the outer transaction is rolled back, then all inner transactions are also rolled back, regardless of whether or not the inner transactions were individually committed.</B></P>

<p><li><a name="135"> How can you create multiple Recordsets? How do you work with more than one recordset at a time in ADO?</a></li></p>

<P><B>Multiple Recordsets can be generated by a stored procedure that contains more than one Select statement. You can use the NextRecordset method of the ADO Recordset object to retrieve multiple Recordset objects.</B></P>

</ol>

<A NAME="464"><H2>Chapter 9</H2></A>

<A NAME="465"><H3>Review Questions</H3></A>

<ol>

<p><li><a name="136"> What benefits does MTS provide in developing n-tier applications?</a></li></p>

<P><B>MTS provides the required infrastructure, or plumbing code, that enables systems to operate efficiently and the business function to be shared by a large number of users. When you develop n-tier applications with Visual Basic, you create components as COM DLLs that run on middle-tiered servers under the control of MTS.</B></P>

<p><li><a name="137"> What is the object brokering service that MTS provides?</a></li></p>

<P><B>MTS acts as an object broker by servicing requests made from various clients for instances of a component. MTS acknowledges requests for object creation from remote clients and coordinates the creation, maintenance, and destruction of COM component instances.</B></P>

<p><li><a name="138"> What must be installed to use MTS with Windows 95 clients?</a></li></p>

<P><B>DCOM support for Windows 95 must be installed on Windows 95 clients. In addition, Windows NT clients must have service pack 3 or greater installed to support DCOM. Windows 98 clients support DCOM by default.</B></P>

<p><li><a name="139"> What is the purpose of setting security on the System package in MTS?</a></li></p>

<P><B>When MTS is installed, the System package does not have any users mapped to the administrator role. Therefore, security on the System package is disabled, and any user can use the MTS Explorer to modify package configuration on that computer. If you map users to System package roles, MTS will check roles when a user attempts to modify packages in the MTS Explorer.</B></P>

<p><li><a name="140"> How do you configure your development computer to use the MTS libraries?</a></li></p>

<P><B>In order to use MTS type libraries, you choose the Transaction Server Development option when you install MTS.</B></P>

<p><li><a name="141"> How do you move your COM DLL into MTS after it has been developed?</a></li></p>

<P><B>After you compile your DLL, you move the DLL into MTS by dragging and dropping its file into an existing package in MTS Explorer. You can also create a new package and add components to it by using the MTS Explorer.</B></P>

<p><li><a name="142"> What does the GetObjectContext function do?</a></li></p>

<P><B>The GetObjectContext function returns a reference to a context object associated with the current MTS object.</B></P>

<p><li><a name="143"> When using transaction with MTS components, how do methods that run for an object indicate whether it has completed work successfully or unsuccessfully?</a></li></p>

<P><B>If the work has completed successfully, the component calls the SetComplete method on the ObjectContext object before returning from the method call. If an operation fails, the component calls the SetAbort method.</B></P>

</ol>

<A NAME="466"><H2>Chapter 10</H2></A>

<A NAME="467"><H3>Review Questions</H3></A>

<ol>

<p><li><a name="144"> How is Windows NT security related to security in an n-tier application?</a></li></p>

<P><B>Most security controls in n-tier applications are based on the principles of authentication, access control, encryption, and system integrity. For a resource to be protected or secured, the resource must be accessible to authorized users and inaccessible to unauthorized users. Windows NT ensures this by controlling access to resources based on associations between users and resource (user-level security).</B></P>

<p><li><a name="145"> How is security implemented in a two-tier application different from security implemented in an n-tier application?</a></li></p>

<P><B>In a typical two-tier application, each user logs on to the database server, and is given different rights. In an n-tier application, multiple concurrent users connect to a database via a component with the same identity, thereby improving scalability.</B></P>

<p><li><a name="146"> How do you implement integrated security in SQL Server?</a></li></p>

<P><B>Integrated security allows a SQL Server to use Windows NT authentication to validate SQL Server logins for all connections. Therefore, a SQL client must have a valide Windows NT account. This way, users have a single login ID and password for both Windows NT and SQL Server.</B></P>

<p><li><a name="147"> How are roles used in MTS?</a></li></p>

<P><B>You create roles for MTS packages based on types of users. This concept is similar to creating a group account in Windows NT. After you create a role in MTS, you can add users with valid Windows NT accounts to the role. Users that belong to a role can act as clients to create MTS components in that package.</B></P>

<p><li><a name="148"> What is the difference between declarative and programmatic security?</a></li></p>

<P><B>Declarative security is configured with the MTS Explorer. You can control access to packages, components, and interfaces by defining roles that determine which users are allowed to invoke a component. </B></P>

<P><B>Programmatic security is code written in a component to determine if a client is authorized to perform the requested operation.</B></P>

</ol>

<A NAME="468"><H2>Chapter 11</H2></A>

<A NAME="469"><H3>Review Questions</H3></A>

<ol>

<p><li><a name="149"> What does the Immediate window allow you to do while debugging?</a></li></p>

<P><B>When you are debugging, you can use the Immediate window to evaluate expressions, change the value of variables, or execute different procedures.</B></P>

<p><li><a name="150"> How can setting the Break when Value is True option for a watch help you to debug your code?</a></li></p>

<P><B>Instead of stepping through a loop in your program one statement at a time, you can set a watch expression to put your application into break mode when a counter variable reaches a certain value.</B></P>

<p><li><a name="151"> What are two properties of the Err object that can be useful in determining the cause of an error within an error handler?</a></li></p>

<P><B>The Err object's Number property provides the Visual Basic error code. If you want the user to see a description of the error, use the Description property of the Err object.</B></P>

<p><li><a name="152"> What is the best way to debug a COM DLL in Visual Basic? A COM EXE?</a></li></p>

<P><B>Although you can test a COM DLL in a separate instance of Visual Basic than the client application, you should add a Standard EXE project to the COM DLL's project group, and test the in-process component within a single instance of Visual Basic. Conversely, to test a COM EXE you must run the component within one instance of Visual Basic, and run the test application in a second instance of Visual Basic.</B></P>

<p><li><a name="153"> What must you do before debugging an MTS component in Visual Basic?</a></li></p>

<P><B>To test and debug an MTS component in Visual Basic, you must build your component into a DLL and set binary compatibility on the project.</B></P>

<p><li><a name="154"></a><a name="155"></A> When you identify an MTS error in the Windows NT event log, how can you find out more information about the error?</li></p>

<P><B>Selecting an entry in your log and pressing Enter activates an Event Detail, which provides further information about the system event.</B></P>
</ol>

</BODY>
</HTML>




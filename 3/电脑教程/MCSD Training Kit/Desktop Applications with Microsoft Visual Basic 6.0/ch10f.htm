<HTML>
<HEAD>
<TITLE>Chapter 10 -- Summary</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch10e.htm", "ch10g.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="562"><H1>Summary</H1></A>

<A NAME="563"><H3>Overview of Creating COM Components</H3></A>

<P>An out-of-process component is an .exe file that runs in its own process, with its own thread of execution. Out-of-process servers can run either on a local computer or on a remote computer on a network.</P>

<P>An in-process component, such as an ActiveX DLL or an ActiveX control (.ocx file), runs in the same process as the client. It provides the fastest way of accessing objects, because property and method calls don't have to send and receive data across process boundaries.</P>

<P>In general, an ActiveX component that has been implemented as part of an executable file (.exe file) is an out-of-process server and runs in its own process. </P>

<P>An ActiveX component that has been implemented as part of a dynamic-link library is an in-process server and runs in the same process as the client application. </P>

<A NAME="564"><H3>Creating ActiveX Controls</H3></A>

<P>Creating the user interface for an ActiveX control is similar to creating a standard Visual Basic form. You draw controls and then provide the code that defines the behavior of those controls.</P>

<P>When you design a control, you take advantage of the functionality of existing controls and also add your own functionality. You choose which pieces of functionality from existing controls you wish to make available to the user of your custom control.</P>

<P>When you add an ActiveX control to a program, it becomes part of the development and run-time environment, and provides new functionality for your application.</P>

<P>To use the control in an application, place the control on a form; this creates a design-time instance of that control. When a user runs the application containing the control, Visual Basic creates a run-time instance of the control.</P>

<A NAME="565"><H3>Creating ActiveX Code Components</H3></A>

<P>COM executable programs and DLLs are libraries of classes. Client applications use COM objects by creating instances of classes provided by the COM .exe or .dll file. </P>

<P>With Visual Basic, you can build code components to run in-process, which allows faster access to their objects, or out-of-process, so that they have separate threads of execution from their clients. Visual Basic provides project templates for each type of components: ActiveX DLLs and ActiveX EXEs.</P>

<P>The value of the Instancing property of a class determines whether it is private or available for other applications to use. The values can be:</P>
<ul>
<p><li>PublicNotCreatable</li></p>
<p><li>MultiUse</li></p>
<p><li>GlobalMultiUse</li></p>
<p><li>SingleUse</li></p>
<p><li>GlobalSingleUse</li></p>
</ul>
<P>Because components exist to provide objects for clients, it is hard to test them by themselves. You must create a client application. When you test your component, be sure to utilize all of its features. </P>

<P>You can also use the Object Browser to examine and add description strings, and to verify that Help topics are correctly linked.</P>

<A NAME="566"><H3>Using the Visual Component Manager</H3></A>

<P>Visual Component Manager addresses the three main requirements for storing and organizing components: publishing, finding, and reusing them. It provides a single source to organize, find, and insert components into your project. It can also be the centralized location for approved project programming conventions, functional specifications, and architectural models and diagrams.</P>

<P>The Visual Component Manager Publish Wizard simplifies publishing a component for reuse. You provide information that tells Visual Component Manager:</P>
<ul>
<p><li>Where and how to store the component.</li></p>
<p><li>How to manage the component's interaction with the Visual Studio and other development environments.</li></p>
<p><li>How to identify the component with keywords and search attributes, so that other developers who wish to reuse it can locate it easily.</li></p>
</ul>

</BODY>
</HTML>






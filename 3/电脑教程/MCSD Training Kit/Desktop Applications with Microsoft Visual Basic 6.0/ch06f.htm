<HTML>
<HEAD>
<TITLE>Chapter 6 -- Summary</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch06e.htm", "ch06g.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="324"><H1>Summary</H1></A>

<A NAME="325"><H3>Introduction to COM</H3></A>

<P>The Component Object Model (COM) is Microsoft's standard for software interoperability. ActiveX technology is based on COM.</P>

<P>Object oriented programming (OOP) is a way to build object-based software components; ActiveX is a technology that allows you to combine object-based components created by many different tools. Class modules are the foundation of OOP. </P>

<P>The COM components that you can create with Visual Basic are:</P>

<ul>
<p><li>ActiveX controls</li></p>

<p><li>Active documents</li></p>

<p><li>ActiveX Code components.</li></p>
</ul>

<A NAME="326"><H3>Using Class Modules</H3></A>

<P>Class modules let you: </P>

<ul>
<p><li>Create reusable objects through ActiveX EXEs and DLLs. </li></p>

<p><li>Create objects within a single application. </li></p>
</ul>

<P>If the class module has been included in a compiled ActiveX EXE or DLL, you can set a reference to the component in the Visual Basic IDE. After the reference has been set, you can create objects from classes in the component and write code using to use the object.</P>

<A NAME="327"><H3>Creating Class Modules</H3></A>

<P>When you create class modules, you can write code to provide properties, methods, and events. </P>

<ul>
<p><li>Properties are characteristics of an object such as color, size, or name. </li></p>

<p><li>Methods are procedures that perform services for the object, such as the Show method of a form in Visual Basic. </li></p>

<p><li>Events allow objects to send notifications, such as the Load or Unload event of a form in Visual Basic. </li></p>
<ul>
<P><LI> To handle an object's events, use the WithEvents keyword when declaring the object. </LI></P>
</ul>
</ul>

<A NAME="328"><H3>Using the Class Builder</H3></A>

<P>An object model defines a hierarchy of objects that gives structure to an object-based program. This organizes the objects in a way that makes programming easier. </P>

<ul>
<p><li>Objects in a hierarchy are linked together by object properties.</li></p>

<p><li>An object that contains other objects has properties that return either references to the objects themselves, or references to collections of objects. </li></p>

<ul>
<P><LI> Use object collections when the number of properties is unknown.</LI></P>
</ul>
</ul>



</BODY>
</HTML>






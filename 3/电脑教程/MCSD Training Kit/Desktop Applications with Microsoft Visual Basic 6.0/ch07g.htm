<HTML>
<HEAD>
<TITLE>Chapter 7 -- Summary</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch07f.htm", "ch07h.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="384"><H1>Summary</H1></A>

<A NAME="385"><H3>How Visual Basic Accesses Data</H3></A>
<ul>
<p><li>Visual Basic's data access technologies help to:</li></p>
<ul>
  <P><LI> Reduce development time.</LI></p>

  <P><LI> Simplify code.</LI></P>

  <P><LI> Provide high performance while exposing many features.</LI></P>
</ul>
<p><li>Visual Basic makes three data access interfaces available:</li></p>
<ul>
  <P><LI> ActiveX Data Objects (ADO).</LI></p>

  <P><LI> Remote Data Objects (RDO).</LI></P>

  <P><LI> Data Access Objects (DAO).</LI></P>
</ul>
<p><li>Visual Basic uses a relational database model. This model presents data as a collection of tables which are logical groupings of related information.</li></p>
</ul>

<A NAME="386"><H3>Introduction to OLE DB and ADO</H3></A>
<ul>
<p><li>OLE DB is a set of COM interfaces that provide applications with uniform access to data stored in diverse information sources, regardless of location or type. </li></p>

<p><li>Because ADO is an interface to OLE DB, Microsoft's newest and most powerful data access technology, ADO provides high-performance access to a variety of information sources (including relational data and nonrelational data). </li></p>

<p><li>Conceptually, OLE DB has three types of components: </li></p>
<ul>
  <P><LI> Data providers </LI></p>

  <P><LI> Data consumers</LI></P>

  <P><LI> Service components</LI></P>
</ul>
</UL>
<A NAME="387"><H3>Overview of Structured Query Language</H3></A>
<ul>
<p><li>Structured Query Language (SQL) is used in querying, updating, and managing relational databases. </li></p>

<p><li>SQL can be used to retrieve, sort, and filter specific data to be extracted from the database. </li></p>

<p><li>The SQL Select statement returns information from the database as a set of records and is divided into three major sections: SELECT, FROM, and WHERE. </li></p>

<p><li>In different environments, databases have different implementations of the same SQL functionality, both syntactically and semantically. Be aware that each implementation of SQL has its own support for different data types, referential integrity, and compiled queries.</li></p>
</ul>
<A NAME="388"><H3>The ADO Data Control</H3></A>
<ul>
<p><li>The ADO Data control is a graphic control (with record navigation buttons) and an easy-to-use interface that allows you to create database applications with a minimum of code. To use the ADO Data control in Visual Basic 6.0, you must add it to the toolbox.</li></p>

<p><li>At design time, you can create a connection to a data source by setting the ConnectionString property of the ADO Data control to a valid connection string. After you set the ConnectionString property of the ADO Data control to connect to a database, you can set the RecordSource property to establish where the records will come from. </li></p>

<p><li>Once you have set the ConnectionString and RecordSource properties for the ADO Data control, you can add a bound control to display data on your form.</li></p>
</ul>
<A NAME="389"><H3>Coding the ADO Data Control</H3></A>
<ul>
<p><li>The ADO Data control's Recordset property is an object itself and has its own properties and methods. After you set the RecordSource property, you can check the Recordset object's BOF and EOF properties to knoe if you are at the beginning or end of the Recordset. </li></p>

<p><li>The ADO Data control can automatically modify and update records without additional code, You can use the Update method instead of using the arrows on the ADO Data control. New records can be added to a Recordset by calling the AddNew method. Using the Delete method, you can delete the current record or a group of records in a recordset. You can check the EOF property to see if you have deleted the last record. </li></p>

<p><li>The Find method for the ADO Data control's recordset can add a search capability. It searches an existing recordset and if the criteria is met, the recordset is positioned on that record. Otherwise, the position is set on the end of the recordset (EOF).</li></p>
</ul>


</BODY>
</HTML>






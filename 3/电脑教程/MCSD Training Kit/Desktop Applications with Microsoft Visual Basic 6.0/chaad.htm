<HTML>
<HEAD>
<TITLE>Chapter 3</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("chaac.htm", "chaae.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="700"><H1>Chapter 3</H1></A>

<A NAME="701"><H2>Review Questions</H2></A>
<ol>
<p><LI><A NAME="CH0301">What are the two main types of validation?</A></LI></p>

<A NAME="702"><H3>Form-level validation is when you perform data validation after all fields on a form have been completely filled in by a user. For example, a customer entry form could require a user to fill in a name, an address, a phone number, a city, a state, and a zip code. After the user fills in these fields and clicks an OK button, validation takes place to verify the data in each field.</H3></A>

<A NAME="703"><H3>Field-level validation is when each field is validated as it is filled in&#8212;in other words, fields are validated one at a time. For example, a user could type in a value for a zip code field on a customer entry form, and validation of the zip code field would occur either as the user types in the value or before the user moves to another field on the form. In Visual Basic, you can use the Change event for a TextBox control to verify that the zip code value is numeric.</H3></A>

<p><LI><A NAME="CH0302">Why should you use the Validate event to validate data rather than using the LostFocus event?</A></LI></p>

<A NAME="704"><H3>It is possible to use the LostFocus event procedure to validate the data in a field, however this validation technique can result in an infinite loop where one or more controls are using the SetFocus method in the LostFocus event. The Validate event eliminates the problem and makes it easier to manage field-level validation.</H3></A>

<p><LI><A NAME="CH0303">There are two textboxes on a form, and the user types the letter "a" into one of the textboxes. If the form's KeyPreview property is set to True, will the TextBox control's KeyPress event fire?</A></LI></p>

<A NAME="705"><H3>Yes, the KeyPreview property value will cause the form's KeyPress event to fire first, and the TextBox control's KeyPress event will fire next. By default, the form's KeyPreview property is False, causing the TextBox's KeyPress event to fire first.</H3></A>

<A NAME="706"><H3>Using the form's KeyPreview property, you can implement form-level validation. This is particularly useful if you need to monitor user input regardless of which control on the form has focus.</H3></A>

<p><LI><A NAME="CH0304">What is the difference between the Text and ClipText properties of the Masked-Edit Control?</A></LI></p>

<A NAME="707"><H3>The Text property returns the data that the user has typed, along with the mask. For example, if the Mask property is set for a stanadrd US phone number, the Text property would return:</H3></A>

<A NAME="708"><H3>(111) 555-1234</H3></A>

<A NAME="709"><H3>The ClipText property returns only the data the user has typed. Using the same example, the ClipText would return:</H3></A>

<A NAME="710"><H3>1115551234</H3></A>
</ol>

</BODY>
</HTML>






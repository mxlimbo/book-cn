<HTML>
<HEAD>
<TITLE>Lesson 3: Source Code Control</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">

</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch02c.htm", "ch02e.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="79"><H1>Lesson 3: Source Code Control</H1></A>

<p>Source code control provides the ability to track changes made to source code files
and is an important part of team software development. Visual C++ provides facilities
for integrating a source code control system into the development environment.</p>

<p>In this lesson, you will learn how to set up a source code control system using
Microsoft Visual SourceSafe (VSS) 6.0, which comes as a part of Visual Studio 6.0, and
you will use the features of Visual SourceSafe from within the Visual C++ development
environment.</p>

<p>
<div class="sidebar"><blockquote>
<b>After this lesson, you will be able to:</b>

<ul>
<p><li>Understand how Visual SourceSafe is used to implement a source code control
system.</li></p>

<p><li>Describe how to use the Visual SourceSafe Administrator to set up a new database,
add a user, and maintain passwords.</li></p>

<p><li>Describe how to place a Visual C++ development project under source code
control.</li></p>

<p><li>Describe how the integrated source code control features of Visual C++ simplify
the tasks of maintaining source code control for the developer.</li></p>
</ul>

<b>Estimated lesson time: 30 minutes</b>
</blockquote></div>
</p>

<A NAME="80"><H2>Setting Up Source Code Control Using Visual SourceSafe</H2></A>

<p>To maintain the security and consistency required of a source code control system,
VSS stores a central copy of your source code files in a database. Files of any type,
including text files, graphic files, binary files, sound files, and video files, can be
stored under source control. When you add a file to VSS, the file is stored in the
database and made available to other people. Members of your team can see the latest
version of any file, make changes, and save a new version in the database. Changes that
have been made to the file are saved so that you can recover an old version at any
time.</p>

<p>As a developer of a source code control system, you will keep a <i>read-only</i>
copy of the source files in a working folder on your local hard drive. When you want to
modify a file, you <i>check out</i> the file from the VSS database. This places an
editable copy of the file in your working folder and prevents other users from
overwriting the current versions. When you have finished making changes, you <i>check
in</i> the file to make your newly edited version the latest version that is available
to the other developers. If you want to abandon the changes that you have made, you can
undo the check out, thereby replacing your local edited version with the previous copy
of the file held in the database.</p>

<p>To make sure that you have the latest version of all the files in the project, you
use the <b>Get Latest Version</b> command to copy the current versions of the project
source files to your working folder.</p>

<p>By default, a user cannot check out a file that is already checked out to another.
This ensures that only one person at a time is modifying a file. Suppose that developer
A and developer B are allowed to work on the same file at the same time. If A saves his
changes, and subsequently B saves hers, all the changes made by A will be lost. The VSS
administrator can change the default setting to allow multiple simultaneous checkouts
of a single file and prevent overwrites of other changes. This will require some extra
work on the part of the administrator, who must use the VSS <b>Merge</b> facility to
ensure that the simultaneous changes do not conflict.</p>

<p>When you check out a source code file for editing, you must always be sure that you
have the latest version of all the other files in the project. Otherwise, you might
make changes that render your code incompatible with other recently-edited 
modules. VSS supplies the <b>Get Latest Version</b> command to copy read-only
copies of source files to your working folder.</p>

<p>Files are organized within a VSS database in projects. A project typically contains
all the files required to develop a software component, although projects can be
defined in any way that is meaningful to the user. Projects tend to be
organized in the same way as file directories.</p>

<p>It is usual to appoint an administrator to be responsible for the VSS database. The
administrator uses the Visual SourceSafe Administrator program to control the location
of the database, maintain the user list and access rights of each user, and back up the
database.</p>

<p>The Visual SourceSafe Explorer is a utility that provides users with an interface to
VSS projects. However, many of the common tasks&#8212;checking files in and out, getting
latest versions, and so forth&#8212;are directly available to developers from within the
Visual C++ development environment. The integration of VSS with Visual C++ actually
simplifies the process of source code control for the developer.</p>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
The source code control features of Visual C++ are designed to
work with other products in addition to Visual SourceSafe. Any source code control
system that conforms to the Microsoft standard source code control interface will allow
you to access source code control functionality directly from the Visual C++
menus.</blockquote></div>
</p>

<A NAME="81"><H2>Setting up a VSS Database</H2></A>

<p>In the following exercise, you will be using the VSS Administrator program to set up
a VSS database for the MyApp code that you created in <a href="ch02b.htm#65">Lesson 1</a>. If you have not yet
installed the VSS Workstation components, you should do this now.</p>


<p><li><b>To install the VSS Workstation components</b></li></p>

<ol>
<p><li>Run Setup.exe from the root directory of the Visual Studio CD 1.</li></p>

<p><li>Select <b>Workstation Tools And Components</b>. Click <b>Next</b>.</li></p>

<p><li>On the Visual Studio setup screen, click <b>Add/Remove</b>.</li></p>

<p><li>On the Visual Studio maintenance screen, select <b>Microsoft Visual SourceSafe
6.0</b>. Click <b>Continue</b> to install VSS.</li></p>

<p><li>When the installation is complete, close the Visual Studio setup program.</li></p>
</ol>

<p>A VSS Workstation installation sets up a private VSS database on your computer and
the VSS client software. In a live team development situation, you would install the
VSS Server components and create a shared VSS database on a secure, regularly backed-up
server.</p>

<p><li><b>To create the MyVSS database</b></li></p>

<ol>
<p><li>On the <b>Start</b> menu, point to <b>Programs</b>, point to <b>Microsoft Visual
Studio 6.0</b>, point to <b>Microsoft Visual SourceSafe</b>, and click <b>Visual
SourceSafe 6.0 Admin</b>.</li></p>

<p><li>Log on to VSS as <b>Admin</b> with no password. If the program warns you that
the Admin account has no password, just click <b>OK</b>.</li></p>

<p><li>On the <b>Tools</b> menu, click <b>Create Database</b>. The <b>Create New VSS
Database</b> dialog box appears.</li></p>

<p><li>In the text box, type <b>C:\Source Control\MyVSS</b>. Leave the check box
selected. Click <b>OK</b> to create a new VSS database named MyVSS at the specified
location and to create any necessary directories.</li></p>
</ol>

<p><li><b>To open the MyVSS database</b></li></p>

<ol>
<p><li>On the <b>Users</b> menu, click <b>Open SourceSafe Database</b>.</li></p>

<p><li>In the <b>Open SourceSafe Database</b> dialog box, click <b>Browse</b>. Use the
<b>File</b> dialog box to locate and open the srcsafe.ini file in the C:\Source
Control\MyVSS folder.</li></p>

<p><li>Click <b>OK</b>. The MyVSS database should now appear in the <b>Open SourceSafe
Database</b> dialog box. Make sure that it is selected and click <b>Open</b>.</li></p>

<p><li>Click <b>OK</b>.</li></p>

<p><li>Note that the name of the current database appears in the window's title
bar.</li></p>
</ol>

<p><li><b>To set the Admin password</b></li></p>

<ol>
<p><li>Make sure the <b>Admin</b> user is selected.</li></p>

<p><li>On the <b>Users</b> menu, click <b>Change Password</b>.</li></p>

<p><li>In the <b>Change Password</b> dialog box, leave the <b>Old Password</b> box
blank. Type and confirm a new password.</li></p>
</ol>

<p><li><b>To set yourself up as a user</b></li></p>

<ol>
<p><li>On the <b>Users</b> menu, click <b>Add User</b>.</li></p>

<p><li>Using the <b>Add User</b> dialog box, type your user name and a password. Note
that you can use a check box to specify that a user has read-only access. Leave this
unselected.</li></p>

<p><li>Click <b>OK</b>.</li></p>
</ol>

<A NAME="82"><H2>Placing the MyApp Project Under Source Code Control</H2></A>

<p>You are now going to add the project you created in <a href="ch02b.htm#65">Lesson 1</a> to the <b>MyVSS</b>
database. This is most easily accomplished from within the Visual C++ development
environment.</p>

<p><li><b>To add the MyApp project to the MyVSS database</b></li></p>

<ol>
<p><li>Start Visual C++. Open the MyApp workspace.</li></p>

<p><li>Right-click an empty area of the main window frame. On the toolbars menu, click
<b>Source Control</b>.</li></p>

<p><li>The <b>Source Control</b> toolbar, shown in Figure 2.17, appears. Commands in
the following exercises refer to buttons on this toolbar. Alternatively, you can use
the equivalent commands from the <b>Source Control</b> submenu of the <b>Project</b>
menu.</li></p>

<p>
<img src="images/f02DA17.jpg" width=315 height=87>
</p><p>
<!-- caption --><b>Figure 2.17</b> <i><b>Source Control</b> toolbar</i><!-- /caption -->
</p>

<p><li>Click <b>Add To Source Control</b> (as shown in Figure 2.17).</li></p>

<p><li>The <b>Visual SourceSafe Login</b> box appears. Make sure that <b>MyVSS</b> is
displayed in the <b>Database</b> box. Enter the user name and password that you created
for yourself on the <b>MyVSS</b> database.</li></p>

<p><li>When you click <b>OK</b>, the <b>Add To SourceSafe Project</b> dialog box
appears, displaying the <b>MyApp</b> project name. Click <b>OK</b> (and <b>Yes</b> to
create the new project) to add your MyApp project to source control.</li></p>
</ol>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
The <b>$/</b> symbol signifies the <i>root project</i> of the database.
All projects in a VSS database are subprojects of the root project.
</blockquote></div>
</p>

<ol>
<p><li value="7"> The <b>Add To Source Control</b> dialog box appears with all the files in your
project selected. Click <b>OK</b> to add the selected files to source control.</li></p>
</ol>

<A NAME="83"><H2>Using the VSS Explorer</H2></A>

<p>In the next exercise, you will view your new VSS project using VSS Explorer.</p>

<p><li><b>To view the MyApp VSS project</b></li></p>

<ol>

<p><li>Start VSS Explorer (shown in Figure 2.18) by clicking the <b>Source Control</b>
button on the rightmost side of the <b>Source Control</b> toolbar.</li></p>

<p>
<A HREF="javascript:fullSize('f02DA18x.htm')"> <img src="images/f02DA18.jpg" width=404 height=288 border=0 ALT="Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 2.18</b> <i>Visual SourceSafe Explorer</i><!-- /caption -->
</p>

<p><li>Experiment with the interface by expanding the folders in the left pane and
looking at which files have been placed in the project. Explore the menus and use the
ToolTip feature to identify the buttons on the toolbar.</li></p>
</ol>

<p><li><b>To check out a file</b></li></p>

<ol>
<p><li>Click the MyApp folder in the left pane.</li></p>

<p><li>Click the ReadMe.txt file in the right pane.</li></p>

<p><li>On the <b>SourceSafe</b> menu, click <b>Check Out</b> (or use the corresponding
toolbar button).</li></p>

<p><li>Click <b>OK</b> to check out the ReadMe.txt file. Notice how Visual SourceSafe
Explorer displays the checked-out status.</li></p>

<p><li>Switch back to Visual C++. Look at the project files in the FileView window.
Notice that the file icons are now gray to indicate that they are under source control.
Notice that the ReadMe.txt file has a check mark to indicate that it is checked
out.</li></p>

<p><li>Switch back to VSS Explorer.</li></p>
</ol>

<p><li><b>To check in a file</b></li></p>

<ol>
<p><li>In VSS Explorer, click the <b>ReadMe.txt</b> file in the right pane.</li></p>

<p><li>As an alternative to using the menu and toolbar, check in the ReadMe.txt file by
right-clicking the file and clicking <b>Check In</b> on the shortcut menu.</li></p>

<p><li>Click <b>OK</b> to check in the ReadMe.txt file.</li></p>
</ol>

<p>Close VSS Explorer and return to Visual C++. You might now want to try repeating the
above actions from within the Visual C++ development environment. You will find that
the procedure is virtually identical. You can use commands on the <b>Source Control</b>
submenu of the <b>Project</b> menu, the <b>Source Control</b> toolbar buttons, or you
can right-click the icon in the FileView window.</p>

<A NAME="84"><H2>Source Code Control Configuration</H2></A>

<p>The integrated source code control features of Visual C++ are configured from the
<b>Source Control</b> tab of the <b>Options</b> property sheet (shown in Figure 2.19),
which is available from the <b>Tools</b> Menu. Note that you may have to use the
arrow keys to bring the <b>Source Control</b> tab into view.</p>

<p>
<A HREF="javascript:fullSize('f02DA19x.htm')"> <img src="images/f02DA19.jpg" width=404 height=309 border=0 ALT="Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 2.19</b> <i><b>Source Control</b> tab options</i><!-- /caption -->
</p>

<p>Figure 2.19 shows the default settings for source control options. These settings
will affect the way you work with Visual C++ in the following ways:</p>

<ul>
<p><li><b>Check out source files when edited</b> When you attempt to edit a file that is
not already checked out to you, a <b>Check Out</b> dialog box will appear to allow you
to check out the file. (Note that you are prohibited from editing files that are not
checked out to you.)</li></p>

<p><li><b>Prompt to add files when inserted</b> When you add files to a project, you will
be prompted to add them to source control.</li></p>

<p><li><b>Perform background status updates</b> The status of the files under source code
control is updated as a background task rather than immediately.</li></p>

<p><li><b>Use dialog for checkout</b> When you check out files directly from ClassView,
ResourceView, or FileView, a dialog box appears prompting you to confirm the action. If
this option is not selected, the selected files are checked out immediately.</li></p>

<p><li><b>Include only selected files in dialogs</b> When you elect to perform an action
(such as <b>Add to Source Control</b> or <b>Check In</b>) on selected files in
ClassView, ResourceView, or FileView, only those selected files will appear in the
dialog box. Otherwise, all of the files to which the action could be applied are listed
in the dialog box.</li></p>
</ul>


<p>You can also set the following options:</p>

<ul>
<p><li><b>Get files when opening the workspace</b> When this option is set, VSS asks you
if you want to get the latest versions of all files not checked out to you when the
workspace is opened. This might not always be what you want, especially if your
development is in an interim stage.</li></p>

<p><li><b>Check in files when closing the workspace</b> When this option is set, VSS
prompts you to check in any files that are checked out to you when you close your
Visual C++ workspace. Again, this might not be a good idea if your development is still
in progress. Other users might get incomplete versions of your files.</li></p>

<p><li><b>Add new projects to source control</b> When this option is set and you create
a new project, you will be prompted to add the new project to source control.</li></p>
</ul>


<p>Clicking <b>Advanced</b> on this property sheet exposes a relevant subset of the
source code control program's configuration settings.</p>

<A NAME="85"><H2>Reusing Visual SourceSafe Files</H2></A>

<p>You can reuse files within the same VSS project or between VSS projects. Some of the
commands for reusing files are <b>Share</b>, <b>Branch</b>, and <b>Merge</b>.</p>

<A NAME="86"><H3>Sharing</H3></A>

<p>In VSS, one file can be shared among multiple projects. Changes to the file from one
project are automatically seen by other projects sharing the same file. For example,
suppose you want to share all the header files in your MyApp project with another
project. To share a file, you create a share link between two (or more) projects. The
same file then appears in those projects at the same time. When you check in the file
to any one of the projects, your changes are automatically updated in all of the linked
files.</p>

<p><li><b>To share all the MyApp header files with another project</b></li></p>

<ol>
<p><li>Open Visual SourceSafe Explorer.</li></p>

<p><li>To create another project with which to share files, right-click the 
<b>MyApp</b> project icon and click the <b>Create Project</b> button.</li></p>

<p><li>In the <b>Create Project</b> dialog box, type <b>NewProject</b> as the project
name and click <b>OK</b>.</li></p>

<p><li>Click the newly created <b>NewProject</b> icon.</li></p>

<p><li>On the <b>SourceSafe</b> menu, click <b>Share</b>.</li></p>

<p><li>In the <b>Share with</b> dialog box, click the <b>MyApp</b> project in the
projects pane.</li></p>

<p><li>In the <b>File to share</b> text box, type <b>*.h</b> and press ENTER to display
only the MyApp header files.</li></p>

<p><li>Select <i>all</i> the files in the list of header files displayed. (Click the
first item in the list, and then press and hold SHIFT while clicking the last item in
the list.) Click <b>Share</b>.</li></p>

<p><li>Click <b>Close</b>. Note that the shared files have been added to the NewProject
project and that they have special icons to indicate their shared status.</li></p>
</ol>

<p><li><b>To display all the projects that share a specific file</b></li></p>

<ol>
<p><li>Right-click one of the files with a shared file icon. From the shortcut menu,
select <b>Properties</b>.</li></p>

<p><li>Click the <b>Links</b> tab on the property sheet. The projects that share this
file will appear in the list box.</li></p>
</ol>

<A NAME="87"><H3>Branching</H3></A>

<p>Normally when you share files, only one version of the file exists. However, you
might want to create a custom copy of the file for a particular project. For example,
suppose you want to create a custom version of the MyAppDoc.h file in the NewProject
project. To achieve this, you can use the VSS <i>branching</i> feature. Branching
duplicates files from one project and uses the duplicates to create a new version of
the project. These duplicate files can be altered without affecting the original
version of the files. At a later stage, you can use the <i>Merge</i> facility to merge
the changes in both these versions to recreate a single version of the file.</p>

<p><li><b>To create a custom version of the MyAppDoc.h file in the NewProject project</b></li></p>

<ol>
<p><li>In Visual SourceSafe Explorer, click the <b>NewProject</b> project. In the right
pane, click the <b>MyAppDoc.h</b> file.</li></p>

<p><li>On the <b>SourceSafe</b> menu, click <b>Branch</b>.</li></p>

<p><li>Click <b>OK</b>. Note how the file icon reverts to a non-shared type.</li></p>
</ol>

<A NAME="88"><H3>Merging</H3></A>

<p>As mentioned above, files that have been branched into parallel versions can be
merged back into one file. For example, suppose now that your team has made changes to
the original version of MyAppDoc.h in the MyApp project, and you want to merge these
changes into the custom version that is contained in the NewProject project. Merging
compares the differences between files and creates a single file containing all the
changes.</p>

<p><li><b>To merge different versions of the MyAppDoc.h file</b></li></p>

<ol>
<p><li>In the Visual SourceSafe Explorer, click the <b>NewProject</b> project. In the
right pane, click the <b>MyAppDoc.h</b> file.</li></p>

<p><li>On the <b>SourceSafe</b> menu, click <b>Merge Branches</b>.</li></p>

<p><li>In the <b>Merge to $/ NewProject</b> <b>/MyAppDoc.h</b> dialog box, select the
<b>MyApp</b> project. Note how the versions that are to be merged are displayed in the
<b>Versions</b> column. Click <b>Merge</b>, and then click <b>OK</b> in the message box
that follows.</li></p>
</ol>

<p>Merging might commonly take place when the administrator enables multiple checkouts
of the same file to allow parallel development to take place on a single source file.
Users can also merge the differences between an existing local copy of a file and the
most up-to-date version saved in the VSS database by using the <b>Get Latest
Version</b> command.</p>

<A NAME="89"><H2>Viewing Version History</H2></A>

<p>VSS contains several features you can use to keep track of version history. The 
<b>Show History</b> feature is commonly used to view a summary of a file's version
history.</p>

<p><li><b>To show the version history of the MyAppDoc.h file</b></li></p>

<ol>
<p><li>In the Visual SourceSafe Explorer, click the <b>NewProject</b> project. In the
right pane, click the <b>MyAppDoc.h</b> file.</li></p>

<p><li>On the shortcut menu, click <b>Show History</b>.</li></p>

<p><li>Click <b>OK</b> to accept the default options. The file's version history is
displayed.</li></p>

<p><li>Close the History window.</li></p>
</ol>

<A NAME="90"><H2>Archiving a VSS Project</H2></A>

<p>The Visual SourceSafe Administrator program makes it easy for you to archive your
SourceSafe project. By clicking <b>Archive Projects</b> on the <b>Archive</b> menu, you
can back up your project files to a compressed file as a secure backup. You can also
use <b>Archive Projects</b> along with the <b>Restore Projects</b> command to move
projects between VSS databases.</p>

<p><li><b>To archive the MyApp project</b></li></p>

<ol>
<p><li>Open the VSS Administrator program. You should be taken directly to the 
<b>MyVSS</b> database you created earlier.</li></p>

<p><li>On the <b>Archive</b> menu, click <b>Archive Projects</b>.</li></p>

<p><li>In the <b>Choose Project to Archive</b> dialog box, select the <b>MyApp</b>
project and click <b>OK</b>.</li></p>

<p><li>With the MyApp project displayed in the Archive Wizard <b>Projects to
archive</b> box, click <b>Next</b>.</li></p>

<p><li>In Step 2 of the Archive Wizard, select the <b>Save data to file</b> option and
specify <b>C:\SourceControl\backup.ssa</b> as an archive file name. Click 
<b>Next</b>.</li></p>

<p><li>In Step 3 of the Archive Wizard, select <b>Archive all of the data</b> and
click <b>Finish</b>.</li></p>

<p><li>When the archive process is complete, close the VSS Administrator program.</li></p>
</ol>

<p>To restore from an archive, simply open the database you want to restore to from
within the VSS Administrator program. Choose <b>Restore Projects</b> from the 
<b>Archive</b> menu, and use the Restore Wizard to locate and load the .ssa file that
contains the archive.</p>

<A NAME="91"><H2>Lesson Summary</H2></A>

<p>Source code control provides the ability to track changes made to source code files
and is an important part of team software development. Visual SourceSafe (VSS) 6.0,
which comes as a part of Visual Studio 6.0, is a source code control system that is
fully integrated with the Visual C++ development environment.</p>

<p>VSS stores a central copy of your source code files in a database. Members of your
team can see the latest version of any file, make changes, and save a new version in
the database. Changes that have been made to the file are saved so that you can recover
an old version at any time.</p>

<p>Users of a source code control system keep a <i>read-only</i> copy of the source
files in a working folder on their local hard drive. When you want to modify files, you
can use the Visual SourceSafe Explorer program to check out the file from the VSS
database. This places an editable copy of the file in your working folder. When you
have finished making changes, you check in the file to make your newly edited version
the latest version that is available to the other developers. To make sure that you
have the latest version of all the files in the project, you use the <b>Get Latest
Version</b> command to copy the current versions of the project source files to your
working folder.</p>

<p>The VSS Administrator Program allows you to set up and administer a VSS project for
your development team. You can use this program to control access to the VSS database
and to archive and restore projects.</p>

<p>Visual SourceSafe is fully integrated with the Visual C++ development environment.
Visual C++ can be configured to perform many of the source code control tasks
automatically&#8212;for example, you can configure the environment so that when you add
files to a Visual C++ project, you will be prompted to add them to source control.</p>

<p>The Visual SourceSafe <b>Share</b> command allows you to share a single copy of a
file between multiple projects. The VSS <b>Branch</b> command allows parallel
development on different versions of the same file, and the <b>Merge</b> command
allows you to merge the changes made to two different versions of a file into
a single file.</p>

<p>The <b>Show History</b> command is one of the many features you can use to keep
track of a file's version history.</p>

</BODY>
</HTML>








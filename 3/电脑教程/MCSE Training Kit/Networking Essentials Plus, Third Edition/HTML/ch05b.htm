<HTML>
<HEAD>
<TITLE>Lesson 1: Open Systems Interconnection (OSI) Reference Model</TITLE>
<link rel="STYLESHEET" type="text/css" href="netess3.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<BODY bgcolor="#ffffff" text="#000000">
<A HREF="ch05a.htm">[Previous]</A> <A HREF="ch05c.htm">[Next]</A><P>

<A NAME="288"><h1>Lesson 1: Open Systems Interconnection (OSI) Reference Model</h1></A>
<P>This lesson describes the Open Systems Interconnection (OSI) reference model. The
OSI reference model represents the seven layers of the process by which data is packaged and
transmitted from a sending application through the physical wires to the receiving
application.</p>

<p><div class="sidebar"><BLOCKQUOTE>
<p><b>After this lesson, you will be able to:</b> </p>

<ul>
<p><li>Describe the primary function of each layer of the OSI reference model.</li></p>

<p><li>Identify the OSI layer at which a particular network activity takes place.</li></p>

<p><li>Identify the OSI layer at which a particular network component functions.</li></p>
</ul>

<p><b>Estimated lesson time: 35 minutes</b> </p>
</blockquote></div>
</p>

<A NAME="289"><h2>Network Communications</h2></A>
<p>Network activity involves sending data from one computer to another. This complex
process can be broken into discrete, sequential tasks. The sending computer must:</P>

<ol>
<p><li>Recognize the data.</li></p>

<p><li>Divide the data into manageable chunks.</li></p>

<p><li>Add information to each chunk of data to determine the location of the data and to identify the receiver.</li></p>

<p><li>Add timing and error-checking information.</li></p>

<p><li>Put the data on the network and send it on its way.</li></p>
</ol>

<P>Network client software operates at many different levels within the sending and
receiving computers. Each of these levels, or tasks, is governed by one or more protocols.
(Protocols are introduced in Chapter 3, <a href="ch03c.htm#162">Lesson 2: How Networks Send Data</a>.) These protocols, or
rules of behavior, are standard specifications for formatting and moving the data. When the
sending and receiving computers follow the same protocols, communication is assured. Because of
this layered structure, this is often referred to as the <i>protocol stack</i>.</p> 

<p>With the rapid growth of networking hardware and software, a need arose for standard
protocols that could allow hardware and software from different vendors to communicate. In
response, two primary sets of standards were developed: the OSI reference model and a modification of
that standard called Project 802 (covered in the next lesson).</p>

<p>Acquiring a clear understanding of these models is an important first step in understanding
the technical aspects of how a network functions. Throughout this lesson we refer to various
protocols. The protocols and how they apply to these models are covered in detail in <A HREF="ch06a.htm">Chapter 6</A>, &quot;Defining Network Protocols.&quot;</p>


<A NAME="290"><h2>The OSI Reference Model</h2></A>
<P>In 1978, the International Organization for Standardization (ISO) released a set of
specifications that described network architecture for connecting dissimilar devices. The
original document applied to systems that were open to each other because they could all use
the same protocols and standards to exchange information.</P>

<p><div class="note"><blockquote><b>NOTE</b><HR>
To set up a network competently, you need to be aware of the major standards
organizations and how their work affects network communications. An overview of the most
important standards bodies is presented in <A HREF="chaba.htm">Appendix B</a>, &quot;Common Network Standards and Specifications.&quot;

<P>In 1984, the ISO released a revision of this model and called it the <i>Open
Systems Interconnection (OSI) reference model.</i> The 1984 revision has become an
international standard and serves as a guide for networking.</p>
</blockquote></div></p> 

<p>The OSI reference model is the best-known and most widely used guide for visualizing networking
environments. Manufacturers adhere to the OSI reference model when they design network products. It
provides a description of how network hardware and software work together in a layered fashion
to make communications possible. The model also helps to troubleshoot problems by providing a
frame of reference that describes how components are supposed to function.</p>

<p><img src="images/multime.JPG" width=68 height=51 border="0"></p>

<p>Run the <b>c05dem02</b> video located in the <b>Demos</b> folder on the CD accompanying this
book to see an overview presentation of the OSI reference model.</p>


<A NAME="291"><h3>A Layered Architecture</h3></A>
<P>The OSI reference model architecture divides network communication into seven layers. Each
layer covers different network activities, equipment, or protocols. Figure 5.1 represents the
layered architecture of the OSI reference model. (<i>Layering</i> specifies different functions and
services as data moves from one computer through the network cabling to another computer.) The
OSI reference model defines how each layer communicates and works with the layers immediately above and
below it. For example, the session layer communicates and works with the presentation and
transport layers.</P>


<p>
<img src="images/F05xx01.JPG" width=193 height=169 border=0>
</p><p>
<!--caption--><b>Figure 5.1</b> <i>The seven-layer OSI reference model</i><!--/caption-->
</p>


<P>Each layer provides some service or action that prepares the data for delivery over
the network to another computer. The lowest layers&#8212;1 and 2&#8212;define the network's
physical media and related tasks, such as putting data bits onto the network interface cards
(NICs) and cable. The highest layers define how applications access communication services. The
higher the layer, the more complex its task.</P> 

<p>The layers are separated from each other by boundaries called <i>interfaces</i>. All
requests are passed from one layer, through the interface, to the next layer. Each layer builds
upon the standards and activities of the layer below it.</p>


<A NAME="292"><h3>Relationships Among OSI Reference Model Layers</h3></A>
<P>Each layer provides services to the next-higher layer and shields the upper layer
from the details of how the services below it are actually implemented. At the same time, each
layer appears to be in direct communication with its associated layer on the other computer.
This provides a logical, or virtual, communication between peer layers, as shown in Figure 5.2.
In reality, actual communication between adjacent layers takes place on one computer only. At
each layer, software implements network functions according to a set of protocols.</P>


<p>
<A HREF="javascript:fullSize('F05xx02x.htm')"> <img src="images/F05xx02.JPG" width=404 height=191 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 5.2</b> <i>Relationships among OSI layers</i><!--/caption-->
</p>


<p><img src="images/multime.JPG" width=68 height=51 border="0"></p>

<P>Run the <b>c05dem03</b> video located in the <b>Demos</b> folder on the CD
accompanying this book to view a presentation of layer transmission on the OSI reference model.</p>


<p>Before data is passed from one layer to another, it is broken down into packets, or units of
information, which are transmitted as a whole from one device to another on a network. (Packets
were introduced in Chapter 3, <a href="ch03c.htm#162">Lesson 2: How Networks Send Data</a>.) The network passes a packet
from one software layer to another in the same order as that of the layers. At each layer, the
software adds additional formatting or addressing to the packet, which is needed for the packet
to be successfully transmitted across the network.</p>

<p>At the receiving end, the packet passes through the layers in reverse order. A software
utility at each layer reads the information on the packet, strips it away, and passes the
packet up to the next layer. When the packet is finally passed up to the application layer, the
addressing information has been stripped away and the packet is in its original form, which is
readable by the receiver.</p>

<p><img src="images/multime.JPG" width=68 height=51 border="0"></p>

<p>Run the <b>c05dem04</b> and <b>c05dem05</b> videos located in the <b>Demos</b> folder on the
CD accompanying this book to view a presentation of layer transmission between computers using
the OSI reference model.</p>

<p>With the exception of the lowest layer in the OSI networking model, no layer can pass
information directly to its counterpart on another computer. Instead, information on the
sending computer must be passed down through each successive layer until it reaches the
physical layer. The information then moves across the networking cable to the receiving
computer and up that computer's networking layers until it arrives at the corresponding
layer. For example, when the network layer sends information from computer A, the information
moves down through the data-link and physical layers on the sending side, over the cable, and
up the physical and data-link layers on the receiving side to its final destination at the
network layer on computer B.</p>

<p>In a client/server environment, an example of the kind of information sent from the network
layer on computer A to the network layer on computer B would be a network address, with perhaps
some error-checking information added to the packet.</p>

<p>Interaction between adjacent layers occurs through an interface. The interface defines the
services offered by the lower networking layer to the upper one and further defines how those
services will be accessed. In addition, each layer on one computer appears to be communicating
directly with the same layer on another computer.</p>

<p>The following sections describe the purpose of each of the seven layers of the OSI reference model,
and identify the services that each provides to adjacent layers. Beginning at the top of the
stack (layer 7, the application layer), we work down to the bottom (layer 1, the physical
layer).</p>

<p><b>Application Layer</b></p>

<P>Layer 7, the topmost layer of the OSI reference model, is the <i>application layer</i>. This
layer relates to the services that directly support user applications, such as software for
file transfers, database access, and e-mail. In other words, it serves as a window through
which application processes can access network services. A message to be sent across the
network enters the OSI reference model at this point and exits the OSI reference model's application layer on
the receiving computer. Application-layer protocols can be programs in themselves, such as File
Transfer Protocol (FTP), or they can be used by other programs, such as Simple Mail Transfer
Protocol (SMTP), used by most e-mail programs, to redirect data to the network. The lower
layers support the tasks that are performed at the application layer. These tasks include
general network access, flow control, and error recovery.</P>

<p><b>Presentation Layer</b></p>

<P>Layer 6, the <i>presentation layer</i>, defines the format used to exchange data
among networked computers. Think of it as the network's translator. When computers from
dissimilar systems&#8212;such as IBM, Apple, and Sun&#8212;need to communicate, a certain amount
of translation and byte reordering must be done. Within the sending computer, the presentation
layer translates data from the format sent down from the application layer into a commonly
recognized, intermediary format. At the receiving computer, this layer translates the
intermediary format into a format that can be useful to that computer's application layer.
The presentation layer is responsible for converting protocols, translating the data,
encrypting the data, changing or converting the character set, and expanding graphics commands.
The presentation layer also manages data compression to reduce the number of bits that need to
be transmitted.</P> 

<p>The <i>redirector</i>, which redirects input/output (I/O) operations to resources on a
server, operates at this layer. Redirectors are discussed in <A HREF="ch08a.htm#423">Chapter 8</a>, &quot;Designing and Installing a Network.&quot;</p>


<p><b>Session Layer</b></p>

<P>Layer 5, the <i>session layer</i>, allows two applications on different computers
to open, use, and close a connection called a <i>session</i>. (A session is a highly structured
dialog between two workstations.) The session layer is responsible for managing this dialog. It
performs name-recognition and other functions, such as security, that are needed to allow two
applications to communicate over the network.</P> 

<p>The session layer synchronizes user tasks by placing checkpoints in the data stream. The
checkpoints break the data into smaller groups for error detection. This way, if the network
fails, only the data after the last checkpoint has to be retransmitted. This layer also
implements dialog control between communicating processes, such as regulating which side
transmits, when, and for how long.</p>


<p><b>Transport Layer</b></p>

<P>Layer 4, the <i>transport layer</i>, provides an additional connection level
beneath the session layer. The transport layer ensures that packets are delivered error free,
in sequence, and without losses or duplications. At the sending computer, this layer repackages
messages, dividing long messages into several packets and collecting small packets together in
one package. This process ensures that packets are transmitted efficiently over the network. At
the receiving computer, the transport layer opens the packets, reassembles the original
messages, and, typically, sends an acknowledgment that the message was received. If a duplicate
packet arrives, this layer will recognize the duplicate and discard it.</P> 

<p>The transport layer provides flow control and error handling, and participates in solving
problems concerned with the transmission and reception of packets. Transmission Control
Protocol (TCP) and Sequenced Packet Exchange (SPX) are examples of transport-layer
protocols.</p>


<p><b>Network Layer</b></p>

<P>Layer 3, the <i>network layer</i>, is responsible for addressing messages and
translating logical addresses and names into physical addresses. This layer also determines the
route from the source to the destination computer. It determines which path the data should
take based on network conditions, priority of service, and other factors. It also manages
traffic problems on the network, such as switching and routing of packets and controlling the
congestion of data.</P> 

<p>If the network adapter on the router cannot transmit a data chunk as large as the source
computer sends, the network layer on the router compensates by breaking the data into smaller
units. At the destination end, the network layer reassembles the data. Internet Protocol (IP)
and Internetwork Packet Exchange (IPX) are examples of network-layer protocols.</p>


<p><b>Data-Link Layer</b></p>

<P>Layer 2, the <i>data-link layer</i>, sends data frames from the network layer to
the physical layer. It controls the electrical impulses that enter and leave the network cable.
On the receiving end, the data-link layer packages raw bits from the physical layer into data
frames. (A data frame is an organized, logical structure in which data can be placed. Data
frames are discussed in more detail in Chapter 3, <a href="ch03e.htm#187">Lesson 4: Token Ring</a>.) The electrical
representation of the data (bit patterns, encoding methods, and tokens) is known to this layer
only.</P> 

<p>Figure 5.3 shows a simple data frame. In this example, the sender ID represents the address
of the computer that is sending the information; the destination ID represents the address of
the computer to which the information is being sent. The control information is used for frame
type, routing, and segmentation information. The data is the information itself. The cyclical
redundancy check (CRC) provides error correction and verification information to ensure that
the data frame is received correctly.</p>



<p>
<img src="images/F05xx03.JPG" width=230 height=196 border=0>
</p><p>
<!--caption--><b>Figure 5.3</b> <i>A simple data frame</i><!--/caption-->
</p>


<P>The data-link layer is responsible for providing error-free transfer of these
frames from one computer to another through the physical layer. This allows the network layer
to anticipate virtually error-free transmission over the network connection.</P> 

<p>Usually, when the data-link layer sends a frame, it waits for an acknowledgment from the
recipient. The recipient data-link layer detects any problems with the frame that might have
occurred during transmission. Frames that were damaged during transmission or were not
acknowledged are then re-sent.</p>


<p><b>Physical Layer</b></p>

<P>Layer 1, the bottom layer of the OSI reference model, is the <i>physical layer.</i> This
layer transmits the unstructured, raw bit stream over a physical medium (such as the network
cable). The physical layer is totally hardware-oriented and deals with all aspects of
establishing and maintaining a physical link between communicating computers. The physical
layer also carries the signals that transmit data generated by each of the higher layers.</p> 

<p>This layer defines how the cable is attached to the NIC. For example, it defines how many
pins the connector has and the function of each. It also defines which transmission technique
will be used to send data over the network cable.</p>

<p>This layer provides data encoding and bit synchronization. The physical layer is responsible
for transmitting bits (zeros and ones) from one computer to another, ensuring that when a
transmitting host sends a 1 bit, it is received as a 1 bit, not a 0 bit. Because different
types of media physically transmit bits (light or electrical signals) differently, the physical
layer also defines the duration of each impulse and how each bit is translated into the
appropriate electrical or optical impulse for the network cable.</p>

<p>This layer is often referred to as the &quot;hardware layer.&quot; Although the rest of the
layers can be implemented as firmware (chip-level functions on the NIC), rather than actual
software, the other layers are software in relation to this first layer.</p>

<A NAME="293"><h3>Memorizing the OSI Reference Model</h3></A>
<P>Memorizing the layers of the OSI reference model and their order is very important,
especially when preparing to take a computer networking exam. Table 5.1 provides two ways to
help you recall the seven layers of the OSI reference model.</P>

<p><b>Table 5.1</b> <i>OSI Reference Model Layers</i></p>
<table cellpadding=5 width="95%">
<tr><th>OSI Layer</th> 
<th>Down the Stack <img src="images/arodown2.jpg" width=14 height=25 border=0></th> 
<th>Up the Stack <img src="images/aroup2.jpg" width=16 height=24 border=0></th>
</tr>
<tr><td vAlign=top>Application</td><td vAlign=top> All</td> <td vAlign=top>Away</td></tr>

<tr><td vAlign=top>Presentation</td> <td vAlign=top>People</td> <td vAlign=top>Pizza</td></tr>

<tr><td vAlign=top>Session</td> <td vAlign=top>Seem</td> <td vAlign=top>Sausage</td></tr>

<tr><td vAlign=top>Transport</td> <td vAlign=top>To</td> <td vAlign=top>Throw</td></tr>

<tr><td vAlign=top>Network</td> <td vAlign=top>Need</td> <td vAlign=top>Not</td></tr>

<tr><td vAlign=top>Data Link</td> <td vAlign=top>Data</td> <td vAlign=top>Do</td></tr>

<tr><td vAlign=top>Physical</td> <td vAlign=top>Processing</td> <td vAlign=top>Please</td></tr>
</table>

<A NAME="294"><h3>Data Packets and the OSI Reference Model</h3></A>
<P>In Chapter 3, <a href="ch03c.htm#162">Lesson 2: How Networks Send Data</a>, we discussed the data packet in
general terms. These data packets are assembled and disassembled according to the OSI reference model.
The packet-creation process begins at the application layer of the OSI reference model, where the data is
generated. Information to be sent across the network starts at the application layer and
descends through all seven layers.</P> 

<p>At each layer, information relevant to that layer is added to the data. This information is
for the use of the corresponding layer in the receiving computer. The data-link layer in the
receiving computer, for instance, will read information added at the data-link layer in the
sending computer. Figure 5.4 shows the assembly of a packet in the sending workstation and the
disassembly of the packet in the receiving workstation.</p>


<p>
<img src="images/F05xx04.JPG" width=398 height=383 border="0">
</p><p>
<!--caption--><b>Figure 5.4</b> <i>Packet assembly and disassembly process</i><!--/caption-->
</p>


<P>At the transport layer, the original block of data is broken into the actual
packets. The protocol defines the structure of the packets used by the two computers.</P> 

<p>When the packet reaches the transport layer, sequence information is added that guides the
receiving computer in reassembling the data from packets.</p>

<p>When the packets finally pass through the physical layer on their way to the cable, they
contain information from each of the other six layers.</p>


<p><b>Addressing Packets</b></p>

<P>Most packets on the network are addressed to a specific computer and, as a result,
get the attention of only one computer. Each NIC sees all packets sent on its cable segment,
but it interrupts the computer only if the packet's address matches the card's
individual address. Alternatively, a broadcast-type address can also be used. Packets sent with
a broadcast-type address can receive the simultaneous attention of many computers on the
network.</P> 

<p>In situations involving large networks that cover large regions (or even countries) and
offer several possible communication routes, the network's connectivity and switching
components use the packet's addressing information to determine the best route for
addressing packets.</p>


<p><b>Directing Packets</b></p>

<P>Network components use the addressing information in packets to direct the packets
to their destinations or to keep them away from network locations where they do not belong. The
following two functions play a key role in properly directing packets:</P>

<ul>
<p><li><b>Packet forwarding</b> Computers send a packet on to the next appropriate network component based on the address in the packet's header.</li></p>

<p><li><b>Packet filtering</b> Computers use criteria, such as an address, to select specific packets.</li></p>
</ul>



<A NAME="295"><h2>Windows NT and the OSI Reference Model</h2></A>
<P>Network manufacturers use the OSI reference model when designing their products. When each
follows the model, there is a greater likelihood that different systems can communicate. One
shortcoming of the model stems from the fact that many manufacturers created their products
before the model was accepted; these early products might not follow the model exactly. To
demonstrate how the OSI reference model is adapted to a specific network operating system, we next
examine Windows NT and how it fits the model.</P>

<A NAME="296"><h3>OSI Layers and Windows NT</h3></A>
<P>To simplify the model, Windows NT compresses the seven layers into only three
layers: file system drivers, transport protocols, and NIC drivers. Figure 5.5 shows how the
groups relate to OSI.</P>


<p>
<img src="images/F05xx05.JPG" width=385 height=241 border=0>
</p><p>
<!--caption--><b>Figure 5.5</b> <i>Windows NT and OSI</i><!--/caption-->
</p>


<P>Windows NT uses drivers to provide for communication between the operating system
and the network. A <i>driver</i> is a device-specific control program that enables a computer
to work with a particular device, such as a printer or a disk drive. Every time you install a
new piece of hardware, such as a printer, sound card, or network card, you need to install the
software drivers that operate the card.</P>

<p><b>File System Drivers</b></p>

<P><i>File system drivers</i> work in the application, presentation, and session
layers of the OSI reference model. When these drivers detect that an application is requesting resources
on a remote system, they redirect the request to the appropriate system. Examples of these
drivers include the Windows NT file system (NTFS) and file allocation table (FAT) drivers, and
the services applications installed on Windows NT Server and Windows NT
Workstation.</P>

<p><b>Transport Protocols</b></p>

<P><i>Transport protocols</i> operate in the transport and network layers of the OSI
model. They are responsible for adding software address information to the data and for
ensuring the reliability of the transmission. The transport protocols are bound to or combined
with the NIC to provide communication. During installation and configuration of Windows NT, you
must always bind these protocols to a specific network card.</P>

<p><b>Network Interface Card (NIC) Drivers</b></p>

<P><i>NIC drivers</i> operate in the data-link and physical layers of the OSI reference model.
They are responsible for adding the hardware address information to the data packet and for
formatting the data for transmission through the NIC and cable. NIC drivers are
protocol-independent, allowing systems based on Windows NT to transport data to a variety of
network systems.</P> 

<p>Figure 5.6 shows how software and protocols relate to the OSI reference model and the Windows NT
model.</p>

<p>
<A HREF="javascript:fullSize('F05xx06x.htm')"> <img src="images/F05xx06.JPG" width=404 height=215 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 5.6</b> <i>Software and protocols</i><!--/caption-->
</p>


<A NAME="297"><h3>Windows NT Interfaces</h3></A>
<P>Windows NT supports many different network redirectors, transport protocols, and
NICs. With so many possible combinations, it was necessary to develop a method of handling the
interactions between them. To resolve this problem, Microsoft developed common
interfaces&#8212;boundary layers&#8212;to act as translators between each layer. Thus, as long as
any network component was written to communicate with the boundary interfaces, it could be used
with the model. Figure 5.7 shows the three boundary interfaces.</P>


<p>
<img src="images/F05xx07.JPG" width=360 height=198 border=0>
</p><p>
<!--caption--><b>Figure 5.7</b> <i>Windows NT architecture with boundary interfaces</i><!--/caption-->
</p>


<p><b>Application Programming Interfaces (APIs)</b></p>

<P>The application programming interfaces (APIs) are system routines that give
programmers access to the services provided by the operating system. Windows NT networking APIs
lie between user applications and the file system drivers and redirectors. These APIs allow an
application to control or be controlled by other applications. They are responsible for setting
up a session between the sender and the receiver on the network. Windows NT supports a variety
of APIs for networking.</P>

<p><b>Transport Driver Interfaces (TDIs)</b></p>

<P>The transport driver interfaces (TDIs) work between the file system drives and the
transport protocols. These will allow any protocol written to TDI to communicate with the file
system drivers.</P>

<p><b>Network Driver Interface Specifications (NDISs)</b></p>

<P>The Network Driver Interface Specifications (NDISs) work between the transport
protocols and the NIC drivers. As long as a NIC driver is written to NDIS standards, it will
communicate with the transport protocols.</P>

<A NAME="298"><h2>Exercise 5.1: Reviewing the OSI Reference Model Layers</h2></A>
<P>This two-part exercise will give you the opportunity to memorize and review the
layers of the OSI reference model.</p> 

<p>The left column is a listing of a memorization tool: &quot;All People Seem To Need Data
Processing.&quot; Next to each word in that column, enter the appropriate name of the
applicable OSI layer in the center column and a brief description of that layer's function
in the right column.</p>


<table cellpadding=5 width="95%">
<tr><th>Memorization Tool</th> <th>OSI Layer</th> <th>Function</th></tr>
 
<tr><td vAlign=top>All</td><td></td><td></td></tr> 

<tr><td vAlign=top>People</td><td></td><td></td></tr>

<tr><td vAlign=top>Seem</td><td></td><td></td></tr>

<tr><td vAlign=top>To</td><td></td><td></td></tr>

<tr><td vAlign=top>Need</td><td></td><td></td></tr>

<tr><td vAlign=top>Data</td><td></td><td></td></tr>

<tr><td vAlign=top>Processing</td><td></td><td></td></tr>
</table>

<P>In the second part of Exercise 1 that follows, a device or standard is listed in
the left column. In the space provided in the right column, write in the applicable OSI
layer(s) for each device or standard.</P>

<table cellpadding=5 width="95%">
<tr><th>Device</th> <th>OSI layer</th></tr>

<tr><td vAlign=top>Gateway</td><td></td></tr>

<tr><td vAlign=top>NIC</td><td></td></tr>

<tr><td vAlign=top>Hub</td><td></td></tr>

<tr><td vAlign=top>Router</td><td></td></tr>

<tr><td vAlign=top>IEEE 802.x</td><td></td></tr>
</table>

<p><a href="chaae.htm#ans60">Answers</a></p>

<A NAME="299"><h2>Lesson Summary</h2></A>
<P>The following points summarize the main elements of this lesson:</P>

<ul>
<p><li>The OSI reference model architecture divides network protocols into seven layers: the application, presentation, session, transport, network, data-link, and physical layers.</li></p>

<p><li>Windows NT groups the OSI reference model into three layers: file system drivers, transport protocols, and NIC drivers.</li></p>

<p><li>The Windows NT network model requires three interfaces to provide communication between groups: APIs, TDIs, and NDISs.</li></p>
</ul>



</BODY>
</HTML>






<HTML>
<HEAD>
<TITLE>Lesson 3: Configuring Operating System Settings</TITLE>
<link rel="STYLESHEET" type="text/css" href="mmpro.css"><SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch04c.htm", "ch04e.htm", "images/unit_p_a1.gif", "images/unit_p_a2.gif", "images/unit_p_b1.gif", "images/unit_p_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#aa22aa", "2");
//--></SCRIPT><P>



<A NAME="134"><H1>Lesson 3: Configuring Operating System Settings</H1></A>

<p>You use certain Control Panel programs to configure operating system settings. The System Properties dialog box allows you to configure the following:</p>

<ul>
<p><li>Performance options</li></p>

<p><li>Registry size</li></p>

<p><li>Environment variables</li></p>

<p><li>Startup and recovery settings</li></p>
</ul>



<p>The Control Panel programs that you use to configure the operating system 
settings affect the operating system environment regardless of the user who is logged on to the computer.</p>

<p><div class="sidebar"><blockquote>
<b>After this lesson, you will be able to</b>

<ul>
<p><li>Use Control Panel to configure the operating system.</li></p>
</ul>



<p><b>Estimated lesson time: 30 minutes</b></p>
</blockquote></div></p>

<A NAME="135"><H2>Performance Options</H2></A>

<p>The first Control Panel program that allows you to configure operating system settings is accessed through System Properties. To view operating system performance configuration options, double-click the System icon in Control Panel, click the Advanced tab in the System Properties dialog box, and then click Performance Options. The Performance Options dialog box is shown in Figure 4.4.</p>

<p>
<img src="images/F04tk04.JPG" width=347 height=251 border="0">
</p><p>
<!-- caption --><b>Figure 4.4</b> <i>The Performance Options dialog box</i><!-- /caption -->
</p>

<p>The options in this dialog box allow you to adjust the <i>application response,</i> which is the priority of foreground applications versus background applications, and virtual memory.</p>

<A NAME="136"><H3>Application Response</H3></A>

<p>Windows 2000 uses the Application Response settings to distribute microprocessor resources between running programs. If you select Applications, more 
resources are assigned to the foreground application (the active program that 
is responding to user input), but if you select Background Services, an equal amount of resources are assigned to all programs.</p>

<A NAME="137"><H3>Virtual Memory</H3></A>

<p>The Windows 2000 memory model is based on a flat, linear, 32-bit address space. Windows 2000 uses a <i>virtual memory management</i> <i>system</i> to manage memory. This system provides several advantages, including the following:</p>

<ul>
<p><li>The ability to run more applications concurrently than would normally be possible using the amount of physical memory installed in the computer.</li></p>

<p><li>The protection of memory resources. Virtual memory management helps prevent situations where one process interferes with the memory space for another process.</li></p>
</ul>



<p><i>Physical memory</i> refers to the RAM hardware chips inside your computer. 
<i>Virtual memory</i> refers to the way that an operating system makes this physical memory available to an application.</p>

<p>Windows 2000 represents each memory byte, both physical and virtual, with a unique address. The amount of physical RAM installed in the computer limits the number of physical addresses that are available. However, the number of virtual addresses is limited only by the number of bits in the virtual address. Windows 2000, which uses a 32-bit virtual address scheme, has 4 GB of virtual addresses available for use.</p>

<p>Virtual Memory Manager (VMM) manages memory. VMM has two specific roles:</p>

<ul>
<p><li>VMM maintains a memory-mapping table. This table tracks the list of virtual addresses that belong to each process and where the actual data referenced by these virtual addresses resides. (See Figure 4.5.) When a thread requests access to memory, it requests a virtual address space. VMM uses the virtual address requested by the thread to locate the corresponding physical address. It then transfers the data requested by the thread.</li></p>

<p><li>VMM moves memory contents to and from the hard disk when required. This process is referred to as <i>paging</i>.</li></p>
</ul>



<p>
<A HREF="javascript:fullSize('F04tk05x.htm')"> <img src="images/F04tk05.JPG" width=404 height=293 border=0 ALT="Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 4.5</b> <i>Virtual Memory Manager</i><!-- /caption -->
</p>

<p><b>Virtual Address Space</b></p>

<p>A <i>virtual address</i> is the address space that an application uses to reference memory. When a process is launched in Windows 2000, VMM presents the 
process with 4 GB of virtual address space. (See Figure 4.6.)</p>

<p>
<A HREF="javascript:fullSize('F04tk06x.htm')"> <img src="images/F04tk06.JPG" width=404 height=221 border=0 ALT="Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 4.6</b> <i>Virtual address space</i><!-- /caption -->
</p>

<p>This 4 GB of virtual address space is divided as follows:</p>

<ul>
<p><li>The upper 2 GB is reserved for the system or for kernel-mode threads only. The lower portion of this upper 2 GB area is mapped directly by the hardware. Access to this lower portion is extremely fast.</li></p>

<p><li>The lower 2 GB is available to both user-mode threads: for example, applications and kernel-mode threads. VMM can move it to disk if required. Windows 2000 divides the upper portion into a paged and a nonpaged pool. Addresses in the paged pool can be swapped out to disk, but those in the nonpaged pool must remain in physical memory. The size of each page is 4 KB.</li></p>
</ul>



<p><b>Paging</b></p>

<p>The process of moving data in and out of physical memory is called <i>paging</i>. When physical memory becomes full and a thread needs access to code or 
data not currently in physical memory, VMM moves some pages from physical memory to a storage area on disk called a <i>pagefile.</i> (See Figure 4.7.) VMM loads the code or data requested by the thread into the area of physical memory that is released by VMM.</p>

<p>
<A HREF="javascript:fullSize('F04tk07x.htm')"> <img src="images/F04tk07.JPG" width=404 height=213 border=0 ALT="Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 4.7</b> <i>Paging</i><!-- /caption -->
</p>

<p>The virtual address space assigned to a process is divided up into either valid pages or invalid pages. <i>Valid pages</i> are those pages that are located in physical memory and are available to the process. <i>Invalid pages</i> are those pages that don't exist in physical memory. They aren't available to the process or stored on disk.</p>

<p>When a thread requests access to an invalid page, the microprocessor issues a <i>page fault</i>. VMM intercepts, or traps<i>,</i> the page fault, locates the required page, and then loads it from disk into a free page frame in physical memory. Conversely, to free up physical memory, VMM takes the contents of certain pages and transfers them to disk.</p>

<p>VMM performs three tasks as part of the paging process:</p>

<ul>
<p><li>It determines which pages to remove from physical memory when memory is full. VMM keeps track of the pages currently in memory for each process. This group of pages is referred to as a process's working set. VMM uses a local first-in, first-out replacement policy to decide which pages to move out of physical memory. The data that has been in physical memory for the longest is the first to be removed. When a thread generates a page fault, VMM examines the working set for the thread's process and then moves to disk the page that has resided in physical memory for the longest.</li></p>

<p><li>It brings pages from disk into physical memory&#8212;a process called <i>fetching</i>. VMM also uses a method known as demand paging with clustering. <i>Demand paging with clustering</i> means that when a page fault is triggered, VMM loads the needed page into memory, plus some of the pages that surround it. This helps to reduce the number of page faults that are generated.</li></p>

<p><li>It determines where to place pages retrieved from disk. If physical memory isn't full, VMM loads the data into the first free page. If physical memory is full, VMM determines which page or pages to move to disk to make room in physical memory for the pages retrieved from disk.</li></p>
</ul>



<p><b>Paging File Size</b></p>

<p>When you install Windows 2000, Setup creates a virtual-memory paging file, Pagefile.sys, on the partition where you installed Windows 2000. The minimum paging file size is 2 MB. The default or recommended paging file size for 
Windows 2000 Professional is equal to 1.5 times the total amount of RAM. 
Typically, you can leave the size of the paging file set to the default value. In some circumstances, such as when you run a large number of applications simultaneously, you might want to use a larger paging file or multiple paging files.</p>

<p>To configure the paging file, click Change in the Performance Options dialog box. The Virtual Memory dialog box identifies the drives on which the paging files reside and allows you to modify the paging file size for the selected drive. (See Figure 4.8.)</p>

<p>Paging files never decrease below the initial size that was set during installation. Unused space in the paging file remains available to the internal Windows 2000 Virtual Memory Manager.</p>

<p>If you set the size of the initial paging file significantly below the recommended size, Windows 2000 may display the Windows - Virtual Memory Minimum Too Low message box sometime after you log on following the change. (See Figure 4.9.) The message indicates that Windows is increasing the size of your virtual memory paging file. While this occurs, any programs you are running may run more slowly or they may pause because any memory requests by those applications may be denied. Only users with administrative rights can use the System program to increase the paging file size.</p>

<p>
<img src="images/F04tk08.JPG" width=384 height=439 border="0">
</p><p>
<!-- caption --><b>Figure 4.8</b> <i>Configuring the paging file</i><!-- /caption -->
</p>

<p>
<A HREF="javascript:fullSize('F04tk09x.htm')"> <img src="images/F04tk09.JPG" width=404 height=104 border=0 ALT="Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 4.9</b> <i>A warning that the virtual memory minimum is set too low</i><!-- /caption -->
</p>

<p>As needed, a paging file grows from its initial size to the maximum configured size. When the paging file reaches the maximum size, system performance 
might degrade if you place additional demands on the system by running more applications.</p>

<p>When you restart a computer running Windows 2000, the system resizes all 
paging files to the initial size.</p>

<A NAME="138"><H3>Registry Size</H3></A>

<p>At the bottom of the Virtual Memory dialog box shown in Figure 4.8, the Maximum Registry Size option allows you to specify the maximum size of the registry. This setting doesn't reserve the space for the registry, so the registry might not be able to grow to the maximum size you have set. This setting simply limits the size to which the registry can grow. For more information on the registry, see <A HREF="ch05a.htm">Chapter 5</A>, &quot;Using the Registry.&quot;</p>

<A NAME="139"><H3>Enhancing Performance</H3></A>

<p>You can enhance your system's performance in several ways. First, if your computer has multiple hard disks, you can create a paging file for each disk. Distributing information across multiple paging files improves performance because 
the hard disk controller can read from and write to multiple hard disks simultaneously. When attempting to write to the paging file, VMM tries to write the page data to the paging file on the disk that is the least busy.</p>

<p>Second, you can enhance your system's performance by moving the paging file off the drive that contains the Windows 2000 <i>systemroot</i> folder (by default, the Winnt folder). Moving the paging file off the drive containing the boot partition avoids competition between the various reading and writing requests. If you place a paging file on the Windows 2000 system partition to facilitate recovery, which is discussed in the &quot;<A HREF="ch04d.htm#144">Startup and Recovery Settings</A>&quot; section later in this chapter, you can still increase performance by creating multiple paging files. 
Because the VMM alternates write operations between paging files, the paging file on the boot partition is accessed less frequently.</p>

<p>Third, you can enhance your system's performance by setting the initial size 
of the paging file to the value displayed in the Virtual Memory dialog box's Maximum Size box. This eliminates the time required to enlarge the file from 
the initial size to the maximum size.</p>

<p><div class="note"><blockquote><b>NOTE</b><hr>When applying new settings, be sure to click Set before clicking OK.</blockquote></div></p>

<A NAME="140"><H2>Environment Variables</H2></A>

<p><i>Environment variables</i> define the system and user environment information, and they contain information such as a drive, path, or filename. Environment variables provide information that Windows 2000 uses to control various applications. For example, the TEMP environment variable specifies where an application places its temporary files.</p>

<p>Click Environment Variables on the Advanced tab of the System Properties dialog box to display the system and user environment variables that are currently in effect. (See Figure 4.10.)</p>

<A NAME="141"><H3>System Environment Variables</H3></A>

<p>The <i>system environment variables</i> apply to the entire system. Consequently, these variables affect all system users. During installation, Setup configures the default system environment variables, including the path to the Windows 2000 files. Only an administrator can add, modify, or remove a system environment variable.</p>

<p>
<img src="images/F04tk10.JPG" width=384 height=423 border="0">
</p><p>
<!-- caption --><b>Figure 4.10</b> <i>Setting environment variables</i><!-- /caption -->
</p>

<A NAME="142"><H3>User Environment Variables</H3></A>

<p>The <i>user environment variables</i> differ for each user of a particular computer. The user environment variables include any user-defined settings (such as a desktop pattern) and any variables defined by applications (such as the path to the location of the application files). Users can add, modify, or remove their user environment variables in the System Properties dialog box.</p>

<A NAME="143"><H3>How Windows 2000 Sets Environment Variables</H3></A>

<p>Windows 2000 sets environment variables in the following order:</p>

<ol>
<p><li> By default, Windows 2000 searches the Autoexec.bat file, if it exists, and sets any environment variables.</li></p>

<p><li> Windows 2000 sets the system environment variables. If any system environment variables conflict with environment variables set from the search of the Autoexec.bat file, the system environment variables override them.</li></p>

<p><li> Windows 2000 sets the user environment variables. If any user environment variables conflict with environment variables set from the search of the Autoexec.bat file or from the system environment variables, the user environment variables override them.</li></p>
</ol>

<p>For example, if you add the line SET TMP=C:\ in Autoexec.bat, and a TMP=X:\TEMP user variable is set, the user environment variable setting (X:\TEMP) overrides the prior setting C:\.</p>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
You can prevent Windows 2000 from searching the Autoexec.bat file 
by editing the registry and setting the value of the ParseAutoexec entry to 0. 
The ParseAutoexec entry is located in the registry under the following subkey:

<p>\HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon</p>
</blockquote></div>
</p>

<A NAME="144"><H2>Startup and Recovery Settings</H2></A>

<p>The System Properties dialog box also controls the startup and recovery settings for a computer. In addition to using Control Panel to access the System icon, 
you can right-click My Computer, click Properties, click the Advanced tab of 
the System Properties dialog box, and then click Startup And Recovery.</p>

<p>The Startup And Recovery dialog box contains two groups of information, as shown in Figure 4.11. The System Startup options control the behavior of the boot loader menu. The System Failure options control the actions that Windows 2000 performs in the event of a system failure that stops the computer. A <i>system failure</i> is a severe error that causes Windows 2000 to stop all processes. System failures are also known as <i>fatal system errors</i> or <i>blue screen errors</i>.</p>

<p>
<img src="images/F04tk11.JPG" width=384 height=435 border="0">
</p><p>
<!-- caption --><b>Figure 4.11</b> <i>Startup and recovery settings</i><!-- /caption -->
</p>

<A NAME="145"><H3>System Startup</H3></A>

<p>When you first turn on the computer, the system displays a boot menu, which 
lists the available operating systems if more than one operating system is 
installed on the computer. By default, the system chooses one of the operating 
systems and displays a countdown timer. If you don't choose another operating system, the system starts the preselected operating system when the countdown timer reaches zero or when you press Enter. Modify the options under System Startup to determine which operating system is preselected, how long the countdown timer runs, and whether to display the boot menu.</p>

<A NAME="146"><H3>System Failure</H3></A>

<p>Table 4.4 describes the four System Failure options that Windows 2000 provides to assist the user in the event of a system failure.</p>

<p>
<div class="warning"><blockquote>
<b>IMPORTANT</b><hr>You must be logged on as a member of the Administrators group to set the system 
failure options.
</blockquote></div>
</p>

<p><b>Table 4.4</b>  <i>Recovery Options</i></p>
<p>
<table valign="top" cellpadding="5" width="95%">
<tr>
<th>Option </th><th>Additional information</th>
</tr>

<tr>
<td valign="top">Write An Event To The System Log </td><td valign="top">Select this check box to have Windows 2000 
 write an event to the system log when a system 
 stops unexpectedly.</td>
</tr>

<tr>
<td valign="top">Send An Administrative Alert </td><td valign="top">Select this check box to send an administrative 
 alert to administrators when the system stops 
 unexpectedly.</td>
</tr>

<tr>
<td valign="top">Automatically Reboot</td> <td valign="top">Select this check box to have Windows 2000 
 reboot whenever the system stops unexpectedly.</td>
</tr>

<tr>

<td valign="top">Write Debugging Information </td>
<td valign="top">Select the first option in this group to specify 
 which information Windows 2000 should write 
 to the dump file, Memory.dmp. The following 
 four choices are available:

<p><b>None.</b>  Nothing is written to the dump file.</p>

<p><b>Small Memory Dump.</b>  The minimum amount 
 of information will be dumped. The paging file 
 space required is 64 K. The small dump directory stores a history of these dumps and can be 
 set. By default, the small dump directory is 
 %SystemRoot%\Minidump.</p>

<p><b>Kernel Memory Dump.</b>  Only kernel memory 
 is written to the dump file. Depending on the 
 amount of RAM on your computer, you must 
 have from 50 to 800 MB available in the 
 paging file.</p>

<p><b>Complete Memory Dump.</b>  The entire contents of system memory is recorded when the 
 system stops unexpectedly. You must have a 
 paging file on the boot disk large enough to 
 hold all the RAM on your system plus 1 MB.</p></td>
</tr></table>
</p>

<p><div class="note"><blockquote><b>NOTE</b><hr>Windows 2000 always writes to the same dump file, 
Memory.dmp. After a system crash, you should rename the dump file so that it won't be 
overwritten.</blockquote></div></p>

<p>The following requirements must be met for the Write Debugging Information options to work:</p>

<ul>
<p><li>A paging file must be on the system partition (the partition that contains the <i>systemroot</i> folder).</li></p>

<p><li>The paging file must be at least 1 MB larger than the amount of physical RAM in your computer.</li></p>

<p><li>You must have enough disk space to write the file in the location you specify. To overwrite an existing file, select the Overwrite Any Existing File check box in the Startup And Recovery dialog box.</li></p>
</ul>
<p>
<img src="images/practic.JPG" width=92 height=74 border="0">
</p>

<A NAME="147"><H2>Practice: Using Control Panel to Change Operating System Settings</H2></A>

<p>In this practice, you will use the Advanced tab of the System Properties dialog box to change some of the system settings. First you will change the length of time for the boot delay. Then you will change the paging file size, and finally, you will add and test a new system environment variable.</p>

<A NAME="148"><H3>Exercise 1: Decreasing the Boot Delay</H3></A>

<p>In this exercise, you will decrease the boot delay by changing the number of 
seconds before the default operating system loads.</p>

<p><div class="note"><blockquote><b>NOTE</b><hr>If your computer has Windows 2000 Professional as its sole operating system, then skip Exercise 1 and go on to Exercise 2. If you would like to change the boot delay setting in Exercise 1 for practice, bear in mind that it will have no effect on your computer.</blockquote></div></p>


<p><li><b>To decrease the boot delay</b></li></p>


<ol>
<p><li> Log on as Administrator.</li></p>

<p><li> In Control Panel, double-click the System icon.</li></p>


<p>The System Properties dialog box appears.</p>


<p><li> On the Advanced tab, click Startup And Recovery.</li></p>

<p>The Startup And Recovery dialog box appears. Notice that the list of operating systems will be displayed for 30 seconds by default.</p>


<p><li> In the Display List Of Operating Systems For box, for the number of seconds, type <b>0</b> and then click OK.</li></p>

<p>You are returned to the System Properties dialog box.</p>

<p><li> Click OK to close the System Properties dialog box.</li></p>

<p><li> Close Control Panel.</li></p>

<p><li> Restart your computer.</li></p>


<p>Notice that the boot loader menu doesn't appear.</p>


<p><li> Log on as Administrator.</li></p>

<p><li> Return to the Startup And Recovery dialog box, change the boot delay setting to 15 seconds, and then click OK. Leave the System Properties dialog box open.</li></p>
</ol>

<A NAME="149"><H3>Exercise 2: Changing the Paging File Size</H3></A>

<p>In this exercise, you will use the System Properties dialog box to change the size of the Windows 2000 paging file.</p>

<p><li><b>To change the paging file size</b></li></p>



<ol>
<p><li> On the Advanced tab, click Performance Options.</li></p>


<p>The Performance Options dialog box appears.</p>


<p><li> Click Change.</li></p>


<p>The Virtual Memory dialog box appears.</p>


<p><li> In the Drive box, click the drive that contains your paging file, if necessary.</li></p>

<p><li> In the Initial Size (MB) box, increase the value by 10, and then click Set.</li></p>

<p><li> Click OK to close the Virtual Memory dialog box.</li></p>

<p><li> Click OK to close the Performance Options dialog box.</li></p>
</ol>

<A NAME="150"><H3>Exercise 3: Adding a System Environment Variable</H3></A>

<p>In this exercise, you will use the System Properties dialog box to add a new 
system environment variable. You will then test the new variable by using it at the command prompt.</p>

<p><li><b>To add a system environment variable</b></li></p>



<ol>
<p><li> In the System Properties dialog box, click the Advanced tab and click Environment Variables.</li></p>


<p>The Environment Variables dialog box appears.</p>


<p><li> Under System Variables, click New.</li></p>


<p>The New System Variable dialog box appears.</p>


<p><li> Type <b>Pro2000dir</b> in the Variable Name box.</li></p>

<p><li> In the Variable Value box, type the path to the Winnt folder on your computer, for example, C:\Winnt.</li></p>


<p>If you aren't sure of the path to Winnt, use Windows Explorer to locate it.</p>

<p><li> Click OK.</li></p>


<p>You are returned to the Environment Variables dialog box.</p>


<p><li> Click OK to close the Environment Variables dialog box, and then click OK to close the System Properties dialog box.</li></p>

<p><li> Close Control Panel.</li></p>
</ol>

<p><li><b>To test the new variable</b></li></p>



<ol>
<p><li> From the Start menu, point to Programs, point to Accessories, and then click Command Prompt.</li></p>

<p><li> At the command prompt, type <b>set | more</b> and then press Enter.</li></p>


<p>The list of current environment variables is displayed.</p>


<p><li> Press Spacebar to display the remaining environment variables.</li></p>

<p><li> If necessary, type <b>c:</b> and then press Enter to switch to the drive on which you installed Windows 2000. (Adjust the drive letter if necessary.)</li></p>

<p><li> Type <b>cd\</b> and then press Enter if you aren't already in the root folder.</li></p>

<p><li> Type <b>cd %Pro2000dir%</b> and then press Enter.</li></p>


<p>You should now be in the Winnt folder.</p>


<p><li> Type <b>exit</b> and press Enter to close the Command Prompt window.</li></p>
</ol>

<A NAME="151"><H2>Lesson Summary</H2></A>

<p>In this lesson, you learned that you use the System Properties dialog box to configure performance options, registry size, environment variables, and startup and 
recovery settings. Performance options, which you access from the Advanced tab, allow you to adjust the application response, which is the priority of foreground applications versus background applications, and virtual memory. Environment variables, which you also access from the Advanced tab of the System Properties dialog box, define the system and user environment information, and they contain information such as a drive, path, or filename. Environment variables provide 
information that Windows 2000 uses to control various applications.</p>

<p>Windows 2000 sets the environment by first searching the Autoexec.bat file, if it exists, and setting any environment variables. Next the system environment variables are set. If any conflicts exist with the environment variables set from the search of the Autoexec.bat file, the system environment variables override them. Finally the user environment variables are set. If any conflicts exist with environment variables set from the search of the Autoexec.bat file or from the system environment variables, the user environment variables override them.</p>

<p>You can access startup and recovery settings also from the Advanced tab of the System Properties dialog box. The System Startup options control the behavior of the boot loader menu. You modify the options under System Startup to determine which operating system is preselected, how long the countdown timer runs, and whether the boot menu is displayed. The System Failure options control the actions that Windows 2000 performs in the event of a system failure, which are also known as fatal system errors or blue screen errors.</p>

<p>The Control Panel programs that you use to configure the operating system 
settings affect the operating system environment regardless of the user who is logged on to the computer.</p>

</BODY>
</HTML>







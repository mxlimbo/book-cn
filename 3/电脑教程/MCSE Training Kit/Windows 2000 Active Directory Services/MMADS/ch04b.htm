<html>
<head>
<title>Lesson 1: Planning Active Directory Implementation</title>
<link rel="STYLESHEET" type="text/css" href="mmads.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch04a.htm", "ch04c.htm", "images/unit_p_a1.gif", "images/unit_p_a2.gif", "images/unit_p_b1.gif", "images/unit_p_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#aa22aa", "2");
//--></SCRIPT><P>

<A NAME="143"><h1>Lesson 1: Planning Active Directory Implementation</h1></A>
<p>Active Directory provides methods for designing a directory structure that meet the needs of your 
organization. Before implementing Active Directory you must examine your organization's business structure 
and operations and plan the 
domain structure, domain namespace, OU structure, and site structure needed 
by your organization. With the flexibility of Active Directory, you can create the network 
structure that best fits your company's needs. This lesson walks you through the steps of planning an 
Active Directory implementation.</p>

<p>
<div class="sidebar"><blockquote>
<b>After this lesson, you will be able to</b>

<ul>
<p><li> Plan a domain structure</li></p>

<p><li> Plan a domain namespace</li></p>

<p><li> Plan an OU structure</li></p>

<p><li> Plan a site structure</li></p>
</ul>

<p><b>Estimated lesson time: 35 minutes</b></p>
</blockquote></div>
</p>

<A NAME="144"><h2>Planning a Domain Structure</h2></A>
<p>Because the core unit of logical structure in Active Directory is the domain, which can store 
millions of objects, it is essential to plan the domain structure for your company carefully. When 
planning a domain structure, you must assess your company's</p>

<ol>
<p><li> Logical and physical environment structure</li></p>

<p><li> Administrative requirements</li></p>

<p><li> Domain requirements</li></p>

<p><li> Domain organization needs</li></p>
</ol>

<A NAME="145"><h3>Assessing the Logical Environment</h3></A>
<p>You must understand how your company conducts daily operations to determine the logical 
structure of your organization. Consider how the company operates functionally and geographically. 
For example, Figure 4.1 shows fictitious functional and geographical divisions for Microsoft. 
Functionally, Microsoft operates through its Administration, Purchasing, Sales, and Distribution 
departments. Geographically, Microsoft has offices in Kansas City, St. Paul, Chicago, and 
Columbus.</p>

<p>
<A HREF="javascript:fullSize('04wtk01x.htm')"> <img src="images/04wtk01.JPG" width=404 height=338 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 4.1</b> <i>Functional and geographical divisions for Microsoft</i><!-- /caption -->
</p>


<A NAME="146"><h3>Assessing the Physical Environment</h3></A>
<p>By assessing your company's physical environment, you can determine the technical requirements 
for implementing Active Directory. Although you've already examined geographical locations, you must 
now consider your company's user and network requirements so you can determine the logical requirements 
for implementing Active Directory.</p>

<p>To assess user requirements, for each functional and geographical 
division determine</p>

<ul>
<p><li> The number of employees</li></p>

<p><li> The growth rate</li></p>

<p><li> Plans for expansion</li></p>
</ul>

<p>To assess network requirements, for each geographical division determine</p>

<ul>
<p><li> How network connections are organized</li></p>

<p><li> Network connection speed</li></p>

<p><li> How network connections are utilized</li></p>

<p><li> TCP/IP subnets</li></p>
</ul>

<p>For example, Figure 4.2 shows the physical environment for Microsoft. Employees are distributed 
fairly evenly among the four locations. However, among the functional divisions, more employees are 
employed in the Administration department. In the next five years, growth for all locations and all 
departments is estimated at 3 percent. The Chicago office is the hub of the Microsoft wide area network 
(WAN). Network connections are utilized moderately; however, the Kansas 
City-to-Chicago connection has a high degree of utilization.</p>

<p>
<A HREF="javascript:fullSize('04wtk02x.htm')"> <img src="images/04wtk02.JPG" width=404 height=309 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 4.2</b> <i>Physical environment for Microsoft</i><!-- /caption -->
</p>


<A NAME="147"><h3>Assessing Administrative Requirements</h3></A>
<p>Assessing how your company's network resources are managed also helps you to plan your 
domain structure. Identify the method of network administration used by your company:</p>

<ul>
<p><li> <b>Centralized administration.</b> A single administrative team provides network services. Smaller 
companies with fewer locations or business functions often use this method.</li></p>

<p><li> <b>Decentralized administration.</b> A number of administrators or administrative teams provide 
network services. Teams may be divided by location or business function.</li></p>

<p><li> <b>Customized administration.</b> The administration of some resources is centralized 
and it is decentralized for others, depending on business needs.</li></p>
</ul>

<p>In the example, Microsoft requires decentralized administration methods. Each location requires 
its own team of administrators to provide network services for all four functional divisions.</p>

<p>After you've determined the logical and physical environment structure and the administrative requirements for your company, you can begin to determine the need for a domain in your organization.</p>

<A NAME="148"><h3>Domain Requirements</h3></A>
<p>The easiest domain structure to administer is a single domain. When planning, you should start with a 
single domain and only add domains when the single 
domain model no longer meets your needs.</p>

<p>One domain can span multiple sites and contain millions of objects. Keep in mind that site and 
domain structures are separate and flexible. A single domain can span multiple geographical sites, 
and a single site can include users and 
computers belonging to multiple domains. Planning your site structure is covered later in this lesson.</p>

<p>You do not need to create separate domains merely to reflect your company's 
organization of divisions and departments. Within each domain, you can model your organization's 
management hierarchy for delegation or administration using OUs for this purpose, which will act as 
logical containers for other objects. You can then assign group policy and place users, groups, and 
computers into the OUs. Planning OU structure is covered later in this lesson.</p>

<p>The following are some reasons to create more than one domain:</p>

<ul>
<p><li> Decentralized network administration</li></p>

<p><li> Replication control</li></p>

<p><li> Different password requirements between organizations</li></p>

<p><li> Massive numbers of objects</li></p>

<p><li> Different Internet domain names</li></p>

<p><li> International requirements</li></p>

<p><li> Internal political requirements</li></p>
</ul>

<p>In the example, Microsoft requires multiple domains for the following reasons:</p>

<ul>
<p><li> Stricter password requirements exist at the Chicago office.</li></p>

<p><li> There is a need to control replication on the highly utilized Chicago-to-Kansas City 
network connection.</li></p>

<p><li> There are plans for adding a new office in Fargo, North Dakota within two years.</li></p>
</ul>

<A NAME="149"><h3>Assessing Domain Organization Needs</h3></A>
<p>If you've determined that your company requires more than one domain, you must 
organize the domains into a hierarchy that fits the needs of your organization. You can arrange 
domains into a tree or a forest depending on the company's business needs. Recall that domains in 
trees and forests share the same configuration, schema, and global catalog. As domains are placed 
in a tree or forest hierarchy, the two-way transitive trust relationship allows the domains to share 
resources.</p>

<p>The primary difference between domain trees and forests is in their Domain Name Service (DNS) 
name structure. All domains in a domain tree have a contiguous DNS namespace. Unless your organization 
operates as a group of several entities, such as a partnership or conglomerate, your network probably 
lends itself to a contiguous DNS namespace, and you should set up multiple domains in a single domain tree. 
If you need to combine organizations with unique domain names, create a forest. You can also use a forest 
to separate DNS zones. Each tree in the forest has its own unique namespace.</p>

<p>In the example, the Microsoft organizational structure maps to a group of domains in a domain tree. 
Microsoft is not a part of any other entity, nor are there any known plans for creating multiple entities 
in the future.</p>

<A NAME="150"><h2>Planning a Domain Namespace</h2></A>
<p>In Windows 2000 Active Directory, domains are named with DNS names. But before you begin using 
DNS on your network, you must plan your DNS namespace. You must make some decisions about how you 
intend to use DNS naming and what goals you are trying to accomplish using DNS. For instance:</p>

<ul>
<p><li> Have you previously chosen and registered a DNS domain name for use on the Internet?</li></p>

<p><li> Will your company's internal Active Directory namespace be the same or different from its 
external Internet namespace?</li></p>

<p><li> What naming requirements and guidelines must you follow when choosing DNS domain names?</li></p>
</ul>

<A NAME="151"><h3>Choosing a DNS Domain Name</h3></A>
<p>When setting up DNS servers, it is recommended that you first choose and register a unique 
parent DNS name that can be used for hosting your organization on the Internet. For example, 
Microsoft uses microsoft.com. This name is a second-level domain within one of the top-level 
domains used on the Internet.</p>

<p>Before you decide on a parent DNS name for your organization to use on the Internet, perform a 
search to see if the name is already registered to another 
entity. The Internet DNS namespace is currently managed by Network Solutions, Inc., 
though other domain name registrars are also available.</p>

<p>Once you have chosen your parent DNS name, you can combine this name with 
a location or organizational name used within your organization to form other subdomain names. 
For example, a subdomain added to the Microsoft second-level domain might be chicago, forming the 
namespace chicago.microsoft.com.</p>

<A NAME="152"><h3>Internal and External Namespaces</h3></A>
<p>To implement Active Directory, there are two choices for namespace design. The Active Directory namespace 
can either be the same or separate from the established, registered DNS namespace.</p>

<b>Same Internal and External Namespaces</b>

<p>In this scenario, the company uses the same name for the internal and external namespaces as shown in 
Figure 4.3. Microsoft.com is used both inside and 
outside of the company. To implement this scenario, the following requirements must be met:</p>

<ul>
<p><li> Users on the company's internal, private network must be able to access both internal and external 
servers (both sides of the firewall).</li></p>

<p><li> Clients accessing resources from the outside must not be able to access internal company 
resources or resolve names to protect company data.</li></p>
</ul>

<p>
<A HREF="javascript:fullSize('04wtk03x.htm')"> <img src="images/04wtk03.JPG" width=404 height=480 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 4.3</b> <i>Same internal and external namespaces</i><!-- /caption -->
</p>


<p>For this scenario to work, two separate DNS zones must exist. One zone will 
exist outside the firewall, providing name resolution for public resources. This zone is not configured 
to resolve internal resources, thereby making internal company resources nonaccessible to external clients.</p>

<p>The challenge in this configuration is making publicly available resources accessible to internal 
clients, as the external DNS zone is not configured to resolve internal resources. One suggestion is to 
duplicate the external zone on an internal DNS for internal clients to resolve resources. If a proxy server 
is being used, the proxy client should be configured to treat microsoft.com as an internal resource.</p>

<p>The advantages to using the same internal and external namespaces are 
as follows:</p>

<ul>
<p><li> The tree name, microsoft.com, is consistent both on the internal private
network and on the external public Internet.</li></p>

<p><li> This scenario extends the idea of a single logon name to the public Internet, 
allowing users to use the same logon name both internally and externally. For example, 
jsmith@microsoft.com would serve as both the logon and e-mail ID.</li></p>
</ul>

<p>The disadvantages to using the same internal and external namespaces are 
as follows:</p>

<ul>
<p><li> It results in a more complex proxy configuration. Proxy clients must be configured to know the 
difference between internal and external resources.</li></p>

<p><li> Care must be taken not to publish internal resources on the external public Internet.</li></p>

<p><li> There will be duplication of efforts in managing resources; for example, maintaining duplicate 
zone records for internal and external name resolution.</li></p>

<p><li> Even though the namespace is the same, users will get a different view of internal 
and external resources.</li></p>
</ul>

<b>Separate Internal and External Namespaces</b>

<p>In this scenario, the company uses separate internal and external namespaces as shown in Figure 4.4. 
Basically, the names will be different on either side of the firewall. Microsoft.com is the name that is 
used outside the firewall and msn.com is the name used inside the firewall.</p>

<p>
<A HREF="javascript:fullSize('04wtk04x.htm')"> <img src="images/04wtk04.JPG" width=404 height=519 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 4.4</b> <i>Separate internal and external namespaces</i><!-- /caption -->
</p>


<p>Separate names are used inside and outside the corporation. Microsoft.com is 
the name that the Internet community sees and uses. Msn.com is the name that the private network sees 
and uses. To do this, two namespaces must be registered with the Internet DNS. The purpose of registering 
both names is to prevent 
duplication of the internal name by another public network. If the name were not reserved, internal 
clients would not be able to distinguish between the internal name and the publicly registered DNS 
namespace.</p>

<p>Two zones will be established. One zone will resolve microsoft.com and the other DNS zone will 
resolve msn.com on the inside of the firewall. Users can clearly distinguish between internal and 
external resources.</p>

<p>The advantages to using the separate internal and external namespaces are 
as follows:</p>

<ul>
<p><li> Based on different domain names, the difference between internal and external resources is clear.</li></p>

<p><li> There is no overlap or duplication of effort, resulting in a more easily managed environment.</li></p>

<p><li> Configuration of proxy clients is simpler because exclusion lists only need to contain microsoft.com 
when identifying external resources.</li></p>
</ul>

<p>The disadvantages to using the separate internal and external namespaces are 
as follows:</p>

<ul>
<p><li> Logon names are different from e-mail names. For example, John Smith would log on as 
jsmith@msn.com and his e-mail address would be jsmith@microsoft.com.</li></p>

<p><li> Multiple names must be registered with an Internet DNS.</li></p>
</ul>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
In this scenario, logon names are different by default. An administrator can use the MMC to change the user principal name (UPN) suffix properties of users so that the user logon will match the user e-mail address. However, this 
requires additional intervention.</blockquote></div>
</p>

<A NAME="153"><h2>Domain Naming Requirements and Guidelines</h2></A>
<p>When you plan your company's domain namespace, consider the following 
domain naming requirements and guidelines for root domains and subdomains:</p>

<ul>
<p><li> Select a root domain name that will remain static. Changing a root domain name may be impossible 
or costly in the future.</li></p>

<p><li> Use simple names. Simple and precise domain names are easier for users to remember and they enable 
users to search intuitively for resources.</li></p>

<p><li> Use standard DNS characters and Unicode characters. Windows 2000 supports the following standard DNS characters: A-Z, a-z, 0-9, and the hyphen (-), as defined in Request for Comment (RFC) 1035. The Unicode character set includes additional characters not found in the American Standard Code for Information Exchange (ASCII) character set, which are required for some languages other than English.</li></p>
</ul>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
Use Unicode characters only if all servers running DNS service in your environment support Unicode. 
For more information on the Unicode character set, read RFC 2044, by searching for <b>RFC 2044</b> 
with your Web browser.</blockquote></div>
</p>

<ul>
<p><li> Limit the number of domain levels. Typically, DNS host entries should be three or four levels 
down the DNS hierarchy and no more than five levels down the hierarchy. Multiple levels increase 
administrative tasks.</li></p>

<p><li> Use unique names. Each subdomain must have a unique name within its parent domain to ensure 
that the name is unique throughout the DNS namespace.</li></p>

<p><li> Avoid lengthy domain names. Domain names can be up to 63 characters, including the periods. 
The total length of the name cannot exceed 255 characters. Case-sensitive naming is not supported.</li></p>
</ul>

<p>Taking into account the logical, physical, and administrative requirements, as well as the need for domains and domain organization, Figure 4.5 shows the 
domain structure for Microsoft. The company's root domain, microsoft.com, contains subdomains for its four offices.</p>

<p>
<A HREF="javascript:fullSize('04wtk05x.htm')"> <img src="images/04wtk05.JPG" width=404 height=184 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 4.5</b> <i>Microsoft domain structure and domain names</i><!-- /caption -->
</p>


<A NAME="154"><h2>Planning an OU Structure</h2></A>
<p>After you determine your company's domain structure and plan its domain namespace, you must plan its OU 
structure. You can create a hierarchy of OUs in a domain. In a single domain, organize users and resources 
by using a hierarchy of OUs to reflect the structure of the company. OUs allow you to model your 
organization in a meaningful and manageable way and to assign an appropriate local authority as 
administrator at any hierarchical level.</p>

<p>Each domain can implement its own OU hierarchy. If your enterprise contains several domains, 
you can create OU structures within each domain, independent of the structures in the other domains.</p>

<p>Consider creating an OU if you want to do the following:</p>

<ul>
<p><li> Reflect your company's structure and organization within a domain. Without OUs, all users 
are maintained and displayed in a single list, regardless of a user's department, location, or role.</li></p>

<p><li> Delegate administrative control over network resources, but maintain the ability to manage them. 
You can grant administrative permissions to users or groups of users at the OU level.</li></p>

<p><li> Accommodate potential changes in your company's organizational structure. You can reorganize 
users between OUs easily, whereas reorganizing users between domains generally requires more time and 
effort.</li></p>

<p><li>Group objects to allow administrators to locate similar network resources easily, to simplify 
security, and to perform any administrative tasks. For example, you could group all user accounts for 
temporary employees into an OU called TempEmployees.</li></p>

<p><li> Restrict visibility of network resources in Active Directory. Users can view only the 
objects for which they have access.</li></p>
</ul>

<A NAME="155"><h3>Planning an OU Hierarchy</h3></A>
<p>When planning an OU hierarchy, it's important to consider two main guidelines:</p>

<ol>
<p><li> Although there are no restrictions on the depth of the OU hierarchy, a shallow hierarchy 
performs better than a deep one.</li></p>

<p><li> OUs should represent business structures that are not subject to change.</li></p>
</ol>

<p>There are many ways to structure OUs for your company. It is important to 
determine what model will be used as a base for the OU hierarchy. Consider the following models 
for classifying OUs in the OU hierarchy:</p>

<p><b>Business function-based OUs</b> can be created based on various business 
functions within the organization. A business function-based OU hierarchy 
for domain.com is shown in Figure 4.6. The top level of OUs&#8212;ADMIN, 
DEVELOPMENT (DEVEL), and SALES&#8212;corresponds to the company's business divisions. The second level of OUs represents the functional 
divisions within the business divisions.</p>

<p>
<A HREF="javascript:fullSize('04wtk06x.htm')"> <img src="images/04wtk06.JPG" width=404 height=225 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 4.6</b> <i>A business function-based OU structure</i><!-- /caption -->
</p>


<p><b>Geographical-based OUs</b> can be created based on the location of company 
offices. A geographical-based OU hierarchy for domain.com is shown in Figure 4.7. The top level of 
OUs&#8212;WEST, CENTRAL, and EAST&#8212;corresponds to the regions set up for the organization. 
The second level of OUs represents the physical locations of the company's eight offices.</p>

<p>
<A HREF="javascript:fullSize('04wtk07x.htm')"> <img src="images/04wtk07.JPG" width=404 height=250 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 4.7</b> <i>A geographical-based OU structure</i><!-- /caption -->
</p>


<p><b>Business function and geographical-based OUs</b> 
can be created based on both business function and the location of company offices. 
A business function and geographical-based OU hierarchy for domain.com is shown in Figure 4.8. 
The top level of OUs&#8212;NORTH AMERICA and EUROPE&#8212;corresponds to the continents on which the 
company has offices. The second level of OUs represents the functional divisions within the company.</p>

<p>
<A HREF="javascript:fullSize('04wtk08x.htm')"> <img src="images/04wtk08.JPG" width=404 height=217 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 4.8</b> <i>A business and geographical-based OU structure</i><!-- /caption -->
</p>


<A NAME="156"><h2>Planning a Site Structure</h2></A>
<p>Recall that a site is part of the Active Directory physical structure and is a combination of 
one or more Internet Protocol (IP) subnets connected by a highly reliable and fast network connection. 
In Active Directory, site structure is concerned with the physical environment and is maintained separately 
from the logical environment, the domain structure. A single domain can include multiple sites, and a 
single site can include multiple domains or parts of multiple domains. The main role of a site is to provide 
good network connectivity.</p>

<p>The way in which you set up your sites affects Windows 2000 in two ways:</p>

<ul>
<p><li><b>Workstation logon and authentication.</b> When a user logs on, Windows 2000 will try to find a 
domain controller in the same site as the user's computer to service the user's logon request and 
subsequent requests for network information.</li></p>

<p><li> <b>Directory replication.</b> You can configure the schedule and path for replication of a 
domain's directory differently for inter-site replication, as opposed to replication within a site. 
Generally, you should set replication between sites to be less frequent than replication within a 
site.</li></p>
</ul>

<A NAME="157"><h3>Optimizing Workstation Logon Traffic</h3></A>
<p>When planning sites, consider which domain controller(s) the workstations on 
a given subnet should use. To have a particular workstation only log on to a 
specific set of domain controllers, define the sites so that only those domain 
controllers are in the same subnet as that workstation.</p>

<A NAME="158"><h3>Optimizing Directory Replication</h3></A>
<p>When planning sites, consider where the domain controllers and the network connections between 
the domain controllers will be located. Because each 
domain controller must participate in directory replication with the other domain controllers in its 
domain, configure sites so that replication occurs at times and intervals that will not interfere with 
network performance. Consider establishing a bridgehead server to provide criteria for choosing which 
domain controller should be preferred as the recipient for inter-site replication.</p>

<A NAME="159"><h3>Designing a Site Structure</h3></A>
<p>Designing a site structure for a network that consists of a single local area network (LAN) is simple. 
Because local area connections are typically fast, the entire 
network can be a single site. Establish a separate site with its own domain controllers 
when you feel domain controllers are not responding fast enough to meet the needs of your users. 
Determining what is fast enough depends on your criteria for network performance. Inadequate performance 
is more common when deployments span a wide geographic range. Other inadequacies may be attributed to 
poor network design and implementation.</p>

<p>Follow these steps to design a site structure for an organization with multiple physical locations:</p>

<ol>
<p><li> <b>Assess the physical environment.</b> Review the information you gathered when determining 
domain structure, including site locations, network speed, how network connections are organized, 
network connection speed, how network connections are utilized, and TCP/IP subnets.</li></p>

<p><li> <b>Determine the physical locations that form domains.</b> 
Determine which physical locations are involved in each domain.</li></p>

<p><li> <b>Determine which areas of the network should be sites.</b> 
If the network area requires workstation logon controls or directory replication, the area should be 
set up as a site.</li></p>

<p><li> <b>Identify the physical links connecting sites.</b> 
Identify the link types, speeds, and utilization that exist so the links can be determined as 
site link objects. A <i>site link object</i> contains the schedule that determines when replication 
can occur between the sites that it connects.</li></p>

<p><li> <b>For each site link object, determine the cost and schedule.</b> 
The lowest cost site link performs replication; determine the priority of each link by setting 
the cost (default cost is 100; lower cost provides a higher priority). Replication occurs every 3 
hours by default; set the schedule according to your needs.</li></p>

<p><li> <b>Provide redundancy by configuring a site link bridge.</b> 
A <i>site link bridge</i> provides fault tolerance for replication.</li></p>
</ol>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
For detailed information on configuring sites and inter-site replication, see <a href="ch06a.htm">Chapter 6</a>, &quot;Configuring Sites.&quot;</blockquote></div>
</p>

<A NAME="160"><h2>Lesson Summary</h2></A>
<p>In this lesson you learned that before implementing Active Directory you must examine your organization's business structure and operations and plan the 
domain structure, domain namespace, OU structure, and site structure needed by your organization.</p>

<p>When planning a domain structure, you must assess your company's logical and physical environment structure, administrative requirements, need for multiple domains, and domain organization needs.</p>

<p>You also learned that you must make some decisions about how you intend to use DNS naming, including the use of previously chosen DNS domain names, and whether your company's internal Active Directory namespace will be the same or different from its external Internet namespace. You learned the naming requirements and guidelines you must follow when choosing DNS domain names.</p>

<p>You learned how OUs allow you to model your organization in a meaningful and manageable way and assign an appropriate local authority as administrator at any hierarchical level. You explored various ways to structure OUs for your company.</p>

<p>Finally, you learned how setting up sites affects Windows 2000 workstation logon traffic and directory replication. You learned about the steps necessary to design a site structure for an organization with multiple physical locations.</p>

</BODY>
</HTML>








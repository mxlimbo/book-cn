<html>
<head>
<title>Lesson 2: Controlling Access to Active Directory Objects</title>
<link rel="STYLESHEET" type="text/css" href="mmads.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch11b.htm", "ch11d.htm", "images/unit_p_a1.gif", "images/unit_p_a2.gif", "images/unit_p_b1.gif", "images/unit_p_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#aa22aa", "2");
//--></SCRIPT><P>

<A NAME="523"><h1>Lesson 2: Controlling Access to Active Directory Objects</h1></A>
<p>Windows 2000 uses an object-based security model to implement access control for all Active Directory objects. This security model is similar to the one that Windows 2000 uses to implement Microsoft Windows NT file system (NTFS) security. Every Active Directory object has a security descriptor that defines who has the permissions to gain access to the object and what type of access is allowed. Windows 2000 uses these security descriptors to control access to objects. This lesson explains how to set permissions for Active Directory objects.</p>

<p>
<div class="sidebar"><blockquote>

<b>After this lesson, you will be able to</b>

<ul>

<p><li> Set permissions on Active Directory objects to control user access</li></p>

</ul>

<p><b>Estimated lesson time: 20 minutes</b></p>

</blockquote></div>
</p>


<A NAME="524"><h2>Understanding Active Directory Permissions</h2></A>
<p>Active Directory permissions provide security for resources by allowing you to control who can gain access to individual objects or object attributes and the type of access that you will allow.</p>


<A NAME="525"><h3>Active Directory Security</h3></A>
<p>Use Active Directory permissions to determine who has the permissions to gain access to the object and what type of access is allowed. An administrator or the object owner must assign permissions to the object before users can gain access to the object. Windows 2000 stores a list of user access permissions, called the access control list (ACL), for every Active Directory object. The ACL for an object lists who can access the object and the specific actions that each user can perform on the object.</p>

<p>You can use permissions to assign administrative privileges to a specific user or group for an OU, a hierarchy of OUs, or a single object, without assigning administrative permissions for controlling other Active Directory objects.</p>


<A NAME="526"><h3>Object Permissions</h3></A>
<p>The object type determines which permissions you can select. Permissions vary for different object types. For example, you can assign the Reset Password permission for a user object but not for a printer object.</p>

<p>A user can be a member of multiple groups, each with different permissions that provide different levels of access to objects. When you assign a permission to a user for access to an object and that user is a member of a group to which you assigned a different permission, the user's effective permissions are the combination of the user and group permissions. For example, if a user alone has Read permission for an object and is a member of a group with Write permission, the user's effective permission for the object is Read and Write.</p>

<p>You can allow or deny permissions. Denied permissions take precedence over any permissions that you otherwise allow for user accounts and groups. If you deny a user permission to gain access to an object, the user will not have that permission, even if you allow the permission for a group of which the user is a member. You should deny permissions only when it is absolutely necessary to deny permission to a specific user who is a member of a group with allowed permissions.</p>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
Always ensure that all objects have at least one user with the Full Control permission. Failure to do so might result in some objects being inaccessible to the person using the Active Directory Users and Computers console, even an administrator, unless object ownership is changed.
</blockquote></div>
</p>


<A NAME="527"><h3>Standard Permissions and Special Permissions</h3></A>
<p>You can set standard permissions and special permissions on objects. Standard permissions are the most frequently assigned permissions and are composed of special permissions. Special permissions provide you with a finer degree of control for assigning access to objects.</p>

<p>For example, the standard Write permission is composed of the Write All Properties, Add/Remove Self As Member, and Read special permissions.</p>

<p>Table 11.4 lists standard object permissions that are available for most objects (most object types also have special permissions) and the type of access that each standard permission allows.</p>

<p><b>Table 11.4</b> <i>Standard Object Permissions and Type of Access Allowed</i></p>

<p>
	<table valign="top" cellpadding="5" width="95%">
	
		<tr>
			<th>Object Permission</th>
			<th>Allows the User To</th>
		</tr>

		<tr>
			<td valign="top">Full Control</td>
			<td valign="top">Change permissions and take ownership, plus perform the tasks that are allowed by all other standard permissions</td>
		</tr>

		<tr>
			<td valign="top">Read</td>
			<td valign="top">View objects and object attributes, the object owner, and Active Directory permissions</td>
		</tr>

		<tr>
			<td valign="top">Write</td>
			<td valign="top">Change object attributes</td>
		</tr>

		<tr>
			<td valign="top">Create All Child Objects</td>
			<td valign="top">Add any type of child object to an OU</td>
		</tr>

		<tr>
			<td valign="top">Delete All Child Objects</td>
			<td valign="top">Remove any type of object from an OU</td>
		</tr>
		
	</table>
</p>


<A NAME="528"><h2>Assigning Active Directory Permissions</h2></A>
<p>You can use the Active Directory Users and Computers console to set standard permissions for objects and attributes of objects. You use the Security tab of the Properties dialog box for the object to assign permissions (see Figure 11.2). The Properties dialog box is different for each object type.</p>

<p>
<div class="warning"><blockquote><b>IMPORTANT</b><hr>
You must select Advanced Features on the View menu to access the Security tab and assign standard permissions for an object.
</blockquote></div>
</p>

<p>
<img src="images/11wtk02.JPG" width=404 height=448 border="0">
</p><p>
<!-- caption --><b>Figure 11.2</b> <i>Setting Active Directory permissions</i><!-- /caption -->
</p>


<p>If the check boxes under Permissions are shaded, then the object has inherited permissions from the parent object. To prevent an object from inheriting permissions from a parent folder, clear the Allow Inheritable Permissions From Parent To Propagate To This Object check box.</p>

<p><li><b>To assign standard permissions for an object</b></li></p>

<ol>

<p><li> In Active Directory Users and Computers, on the View menu, ensure that Advanced Features is selected.</li></p>

<p><li> Select an object, click Properties on the Action menu, then click the Security tab in the Properties dialog box for the object.</li></p>

<p><li> To assign standard permissions:</li></p>

<ul>

<p><li> To add a new permission, click Add, click the user account or group to which you want to assign permissions, click Add, then click OK.</li></p>

<p><li> To change an existing permission, click the user account or group.</li></p>

</ul>

<p><li> Under Permissions, select the Allow check box or the Deny check box for each permission you want to add or remove.</li></p>

</ol>

<p>Standard permissions are sufficient for most administrative tasks. However, you might need to view the special permissions that constitute a standard permission. Occasionally the Security tab will display a user or a group where none of the standard permissions is allowed or denied; in such a case, the user or group has been given special permissions that are accessible through the Advanced button.</p>

<p><li><b>To view special permissions</b></li></p>

<ol>

<p><li> In the Security tab in the Properties dialog box for the object, click Advanced.</li></p>

<p><li> In the Access Control Settings For dialog box for the object (an example is shown in Figure 11.3), in the Permissions tab, click the entry that you want to view in the Permission Entries list, then click View/Edit.</li></p>

<p>
<A HREF="javascript:fullSize('11wtk03x.htm')"> <img src="images/11wtk03.JPG" width=404 height=369 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 11.3</b> <i>Access Control Settings For Users dialog box</i><!-- /caption -->
</p>


<p><li> In the Permission Entry For dialog box (see Figure 11.4) for the object, view the special permissions on the appropriate tab:</li></p>

<ul>

<p><li> Object tab, to view special object permissions assigned to the user or group.</li></p>

<p><li> Properties tab, to view user or group read and write access to specific object properties.</li></p>

</ul>

</ol>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
Avoid assigning permissions for specific properties of objects because this can complicate system administration. Errors can result, such as Active Directory objects not being visible, preventing users from completing tasks.
</blockquote></div>
</p>

<p>
<img src="images/11wtk04.JPG" width=400 height=495 border="0">
</p><p>
<!-- caption --><b>Figure 11.4</b> <i>Permission Entry For Users dialog box</i><!-- /caption -->
</p>



<A NAME="529"><h2>Using Permissions Inheritance</h2></A>
<p>Similar to file and folder permissions inheritance, permissions inheritance for Active Directory objects minimizes the number of times that you need to assign permissions for objects. When you assign permissions, you can apply the permissions to child objects, which propagates the permissions to all of the child objects for a parent object, as shown in Figure 11.5. To indicate that permissions are inherited, the check boxes for inherited permissions are shown as shaded.</p>

<p>
<img src="images/11wtk05.JPG" width=389 height=293 border="0">
</p><p>
<!-- caption --><b>Figure 11.5</b> <i>Inheriting permissions and blocking inheritance</i><!-- /caption -->
</p>


<p>For example, you can assign Full Control permission to a group for an OU that contains printers and then propogate this permission to all child objects. The result is that all group members can administer all printers in the OU.</p>

<p>You can specify that permissions for a given object are propagated to all child objects. You can also prevent permissions inheritance. When you copy previously inherited permissions, you are starting with exactly the same permissions that the object currently inherits from its parent object. However, any permissions for the parent object that you modify after blocking inheritance no longer apply. When you remove previously inherited permissions, Windows 2000 removes existing permissions and assigns no additional permissions to the object. You have to assign any permissions you want for the object.</p>


<A NAME="530"><h2>Preventing Permissions Inheritance</h2></A>
<p>You can prevent permissions inheritance so that a child object does not inherit permissions from its parent object by clearing the Allow Inheritable Permissions From Parent To Propagate To This Object check box. When you prevent inheritance, only the permissions that you explicitly assign to the object apply. You use the Security tab in the Properties dialog box to prevent permissions inheritance.</p>

<p>When you prevent permissions inheritance, Windows 2000 allows you to</p>

<ul>

<p><li> Copy previously inherited permissions to the object. The new explicit permissions for the object are a copy of the permissions that it previously inherited from its parent object. Then, according to your needs, you can make any necessary changes to the permissions.</li></p>

<p><li> Remove previously inherited permissions from the object. Windows 2000 removes any previously inherited permissions. No permissions exist for the object. Then, according to your needs, you can assign any permissions for the object.</li></p>

</ul>

<p>
<img src="images/practic.JPG" width=92 height=74 border="0">
</p>


<A NAME="531"><h2>Practice: Controlling Access to Active Directory Objects</h2></A>
<p>In this practice you create an OU with two users and review the default security settings on Active Directory components.</p>

<p>
<div class="caution"><blockquote><b>CAUTION</b><hr>
In this exercise do not change any security settings in Active Directory. Making changes could result in losing access to portions of Active Directory.
</blockquote></div>
</p>

<p><li><b>To create an OU containing two user accounts</b></li></p>

<ol>

<p><li> Log on to your domain as Administrator, then open Active Directory Users and Computers.</li></p>

<p><li> In the console tree, click your domain.</li></p>

<p><li> On the Action menu, point to New, then click Organizational Unit.</li></p>

<p><li> In the New Object-Organizational Unit dialog box, in the Name box, type <b>security1</b>, then click OK.</li></p>

<p><li> In the Security1 OU, create a user account that has the First Name field and the User Logon Name field set to Assistant1. Type <b>password</b> as the password and accept the defaults for all other options.</li></p>

<p><li> In the same OU, create another user account that has the First Name field and the User Logon Name set to Secretary1. Type <b>password</b> as the password and accept the defaults for all other options.</li></p>

<p><li> Grant both users membership in the Print Operators group or another group with the right to log on locally to the domain controller.</li></p>

</ol>

<p><li><b>To view default Active Directory permissions for an OU</b></li></p>

<ol>

<p><li> On the View menu, enable Advanced Features.</li></p>

<p>Enabling the viewing of advanced features allows you to review and configure Active Directory permissions.</p>

<p><li> In the console tree, right-click Security1, then click Properties.</li></p>

<p><li> Click the Security tab.</li></p>

<p><li> In Table 11.5, list the groups that have permissions for the Security1 OU. You will need to refer to these permissions in Lesson 5.</li></p>

<p><b>Table 11.5</b> <i>Groups that Have Permissions for the Security1 OU</i></p>

<p>
	<table valign="top" cellpadding="5" width="95%">
	
		<tr>
			<th>User Account or Group</th>
			<th>Assigned Permissions</th>
		</tr>

		<tr>
			<td valign="top">&nbsp;</td>
			<td valign="top">&nbsp;</td>
		</tr>

		<tr>
			<td valign="top">&nbsp;</td>
			<td valign="top">&nbsp;</td>
		</tr>

		<tr>
			<td valign="top">&nbsp;</td>
			<td valign="top">&nbsp;</td>
		</tr>

		<tr>
			<td valign="top">&nbsp;</td>
			<td valign="top">&nbsp;</td>
		</tr>

		<tr>
			<td valign="top">&nbsp;</td>
			<td valign="top">&nbsp;</td>
		</tr>
		
		<tr>
			<td valign="top">&nbsp;</td>
			<td valign="top">&nbsp;</td>
		</tr>

		<tr>
			<td valign="top">&nbsp;</td>
			<td valign="top">&nbsp;</td>
		</tr>

	</table>
</p>

<p>How can you tell if any of the default permissions are inherited from the domain, which is the parent object?</p>

</ol>

<p><a href="chaaa.htm#1104">Answers</a></p>

<p><li><b>To view special permissions for an OU</b></li></p>

<ol>

<p><li> In the Security1 Properties dialog box, in the Security tab, click Advanced.</li></p>

<p>The Access Control Settings For Security1 dialog box appears.</p>

<p><li> To view special permissions for Account Operators, in the Permission Entries box, click each entry for Account Operators, then click View/Edit.</li></p>

<p>The Permission Entry For Security1 dialog box appears.</p>

<p>What object permissions are assigned to Account Operators? What can Account Operators do in this OU? (Hint: Check each permission entry for Account Operators in the Permission Entries box in the Access Control Settings For Security1 dialog box.)</p>

<p>Do any objects within this OU inherit the permissions assigned to the Account Operators group? Why or why not?</p>

<p><li> Close all open dialog boxes, but do not close Active Directory Users and Computers.</li></p>

</ol>

<p><a href="chaaa.htm#1105">Answers</a></p>

<p><li><b>To view the default Active Directory permissions for a user object</b></li></p>

<ol>

<p><li> In the Active Directory Users and Computers console tree, click Security1.</li></p>

<p><li> In the details pane, right-click Secretary1, then click Properties.</li></p>

<p><li> Click the Security tab.</li></p>

<p><li> In Table 11.6, list the groups that have permissions for the Secretary1 user account. You will need to refer to these permissions in Lesson 5. If the dialog box indicates that special permissions are present for a group, do not list the special permissions to which you can gain access through the Advanced button.</li></p>

<p><b>Table 11.6</b> <i>Permissions for the Secretary1 User Account</i></p>

<p>
	<table valign="top" cellpadding="5" width="95%">

		<tr>
			<th>Group</th>
			<th>Assigned Permissions</th>
		</tr>

		<tr>
			<td valign="top">&nbsp;</td>
			<td valign="top">&nbsp;</td>
		</tr>

		<tr>
			<td valign="top">&nbsp;</td>
			<td valign="top">&nbsp;</td>
		</tr>

		<tr>
			<td valign="top">&nbsp;</td>
			<td valign="top">&nbsp;</td>
		</tr>

		<tr>
			<td valign="top">&nbsp;</td>
			<td valign="top">&nbsp;</td>
		</tr>

		<tr>
			<td valign="top">&nbsp;</td>
			<td valign="top">&nbsp;</td>
		</tr>
		
		<tr>
			<td valign="top">&nbsp;</td>
			<td valign="top">&nbsp;</td>
		</tr>

		<tr>
			<td valign="top">&nbsp;</td>
			<td valign="top">&nbsp;</td>
		</tr>

		<tr>
			<td valign="top">&nbsp;</td>
			<td valign="top">&nbsp;</td>
		</tr>

		<tr>
			<td valign="top">&nbsp;</td>
			<td valign="top">&nbsp;</td>
		</tr>
		
	</table>
</p>

<p>Are the standard permissions for a user object the same as those for an OU object? Why or why not?</p>

<p>Are any of the standard permissions inherited from Security1, the parent 
object? How can you tell?</p>

<p>What do the permissions of the Account Operators group allow its members to do with the user object?</p>

<p><li> Close all programs and log off Windows 2000.</li></p>

</ol>

<p><a href="chaaa.htm#1106">Answers</a></p>


<A NAME="532"><h2>Lesson Summary</h2></A>
<p>In this lesson you learned that every Active Directory object has a security descriptor that defines who has permission to gain access to the object and what type of access is allowed. An administrator or the object owner must assign permissions to an object before users can gain access to it. Windows 2000 stores a list of user access permissions, called the ACL, for every Active Directory object.</p>

<p>You also learned how to set standard permissions and special permissions on objects. The standard permissions are Full Control, Write, Read, Create All Child Objects, and Delete All Child Objects. Special permissions provide you with a finer degree of control over assigning access to objects. Permissions inheritance in Active Directory minimizes the number of times that you need to assign permissions for objects. When you assign permissions, you can apply the permissions to child objects, which propagates the permissions inheritance for a given parent object. You also learned to how to block permissions inheritance.</p>

<p>In the practice portion of this lesson you created an OU with two users and reviewed the default security settings on Active Directory components.</p>


</BODY>
</HTML>








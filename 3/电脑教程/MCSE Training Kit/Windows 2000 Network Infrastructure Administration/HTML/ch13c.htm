<HTML>
<HEAD>
<TITLE>Lesson 2: Installing and Configuring Certificate Authority</TITLE>
<link rel="STYLESHEET" type="text/css" href="mmnet.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch13b.htm">[Previous]</A> <A HREF="ch13d.htm">[Next]</A><P>



<A NAME="580"><H1>Lesson 2: Installing and Configuring Certificate Authority</H1></A>

<p>In this lesson, you will explore certificates in more detail by learning how to install and protect your CA. Next, you will be introduced to the process of the enrollment of certificates and the various ways to accomplish it.</p>

<p><div class="sidebar"><blockquote>
<b>After this lesson, you will be able to</b>

<ul>
<p><li>Explain how to use Certificate Authority Manager</li></p>

<p><li>Explain how to install a CA</li></p>

<p><li>Explain how to protect a CA</li></p>

<p><li>Describe the certificate enrollment process</li></p>
</ul>

<p><b>Estimated lesson time: 35 minutes</b></p>
</blockquote></div></p>

<A NAME="581"><H2>Deploying a CA</H2></A>

<p>CAs will be installed during the following practice. The Certificate Services Installation Wizard walks the administrator through the installation process. This section discusses key elements that should be considered before beginning the installation process.</p>

<ul>
<p><li><b>Establishing a Windows 2000 domain.</b> If an enterprise CA is to be deployed, establish a domain before installing Certificate Services.</li></p>

<p><li><b>Active Directory integration.</b> Information concerning enterprise CAs is written into a CA object in the Active Directory during installation. This provides information to domain clients about available CAs and the types of certificates they will issue.</li></p>

<p><li><b>Selecting the host server.</b> The root CA can run on any Windows 2000 Server platform, including a domain controller. Factors such as physical security requirements, expected loading, and connectivity requirements should be considered in making this decision.</li></p>

<p><li><b>Naming.</b> CA names are bound into their certificates and hence cannot change. Renaming a computer running Certificate Services is not supported. Consider factors such as organizational naming conventions and future requirements to distinguish among issuing CAs. The CA name (or common name) is critical because it is used to identify the CA object created in the Active Directory for an enterprise CA.</li></p>

<p><li><b>Key generation.</b> The CA's public-private key pair will be generated during the installation process and is unique to this CA.</li></p>

<p><li><b>CA certificate.</b> For a root CA, the installation process will automatically generate a self-signed CA certificate using the CA's public-private key pair. For a child CA, the administrator has the option to generate a certificate request that may be submitted to an intermediate or root CA.</li></p>

<p><li><b>Issuing policy.</b> The enterprise CA setup will automatically install and configure the default enterprise policy module for the CA. The stand-alone CA setup will automatically install and configure the default stand-alone policy module. Custom policy modules can be substituted if necessary.</li></p>
</ul>

<p>After a root CA has been established, it is possible to install intermediate or issuing CAs subordinate to this root CA. The only significant difference in the installation policy is that a certificate request is generated for submission to a root or intermediate CA. This request may be routed automatically to online CAs located by means of the Active Directory, or routed manually in an offline scenario. In either case, the resultant certificate must be installed at the CA before it can begin operation.</p>

<p>The enterprise CA trust model may or may not correspond to the Windows 2000 domain trust model. A direct mapping between CA trust relationships and domain trust relationships is not required. There is nothing that prevents a single CA from servicing entities in multiple domains or even entities outside the domain boundary. Similarly, a given domain may have multiple enterprise CAs.</p>

<A NAME="582"><H2>Protecting a CA</H2></A>

<p>CAs are high-value resources, and it is often desirable to provide them with a high degree of protection. Specific actions that should be considered include:</p>

<ul>
<p><li><b>Physical protection.</b> Because CAs represent highly trusted entities within an enterprise, they should be protected from tampering. This requirement is dependent on the inherent value of the certification made by the CA. Physical isolation of the CA server in a facility accessible only to security administrators can dramatically reduce the possibility of such physical attacks.</li></p>

<p><li><b>Key management.</b> The CA's private key provides the basis for trust in the certification process and should be secured from tampering. Cryptographic hardware modules (accessible to Certificate Services through a CryptoAPI CSP) can provide tamper-resistant key storage and isolate the cryptographic operations from other software running on the server. This significantly reduces the likelihood of a CA key being compromised.</li></p>

<p><li><b>Restoration.</b> Loss of a CA&#8212;due to hardware failure, for example&#8212;can create a number of administrative and operational problems and prevent revocation of existing certificates. Certificate Services supports backup of a CA instance so it can be restored at a later time. This is an important part of the overall CA management process.</li></p>
</ul>

<A NAME="583"><H2>Certificate Enrollment</H2></A>

<p>The process of obtaining a digital certificate is called certificate enrollment. The Windows 2000 PKI supports certificate enrollment to the Microsoft enterprise CA, stand-alone CA, or third-party CAs. Enrollment support is implemented in a transport-independent manner and is based on use of industry-standard public key cryptography standards (PKCS) #10 certificate request messages and PKCS #7 responses containing the resulting certificate or certificate chain. At the time of this writing, certificates supporting RSA keys and signatures, DSA keys and signatures, and Diffie-Hellman keys are supported.</p>

<A NAME="584"><H3>Multiple Enrollment Methods</H3></A>

<p>The PKI supports multiple enrollment methods, including Web-based enrollment, an enrollment wizard, and policy-driven autoenrollment that occurs as part of a user's logon processing. In the future, Microsoft plans to evolve the certificate enrollment process in a manner consistent with the Certificate Request Syntax (CRS) draft currently in the Internet Engineering Task Force (IETF) PKIX working group.</p>

<p><b>Web-Based Enrollment</b></p>

<p>The Web-based enrollment process begins with a client submitting a certificate request and ends with the installation of the certificate in the client application. Certificate Services includes a Hypertext Transfer Protocol (HTTP) enrollment control with forms, illustrated in Figure 13.3, for custom certificate enrollment and renewal applications for Microsoft Certificate Services. The enrollment control and its forms are accessed through the Certificate Services Enrollment Page, which is available from the Certificate Services Administrative Tools Web Page,  <i>http://&lt;server_name&gt;/certsrv/ default.asp</i>. You can customize the Microsoft Certificate Services Web pages to modify user options or provide links to online help, support, or user instructions.</p>

<p>
<A HREF="javascript:fullSize('13ntk03x.htm')"> <img src="images/13ntk03.JPG" width=404 height=294 border=0 ALT="Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 13.3</b> <i>Certificate Server Web enrollment</i><!-- /caption -->
</p>

<p><b>Client Certificate Enrollment</b></p>

<p>Certificate Services supports client certificate enrollment using Internet Explorer version 3.0 or later. To obtain a client certificate with these browsers, the user opens the client authentication page and submits identification information. After Certificate Services creates the client certificate, it is returned to the browser, which installs the certificate on the client.</p>

<p><b>Automated Enrollment</b></p>

<p>The automated enrollment process is controlled by two key elements: certificate types and autoenrollment objects. These are integrated with the Group Policy object and may be defined on a site, domain, organizational unit (OU), computer, or user basis.</p>

<p>Certificate types provide a template for a certificate and associate it with a common name for ease of administration. The template defines elements such as naming requirements, validity period, allowable CSPs for private key generation, algorithms, and extensions that should be incorporated into the certificate. The certificate types are logically separated into machine and user types and applied to the policy objects accordingly. Once defined, these certificate types are available for use with the autoenrollment objects and Certificate Enrollment Wizard.</p>

<p>This mechanism is not a replacement for the enterprise CA issuing policy, but is integrated with it. The CA service receives a set of certificate types as part of its policy object. These are used by the Enterprise Policy Module to define the types of certificates the CA is allowed to issue. The CA rejects requests for certificates that fail to match these criteria.</p>

<p>The autoenrollment object defines policy for certificates that an entity in the domain should have. This can be applied on a machine and user basis. The types of certificates are incorporated by reference to the certificate type objects, and may be any defined type. The autoenrollment object provides sufficient information to determine whether an entity has the required certificates, and enrolls those 
certificates with an enterprise CA if they are missing. The autoenrollment objects also define policy on certificate renewal. This can be set by an administrator to occur in advance of certificate expiration, supporting long-term operation without direct user action. The autoenrollment objects are processed, and any required actions taken, whenever policy is refreshed (logon time, Group Policy object 
refresh, and so on).</p>

<p>
<img src="images/practic.JPG" width=90 height=72 border="0">
</p>

<A NAME="585"><H2>Practice: Installing a Stand-Alone Subordinate CA</H2></A>

<p><li><b>To install a stand-alone subordinate CA</b></li></p>

<ol>
<p><li>From within Control Panel, select Add/Remove Programs.</li></p>

<p><li>Click Add/Remove Windows Components.</li></p>

<p><li>Check the box next to Certificate Services, then click Next.</li></p>

<p><li>Select Stand-Alone Root CA, then click Next.</li></p>

<p><li>Fill in the CA identifying information.</li></p>

<p>For CA name, type <b>ComputernameCA</b>. Click Next.</p>

<p><li>Use the default data storage locations, then click Next.</li></p>

<p><li>During the CA installation process, you may need to click OK to stop the World Wide Web Publishing Service, and you will need to give the location of the Windows 2000 installation files (specifically Certsrv.*).</li></p>

<p><li>Click Finish.</li></p>

<p><li>Close the Add/Remove Programs window.</li></p>
</ol>

<p><li><b>To request and install a certificate from the local CA</b></li></p>

<ol>
<p><li>Run Certificate Authority Manager.</li></p>

<p>Notice that the service is started (check mark), as illustrated in Figure 13.4.</p>

<p>
<A HREF="javascript:fullSize('13ntk04x.htm')"> <img src="images/13ntk04.JPG" width=404 height=286 border=0 ALT="Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 13.4</b> <i>Certification Authority Manager</i><!-- /caption -->
</p>

<p><li>Run Internet Explorer and connect to <i>http://&lt;your_server&gt;/certsrv/default.asp</i>.</li></p>

<p><li>Request a Web browser certificate. The request will be pending.</li></p>

<p><li>Close Internet Explorer.</li></p>

<p><li>Open Certificate Authority and select the Pending Requests folder. Right-click your request and choose Issue from the All Tasks menu.</li></p>

<p>In the left pane select the Issued Certificates folder, and notice that your request has been issued.</p>

<p><li>Run Internet Explorer, connect to <i>http://&lt;your_server&gt;/certsrv/default.asp</i>, check on the Pending Certificate Request, then install the certificate.</li></p>

<p><li>From the Tools menu, click Internet Options, Content, then Certificates.</li></p>

<p><li>Under Certificates, highlight your certificate, then click View. Notice that the certificate was issued by your computer, and close all windows.</li></p>
</ol>

<A NAME="586"><H3>Cryptographic Key Storage</H3></A>

<p>Within the Microsoft PKI, cryptographic keys and associated certificates are stored and managed by the CryptoAPI subsystem. Keys are managed by CSPs and certificates are managed by the CryptoAPI certificate stores. The certificate stores are repositories for certificates, along with associated properties. By convention, the PKI defines five standard certificate stores, described in Table 13.1.</p>

<p><b>Table 13.1</b> <i>Standard PKI Certificate Stores</i></p>

<p>
	<table valign="top" cellpadding="5" width="95%">
	
		<tr>
			<th>Store</th>
			<th>Description</th>
		</tr>

		<tr>
			<td valign="top">MY</td>
			<td valign="top">This store is used to hold a user's or computer's certificates, for which the associated private key is available.</td>
		</tr>

		<tr>
			<td valign="top">CA</td>
			<td valign="top">This store is used to hold issuing or intermediate CA certificates to use in building certificate verification chains.</td>
		</tr>

		<tr>
			<td valign="top">TRUST</td>
			<td valign="top">This store is used to hold certificate trust lists. These are an alternate mechanism for allowing an administrator to specify a collection of trusted CAs. An advantage is that they are digitally signed and may be transmitted over nonsecure links.</td>
		</tr>

		<tr>
			<td valign="top">ROOT</td>
			<td valign="top">This store holds only self-signed CA certificates for trusted root CAs.</td>
		</tr>

		<tr>
			<td valign="top">UserDS</td>
			<td valign="top">This store provides a logical view of a certificate repository stored in the Active Directory (for example, in the userCertificate property of the User object). Its purpose is to simplify access to these external repositories.</td>
		</tr>
		
	</table>
</p>

<p>These are logical stores that can present a consistent, systemwide view of the available certificates that may reside on multiple physical stores (hard disk, smart cards, and so on). By using these services, applications can share certificates and are assured of consistent operation under administrative policy. The certificate management functions support decoding of X.509 v3 certificates and provide enumeration functions to assist in locating a specific certificate.</p>

<p>To simplify application development, the MY store maintains certificate properties that indicate the CSP and key-set name for the associated private key. Once an application has selected a certificate to use, it can use this information to obtain 
a CSP context for the correct private key.</p>

<A NAME="587"><H2>Certificate Renewal</H2></A>

<p>Certificate renewal is conceptually similar to enrollment, but takes advantage of the trust relationship inherent in an existing certificate. Renewal assumes the requesting entity wants a new certificate with the same attributes as an existing, valid certificate, but with extended validity dates. A renewal may use the existing public key or a new public key.</p>

<p>Renewal is of advantage primarily to the CA. A renewal request can presumably be processed more efficiently because the existing certificate attributes do not need to be verified again. Renewal is currently supported in the Windows 2000 PKI for automatically enrolled certificates. For other mechanisms, a renewal is treated as a new enrollment request.</p>

<p>Industry-standard message protocols for certificate renewal are not yet defined, but are included in the IETF PKIX CRS draft. Once these standards are ratified, Microsoft plans to implement the associated message formats.</p>

<A NAME="588"><H2>Certificate and Key Recovery</H2></A>

<p>Public key pairs and certificates tend to have high value. If they are lost due to system failure, their replacement may be time-consuming and result in monetary loss. To address this issue, the Windows 2000 PKI supports the ability to back up and restore both certificates and associated key pairs through the certificate management administrative tools.</p>

<p>When exporting a certificate using the Certificate Manager, the user must specify whether to also export the associated key pair. If this option is selected, the information is exported as an encrypted (based on a user-supplied password) PKCS #12 message. This may later be imported to the system, or to another system, to restore the certificate and keys.</p>

<p>This operation assumes that the key pair is exportable by the CSP. This will be true for the Microsoft base CSPs if the exportable flag was set at key generation time. Third-party CSPs may or may not support private key export. For example, smart card CSPs do not generally support this operation. For software CSPs with nonexportable keys, the alternative is to maintain a complete system-image backup, including all registry information.</p>

<A NAME="589"><H3>Roaming</H3></A>

<p>Roaming in the context of this discussion means the ability to use the same public key-based applications on different computers within the enterprise's Windows 2000 environment. The principal requirement is to make users' cryptographic keys and certificates available wherever they log on. The Windows 2000 PKI supports this in two ways.</p>

<p>First, if the Microsoft base CSPs are used, roaming keys and certificates are supported by the roaming profile mechanism. This is transparent to the user once roaming profiles are enabled. It is unlikely that this functionality will be supported by third-party CSPs, as they will generally use a different method of preserving key data, often on hardware devices.</p>

<p>Hardware token devices, such as smart cards, support roaming, provided they incorporate a physical certificate store. The smart card CSPs that ship with the Windows 2000 platform support this functionality. Roaming support is accomplished by moving the hardware token with the user.</p>

<A NAME="590"><H3>Revocation</H3></A>

<p>Certificates tend to be long-lived credentials. There are a number of reasons these credentials may become untrustworthy prior to their expiration. Examples include</p>

<ul>
<p><li>Compromise, or suspected compromise, of an entity's private key</li></p>

<p><li>Fraud in obtaining the certificate</li></p>

<p><li>Change in status</li></p>
</ul>

<p>PK-based functionality assumes distributed verification in which there is no need for direct communication with a central trusted entity that vouches for these credentials. This creates a need for revocation information that can be distributed to individuals attempting to verify certificates.</p>

<p>The need for revocation information, and its timeliness, is dependent on the application. To support a variety of operational scenarios, the Windows 2000 PKI incorporates support of industry-standard certificate revocation lists (CRLs). Enterprise CAs support certificate revocation and CRL publication to Active Directory under administrative control. Domain clients can fetch this information, caching it locally, to use when verifying certificates. This same mechanism supports CRLs published by commercial CAs, or third-party certificate server products, provided the published CRLs are accessible to clients over the network.</p>

<A NAME="591"><H3>Trust</H3></A>

<p>Certificate verification is of primary concern to clients using PK-based applications. If a given end-entity certificate can be shown to &quot;chain&quot; to a known trusted root CA, and if the intended certificate usage is consistent with the application context, then it is considered valid. If either of these conditions is not true, then it is considered invalid.</p>

<p>Within the PKI, users may make trust decisions that affect only themselves. They do this by installing or deleting trusted root CAs and by configuring associated usage restrictions by using the certificate management administrative tools. Within the enterprise, this is expected to be the exception rather than the rule. It is expected that these trust relationships will be established as part of the 
enterprise policy. Trust relationships established by policy are automatically propagated to Windows 2000 client computers.</p>

<p><b>Trusted CA Roots</b></p>

<p>Trust in root CAs may be set by policy to establish trust relationships used by domain clients in verifying PK certificates. The set of trusted CAs is configured using the Group Policy editor. It can be configured on a per-computer basis and will apply to all users of that computer.</p>

<p>In addition to establishing a root CA as trusted, the administrator can set usage properties associated with the CA. If specified, these restrict the purposes for which the CA-issued certificates are valid. Restrictions are specified based on object identifiers as defined for ExtendedKeyUsage extensions in the IETF PKIX Part 1 draft. Currently, these provide a means of restricting usage to any combination of the following:</p>

<ul>
<p><li>Server authentication</li></p>

<p><li>Client authentication</li></p>

<p><li>Code signing</li></p>

<p><li>E-mail</li></p>

<p><li>IP Security Protocol (IPSec) end system</li></p>

<p><li>IPSec tunnel</li></p>

<p><li>IPSec user</li></p>

<p><li>Time stamping</li></p>

<p><li>Microsoft Encrypted File System</li></p>
</ul>

<A NAME="592"><H2>Lesson Summary</H2></A>

<p>In this lesson, you learned how to install and protect your CA. CAs are high-value resources and it is important to protect them. You also learned how to provide enrollment of certificates and the various ways to accomplish it. To obtain a client certificate, the user opens the client authentication page and submits identification information. Then, Certificate Services creates the client certificate that is returned to the browser and installed on the client.</p>

</BODY>
</HTML>






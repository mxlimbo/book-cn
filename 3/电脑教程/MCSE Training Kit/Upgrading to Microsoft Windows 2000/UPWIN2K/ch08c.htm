<HTML>
<HEAD>
<TITLE>Lesson 2: Administering Shared Folders by Using Dfs</TITLE>
<link rel="STYLESHEET" type="text/css" href="upwin2k.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch08b.htm", "ch08d.htm", "images/unit_p_a1.gif", "images/unit_p_a2.gif", "images/unit_p_b1.gif", "images/unit_p_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#aa22aa", "2");
//--></SCRIPT><P>

<A NAME="385"><H1>Lesson 2: Administering Shared Folders by Using Dfs</H1></A>

<p>The distributed file system (Dfs) allows for the creation of a
single logical directory tree from a variety of physical systems.
Although this technology was available in Microsoft Windows NT 4.0, the
administrative tool for configuring the Dfs tree has been enhanced in
Windows 2000. An understanding of how to use the Distributed File
System console can help ensure an effective Dfs structure.</p>

<p>
<div class="sidebar"><blockquote>
<p><b>After this lesson, you will be able to</b></p>

<ul>
<p><li>Create, configure, and test a Microsoft distributed file
system for Windows 2000 Server.</li></p>
</ul>

<p><b>Estimated lesson time: 35 minutes</b></p>
</blockquote></div>
</p>

<A NAME="386"><H2>Understanding Dfs</H2></A>

<p>Dfs is a single hierarchical file system whose contents are
distributed across the enterprise network. Dfs provides a logical tree
structure for file system resources that can be anywhere on the
network. Because the Dfs tree is a single point of reference, users can
easily gain access to network resources regardless of the actual location of the resources. Dfs also facilitates administering multiple shared folders from a single location.</p>

<p>A Dfs share uses a tree structure that contains a root node and
child nodes. To create a Dfs share, you must first create a Dfs root.
Each Dfs root can have multiple child nodes beneath it, each of which
points to a shared folder. The child nodes of the Dfs root represent
shared folders that can be physically located on different file
servers.</p>

<p>You can configure two types of distributed file systems:</p>

<ul>
<p><li><b>Stand-alone Dfs.</b> Stores the Dfs topology on a single
computer. This type of Dfs provides no fault tolerance if the computer
that stores the Dfs topology or any of the shared folders that Dfs uses
fail.</li></p>

<p><li><b>Fault-tolerant Dfs.</b> Stores the Dfs topology in Active
Directory directory services. This type of Dfs allows child nodes to
point to multiple identical shared folders for fault tolerance. In
addition, it supports Domain Name System (DNS), multiple levels of
child volumes, and file replication.</li></p>
</ul>

<p>Navigating a Dfs-managed shared folder is easy because the user does
not need to know the name of the server on which the folder is shared.
This simplifies network access because users no longer need to locate
the server where a specific resource is located on the network. After
connecting to a Dfs root, users can browse and gain access to all
resources below the root, regardless of the location of the server on
which the resource is located.</p>

<p>Dfs also simplifies network administration. If a server fails, you
can move a child node from one server to another without users being
aware of the change. All that is required to move a child node is to
modify the Dfs folder to refer to the new server location of the shared
folders. Users continue to use the same Dfs path for the child node.
Users can gain access to a shared folder through Dfs as long as they
have the required permission to gain access to the shared folder.</p>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
Only client computers with Dfs client software can gain
access to Dfs resources. Windows NT 4.0, Windows 98, and Windows 2000 all include a
Dfs client. You must download and install a Dfs client for Windows 95.
</blockquote></div>
</p>

<A NAME="387"><H2>Setting Up a Dfs Root</H2></A>

<p>A stand-alone Dfs root is physically located on the server to which
users initially connect. The first step in setting up a stand-alone Dfs
is to create the Dfs root.</p>

<A NAME="388"><H3>Stand-Alone Dfs Root</H3></A>

<p>To create a stand-alone Dfs root, use the Distributed File System
console to start the Create New Dfs Root wizard. Table 8.1 describes
the wizard options that you configure to create a stand-alone Dfs
root.</p>

<p><b>Table 8.1</b> <i>Creating a Stand-Alone Dfs Root</i></p>

<p>
<table valign="top" cellpadding="5" width="95%">
<tr>
<th>Option</th>
<th>Description</th>
</tr>
<tr>
<td valign="top">Select The Dfs Root Type</td>
<td valign="top">The type of Dfs root. Select Create A
Standalone Dfs  Root to store the Dfs topology on a single computer.  A stand-alone Dfs root does not use Active Directory  directory services and does not provide fault tolerance.</td>
</tr>
<tr>
<td valign="top">Specify The Host Server For The Dfs Root</td>
<td valign="top">The initial connection point for all
resources in the Dfs  tree, or the host server. You can create a Dfs root on
any  computer running Windows 2000 Server.</td>
</tr>
<tr>
<td valign="top">Specify The Dfs Root Share</td>
<td valign="top">A shared folder to host the Dfs root. You can choose
an existing shared folder or create a new share.</td>
</tr>
<tr>
<td valign="top">Name The Dfs Root</td>
<td valign="top">A descriptive name for the Dfs root.</td>
</tr>
</table>
</p>

<A NAME="389"><H3>Fault-Tolerant Dfs Root</H3></A>

<p>A fault-tolerant Dfs root can be created only on a domain
controller. Active Directory directory services store each Dfs tree topology and replicate
the topology to every participating Dfs root server. Because changes to
a Dfs tree are automatically synchronized with Active Directory directory services,
you can always restore a Dfs tree topology if the Dfs root is offline for any
reason. You can implement fault tolerance at the file and content level
by assigning replicas to a Dfs child node. Any branch node on the Dfs
tree can be serviced by a set of replicated resources. If a client
connection to one replica fails for any reason, the Dfs client attempts
a connection to another. The Dfs client cycles through the replicas
until an available one is found.</p>

<p>To create a fault-tolerant Dfs root, use the Create New Dfs Root
wizard. Table 8.2 describes the wizard options you configure to create
a fault-tolerant Dfs root.</p>

<p><b>Table 8.2</b> <i>Creating a Fault-Tolerant Dfs Root</i></p>
<p>
<table valign="top" cellpadding="5" width="95%">
<tr>
<th>Option</th>
<th>Description</th>
</tr>
<tr>
<td valign="top">Select The Dfs Root Type</td>
<td valign="top">The type of Dfs root. Click Create A Domain
Dfs Root.  A domain Dfs root uses Active Directory directory  services to store the Dfs tree topology and supports DNS  naming, file replication, and fault tolerance.</td>
</tr>
<tr>
<td valign="top">Select The Host Domain For The Dfs Root</td>
<td valign="top">The initial connection point for all
resources in the Dfs  tree, or the host domain. A domain can host
multiple  Dfs roots.</td>
</tr>
<tr>
<td valign="top">Specify The Host Server For The Dfs Root</td>
<td valign="top">The initial connection point for all
resources in the Dfs  tree, or the host server. You can create a Dfs root on
any  computer running Windows 2000 Server.</td>
</tr>
<tr>
<td valign="top">Specify The Dfs Root Share</td>
<td valign="top">A shared folder to host the Dfs root. You can choose
an  existing shared folder or create a new share.</td>
</tr>
<tr>
<td valign="top">Name The Dfs Root</td>
<td valign="top">Provide a descriptive name for the Dfs root.</td>
</tr>
</table>
</p>

<p>To create a second root, right-click the domain, and then click New
Root Replica Member. The only options for creating a second root are
Specify Server To Host Dfs and Select Share For Dfs Root Volume.</p>

<A NAME="390"><H2>Setting Up Dfs Child Nodes</H2></A>

<p>In a network environment, it can be difficult for users to keep
track of the physical locations of shared resources. When you use Dfs,
the network and file system structures become transparent to users.
This enables you to centralize and optimize access to resources based
on a single tree structure.</p>

<p>After you create a Dfs root, you can create Dfs child nodes. To
create a Dfs child node, in the Distributed File System console, click
the Dfs root to which you will attach a child node. On the Action menu,
click New Dfs Link. In the Create A New Dfs link dialog box, configure
the options described in Table 8.3.</p>

<p><b>Table 8.3</b> <i>Creating a New Dfs Child Node</i></p>
<p>
<table valign="top" cellpadding="5" width="95%">
<tr>
<th>Option</th>
<th>Description</th>
</tr>
<tr>
<td valign="top">Link Name</td>
<td valign="top">The name that users will see when they connect to Dfs.</td>
</tr>
<tr>
<td valign="top">Send The User To This Shared Folder</td>
<td valign="top">The Universal Naming Convention (UNC) name for the
actual  Path of the shared folder to which the child node
refers.</td>
</tr>
<tr>
<td valign="top">Comment</td>
<td valign="top">Additional information (optional) to help keep track of  the shared folder (for example, the actual name of the  shared folder).</td>
</tr>
<tr>
<td valign="top">Clients Cache This Referral For <i>X</i> Seconds</td>
<td valign="top">Length of time for which clients cache a referral to a
Dfs child  node. After the referral time expires, a client queries
the Dfs  server about the location of the child node, even
if the client has previously established a connection with the child node.</td>
</tr>
</table>
</p>

<p>The child node will appear below the Dfs root volume in the
Distributed File System console.</p>

<p>
<img src="images/practic.JPG" width=68 height=54 border="0">
</p>

<A NAME="391"><H2>Optional Practice: Creating a Dfs Tree</H2></A>

<p>In this optional practice, you will share some existing folders,
create and share some folders, create a new Dfs root, and then create
some Dfs child nodes.</p>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
To complete all the procedures in this practice, you must
have two computers running Windows 2000. This practice also assumes
that one of the two computers is configured as a domain controller and
the other computer is configured as a member server in the domain.
</blockquote></div>
</p>

<A NAME="392"><H3>Exercise 1: Creating and Sharing Folders</H3></A>

<p>In this exercise, you will create and share some folders.</p>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
If you have two computers, a domain controller and a
member server in the domain, complete this exercise on both
computers.
</blockquote></div>
</p>


<p><li><b>To create and share folders</b></li></p>
<ol>
<p><li>Log on as Administrator.</li></p>

<p><li>Start Windows Explorer and create and share the folders listed
in the following table using all default permissions.</li></p>

<p>
<table valign="top" cellpadding="5" width="95%">
<tr>
<th>Folder</th>
<th>Share name</th>
</tr>
<tr>
<td valign="top">C:\Apps\Database</td>
<td valign="top">DB</td>
</tr>
<tr>
<td valign="top">C:\Apps\Wordprocessing</td>
<td valign="top">Word</td>
</tr>
<tr>
<td valign="top">C:\MoreApps\Maintenance</td>
<td valign="top">Maint</td>
</tr>
<tr>
<td valign="top">C:\MoreApps\CustomerService</td>
<td valign="top">Custom</td>
</tr>
</table>
</p>

<p><li>Close Windows Explorer.</li></p>
</ol>

<A NAME="393"><H3>Exercise 2: Creating a Dfs</H3></A>

<p>In this exercise, you create and configure a distributed file system
(Dfs) on your computer.</p>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
If you have two computers, a domain controller and a
member server in the domain, complete this exercise on both
computers.
</blockquote></div>
</p>


<p><li><b>To create a new Dfs root</b></li></p>
<ol>
<p><li>Click the Start button, point to Programs, point to
Administrative Tools, and then click Distributed File System.</li></p>

<p>The Distributed File System window appears.</p>

<p><li>On the Action menu, point to New, and then click Dfs Root.</li></p>

<p>The New Dfs Root wizard appears.</p>

<p><li>Click Next.</li></p>

<p>The wizard displays the Select The Dfs Root Type page.</p>

<p>Notice that there are two types of Dfs roots you can create:</p>

<ul>
<p><li>A domain Dfs root that uses Active Directory directory
services to store the Dfs configuration and supports automatic file
replication and DNS naming.</li></p>

<p><li>A stand-alone Dfs root that does not use Active Directory
directory services and does not support automatic file
replication.</li></p>
</ul>
</ol>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
In this exercise, you will create a stand-alone
Dfs root.
</blockquote></div>
</p>

<ol>
<p><li value="4">Click Create A Standalone Dfs Root, and then click Next.</li></p>

<p>The wizard displays the Specify The Host Server For The Dfs Root
page. You will create a Dfs root on your own server.</p>

<p><li>In the Server Name box, confirm that the name of your server is
displayed, and then click Next.</li></p>
</ol>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
If you are using the naming conventions
suggested in this course, your server name will be <b>
SERVER1\domain.com</b>.
</blockquote></div>
</p>
<ol>
<p>The wizard displays the Specify Dfs Root Share page. Notice that you
can use an existing share for the Dfs root or the wizard can create a
new shared folder for you.</p>
</ol>
<p>
<div class="note"><blockquote><b>NOTE</b><hr>
In this exercise, you will let the wizard create
a new shared folder for you. You have to provide both the location of
the folder on your computer and a share name.
</blockquote></div>
</p>

<ol>
<p><li value="6">Select the Create A New Share option.</li></p>

<p><li>Type <b>C:\Apps</b> in the Path To Share box, type <b>Shared
Apps</b> in the Share Name box, and then click Next.</li></p>

<p>A Name The Dfs Root page appears allowing you to type in a
comment.</p>

<p><li>Type Shared Applications for Marketing in the Comments box, and
click Next.</li></p>

<p>The wizard displays the Completing The New Dfs Root Wizard page,
which contains a summary of the choices that you made. An example is
shown in Figure 8.3.</p>

<p>
<A HREF="javascript:fullSize('f08up03x.htm')"> <img src="images/f08up03.JPG" width=404 height=309 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 8.3</b> <i>A summary of choices for the new Dfs root</i><!--/caption-->
</p>


<p><li>Confirm that the options that the wizard displays are correct,
and then click Finish.</li></p>

<p><li>Leave the Distributed File System window open.</li></p>
</ol>

<p><li><b>To add Dfs child nodes on the local computer</b></li></p>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
If you have two computers, a domain controller and a
member server in the domain, complete this procedure on both
computers.
</blockquote></div>
</p>

<ol>
<p><li>In the Distributed File System window's console tree, click
\\<i>Server1</i>\ SharedApps (where <i>Server1</i> is the UNC name of
your domain controller).</li></p>

<p><li>On the Action menu, click New Dfs Link.</li></p>

<p>The Create A New Dfs Link dialog box appears.</p>

<p><li>Type <b>Word Processing</b> in the Link Name box.</li></p>

<p><li>In the Send The User To This Shared Folder box, type <b>
\\<i>Server1</i>\Word</b> (where <i>Server1</i> is the UNC name of your
domain controller).</li></p>

<p><li>Click OK.</li></p>

<p><li>Repeat steps 1-5 to add a child node called Customer Service,
which points to the shared folder \\<i>Server1</i>\Custom (where <i>
Server1</i> is the UNC name of your domain controller).</li></p>
</ol>

<p>The following table summarizes the nodes being created in this
procedure and the next procedure.</p>
<p>
<table valign="top" cellpadding="5" width="95%">
<tr>
<th>Child node</th>
<th>Shared folder</th>
<th>Folder name</th>
</tr>
<tr>
<td valign="top">Word Processing</td>
<td valign="top">\\<i>Server1</i>\Word</td>
<td valign="top">C:\Apps\Wordprocessing</td>
</tr>
<tr>
<td valign="top">Customer Service</td>
<td valign="top">\\<i>Server1</i>\Custom</td>
<td valign="top">C:\MoreApps\CustomerService</td>
</tr>
<tr>
<td valign="top">Maintenance</td>
<td valign="top">\\<i>second_computer</i>\Maint</td>
<td valign="top">C:\MoreApps\Maintenance</td>
</tr>
<tr>
<td valign="top">Database</td>
<td valign="top">\\<i>second_computer</i>\DB</td>
<td valign="top">C:\Apps\Database</td>
</tr>
</table>
</p>

<p><li><b>To add a Dfs child node on a remote computer</b></li></p>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
This is an optional procedure. To complete this
procedure, you must have two computers running Windows 2000. This
procedure assumes that one of the two computers is configured as a
domain controller and the other computer is configured as a member
server in the domain.
</blockquote></div>
</p>

<ol>
<p><li>In the console tree, click \\<i>Server</i>1\SharedApps (where
<i>Server1</i> is the UNC of your domain controller).</li></p>

<p><li>On the Action menu, click New Dfs Link.</li></p>

<p>The Create A New Dfs Link dialog box appears.</p>

<p><li>Type <b>Maintenance</b> in the Link Name box.</li></p>

<p><li>In the Send The User To This Shared Folder box, type <b>
\\<i>second_computer</i>\Maint</b> (where <i>second_computer</i> is the
UNC name of your non-domain controller computer), and then click
OK.</li></p>

<p><li>Repeat steps 1-4 to add a child node called Database, which
points to the shared folder \\<i>second_computer</i>\DB (where <i>
second_computer</i> is the UNC name of your non-domain controller
computer).</li></p>

<p><li>Close the Distributed File System window.</li></p>
</ol>

<p><li><b>To test the Dfs</b></li></p>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
To complete this procedure, you must have two computers
running Windows 2000. This procedure assumes that one of the two computers is
con-figured as a domain controller and the other computer is configured
as a member server in the domain.
</blockquote></div>
</p>

<ol>
<p><li>On the domain controller's desktop, double-click My Network
Places, double-click the Computers Near Me icon, and then double-click
<i>second_computer</i>.</li></p>

<p>The <i>second_computer</i> window appears, displaying the shared
resources on your second computer.</p>

<p><li>Double-click Shared Apps.</li></p>

<p>The Shared Apps on <i>second_computer</i> window appears, displaying
the child nodes of the Shared Apps Dfs.</p>

<p><li>Create a text file in the Word Processing child node, and name
the text file WP1.</li></p>

<p><li>Create a text file in the Maintenance child node, and name the
text file Maint1.</li></p>

<p><li>Close all open windows.</li></p>

<p><li>Open \\<i>second_computer</i>\Word.</li></p>

<p>Notice that the file you created on your second computer's Dfs
appears in a shared folder on your second computer's shared
folder.</p>

<p><li>Close all open windows and log off.</li></p>
</ol>

<A NAME="394"><H2>Lesson Summary</H2></A>

<p>The Microsoft distributed file system (Dfs) for Windows 2000 Server
provides users with convenient access to shared folders that are
distributed throughout a network. A Dfs share uses a tree structure
containing a root and child nodes. The child nodes of the Dfs root
represent shared folders that can be physically located on different
file servers.</p>

<p>In a network environment, it might be difficult for users to keep
track of the physical locations of shared resources. When you use Dfs,
the network and file system structures become transparent to users. A
user who navigates a Dfs&#8211;managed shared folder does not need to know the name of the server on
which the folder is shared.</p>

<p>After connecting to a Dfs root, users can browse and gain access to
all resources below the root, regardless of the location of the server
on which the resource is located. If a server fails, you can move a
child node from one server to another without users being aware of the
change. All that is required to move a child node is to modify the Dfs
folder to refer to the new server location of the shared folders. Users
continue to use the same Dfs path for the child node.</p>

</BODY>
</HTML>




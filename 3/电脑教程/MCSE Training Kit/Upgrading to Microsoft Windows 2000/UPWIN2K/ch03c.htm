<HTML>
<HEAD>
<TITLE>Lesson 2: Resolving Names</TITLE>
<link rel="STYLESHEET" type="text/css" href="upwin2k.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch03b.htm", "ch03d.htm", "images/unit_p_a1.gif", "images/unit_p_a2.gif", "images/unit_p_b1.gif", "images/unit_p_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#aa22aa", "2");
//--></SCRIPT><P>

<A NAME="125"><H1>Lesson 2: Resolving Names</H1></A>

<p>The process of resolving names to IP addresses is called <i>name
resolution</i>. Name resolution is similar to looking up a name in a telephone book;
the name is associated with a telephone number. For example, when you connect to
the Microsoft Web site, you use the name, www.microsoft.com. DNS
resolves www.microsoft.com to its associated IP address. The mapping of
names to IP addresses is stored in the DNS distributed database.</p>

<p>DNS name servers resolve forward and reverse lookup queries. A
forward lookup query resolves a name to an IP address. A reverse lookup
query resolves an IP address to a name. A name server can only resolve
a query for a zone for which it has authority. If a name server cannot resolve 
the query, it passes the query to other name servers that can resolve the 
query. The name server caches the query results to reduce the DNS traffic on 
the network.</p>

<p>
<div class="sidebar"><blockquote>
<p><b>After this lesson, you will be able to</b></p>

<ul>
<p><li>Explain the name resolution process.</li></p>
</ul>

<p><b>Estimated lesson time: 5 minutes</b></p>
</blockquote></div>
</p>


<A NAME="126"><H2>Forward Lookup Query</H2></A>

<p>The DNS Service uses a client/server model for name resolution. To
resolve a forward lookup query, a client passes a query to a local name
server. The local name server either resolves the query or queries
another name server for resolution.</p>

<p>In Figure 3.3 the client uses the following procedure to query the
name server for an IP address of www.microsoft.com:</p>

<ol>

<p><li>The client passes a forward lookup query for www.microsoft.com
to its local name server.</li></p>

<p><li>The local name server checks its zone database file to determine
whether it contains the name-to-IP-address mapping for the client
query. The local name server does not have authority for the
microsoft.com domain. So it passes the query to one of the DNS root
servers, requesting resolution of the host name. The root name server
sends back a referral to the com name server.</li></p>

<p><li>The local name server sends a request to a com name server,
which responds with a referral to the microsoft name server.</li></p>

<p><li>The local name server sends a request to the microsoft name
server. The microsoft name server receives the request. Because the
microsoft name server has authority for that portion of the domain name
space, it returns the IP address for www.microsoft.com to the local
name server.</li></p>

<p><li>The name server sends the IP address for www.microsoft.com to
the client.</li></p>

<p><li>The name resolution is complete, and the client can access
www.microsoft.com.</li></p>
</ol>

<p>
<A HREF="javascript:fullSize('f03up03x.htm')"> <img src="images/f03up03.JPG" width=404 height=317 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 3.3</b> <i>Resolving a forward lookup query</i><!--/caption-->
</p>



<A NAME="127"><H2>Name Server Caching</H2></A>

<p>When a name server is processing a query, it might be required to
send out several queries to find the answer. With each query, the name server
discovers other name servers that have authority for a portion of the
domain name space. The name server caches these query results to reduce
network traffic.</p>

<p>When a name server receives a query result (see Figure 3.4), the
following actions take place:</p>

<ol>

<p><li>The name server caches the query result for a specified amount
of time, referred to as Time to Live (TTL).</li></p>
</ol>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
The zone that provided the query results
specifies the TTL. TTL is configured by using the DNS snap-in. The
default value is 60 minutes.
</blockquote></div>
</p>

<ol>

<p><li value="2">Once the name server caches the query result, TTL starts
counting down from its original value.</li></p>

<p><li>When TTL expires, the name server deletes the query result from
its cache.</li></p>

</ol>

<p>Caching query results enables the name server to resolve other
queries to the same portion of the domain name space quickly.</p>

<p>
<A HREF="javascript:fullSize('f03up04x.htm')"> <img src="images/f03up04.JPG" width=404 height=223 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 3.4</b> <i>Caching query results</i><!--/caption-->
</p>


<p>
<div class="note"><blockquote><b>NOTE</b><hr>
Use shorter TTL values to help ensure that data
about the domain name space is more current across the network. Shorter
TTL values <i>do</i> increase the load on name servers, however. A
longer TTL value decreases the time required to resolve information.
However, if a change does occur, the client will not receive the updated 
information until the TTL expires and a new query
to that portion of the domain name space is resolved.
</blockquote></div>
</p>


<A NAME="128"><H2>Reverse Lookup Query</H2></A>

<p>A reverse lookup query maps an IP address to a name. Troubleshooting
tools, such as Nslookup, use reverse lookup queries to report back host
names. Additionally, certain applications implement security based on
the ability to connect to names, not IP addresses.</p>

<p>Because the DNS distributed database is indexed by name and not by
IP address, a reverse lookup query would require an exhaustive search
of every domain name. To solve this problem, a special second-level
domain called <i>in-addr.arpa</i> was created.</p>

<p>The in-addr.arpa domain follows the same hierarchical naming scheme
as the rest of the domain name space; however, it is based on IP addresses
instead of domain names as follows:</p>

<ul>

<p><li>Subdomains are named after the numbers in the dotted-decimal
representation of IP addresses.</li></p>

<p><li>The order of the IP address octets is reversed.</li></p>

<p><li>Companies administer subdomains of the in-addr.arpa domain
based on their assigned IP addresses and subnet mask.</li></p>

</ul>

<p>For example, Figure 3.5 shows a dotted-decimal representation of the
IP address 169.254.16.200. A company that has an assigned IP address range
of 169.254.16.0 to 169.254.16.255 with a subnet mask of 255.255.255.0
will have authority over the 16.254.169.in-addr.arpa domain.</p>

<p>
<A HREF="javascript:fullSize('f03up05x.htm')"> <img src="images/f03up05.JPG" width=404 height=293 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 3.5</b> <i>The in-addr.arpa domain</i><!--/caption-->
</p>



<A NAME="129"><H2>Lesson Summary</H2></A>

<p>Name resolution is the process of resolving names to IP addresses.
The mapping of names to IP addresses is stored in the DNS distributed
database. DNS name servers resolve forward lookup queries. When a
client passes a forward lookup query to its local name server, the
local name server checks its zone database file to determine whether it
contains the name-to-IP-address mapping for the client query. If the
local name server does not have authority, it passes the query to one
of the DNS root servers, requesting resolution of the host name. The
root name server sends back a referral to the com name server, and the
local name server sends a request to a com name server, which responds
with a referral to a name server that can resolve the forward lookup
query. The local name server sends a request to the name server to
which it was referred, and since the name server has authority for that
portion of the domain name space, it returns the requested IP address
to the local name server. The name server sends the IP address to
the client, and the name resolution is complete. Name servers cache these
query results to reduce the DNS traffic on the network.</p>

<p>In addition to forward lookup queries, DNS name servers resolve
reverse lookup queries. A reverse lookup query resolves an IP address
to a name. Because the DNS distributed database is indexed by name and
not by IP address, a special second-level domain called inaddr.arpa was
created. The inaddr.arpa domain follows the same hierarchical naming
scheme as the rest of the domain name space; however, it is based on IP
addresses instead of domain names.</p>


</BODY>
</HTML>




<HTML>
<HEAD>
<TITLE>Lesson 4: Controlling Access to Active Directory Objects</TITLE>
<link rel="STYLESHEET" type="text/css" href="upwin2k.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch05d.htm", "ch05f.htm", "images/unit_p_a1.gif", "images/unit_p_a2.gif", "images/unit_p_b1.gif", "images/unit_p_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#aa22aa", "2");
//--></SCRIPT><P>

<A NAME="272"><H1>Lesson 4: Controlling Access to Active Directory Objects</H1></A>

<p>Every object in Active Directory directory services has a security
descriptor that defines who has the permissions to gain access to the
object and what type of access is allowed. Windows 2000 uses these security descriptors to
control access to objects. To reduce administrative overhead, you can
group objects with identical security requirements into one OU. You can
then assign access permissions to the entire OU and all of the objects
within it.</p>

<p>
<div class="sidebar"><blockquote>
<p><b>After this lesson, you will be able to</b></p>

<ul>
<p><li>Explain how to control access to objects in Active Directory
directory services with permissions.</li></p>

<p><li>View permissions on Active Directory objects.</li></p>

<p><li>Delegate control of an organizational unit.</li></p>
</ul>


<p><b>Estimated lesson time: 55 minutes</b></p>
</blockquote></div>
</p>

<A NAME="273"><H2>Introducing Active Directory Permissions</H2></A>

<p>Active Directory permissions provide security for resources by
allowing you to control who can gain access to individual objects or
object attributes, and the type of access that you will allow. You can
use permissions to assign administrative privileges&#8212;for an OU, a
hierarchy of OUs, or a single object&#8212;to a specific user or
group.</p>

<p>An administrator or the object owner must assign permissions to the
object before users can gain access to the object. Windows 2000 stores a list
of user access permissions called the discretionary access control list (DACL),
for every object in Active Directory directory services. The DACL for an
object lists who can access the object and the specific actions that each user
can perform on the object.</p>

<p>The object type determines which permissions you can select.
Permissions vary for different object types. For example, you can
assign the Reset Password permission for a user object, but not for a
printer object.</p>

<A NAME="274"><H3>Effective Permissions</H3></A>

<p>A user can be a member of multiple groups, each with different
permissions that provide different levels of access to objects. When
you assign a permission to a user for access to an object, and that
user is a member of a group to which you assigned a different
permission, the user's effective permissions are the combination of
the user and the group permissions. For example, if a user has the Read
permission and is a member of a group with the Write permission, the
user's effective permissions are Read and Write.</p>

<A NAME="275"><H3>Allow and Deny Permissions</H3></A>

<p>You can allow or deny permissions. Denied permissions take
precedence over any permissions that you otherwise allow for user
accounts and groups. If you deny permission for a user to gain access
to an object, the user will not have that permission, even if you allow
the permission for a group of which the user is a member. You should
deny permissions only when it is necessary to do so for a specific user
who is a member of a group with allowed permissions.</p>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
Always ensure that all objects have at least one
user with the Full Control permission. Failure to do so can result in
some objects being inaccessible, even to an administrator when he or
she uses the Active Directory Users and Computers tool for
administrations.
</blockquote></div>
</p>

<A NAME="276"><H3>Standard and Special Permissions</H3></A>

<p>You can set standard and special permissions on objects. Standard
permissions are the most frequently assigned permissions and are
composed of special permissions. Special permissions provide you with a
finer degree of control for assigning access to objects.</p>

<p>For example, the standard Write permission is composed of the
special permissions Write All Properties, Add/Remove Self As Member,
and Read Permissions.</p>

<p>Table 5.4 lists standard object permissions that are available for
most objects (some object types have additional permissions that are
available) and the type of access that each permission allows.</p>

<p><b>Table 5.4</b> <i>Standard Object Permissions</i></p>

<p><table cellpadding=5 width="95%"><tr>
<th>Object permission</th>
<th>Allows the user to</th>
</tr><tr>
<td valign="top">Full Control</td>
<td valign="top">Change permissions and take ownership, plus perform the tasks that are allowed by all other standard permissions.</td>
</tr><tr>
<td valign="top">Read</td>
<td valign="top">View objects and object attributes, the object owner, and the Active Directory permissions.</td>
</tr><tr>
<td valign="top">Write</td>
<td valign="top">Change object attributes.</td>
</tr><tr>
<td valign="top">Create All Child Objects</td>
<td valign="top">Add any type of child object to an OU.</td>
</tr><tr>
<td valign="top">Delete All Child Objects</td>
<td valign="top">Remove any type of object from an OU.</td>
</tr></table></p>


<A NAME="277"><H2>Using Permission Inheritance</H2></A>

<p>Permission inheritance in Active Directory directory services
minimizes the number of times that you need to assign permissions for
objects.</p>

<A NAME="278"><H3>Applying Permissions to Child Objects</H3></A>

<p>When you assign permissions, you can select to apply the permissions
to subobjects (child objects), which propagates the permissions to all
of the subobjects for a given object. To indicate that permissions are
inherited, the check boxes for inherited permissions are unavailable in
the user interface.</p>

<p>For example, you can assign the Full Control permission to a group
for an OU that contains printers, and then apply this permission for
all subobjects. The result is that all group members can administer all printers in the
OU.</p>

<A NAME="279"><H3>Preventing Permission Inheritance</H3></A>

<p>You can prevent permission inheritance so that a child object does
not inherit permissions from its parent object. When you prevent
inheritance, only the permissions that you explicitly assign to the
object will apply.</p>

<p>Use the Security tab in the Properties dialog box to prevent
permission inheritance.</p>

<p>When you prevent permission inheritance, Windows 2000 allows you to
do the following:</p>

<ul>
<p><li><b>Copy previously inherited permissions to the object.</b> 
The new explicit permissions for the object are a copy of the permissions that it
previously inherited from its parent object. Then, according to your needs,
you can make any necessary changes to the permissions.</li></p>

<p><li><b>Remove previously inherited permissions from the
object.</b> By removing these permissions, you will eliminate all
permissions for the object. Then, according to your needs, you can assign any new permission for the
object that you want.</li></p>
</ul>


<A NAME="280"><H2>Assigning Active Directory Permissions</H2></A>

<p>Windows 2000 determines a user's authorization to use an object
by checking the DACL for permissions granted to the user on that
object. To add or change permissions for an object, you would do the
following:</p>

<ol>
<p><li>In the Active Directory Users And Computers window, on the View
menu, click Advanced Features.</li></p>

<p><li>Right-click the object, click Properties, and then in the
Properties dialog box, click the Security tab.</li></p>

<p><li>Perform either or both of the following steps:</li></p>
<ul>

<p><li>To add a new permission, click Add, click the user account or
group to which you want to assign permissions, click Add, and then
click OK.</li></p>

<p><li>To change an existing permission, click the user account or
group.</li></p>
</ul>

<p><li>In the Permissions box, select the Allow check box or the Deny
check box for each permission that you want to add or remove.</li></p>
</ol>

<p>Standard permissions are sufficient for most administrative tasks.
However, you might need to view the special permissions that constitute
a standard permission. To view special permissions, you would do the
following:</p>

<ol>
<p><li>On the Security tab in the Properties dialog box for the object,
click the Advanced button.</li></p>

<p><li>In the Access Control Settings dialog box, on the Permissions
tab, click the entry that you want to view, and then click
View/Edit.</li></p>

<p><li>To view the permissions for specific attributes, click the
Properties tab.</li></p>
</ol>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
Avoid assigning permissions for specific
attributes of objects because this can complicate system
administration&#8212;errors can result, such as objects in Active Directory directory services not being visible, which could
prevent users from completing tasks.
</blockquote></div>
</p>

<p>To modify inheritance of the permission, you would do the
following:</p>

<ol>
<p><li>On the Security tab in the Properties dialog box for the object,
click the Advanced button.</li></p>

<p><li>In the Access Control Settings dialog box, on the Permissions
tab, click the entry that you want to view, and then click
View/Edit.</li></p>

<p><li>In the Apply Onto box, select the desired option from the
menu.</li></p>
</ol>

<A NAME="281"><H2>Changing Object Ownership</H2></A>

<p>Every object has an owner. The person who creates the object
automatically becomes the owner. The owner controls the permissions assigned for an
object and to whom permissions are assigned.</p>

<p>As an administrator, you can take ownership of any object and then
change the permissions for the object. If a member of the
Administrators group creates an object or takes ownership, the
Administrators group is the owner, rather than the individual member of
the group.</p>

<p>Ownership for an object changes when either of the following
occurs:</p>

<ul>
<p><li>The current owner, or any user with the Full Control
permission, grants the Modify Owner permission to another user who
takes ownership of the object.</li></p>

<p>For example, if an employee who owns an object leaves the company,
you can let another user take ownership of that object, thereby
reassigning responsibility for the object.</p>

<p><li>A member of the Administrators group takes ownership of any
object.</li></p>
</ul>


<p>
<div class="note"><blockquote><b>NOTE</b><hr>
Although members of the Administrators group can
take ownership of any object, members of the Administrators group
cannot transfer ownership. This restriction assures accountability.
</blockquote></div>
</p>

<p>To take ownership of an object, you would do the following:</p>

<ol>
<p><li>In the Properties dialog box for an object, on the Security tab,
click the Advanced button.</li></p>

<p><li>Click the Owner tab, and then click your user account. (If you
are a member of the Administrators group, you can also click
Administrators. This will make the Administrators group the
owner.)</li></p>

<p><li>Click OK, and then click OK again to take ownership.</li></p>
</ol>

<A NAME="282"><H2>Delegating Administrative Control of Active Directory Objects</H2></A>

<p>The structure of Active Directory directory services lends itself to
more efficient management through the delegation of administrative
control over objects. You can use the Delegation Of Control wizard and
customized Microsoft Management Consoles to give specific users the
rights to perform various administrative and management tasks, thus
decreasing your workload and reflecting your business's hierarchy
by placing the responsibility for network resources on the appropriate
individuals.</p>

<p>You delegate administrative control of objects by assigning tasks at
the OU level, thus allowing users or groups of users to administer the
following types of control:</p>

<ul>
<p><li>Assigning to a user the permissions to create or modify
objects in a specific OU.</li></p>

<p><li>Assigning to a user the permissions to modify specific
permissions for the attributes of an object, such as assigning the
permission to reset passwords on a user account.</li></p>
</ul>


<p>Because tracking tasks (or permission to perform specific tasks) at
the OU level is easier than tracking tasks on objects or object
attributes, the most common method of delegating administrative control
is to assign tasks (or permission to perform specific tasks) at the OU
level. Assigning tasks at the OU level allows you to delegate
administrative control for the objects that are contained within the
OU.</p>

<p>For example, you can delegate administrative control for an OU to
the appropriate manager. By delegating control of the OU to the
manager, you can decentralize administrative operations and issues.
This reduces your administration time and costs by distributing
administrative control closer to its point of service.</p>

<p>You can use the Delegation Of Control wizard to assign permissions
at the OU level. For more specialized permissions, you must manually
assign permissions at the object level.</p>

<p>Using the Active Directory Users and Computers tool, right-click the
OU for which you want to delegate control, and then click Delegate
Control to start the wizard.</p>

<p>Table 5.5 describes the Delegation Of Control wizard options.</p>



<p><b>Table 5.5</b> <i>Delegation Of Control Wizard Options</i></p>

<p><table cellpadding=5 width="95%"><tr>
<th>Option</th>
<th>Allows the user to set</th>
</tr><tr>
<td valign="top">Users Or Groups</td>
<td valign="top">The user accounts or groups to which you want to  delegate control</td>
</tr><tr>
<td valign="top">Tasks To Delegate</td>
<td valign="top">The tasks to assign to the object or objects.</td>
</tr></table></p>

<A NAME="283"><H2>Creating Customized Administrative Tools</H2></A>

<p>One of the new features in Windows 2000 is the ability to create
custom administrative tools using the Microsoft Management Console
(MMC). Once you have delegated administrative control of a portion of
Active Directory directory services, you can create your own unique set
of administrative tools and distribute them to the delegated
administrators. Saved as .MSC files, these custom administrative tools
can be sent by e-mail, stored in a shared folder, or posted on the Web.
They can also be assigned to users, groups, or computers with Group Policy settings.</p>

<A NAME="284"><H3>Creating Customized Consoles</H3></A>

<p>You can create custom MMC consoles to meet your administrative
requirements by combining snap-ins that you use to perform common
administrative tasks into a single console. To open MMC with an empty
console, click the Start button, click Run, type <b>mmc</b> in the Open
box, and then click OK. Click New on the MMC Console menu, add the
desired snap-ins and extensions, name the console, and then save
it.</p>

<p>Table 5.6 describes when to use the different commands on the MMC
Console menu.</p>

<p><b>Table 5.6</b> <i>MMC Console Menu Commands</i></p>

<p><table cellpadding=5 width="95%"><tr>
<th>Use this command</th>
<th>When</th>
</tr><tr>
<td valign="top">New</td>
<td valign="top">You want to create a new custom MMC console.</td>
</tr><tr>
<td valign="top">Open</td>
<td valign="top">You want to use a saved MMC console.</td>
</tr><tr>
<td valign="top">Save or Save As</td>
<td valign="top">You want to use the MMC console later.</td>
</tr><tr>
<td valign="top">Add/Remove Snap-In</td>
<td valign="top">You want to add or remove one or more snap-ins
and their associated extensions to or from an MMC console.</td>
</tr><tr>
<td valign="top">Options</td>
<td valign="top">You want to configure the console mode and create a custom MMC console.</td>
</tr></table></p>

<A NAME="285"><H3>Saving a Console in Author Mode</H3></A>

<p>When you create an MMC console, you can set the mode in which it
will open. To set the mode, on the Console menu, select Options. You
can select Author Mode or User Mode.</p>

<p>When you save an MMC console in Author mode, you enable full access
to all MMC functionality, which includes modifying the MMC console. By
default, all new MMC consoles are saved in Author mode. You can use
Author mode to do the following:</p>

<ul>
<p><li>Add or remove snap-ins</li></p>

<p><li>Create new windows</li></p>

<p><li>View all portions of the console tree</li></p>

<p><li>Save MMC consoles</li></p>
</ul>


<A NAME="286"><H3>Saving a Console in User Mode</H3></A>

<p>If you plan to distribute an MMC console to other administrators and
you do not want them to be able to modify the MMC console, save the MMC
console in User mode. When you set an MMC console to User mode, users
cannot add snap-ins to, remove snap-ins from, or save the MMC console.
There are three types of User modes, which allow different levels of
access and functionality.</p>

<p>Table 5.7 describes the three types of User modes.</p>

<p><b>Table 5.7</b> <i>User Mode Types</i></p>

<p><table cellpadding=5 width="95%"><tr>
<th>Use this</th>
<th>When</th>
</tr><tr>
<td valign="top">Full Access</td>
<td valign="top">You want to allow users to navigate between snap-ins,
open new windows, and gain access to all portions of the console tree.</td>
</tr><tr>
<td valign="top">Limited Access, Multiple Window</td>
<td valign="top">You do not want to allow users to open new windows
or gain  access to a portion of the console tree. You do want to
allow users to view multiple windows in the console.</td>
</tr><tr>
<td valign="top">Limited Access, Single Window</td>
<td valign="top">You do not want to allow users to open new windows
or gain  access to a portion of the console tree. You want to
allow users to view only one window in the console.</td>
</tr></table></p>

<p><img src="images/practic.JPG" width=68 height=54 border="0"></p>

<A NAME="287"><H2>Practice: Delegating Control</H2></A>

<p>In this practice, you will review the default security settings on
Active Directory components. Then you will delegate to a user control
over objects in an OU.</p>

<A NAME="288"><H3>Exercise 1: Reviewing Active Directory Permissions</H3></A>

<p>In this exercise, you will review the default security settings on
Active Directory components.</p>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
Do not change any security settings in Active
Directory directory services unless you are specifically instructed to
do so in this exercise. Making changes could result in losing access to
portions of Active Directory directory services.
</blockquote></div>
</p>


<p><li><b>To create objects in Active Directory directory
services</b></li></p>
<ol>
<p><li>Log on as Administrator.</li></p>

<p><li>Open the Active Directory Users and Computers tool.</li></p>

<p><li>Expand domain.com</li></p>

<p><li>Right-click domain.com, point to New, and then click
Organizational Unit.</li></p>

<p><li>In the Name box, type Security, and then click OK.</li></p>

<p><li>In the Security OU, create a user account with the first name
Assistant and user logon name Assistant@domain.com. Assign a password
of <i>password</i> and accept the defaults for all other options.</li></p>

<p><li>In the same OU, create another user account with the first name
Secretary and user logon name Secretary@domain.com. Assign a password of <i>
password</i> and accept the defaults for all other options.</li></p>
</ol>

<p><li><b>To view default Active Directory permissions for an OU</b></li></p>
<ol>
<p><li>On the View menu, ensure that the Advanced Features option is
selected.</li></p>

<p><li>In the console tree, right-click Security, and then click
Properties.</li></p>

<p><li>Click the Security tab.</li></p>

<p><li>In the following table, list the groups that have permissions
for the Security OU. If an account has special permissions, just record
Special Permissions in the table. You will need to refer to these
permissions in the next exercise.</li></p>
</ol>

<p><table cellpadding=5 width="95%"><tr>
<th>User account or group</th>
<th>Assigned permissions</th>
</tr><tr>
<td valign="top">Account Operators</td>
<td valign="top"></td>
</tr><tr>
<td valign="top">Administrators</td>
<td valign="top"></td>
</tr><tr>
<td valign="top">Authenticated Users</td>
<td valign="top"></td>
</tr><tr>
<td valign="top">Domain Admins</td>
<td valign="top"></td>
</tr><tr>
<td valign="top">Enterprise Admins</td>
<td valign="top"></td>
</tr><tr>
<td valign="top">Pre-Windows 2000 Aceess</td>
<td valign="top"></td>
</tr><tr>
<td valign="top">Print Operators</td>
<td valign="top"></td>
</tr><tr>
<td valign="top">System Operators</td>
<td valign="top"></td>
</tr></table></p>


<p>Why are all permission check boxes for some groups blank?  </p>

<p>Are any of the default permissions inherited from the domain, which
is the parent object? How can you tell?  </p>

<p><a href="chaaa.htm#712">Answers</a></p>


<p><li><b>To view special permissions for an OU</b></li></p>
<ol>
<p><li>In the Security Properties dialog box, on the Security tab,
click the Advanced button.</li></p>

<p>The Access Control Settings For Security dialog box appears.</p>

<p><li>To view the permissions for Account Operators, in the Permission
Entries box, click each entry for Account Operators, and then click
View/Edit.</li></p>

<p>The Permission Entry For Security dialog box appears.</p>

<p>What object permissions are assigned to Account Operators? What
can Account Operators do in this OU? </p>

<p>Do any objects within this OU inherit the permissions assigned to
the Account Operators group? Why or why not? </p>

<p><li>Close all open dialog boxes, and then log off.</li></p>
</ol>

<p><a href="chaaa.htm#713">Answers</a></p>

<A NAME="289"><H3>Exercise 2: Delegating Control</H3></A>

<p>In this exercise, you will delegate to a user control over objects
in an OU. Refer to the table you completed in the previous exercise to
answer the questions below.</p>


<p><li><b>To test current permissions</b></li></p>
<ol>
<p><li>Log on to your domain as Assistant using a password of <i>
password</i>.</li></p>

<p>Windows 2000 displays a message that the local policy of your system
does not permit you to interactively log on Assistant to your
server,</p>

<p><li>Log on as Administrator, add your Assistant account to the Print
Operators group, log off as Administrator, and then log on as Assistant
again.</li></p>

<p><li>Open the Active Directory Users and Computers tool.</li></p>

<p><li>In the console tree, expand your domain, and then click
Security.</li></p>

<p>What user objects are visible in the Security OU?  </p>

<p>Which permissions allow you to see these objects? (Hint: refer to
your answers in the preceding exercise.)  </p>

<p>Attempt to change the logon hours for Secretary. Were you
successful? Why or why not?  </p>

<p>Attempt to change the logon hours for Assistant. Were you
successful? Why or why not?  </p>

<p><li>Close the Active Directory Users and Computers tool and log
off.</li></p>
</ol>

<p><a href="chaaa.htm#714">Answer</a></p>

<p><li><b>To use the Delegation Of Control wizard to assign Active
Directory permissions</b></li></p>
<ol>
<p><li>Log on to your domain as Administrator with a password of <i>
password</i>.</li></p>

<p><li>Open the Active Directory Users and Computers tool.</li></p>

<p><li>In the console tree, expand your domain.</li></p>

<p><li>Right-click Security, and then click Delegate Control.</li></p>

<p><li>In the Delegation Of Control wizard, click Next.</li></p>

<p>The Delegation Of Control wizard displays the Users Or Groups
page.</p>

<p><li>Click Add.</li></p>

<p><li>In the Select Users, Computers, Or Groups dialog box, click
Assistant, click Add, and then click OK.</li></p>

<p><li>Click Next.</li></p>

<p>The Delegation Of Control wizard displays the Tasks To Delegate
page. If you only want to delegate control for certain types of tasks,
such as managing printers, you can select one or more predefined
tasks.</p>

<p><li>Click the Create, Delete, And Manage User Accounts option, and
then click Next.</li></p>

<p><li>Click Finish.</li></p>

<p><li>Close the Active Directory Users And Computers window and log
off.</li></p>
</ol>

<p><li><b>To test delegated permissions</b></li></p>
<ol>
<p><li>Log on to your domain as Assistant, using a password of <i>
password</i>.</li></p>

<p><li>Open the Active Directory Users And Computers tool.</li></p>

<p><li>In the console tree, expand your domain, and then click
Security.</li></p>

<p><li>Attempt to change the logon hours for both user accounts in the
Security OU.</li></p>

<p>Were you successful? Why or why not?  </p>

<p><li>Attempt to change the logon hours for a user account in the
Users container.</li></p>

<p>Were you successful? Why or why not?  </p>

<p><li>Close the Active Directory Users And Computers window and log
off.</li></p>
</ol>

<p><a href="chaaa.htm#715">Answers</a></p>

<A NAME="290"><H2>Lesson Summary</H2></A>

<p>Active Directory permissions provide security for resources by
allowing you to control who can gain access to individual objects or
object attributes, and the type of access that you will allow. Windows
2000 stores a list of user access permissions, called the discretionary
access control list (DACL), for every object in Active Directory
directory services. The DACL for an object lists who can access the
object and the specific actions that each user can perform on the
object.</p>

<p>You can allow or deny permissions. Denied permissions take
precedence over any permissions that you otherwise allow for user
accounts and groups. If you deny permission for a user to gain access
to an object, the user will not have that permission, even if you allow
the permission for a group of which the user is a member. You should
deny permissions only when it is necessary to do so for a specific user
who is a member of a group with allowed permissions.</p>

<p>When you assign permissions, you can select to apply the permissions
to subobjects (child objects), which propagates the permissions to all
of the subobjects for a given object. To indicate that permissions are
inherited, the check boxes for inherited permissions are dimmed in the
user interface. You can prevent permission inheritance so that a child
object does not inherit permissions from its parent object. When you
prevent inheritance, only the permissions that you explicitly assign to
the object will apply.</p>

</BODY>
</HTML>




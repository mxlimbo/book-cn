<HTML>
<HEAD>
<TITLE>Lesson 2: File Replication Service</TITLE>
<link rel="STYLESHEET" type="text/css" href="mmserver.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch05b.htm", "ch05d.htm", "images/unit_p_a1.gif", "images/unit_p_a2.gif", "images/unit_p_b1.gif", "images/unit_p_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#aa22aa", "2");
//--></SCRIPT><P>

<A NAME="218"><h1>Lesson 2: File Replication Service</h1></A>
<p>FRS is the file replication service in Windows 2000 Server. It is used to copy and maintain files on multiple servers simultaneously and to replicate the Windows 2000 system volume (SYSVOL) on all domain controllers. In addition it can be configured to replicate data for domain Dfs roots.</p>

<p>
<div class="sidebar"><blockquote>
<b>After this lesson, you will be able to</b> 
<ul>
<p><li>Describe what data can be replicated by FRS</li></p>
<p><li>Configure replication for domain Dfs roots</li></p>
<p><li>Describe the replication process in the Active Directory services and FRS</li></p>
</ul>
<b>Estimated lesson time: 25 minutes</b> 
</blockquote></div>
</p>

<A NAME="219"><h2>FRS Replication</h2></A>
<p>FRS is installed automatically on all Windows 2000 Servers. It is configured to start automatically on all domain controllers and manually on all stand-alone and member servers. Although Active Directory replication and the FRS are independent of each other, they share a common replication topology, terminology, and methodology. In fact, the Active Directory store uses FRS to synchronize the directory among all domain controllers.</p>

<p>Each Windows 2000 domain has one or more servers that serve as domain controllers. Each domain controller stores a complete copy of Active Directory store for its domain and is involved in managing changes and updates to the directory.</p>

<p>Within a site, Active Directory services automatically generates a ring topology for replication among domain controllers in the same domain. The topology defines the path for directory updates to flow from one domain controller to another until all domain controllers receive the directory updates.</p>

<p>The ring structure ensures that there are at least two replication paths from one domain controller to another; if one domain controller is down temporarily, replication still continues to all other domain controllers.</p>

<p>Active Directory services uses multimaster replication, in which no one domain controller is the master; instead, all domain controllers within a domain are equivalent.</p>

<p>Active Directory services periodically analyzes the replication topology within a site to ensure that it is still efficient. If you add or remove a domain controller from the network or a site, Active Directory services reconfigures the topology to reflect the change.</p>

<A NAME="220"><h2>Sites and Replication</h2></A>
<p>A site is made up of one or more IP subnets that identify a group of well-connected computers. Only those subnets that share fast and reliable network connections of at least 512 kilobits per second (Kbps) should be combined.</p>

<p>Domain structure and site structure are maintained separately in Active Directory services. A single domain can include multiple sites, and a single site can include multiple domains or parts of multiple domains, as shown in Figure 5.5.</p>

<p>
<A HREF="javascript:fullSize('f05xx05gx.htm')"> <img src="images/f05xx05g.jpg" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 5.5</b> <i>A single domain with a single site, a single domain with multiple sites, and multiple sites with multiple domains</i><!--/caption-->
</p>

<p>There are two types of replication: intra-site replication and inter-site replication.</p>

<p><b>Intra-Site Replication</b></p>

<p>Intra-site replication has the following characteristics:</p>

<ul>
<p><li>Intra-site replication occurs between domain controllers within a site.</li></p>

<p><li>Replicated data is not compressed.</li></p>

<p><li>The default replication interval is 5 minutes.</li></p>

<p><li>Replication is <i>trigger-based,</i> that is, notification and pull.</li></p>
</ul>

<p><b>Inter-Site Replication</b></p>

<p>Inter-site replication has the following characteristics:</p>

<ul>
<p><li>Inter-site replication occurs between domain controllers in different sites.</li></p>

<p><li>You can specify the time when inter-site replication should occur. The default replication interval is 3 hours.</li></p>

<p><li>You can specify the network transport for use in inter-site replication.</li></p>

<p><li>Inter-site replication is compressed, regardless of the transport used.</li></p>

<p><li>Inter-site replication compression reduces the data on the network by 88 to 90 percent.</li></p>
</ul>

<p>One disadvantage to inter-site replication is that it is not configured automatically; it must be configured by an administrator.</p>

<A NAME="221"><h3>Knowledge Consistency Checker</h3></A>
<p>Within a site, a process called the Knowledge Consistency Checker (KCC) generates a ring topology for replication among domain controllers in the same domain. The generated topology defines paths for directory updates to flow from one domain controller to another until all domain controllers have received the directory updates.</p>

<p>This ring structure guarantees that there are at least two replication paths from one domain controller to another, ensuring that if one domain controller is temporarily down, replication will continue to all other domain controllers. In addition, the ring structure is created such that an update takes, at most, three &quot;hops&quot; from the domain controller where it originates to any other domain controller in the site.</p>

<p>The KCC periodically analyzes the replication topology within a site to ensure that the replication topology is efficient. If a domain controller is added or removed from the network or a site, the KCC reconfigures the topology to reflect the change.</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
Administrators can make modifications to the replication topology, including changing the schedule for inter-site replication, to meet the requirements of an organization.</blockquote></div>
</p>

<A NAME="222"><h2>Unique Sequence Numbers</h2></A>
<p>When a directory object is updated at a domain controller, either through a change that a user or administrator makes or by replication from another domain controller, the domain controller assigns the change a Unique Sequence Number (USN). Each domain controller maintains its own USNs and applies USNs incrementally to each directory change made at the domain controller.</p>

<p>When the domain controller writes the change into the directory, it also writes the USN of the change with the property.</p>

<p>Each domain controller maintains a table of the USNs that it receives from every other domain controller in the domain, and the table lists the highest USN that is received from each domain controller. Each domain controller then periodically notifies the other domain controllers in the domain that it has received changes and sends its current USN. Each domain controller that receives this message checks its USN table for the last USN that it received from the sending domain controller. If there are changes and the domain controller has not received them, it requests that only the changes be sent.</p>

<p>Using USNs eliminates the need for precise timestamps for changes and for time to be synchronized precisely among domain controllers within a domain. However, timestamps are still applied to directory changes for tie breaking.</p>

<p>The use of USNs also simplifies recovery after a failure. When a domain controller is running again after a failure, it restarts replication by asking each of the other domain controllers for changed USNs greater than the last USN in the table for that domain controller. Because the table is updated automatically as the change is applied, interrupted replication cycles pick up exactly where they left off, with no loss or duplication of updates.</p>

<A NAME="223"><h2>Implementing FRS</h2></A>
<p>Implementation of FRS consists of several phases: replicating SYSVOL, replicating domain Dfs roots, and configuring FRS for inter-site replication.</p>

<A NAME="224"><h3>Replicating SYSVOL</h3></A>
<p>Changes to the %systemroot%\SYSVOL directory on any domain controller are automatically replicated to the other domain controllers within the site. The replication topology and process is separate but identical to Active Directory replication. When an administrator adds, removes, or modifies the contents of %systemroot%\SYSVOL folder on any domain controller, those changes will be replicated to the other domain controllers within the site automatically.</p>

<p>The default folder structure is as follows:</p>

<ul>
<p><li>%systemroot%\SYSVOL\Sysvol\<i>domain_name</i>\Policies</li></p>

<p><li>%systemroot%\SYSVOL\Sysvol\<i>domain_name</i>\Scripts</li></p>
</ul>

<p>Any files and folders added to %systemroot%\SYSVOL\Sysvol\<i>domain_name</i> are automatically replicated.</p>

<A NAME="225"><h3>Replicating Dfs Fault Tolerant Roots</h3></A>
<p>Dfs uses FRS to replicate data in domain Dfs links. When changes are made to a domain Dfs link that is part of a domain Dfs root, the changes are automatically replicated to other replica members.</p>

<p>Dfs and file replication support the following features:</p>

<ul>
<p><li>Multimaster replication replicates modified files and modified ACLs when a file is closed.</li></p>

<p><li>Files can be modified on any replica member.</li></p>

<p><li>Only Windows 2000 NTFS volumes have the potential to replicate. Other shares can be published as alternates, but no replication occurs.</li></p>

<p><li>Replication is journal based.</li></p>

<p><li>Replication is Remote Procedure Call (RPC) based.</li></p>

<p><li>FRS topology follows Active Directory replication topology.</li></p>
</ul>

<p>The process of Dfs replication consists of a number of steps:</p>

<ol>
<p><li>A file changes. This is noted when a user closes a file.</li></p>

<p><li>NTFS makes an entry in the NTFS Change Log.</li></p>

<p><li>FRS monitors the NTFS journal for changes to Dfs links.</li></p>

<p><li>FRS makes an entry into its own journal.</li></p>

<p><li>FRS generates a staging file of the file change.</li></p>

<p><li>FRS holds on to changes until scheduled to replicate.</li></p>

<p><li>The destination pulls the staging file and applies the new files.</li></p>
</ol>

<p><b>Adding Replica Dfs Root Servers</b></p>

<p>Each Dfs root or link can reference a replicated set of shared resources. Dfs clients will automatically select the nearest replica based on site topology information.</p>

<p>To add Dfs replica servers to a Dfs domain root or link, right-click the Dfs root in the Distributed File System Manager tool, click New, and then click Root Replica. Enter the UNC path for the replica server and share.</p>

<p><b>Enabling Dfs Replication</b></p>

<p>Dfs replication is disabled by default. To enable replication, right-click the Dfs root or Dfs link in the Distributed File System snap-in, and then select Replication Policy. Highlight every server in the replica set that you want to participate in FRS replication, and click the Enable button. Servers that do not participate in replication will have to be synchronized manually.</p>

<A NAME="226"><h3>Configuring FRS for Inter-Site Replication</h3></A>
<p>You can configure inter-site replication by using the Active Directory Sites and Services snap-in. To configure the FRS settings, you must create a new site link for the inter-site transport protocol listed in the console tree. Once you've created the site link, right-click the site link object and click Properties. The Properties dialog box opens. You can now configure the inter-site replication as necessary.</p>

<A NAME="227"><h2>Lesson Summary</h2></A>
<p>FRS is the automatic file replication service in Windows 2000 Server. It copies and maintains files on multiple servers. There are two types of replication: intra-site replication and inter-site replication. Sites are defined as one or more subnets that identify a group of well-connected computers. Within a site, a process called KCC automatically generates a ring topology for replication among domain controllers in the same domain. Implementing FRS consists of several phases, including replicating SYSVOL, replicating domain Dfs roots, and configuring FRS.</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
Domain Dfs roots and FRS will be installed in the <a href="ch06a.htm">next chapter</a> after Active Directory services are running.</blockquote></div>
</p>

</BODY>
</HTML>




<HTML>
<HEAD>
<TITLE>Lesson 3: Windows 2000 Directory Services</TITLE>
<link rel="STYLESHEET" type="text/css" href="mmserver.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch01c.htm", "ch01e.htm", "images/unit_p_a1.gif", "images/unit_p_a2.gif", "images/unit_p_b1.gif", "images/unit_p_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#aa22aa", "2");
//--></SCRIPT><P>

<A NAME="52"><h1>Lesson 3: Windows 2000 Directory Services</h1></A>
<p>A <i>directory</i> is a stored collection of information about objects that are all related to one another in some way. You can compare a network directory to a telephone directory, which stores the names, addresses and phone numbers of individuals and businesses. The telephone directory is a collection of attributes (names and addresses) that can be used as search properties to locate information about objects (phone numbers) that are stored in the directory. In much the same way, a <i>directory service</i> uniquely identifies users and resources on a network and provides a way to organize and access those users and resources.</p>

<p>
<div class="sidebar"><blockquote>
<b>After this lesson, you will be able to</b> 

<ul>
<p><li>Describe the functions of a directory service</li></p>

<p><li>Identify the differences between workgroups and domains</li></p>

<p><li>Describe Active Directory services and its functions and identify the components of the Active Directory structure</li></p>
</ul>

<b>Estimated lesson time: 45 minutes</b> 
</blockquote></div>
</p>

<A NAME="53"><h2>Introduction to Directory Services</h2></A>
<p>In a distributed computing system or a public computer network such as the Internet, many objects are necessary to support that system, such as users, file servers, printers, fax servers, applications, and databases. Users want to easily and efficiently locate and use these objects. Administrators want to manage how these objects are used. If all the information needed to use and manage these objects is stored in a centralized location, the process of locating and managing these resources can be vastly simplified. This is when a directory service becomes useful.</p>

<p>The terms directory and directory service refer to the directories found in public and private networks. A directory is a database of network objects that can be referenced in many different ways. It stores information related to the network resources to facilitate locating and managing these resources. A directory service differs from a directory in that it is both the <i>source</i> of the directory information and the <i>services</i> making the information available to the users.</p>

<p>A directory service provides the means to organize and simplify access to resources of a networked computer system. It makes it possible to find an object based on one or more of its attributes. For example, administrators may not know the exact name of an object, but chances are they know one or more of the attributes of that object. With a directory service, they can query the directory to get a list of objects that match the known attributes. For instance, they could query the directory for all color printer objects that are associated with the third floor attribute (or maybe a location attribute that has been set to &quot;third floor&quot;).</p>

<p>You can use a directory service to perform a number of functions:</p>

<ul>
<p><li>Enforce security to protect the objects in its database from outside intruders or from internal users who do not have permission to access those objects</li></p>

<p><li>Replicate a directory to other computers in the network to make it available to more users and make it resistant to failure</li></p>

<p><li>Partition a directory into multiple stores that are located on different computers across the network. This makes more space available to the directory as a whole and allows the storage of a large numbers of objects</li></p>
</ul>

<p>A directory service is both an administration tool and an end-user tool. The larger a network becomes, the more resources there are to manage. As the number of resource objects in a network grows, the more necessary the directory service becomes.</p>

<A NAME="54"><h2>Workgroups and Domains</h2></A>
<p>As stated earlier, a directory service provides a way to organize and simplify access to network resources. However, to facilitate that access, Windows 2000 supports two types of networks: workgroups and domains.</p>

<A NAME="55"><h3>Windows 2000 Workgroups</h3></A>
<p>A <i>workgroup</i> is a logical grouping of networked computers that share resources, such as files and printers. A domain is a logical grouping of network computers that share a central directory database that contains user accounts and security information for the domain. A workgroup is sometimes referred to as a peer-to-peer network because all computers in the workgroup can share resources as equals, without a dedicated server, as shown in Figure 1.3. Each Windows 2000 Server computer and Windows 2000 Professional computer in the workgroup maintains a local security database, which contains a list of user accounts and resource security information for that computer.</p>

<p>
<A HREF="javascript:fullSize('f01xx03gx.htm')"> <img src="images/f01xx03g.jpg" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 1.3</b> <i>A Windows 2000 workgroup</i><!--/caption-->
</p>

<p>Because each computer in the workgroup maintains a local security database, the administration of user accounts and resource security is decentralized. A user must have a user account on each computer that the user needs to access. Any changes to user accounts, such as changing a password or adding a new account, must be made on each computer. If you forget to add a new user account to one of the computers, the new user will not be able to log on to that computer and will not be able to access resources on it.</p>

<p>Windows 2000 workgroups provide the following advantages:</p>

<ul>
<p><li>A workgroup does not require a computer running Windows 2000 Server to hold centralized security information.</li></p>

<p><li>A workgroup is simple to design and implement; it does not require the extensive planning and administration that a domain requires.</li></p>

<p><li>A workgroup is convenient for a limited number of computers in close proximity, although a workgroup becomes impractical in environments with more than 10 computers.</li></p>

<p><li>A workgroup is well suited to small groups of technical users who do not require central administration.</li></p>
</ul>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
In a workgroup, a computer running Windows 2000 Server is called a stand-alone server.</blockquote></div>
</p>

<A NAME="56"><h3>Windows 2000 Domains</h3></A>
<p>A <i>Windows 2000 domain</i> is a logical grouping of network computers that share a central directory database. A directory database contains user accounts and security information for the domain. In Windows 2000, the directory database is known as the directory and is the database portion of Active Directory services, which is the Windows 2000 directory service. In a domain, the directory resides on computers that are configured as domain controllers (Figure 1.4). A <i>domain controller</i> is a server that manages all security-related user/domain interactions and centralizes administration.</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
In Windows NT domains, domain controllers are either backup domain controllers (BDCs) or primary domain controllers (PDCs). In Windows 2000 domains, there is only one type of domain controller. All domain controllers are peers.</blockquote></div>
</p>

<p>
<A HREF="javascript:fullSize('f01xx04gx.htm')"> <img src="images/f01xx04g.jpg" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 1.4</b> <i>A Windows 2000 domain</i><!--/caption-->
</p>

<p>A domain does not refer to a single location or a specific type of network configuration. The computers in a domain can share physical proximity on a small local area network (LAN) or can be located in different corners of the world, communicating over various kinds of connections, including analog connections, Integrated Services Digital Networks (ISDNs), or Digital Subscriber Lines (DSLs). Domains are discussed in more detail in the following section, &quot;<A HREF="ch01d.htm#57">Windows 2000 Active Directory Services</A>.&quot;</p>

<p>Windows 2000 domains provide the following advantages:</p>

<ul>
<p><li>A domain provides centralized administration because all user information is stored centrally.</li></p>

<p><li>A domain provides a single logon process for users to gain access to network resources, such as file, print, and application resources for which they have permissions. A user can log on to one computer and access resources on another computer in the network as long as that user has appropriate permissions to the resource.</li></p>

<p><li>A domain provides scalability so that you can create very large networks.</li></p>
</ul>

<A NAME="57"><h2>Windows 2000 Active Directory Services</h2></A>
<p>Active Directory services is the directory service included in Windows 2000. Active Directory services provides a single point of network management, allowing you to add, remove, and relocate users and resources easily.</p>

<p>Active Directory services includes the directory, which stores information about network resources, as well as all the services that make the information available and useful. The resources stored in the directory, such as user data, printers, servers, databases, groups, computers, and security policies, are known as objects.</p>

<A NAME="58"><h3>Active Directory Features</h3></A>
<p>Active Directory services organizes resources hierarchically in domains. A <i>domain</i> is a logical grouping of servers and other network resources under a single domain name. The domain is the basic unit of replication and security in a Windows 2000 network.</p>

<p>Each domain includes one or more domain controllers. A <i>domain controller</i> is a Windows 2000 Server computer that stores a complete replica of the domain directory. To simplify administration, all domain controllers in Active Directory services are peers, so you can make changes to any domain controller and the updates are replicated to all other domain controllers in the domain.</p>

<p><b>Scalability</b></p>

<p>In Active Directory services, the directory stores information by using <i>partitions</i>, which are logical dividers that organize the directory into sections and permit storage of a large number of objects. Therefore, the directory can expand as an organization grows, allowing you to scale from a small installation with a few hundred objects to a large installation with millions of objects.</p>

<p><b>Open Standards Support</b></p>

<p>Active Directory services integrates the Internet concept of a namespace with Windows NT directory services. This integration allows you to unify and manage the multiple namespaces that now exist in the heterogeneous software and hardware environments of corporate networks. Active Directory services uses the Domain Name System (DNS) for its name system and can exchange information with any application or directory that uses Lightweight Directory Access Protocol (LDAP). Active Directory services also shares information with other directory services that support LDAP versions 2 and 3, such as Novell Directory Services (NDS).</p>

<p><b>The Domain Name System (DNS)</b></p>

<p>Because Active Directory services uses DNS as its domain naming and location service, Windows 2000 domain names are also DNS names. Windows 2000 Server uses dynamic DNS, which enables client computers with dynamically assigned addresses to register directly with the DNS server and update the DNS table dynamically. Dynamic DNS can eliminate the need for other Internet naming services, such as Windows Internet Naming Service (WINS).</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
For Active Directory services and associated client software to function correctly, you must have installed and configured the DNS service.</blockquote></div>
</p>

<p><b>Lightweight Directory Access Protocol (LDAP)</b></p>

<p>Active Directory services further embraces Internet standards by directly supporting LDAP. LDAP is an Internet standard (RFC 1777) for accessing directory services. It was developed as a simpler alternative to the X.500 Directory Access Protocol (DAP). X.500 is a set of standards defining a distributed directory service, developed by the International Standards Organization (ISO). Active Directory services supports both LDAP versions 2 and 3. Active Directory uses LDAP to exchange information between directories and applications.</p>

<p>
<img src="images/cd.JPG" border="0">
</p>

<p><div class="note"><blockquote><b>NOTE</b> <hr>
RFC 1777 is located on the Supplemental Course Materials CD-ROM (\chapt01\articles\RFC 1777.txt) that accompanies this book.</blockquote></div>
</p>

<p><b>Support for Standard Name Formats</b></p>

<p>Active Directory services supports several common name formats. As a result, users and applications can access Active Directory services by using the format they are most familiar with. The following table describes some standard name formats supported by Active Directory services.</p>

<p>
<table cellpadding=5 width="95%">
<tr> 
<th>Format  </th>
<th>Description  </th></tr>
<tr>
<td valign="top">RFC 822  </td>
<td valign="top">RFC 822 names are in the form <i>username@domainname</i> and are familiar to most users as Internet e-mail addresses.  </td></tr>
<tr>
<td valign="top">LDAP URLs and X.500  </td>
<td valign="top">LDAP names use X.500's attributed naming. An LDAP  URL specifies the server holding Active Directory services and the attributed name of the object. For example: <p><blockquote>LDAP://servername.myco.com/CN=jimsmith,OU=sys,<br>
 OU=product,OU=division,O=myco,C=US.</blockquote></p> </td></tr>
<tr>
<td valign="top">Universal Naming Convention (UNC) </td>
<td valign="top">Active Directory services supports the UNC used in  Windows 2000-based networks to refer to shared volumes,  printers, and files. For example:<p><blockquote>\\servername.myco.com\xl\budget.xls.</blockquote></p>  </td></tr>
</table></p>


<p>At any time, the interface determines the name standard that may be used. Sometimes any of the naming standards may be used (for example, during logon), while at other times a particular standard will be required. (For instance, the LDP utility, an Active Directory support tool, requires the LDAP naming convention.)</p>

<A NAME="59"><h3>The Active Directory Structure</h3></A>
<p>Windows 2000 Active Directory services provides a method for designing a directory structure tailored to the needs of your organization. Therefore, you should examine your organization's business structure and operations before installing Active Directory services.</p>

<p>Active Directory services separates the network into two structures: logical and physical.</p>

<p><b>Logical Structure</b></p>

<p>In Active Directory services, you organize resources in a logical structure. Grouping resources logically enables you to find a resource by its name rather than its physical location.</p>

<p><b>Objects</b></p>

<p>An <i>object</i> is a distinct named set of attributes that represents a network resource. Object <i>attributes</i> are characteristics of objects in the directory. For example, the attributes of a user might include the user's first and last names, department, and e-mail address.</p>

<p>In Active Directory services, you can organize objects in <i>classes</i>, which are logical groupings of objects. For example, a class of objects might be users, groups, computers, domains, or organizational units.</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
Container objects are objects that can contain other objects. For example, a domain is a container object.</blockquote></div>
</p>

<p><b>Organizational Units</b></p>

<p>An <i>organizational unit</i> (OU) is a container object that you use to organize objects within a domain into logical administrative groups. An OU can contain objects such as user accounts, groups, computers, printers, applications, file shares, and other OUs. The OU hierarchy within a domain is independent of the structure of other domains&#8212;each domain can implement its own OU hierarchy.</p>

<p><b>Domains</b></p>

<p>The core unit of the logical structure in Active Directory services is the domain. Grouping objects into one or more domains allows you to reflect your company's organization within your network.</p>

<p>All network objects exist within a domain, and each domain stores information only about the objects it contains. Theoretically, a domain directory can contain up to 10 million objects, but one million objects per domain is the supported (tested) limit.</p>

<p>A domain is a security boundary. Access to domain objects is controlled by Access Control Lists (ACLs), which are populated with Access Control Entries (ACEs). All security polices and settings, such as administrative rights, security policies, and ACLs, do not cross from one domain to another. The domain administrator has absolute rights to set policies only within that domain.</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
A domain is called a <i>partition</i> of Active Directory services. All domains within a forest make up Active Directory services. (Forests are described later in this section.)</blockquote></div>
</p>

<p>A typical domain will have the following types of computers:</p>

<ul>
<p><li><b>Domain controllers running Windows 2000 Server</b> Each domain controller stores and maintains a copy of the directory. Domain controllers are discussed in more detail later in this section.</li></p>

<p><li><b>Member servers running Windows 2000 Server</b> A member server is one that is not configured as a domain controller. A member server does not store directory information and cannot authenticate users. Member servers provide shared resources such as shared folders or printers.</li></p>

<p><li><b>Client computers running Windows 2000 Professional</b> Client computers run a user's desktop environment and allow the user to gain access to resources in the domain.</li></p>
</ul>

<p><b>Trees</b></p>

<p>A <i>tree</i> is a grouping or hierarchical arrangement of one or more Windows 2000 domains that allows global resource sharing. A tree can consist of a single Windows 2000 domain. However, you can create a larger contiguous namespace by joining multiple domains in a hierarchical structure.</p>

<p>The following illustration (Figure 1.5) provides an example of a parent domain (microsoft.com) and two child domains (dev.microsoft.com and product.microsoft.com).</p>

<p>
<A HREF="javascript:fullSize('f01xx05gx.htm')"> <img src="images/f01xx05g.jpg" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 1.5</b> <i>A domain tree</i><!--/caption-->
</p>

<p>All domains in a tree share information and resources to function as a single unit. There is only one directory in a domain tree, but each domain maintains a portion of the directory that contains the user account information for the users in that domain. Within a tree, a user who logs on in one domain can use resources in another domain, as long as the user has the appropriate permissions.</p>

<p>Windows 2000 combines the directory information from all domains into a single directory, which makes the information of each domain globally accessible. In addition, each domain automatically provides a subset of its domain information in Active Directory services to an index, which resides on domain controllers. Users search this index to locate other users, computers, resources, and applications throughout the domain tree. All domains within a single tree share a common <i>schema</i>, which is a formal definition of all object types you can store in an Active Directory deployment. In addition, all domains within a single tree share a common <i>global catalog</i>, which is the central repository of information about objects in a tree or forest.</p>

<p>All domains within a single tree also share a common namespace and a hierarchical naming structure. A <i>namespace</i> is a set of naming rules that provides the hierarchical structure, or path, of the tree. Following DNS standards, the domain name of a child domain is the relative name of that child domain appended with the name of the parent domain. A domain tree name should map to a company's registered Internet name.</p>

<p>In Active Directory services, a tree is defined by:</p>

<ul>
<p><li>A hierarchy of domains</li></p>

<p><li>A contiguous namespace</li></p>

<p><li>Kerberos transitive trust relationships between the domains</li></p>

<p><li>A common schema</li></p>

<p><li>A global catalog capable of listing any object in the tree</li></p>
</ul>

<p><b>Forests</b></p>

<p>A <i>forest</i> is a grouping of one or more trees. Forests allow organizations to group divisions (or two organizations to combine their networks) that do not use the same naming scheme, operate independently, yet need to communicate with the entire organization.</p>

<p>The trees in the forest share the same schema and rules on how objects work together. All domains in a forest have the same global catalog and configuration container.</p>

<p>A forest is defined by:</p>

<ul>
<p><li>One or more sets of trees</li></p>

<p><li>Disjointed namespaces between these trees</li></p>

<p><li>Kerberos transitive trust relationships between the trees</li></p>

<p><li>A common schema</li></p>

<p><li>A global catalog capable of listing any object in the forest</li></p>
</ul>

<p>The objects of the domain trees that make up a forest are available to all user objects in the forest. However, when accessing objects in the forest but in different trees, the user must know the fully qualified domain name or must at least become comfortable with viewing multiple fully qualified domain names when browsing the internal network for resources.</p>

<p><b>Trust Relationships</b></p>

<p>The domains in a tree are joined together transparently through two-way, Kerberos transitive trust relationships. A <i>Kerberos transitive trust</i> simply means that if Domain A trusts Domain B, and Domain B trusts Domain C, then Domain A trusts Domain C. Therefore, a domain joining a tree immediately has trust relationships established with every domain in the tree. These trust relationships make all the objects in all the domains of the tree available to all other domains in the tree.</p>

<p>A trust relationship is a link between at least two domains in which the trusting domain honors the logon authentication of the trusted domain. User accounts and groups defined in a trusted domain can be given rights and resource permissions in a trusting domain, even though those accounts do not exist in the trusting domain's directory database. Figure 1.6 shows the difference between Windows NT two-way trusts and the simplified model of transitive trusts in Windows 2000.</p>

<p>
<A HREF="javascript:fullSize('f01xx06gx.htm')"> <img src="images/f01xx06g.jpg" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 1.6</b> <i>Trust relationships among Windows NT domains and Windows 2000 domains</i><!--/caption-->
</p>

<p>In Windows NT 4.0 and earlier versions, inter-domain trust relationships are defined by one-way trusted domain accounts between domain controllers. Each trust must be established and managed individually. Management of explicit one-way trust relationships between domains on a large network is a complex task.</p>

<p><b>Transitive Trust Relationships</b> The network administrator can define explicit one-way trust accounts for specific domains when a two-way trust is not appropriate. This capability is provided to support connections to existing Windows NT 4.0 and earlier domains, and to allow the configuration of trust relationships with domains in other forests.</p>

<p><b>Windows 2000 Trust Relationships</b> When a domain is joined to a Windows 2000 domain tree, a trust relationship is automatically established between the new domain and the root or parent domain of the tree. Transitive trust is a feature of the Kerberos system, which provides the distributed authentication and authorization in Windows 2000 computers.</p>

<p>
<div class="note"><blockquote><b>Note</b> <hr>
You can define explicit one-way trust relationships as necessary through the domain properties in the Site Manager snap-in. A <i>snap-in</i> is a type of tool that you can add to a console supported by Microsoft Management Console (MMC). MMC and snap-ins are discussed in detail in <a href="ch06a.htm">Chapter 6</a>, &quot;Administering Microsoft Windows 2000 Server.&quot;</blockquote></div>
</p>

<p><b>Physical Structure</b></p>

<p>The physical structure of Active Directory services affects the efficiency of replication among the domain controllers.</p>

<p><b>Domain Controllers</b></p>

<p>A domain controller is a Windows 2000 Server computer that stores a replica of the directory partition (local domain database). All domain controllers in a domain have a complete replica of the domain's portion of the directory. When you perform an action that results in an update to the directory, Windows 2000 automatically replicates the update to all other domain controllers in the domain. Certain important updates, such as a password change or a user account being locked out, are replicated immediately throughout the domain.</p>

<p>In a domain, you create a user account once, which Windows 2000 records in the directory. When a user logs on to a computer in the domain, a domain controller checks the directory for the user name, password, and logon restrictions to authenticate the user. When there are multiple domain controllers, they periodically replicate their directory information. Only computers running Windows 2000 Server, Advanced Server, or Datacenter Server can be designated as domain controllers.</p>

<p><b>Sites</b></p>

<p>The concept of a site has become familiar in the implementation of Microsoft BackOffice family of products. This concept is included in the implementation of Active Directory services; however, it is different than the site concept in some BackOffice products, such as Microsoft Exchange. In Windows 2000 Active Directory services, the site concept uses existing Internet Protocol (IP) subnets to determine site boundaries for replication traffic considerations. The basic difference between sites in Active Directory services and other BackOffice products is that in Active Directory sites are defined as a range of IP subnets. In BackOffice products such as Microsoft Exchange Server, a site is a logical grouping of servers that can be specified without regard to physical location of the servers themselves.</p>

<p>Basically, an Active Directory site is a collection of IP subnet ranges. For example, a site can be defined as the subnet ranges 192.168.10.0/24 to 192.168.20.0/24. Another site on the other side of a WAN link can be 172.20.10.0/24 to 172.20.20.0/24. However, both sites can be part of the same Windows 2000 domain.</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
The /24 nomenclature used in the previous example represents 24 bits enabled from left to right, or 255.255.255.0. A /22 nomenclature would represent 255.255.252.0, or 22 bits enabled from left to right.</blockquote></div>
</p>

<p>One of the benefits of Active Directory services is that domains can span geography with different topologies connected by WAN links and still remain transparent to the user. However, available WAN bandwidth is always a consideration. By defining groups of local subnets as sites, administrators can control the replication traffic between subnets, and therefore between sites. The result is reduced replication traffic over WAN links.</p>

<p>The idea of a site is also used for a client locating a domain controller to validate logon credentials. A user from one site could be sitting at a workstation in another site. For the user to get validated, a domain controller in the user's site might need to be located. Comparing the site of the user and the site of the workstation (i.e., comparing the subnets) will help locate an appropriate domain controller.</p>

<A NAME="60"><h2>Lesson Summary</h2></A>
<p>A directory service provides the means to organize and simplify access to resources of a networked computer system. Windows 2000 supports secure network environments in which users are able to share common resources, regardless of network size. Windows 2000 supports two types of networks: workgroups and domains. Windows 2000 includes Active Directory services, a directory service that provides a single point of network management. Active Directory services allows you to add, remove, and relocate users and resources easily. It completely separates the logical structure of the domain hierarchy from the physical structure. The logical structure is made up of objects, OUs, domains, trees, and forests. When a domain is joined to a Windows 2000 domain tree, a Kerberos transitive trust relationship is automatically established between the new domain and the root or parent domain of the tree. The physical structure of the domain hierarchy is made up of domain controllers and sites.</p>

</BODY>
</HTML>




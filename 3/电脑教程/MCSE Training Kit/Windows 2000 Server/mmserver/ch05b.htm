<HTML>
<HEAD>
<TITLE>Lesson 1: Distributed File System</TITLE>
<link rel="STYLESHEET" type="text/css" href="mmserver.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch05a.htm", "ch05c.htm", "images/unit_p_a1.gif", "images/unit_p_a2.gif", "images/unit_p_b1.gif", "images/unit_p_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#aa22aa", "2");
//--></SCRIPT><P>

<A NAME="206"><h1>Lesson 1: Distributed File System</h1></A>
<p>Dfs for Windows 2000 Server provides users with convenient access to shared folders that are distributed throughout a network. A single Dfs shared folder serves as an access point to other shared folders in the network.</p>

<p>
<div class="sidebar"><blockquote>
<b>After this lesson, you will be able to</b> 

<ul>
<p><li>Configure a stand-alone Dfs root</li></p>

<p><li>Configure a Dfs link</li></p>

<p><li>Configure a fault tolerant Dfs root</li></p>
</ul>

<b>Estimated lesson time: 35 minutes</b> 
</blockquote></div>
</p>

<A NAME="207"><h2>Dfs Overview</h2></A>
<p>Dfs is a single, logical, hierarchical file system. It organizes shared folders on different computers in a network to provide a logical tree structure for file system resources. Figure 5.1 shows how Dfs can organize resources that reside on different components of a network.</p>

<p>
<A HREF="javascript:fullSize('f05xx01gx.htm')"> <img src="images/f05xx01g.jpg" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 5.1</b> <i>An example of a Dfs share</i><!--/caption-->
</p>

<p>Because the Dfs tree is a single point of reference, regardless of the actual location of the underlying resources, users can easily gain access to network resources. As Figure 5.1 demonstrates, accounting file system resources from multiple servers are organized in one logical Dfs root named Accounting.</p>

<p>A user who navigates a Dfs-managed shared folder does not need to know the name of the server on which the folder is shared. This simplifies network access because users no longer need to locate the server where a specific resource resides. After connecting to a Dfs root, users can browse and gain access to all resources below the root, regardless of the location of the server on which the resource resides. In the example above, users needing access to accounting file resources would be able to find them in this one location.</p>

<p>A Dfs share uses a tree structure containing a root and Dfs links. To create a Dfs share, you must first create a Dfs root. Each Dfs root can have multiple Dfs links beneath it, each of which points to a shared folder on the network. The Dfs links of the Dfs root represent shared folders (&lt;<i>computer_name</i>&gt;<i>\</i>
&lt;<i>share_name</i>&gt;<i>)</i> that can be physically located on different file servers.</p>

<p>The following table describes the advantages of using Dfs:</p>

<p><table cellpadding=5 width="95%"><tr>
<th>Function</th><th>Advantages</th>
</tr><tr>
<td valign="top">Network administration</td> <td valign="top">Dfs simplifies network administration. If a server fails, you can  move a Dfs link from one server to another without users being aware of the change. All that is required to move a Dfs link is to modify the Dfs folder to refer to the new server location of the shared folders. Users continue to use the same Dfs path for the Dfs link.</td></tr><tr>
<td valign="top">Namespace</td> <td valign="top">Clients access file resources by using a single namespace (the Dfs root), as opposed to mapping logical drive letters throughout the enterprise.</td></tr><tr>
<td valign="top">Memory overhead</td> <td valign="top">Windows 2000 and Windows NT 4.0 clients use no additional memory because Dfs support is integrated with the Microsoft client redirector for both Windows 2000 and Windows NT 4.0. The Dfs Service for Microsoft Network Client must be installed on top of the Windows 9<i>x</i>-based Microsoft client redirector for this Windows 32-bit client to access a Dfs share. Without this service installed, Windows 9<i>x</i> clients can access standard shares that are Dfs links of a Dfs root share.</td></tr><tr>
<td valign="top">Server replacement</td> <td valign="top">Administrators can replace file servers without affecting the namespace used by network clients simply by updating the path for the new server in the Distributed File System snap-in.</td></tr><tr>
<td valign="top">Load balancing and fault tolerance</td> <td valign="top">Dfs provides a level of load balancing and fault tolerance since clients randomly select a physical server to connect to from the list of alternates returned by the Dfs server.</td></tr><tr>
<td valign="top">Extensibility</td> <td valign="top">The Dfs namespace can be extended at any time to incorporate additional disk space or new business requirements.</td></tr><tr>
<td valign="top">Network permissions</td> <td valign="top">Dfs preserves network permissions. No additional permissions or security are required because Dfs volumes use existing Windows 2000 file and directory permissions. ACLs on Windows 2000 fault tolerant replicas are replicated.</td></tr><tr>
<td valign="top">Client caching</td> <td valign="top">Dfs clients cache frequently used network resources without experiencing delays locating servers. The first access to a new area of the Dfs tree will incur a slight performance loss (analogous to performing a Net Use command). Caching this data eliminates any performance penalty for subsequent accesses until the client is rebooted or the cache expires.</td></tr><tr>
<td valign="top">Internet Information Services (IIS) integration</td> <td valign="top">Dfs works with IIS. Links made to other pages stored in Dfs will not have to be updated if the initial page is physically moved from one server to another, provided an administrator reconfigures Dfs accordingly. If the server hosting an Internet page is removed and the page is republished someplace else, the links on that page will not have to be reconfigured.</td></tr></table></p>

<A NAME="208"><h3>Limits of Dfs</h3></A>
<p>The following table details the limitations of Dfs:</p>

<p><table cellpadding=5 width="95%"><tr>
<th>Description</th><th>Limit</th>
</tr><tr>
<td valign="top">Maximum number of characters per file path</td> <td valign="top">260</td></tr><tr>
<td valign="top">Maximum number of alternates per volume</td> <td valign="top">32</td></tr><tr>
<td valign="top">Maximum number of Dfs roots per server</td> <td valign="top">1</td></tr><tr>
<td valign="top">Maximum number of Dfs roots per domain</td> <td valign="top">Unlimited</td></tr><tr>
<td valign="top">Maximum number of volumes hosted in a domain or enterprise</td> <td valign="top">Limited by system resources. Six thousand have been successfully tested in stand-alone roots.</td></tr></table></p>

<p><img src="images/cd.JPG" border="0"></p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
The white paper &quot;Distributed File System: A Logical View of Physical Storage&quot; includes details about alternatives and other aspects of Dfs. See the Supplemental Course Materials CD (\chapt05\articles\Dfs New.doc) that accompanies this book.</blockquote></div>
</p>

<A NAME="209"><h2>Types of Dfs Roots</h2></A>
<p>The Dfs Service is auto-installed with the installation of Windows 2000 Server. The service can be paused, stopped, and started but not removed from the operating system.</p>

<p>Two types of Dfs roots can be configured on Windows 2000 Servers: stand-alone Dfs roots and domain Dfs roots (sometimes called fault tolerant Dfs roots).</p>

<A NAME="210"><h3>Stand-Alone Dfs Roots</h3></A>
<p>The following characteristics are common to stand-alone Dfs roots:</p>

<ul>
<p><li>Stand-alone Dfs information is stored in the local registry.</li></p>

<p><li>A stand-alone Dfs root permits a single level of Dfs links.</li></p>

<p><li>When using the Distributed File System snap-in to connect to existing stand-alone Dfs roots, all servers known to the browse list are retrieved since there is no unique NetBIOS name registered by Dfs-enabled servers.</li></p>

<p><li>Stand-alone Dfs roots can be located on all supported file systems, although locating resources on ntfs formatted partitions is recommended.</li></p>


<p><li>Stand-alone Dfs roots offer no replication or backup; consequently, the Dfs root represents a single point of failure. You can create a replica from a stand-alone Dfs root; however, file replication services are not available.</li></p>
</ul>

<A NAME="211"><h3>Domain Dfs Roots</h3></A>
<p>The following characteristics are common to Dfs fault-tolerant roots:</p>

<ul>
<p><li>In a domain Dfs root, multiple servers hand out referrals for the Dfs namespace. Fault tolerant Dfs roots use Active Directory services to store Dfs tree topology and remove the root as a single point of failure.</li></p>

<p><li>A fault tolerant Dfs root is stored in Active Directory services and replicated to every participating Dfs root server. Changes to a Dfs tree are automatically synchronized with Active Directory services. This ensures that you can always restore a Dfs tree topology if the Dfs root is offline for any reason. You can also implement fault tolerance at the file and content level by assigning alternate resources to a Dfs volume. Any branch node on the Dfs tree can be serviced by a set of replicated resources. If a client connection to one alternate resource fails for any reason, the Dfs client attempts to connect to another. The Dfs client cycles through the alternates until an available one is found.</li></p>

<p><li>Fault-tolerant roots must be located on NTFS version 5.0 formatted partitions.</li></p>

<p><li>The list of domains and servers is populated by querying the global catalog for all fault-tolerant Dfs roots (ObjectClass = ftDfs).</li></p>

<p><li>Dfs replication topology uses the existing Active Directory replication topology.</li></p>
</ul>

<A NAME="212"><h2>Configuring Dfs</h2></A>
<p>Windows 2000 allows you to configure stand-alone Dfs roots, Dfs links, and domain Dfs roots.</p>

<A NAME="213"><h3>Configuring a Stand-Alone Dfs Root</h3></A>
<p>Stand-alone Dfs stores the Dfs topology on a single computer. This type of Dfs provides no fault tolerance if the computer that stores the Dfs topology or any of the shared folders that Dfs uses fails.</p>

<p>A stand-alone Dfs root is physically located on the server users initially connect to. The first step in setting up stand-alone Dfs is to create the Dfs root.</p>

<p>To create a stand-alone Dfs root, use the Distributed File System snap-in to start the New Dfs Root wizard. Figure 5.2 shows the Select The Dfs Root Type screen with the Create A Stand-Alone Dfs Root radio button selected.</p>

<p>
<A HREF="javascript:fullSize('f05xx02x.htm')"> <img src="images/f05xx02.jpg" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 5.2</b> <i>Creating a stand-alone Dfs root from the Distributed File System snap-in</i><!--/caption-->
</p>

<p>The following table describes the screens within the wizard and what actions you can take to configure the new Dfs root:</p>

<p><table cellpadding=5 width="95%"><tr>
<th>Screen</th><th>Actions</th>
</tr><tr>
<td valign="top">Select The Dfs Root Type</td> <td valign="top">Select the Create A Stand-Alone Dfs Root option (Figure 5.2).</td></tr><tr>
<td valign="top">Specify The Host Server For The Dfs Root</td> <td valign="top">Enter the initial connection point for all resources in the Dfs tree. You can create a Dfs root on any computer running Windows 2000 Server.</td></tr><tr>
<td valign="top">Specify The Dfs Share</td> <td valign="top">Enter a shared folder to host the Dfs root. You can choose an existing shared folder or create a new share.</td></tr><tr>
<td valign="top">Name The Dfs Root</td> <td valign="top">Enter a descriptive name in the Comment text box for the Dfs root.</td></tr><tr>
<td valign="top">Completing The New Root wizard</td> <td valign="top">Review the settings for the Host Server, Root Share, and Root Name text boxes. Click Back if changes are necessary or click Finish to complete the setup process.</td></tr></table></p>

<A NAME="214"><h3>Configuring a Domain Dfs Root</h3></A>
<p>Domain Dfs writes the Dfs topology to the Active Directory store. This type of Dfs allows Dfs links to point to multiple identical shared folders (also called replicas) for fault tolerance. In addition, it supports DNS, multiple levels of child volumes, and file replication.</p>

<p>To create a fault-tolerant Dfs root, use the Distributed File System tool to start the New Dfs Root wizard.</p>

<A NAME="215"><h3>Configuring New Dfs Links</h3></A>
<p>Users can browse folders under a Dfs root without knowing where the referenced resources are physically located. After you create a Dfs root, you can create Dfs links (also known as child nodes).</p>

<p>To create a Dfs link, open the Distributed File System snap-in, and click the Dfs root to which you will attach a Dfs link. On the Action menu, click New Dfs Link. The Create A New Dfs Link dialog box appears, as shown in
Figure 5.3.</p>

<p>
<A HREF="javascript:fullSize('f05xx03x.htm')"> <img src="images/f05xx03.jpg" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 5.3</b> <i>Creating a New Dfs Link off a public Dfs root for a human resources share</i><!--/caption-->
</p>

<p>The following table describes the option in the dialog box:</p>

<p><table cellpadding=5 width="95%"><tr>
<th>Option</th><th>Description</th>
</tr><tr>
<td valign="top">Link Name</td> <td valign="top">The name below the Dfs root that users will see when they connect to Dfs.</td></tr><tr>
<td valign="top">Send the user to this shared folder</td> <td valign="top">The UNC name for the actual location of the shared folder the Dfs link refers to. Note that the Dfs host server must be able to access any shared folders referred to in a Dfs link.</td></tr><tr>
<td valign="top">Comment</td> <td valign="top">Additional information (optional) to help keep track of the shared folder (for example, the actual name of the shared folder).</td></tr><tr>
<td valign="top">Clients cache this Dfs referral for <i>x</i> seconds</td> <td valign="top">Length of time for which clients cache a referral to a Dfs link. After the referral time expires, a client queries the Dfs server about the location of the Dfs link, even if the client has previously established a connection with the Dfs link.</td></tr></table></p>

<p>The Dfs link will appear below the Dfs root volume in the Distributed File System tool and will appear to a Dfs enabled client as a folder below the Dfs root. Figure 5.4 shows the appearance of a Dfs root named \\Server02\Public and a Dfs link on another server.</p>

<p>
<A HREF="javascript:fullSize('f05xx04gx.htm')"> <img src="images/f05xx04g.jpg" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 5.4</b> <i>A Dfs root and Dfs link as they appear in the Distributed File System snap-in and how they appear on a Dfs-enabled client</i><!--/caption-->
</p>

<p><img src="images/practic.JPG" border="0"></p>

<A NAME="216"><h3>Exercise 1: Creating a Dfs Root and Dfs Link</h3></A>
<p>In this practice, you configure shares, create a stand-alone Dfs root, and then create Dfs links.</p>

<p><li><b>Procedure 1: Creating directories and shares</b></li></p>


<p>In this procedure, you will create or use existing folders and create shares for the folders. You can use any method you prefer to create folders and shares or follow the steps in procedure 1.</p>

<ol>
<p><li>Log on to Server01 as Administrator with a password of &quot;password.&quot;</li></p>

<p><li>Open My Computer on the desktop.</li></p>

<p>The My Computer window appears.</p>

<p><li>Open Local Disk (H:).</li></p>

<p><li>From the File menu, select New and then Folder.</li></p>

<p>A folder named New Folder appears in the Local Disk (H:) window, and the blinking cursor appears inside the New Folder box.</p>

<p><li>Rename the folder &quot;Public.&quot;</li></p>

<p><li>Select the Public folder, and from the File menu choose Sharing.</li></p>

<p>The Public Properties dialog box appears.</p>

<p><li>Select the Share This Folder radio button, and in the Comment text box, type <b>Dfs root share</b> .</li></p>

<p><li>Click OK.</li></p>

<p>The Public folder appears with a hand underneath the folder.</p>

<p><li>Repeat the last seven steps to create the folders and shares listed in the following table, using default permissions.</li></p>

<p>Be aware that in some cases, the folders will be created on drive letters other than H:, and in one case a share will be created on Server02 to a folder that already exists.</p>
</ol>
<p><table cellpadding=5 width="95%"><tr>
<th>Computer name</th><th>Drive</th><th>Folder</th><th>Share  name</th><th>Purpose/Comment</th>
</tr><tr>
<td valign="top">Server02</td> <td valign="top">C:</td> <td valign="top">\Inetpub\wwwroot</td> <td valign="top">internal</td> <td valign="top">Internal Web content</td></tr><tr>
<td valign="top">Server01</td> <td valign="top">H:</td> <td valign="top">\Press</td> <td valign="top">Press</td> <td valign="top">Current press releases</td></tr><tr>
<td valign="top">Server01</td> <td valign="top">C:</td> <td valign="top">\Inetpub\ftproot</td> <td valign="top">ftproot</td> <td valign="top">FTP root directory mapped partition</td></tr><tr>
<td valign="top">Server01</td> <td valign="top">I:</td> <td valign="top">\dev\TechDocs</td> <td valign="top">TechDocs</td> <td valign="top">Technical documents area</td></tr><tr>
<td valign="top">Server01</td> <td valign="top">C:</td> <td valign="top">\Public\Press</td> <td valign="top">PressRepl</td> <td valign="top">Current press releases replica</td></tr></table></p>

<p><li><b>Procedure 2: Creating a stand-alone Dfs root on Server01</b></li></p>


<p>In this procedure, you create a stand-alone Dfs root to host the shares created in procedure 1.</p>

<ol>
<p><li>Click the Start button, point to Programs, point to Administrative Tools, and then click Distributed File System.</li></p>

<p>The Distributed File System snap-in appears.</p>

<p><li>Read the message displayed in the right pane.</li></p>

<p><li>On the Action menu, click New Dfs Root.</li></p>

<p>The New Dfs Root Wizard appears.</p>

<p><li>Read the information on the Welcome To The New Dfs Root Wizard, and then click Next.</li></p>

<p><li>On the Select The Dfs Root Type screen, notice that there are two types of Dfs you can create:</li></p>

<p>A domain Dfs root that writes the Dfs tree topology to the Active Directory store and supports DNS, and file replication.</p>

<p>A stand-alone Dfs root that does not use Active Directory services and does not support automatic file replication.</p>

<p>Because you have not configured a domain controller at this point in your training, you will create a stand-alone Dfs root.</p>

<p><li>Select the Create A Stand-Alone Dfs Root radio button, and then click next.</li></p>


<p><li>On the Specify The Host Server For The Dfs Root screen, confirm that SERVER01 is displayed, and then click Next.</li></p>

<p>On the Specify The Dfs Root Share screen, you will specify a share you created in procedure 1.</p>

<p>Notice that you can use an existing share for the Dfs root, or the wizard can create a new shared folder for you.</p>

<p><li>Verify that the Use An Existing Share radio button is selected, and then from the drop-down menu, select Public.</li></p>

<p><li>Click Next.</li></p>

<p><li>In the Comment text box appearing on the Name The Dfs Root screen, type <b>Public access share</b> and then click Next.</li></p>

<p><li>Review the settings appearing on the Completing The New Dfs Root Wizard screen, and then click Finish.</li></p> 

<p>The Distributed File system snap-in appears and the Dfs root is configured on SERVER01 to Public.</p>

</ol>

<p><li><b>Procedure 3: Creating Dfs links</b></li></p>


<p>In the following procedure, you will create Dfs links below the \\SERVER01\Public Dfs root.</p>

<ol>
<p><li>In the left pane of the Distributed File System snap-in, select \\SERVER01\Public.</li></p>

<p><li>Click on the Action menu, and notice that New Root Replica and replication policy are not available.</li></p>


<p><li>Click New Dfs Link.</li></p>

<p>The Create A New Dfs Link dialog box appears.</p>

<p><li>In the Link Name text box, type <b>intranet</b> .</li></p>

<p><li>Click Browse.</li></p>

<p>The Browse For Folder window appears.</p>

<p><li>Expand the + sign to the left of Computers Near Me.</li></p>

<p><li>Expand the + sign to the left of Server02, and then click internal and click OK.</li></p>

<p>The Send The User To This Shared Folder text box contains \\Server02\internal.</p>

<p><li>In the Comment text box, type <b>Internal Web content</b> and click OK.</li></p>

<p><li>Always begin this step by clicking on \\SERVER01\Public in the Distributed File System snap-in, and then repeat steps 3-8 to create new Dfs links using information in the following table:</li></p>

<p><table cellpadding=5 width="95%"><tr>
<th>Link name</th><th>Send the user to this shared folder</th><th>Comment</th>
</tr><tr>
<td valign="top">news</td> <td valign="top">\\Server01\Press</td> <td valign="top">Current Press Releases</td></tr><tr>
<td valign="top">ftp</td> <td valign="top">\\Server01\ftproot</td> <td valign="top">FTP Root Directory</td></tr><tr>
<td valign="top">tech</td> <td valign="top">\\Server01\TechDocs</td> <td valign="top">Technical Documents Area</td></tr></table></p>
</ol>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
Rather than browsing for a share, you can enter the server and share name using standard UNC syntax.</blockquote></div>
</p>

<p><li><b>Procedure 4: Creating a Dfs Replica</b></li></p>


<p>In the following procedure, you will create a replica of the News Dfs link. This Dfs link points to the H:\Press folder shared as Press, and the replica will be stored on C:\Public\Press folder, which is shared as PressRepl.</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
Because you created a stand-alone Dfs link, files must be manually copied or synchronized between the two folders. File replication services are not available for replicas created on a stand-alone Dfs link.</blockquote></div>
</p>

<ol>
<p><li>Select the News link in the left pane of the Distributed File System snap-in.</li></p>

<p><li>On the Action menu, click New Replica.</li></p>

<p>The Add A New Replica dialog box appears.</p>

<p><li>In the Send The User To This Shared Folder text box, type <b>\\SERVER01\PressRepl</b> . Notice that no replication policy can be configured for this replica.</li></p>

<p><li>Click OK.</li></p> 

<p>In the right pane both the \\SERVER01\Press and \\SERVER01\PressRepl shares appear.</p>

</ol>

<p><li><b>Procedure 5: Accessing the Dfs on Server01</b></li></p>


<p>In this procedure, you will use the batch file provided with this course to copy files to Dfs links created in the previous procedures. After the files are copied, you will access the files through Windows Explorer.</p>

<p>
<div class="warning"><blockquote><b>IMPORTANT</b><hr>
The batch file included with this course will work properly only if both servers are running, the shares are created exactly as specified in this exercise, and the Administrator account password is &quot;password&quot; on both computers.</blockquote></div>
</p>

<ol>
<p><img src="images/cd.JPG" border="0"></p>

<p><li>Insert the Windows 2000 Server Training Supplemental CD-ROM into the CD-ROM drive in Server01.</li></p>

<p><li>Open the CD-ROM drive from My Computer.</li></p>

<p><li>Open the \chapt05\ex1 folder</li></p>

<p><li>Click on the ex1copy.bat file, and from the File menu click Open.</li></p>

<p>A command window will open as files are copied to the Dfs links, and then the command window will close.</p>

<p>Complete all of the remaining steps in this procedure from Server02.</p>

<p><li>To access the stand-alone Dfs root on Server01 from Server02, open My Network Places and then open Computers Near Me.</li></p>

<p>The Computers Near Me windows appears showing all computers in the workgroup.</p>

<p><li>Click on Server01, and from the File menu click Open.</li></p>

<p>All shares and the Dfs root (Public) appear along with other objects on Server01. Notice that the Public folder appears like any share on Server01.</p>

<p><li>Click on the Public folder, and from the File menu click Open.</li></p>

<p>The four Dfs links created in a previous procedure appear.</p>

<p><li>Open each folder and verify that the following files are present:</li></p>

<p><table cellpadding=5 width="95%"><tr>
<th>Folder</th><th>File(s)</th>
</tr><tr>
<td valign="top">ftp</td> <td valign="top">dirmap.htm, dirmap.txt</td></tr><tr>
<td valign="top">intranet</td> <td valign="top">Q240126 - Best Practices for Using Sysprep with NTFS Volumes.htm</td></tr><tr>
<td valign="top">news</td> <td valign="top">press.wri</td></tr><tr>
<td valign="top">tech</td> <td valign="top">Dfsnew.doc, RFS 1777.txt</td></tr></table></p>

<p>Note that the intranet folder will contain additional files since this folder points to a directory created during the installation of Windows 2000 Server.</p>

<p><li>Which folder represents a location on a server other than Server01?</li></p>
 

<p><li>Which folder represents a mounted drive to a previously empty folder?</li></p>

<p><li>Earlier in this exercise, you created a replica of the Press Dfs link. The name of that replica is \\SERVER01\PressRepl. This Dfs link is a shared folder by the name of PressRepl and is located in C:\Public\Press. If you examine the contents of this directory, you will notice that it is empty. However, when you view the News Dfs link, you will notice that there is a file named Press.wri. Why is the PressRepl Dfs replica empty?</li></p>
</ol>
<P><a href="chaaa.htm#870">Answer</a></P> 
<p>
<div class="tip"><blockquote><b>TIP</b><hr>
You can use the Distributed File System snap-in to check the status of the Dfs links and to open a window to the contents of the link.</blockquote></div>
</p>

<A NAME="217"><h2>Lesson Summary</h2></A>
<p>Dfs provides a convenient way for users to access shared folders that are distributed throughout a network. A single Dfs shared folder, called a Dfs root, serves as an access point to other shared folders in the network, called Dfs links. Dfs organizes shared folders on different computers in a network into a single, logical, hierarchical file system. Dfs facilitates network navigation and administration while preserving network permissions. Two types of Dfs roots can be configured on Windows 2000 Servers: stand-alone Dfs roots and domain Dfs roots. Stand-alone Dfs stores the Dfs topology on a single computer. This type of Dfs provides no fault tolerance if the computer that stores the Dfs topology or any of the shared folders that Dfs uses fail. Domain Dfs writes the Dfs topology to the Active Directory store. This type of Dfs allows Dfs links to point to multiple identical shared folders and supports file replication for fault tolerance. In addition, it supports DNS and multiple levels of Dfs links. Dfs
uses the FRS to replicate data in domain Dfs roots and domain Dfs links. When changes are made to a Dfs link that is part of a domain Dfs root, the changes are automatically replicated to other replica members.</p>

</BODY>
</HTML>




<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="basicIE4.css" TYPE="text/css">
<TITLE>DAO and VBA</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY>
<A NAME="791"><H1><B>DAO and VBA</B></H1></A>
<p>In <A HREF="ch25a.htm">Chapter 25</A>, you learned about Automation. A VBA Automation controller (such as Microsoft Excel or Microsoft Visual Basic) can load any Automation component and then use it to create objects. Once the objects are created, the component can get and set properties and can call methods. The components you created in <A HREF="ch25a.htm">Chapter 25</A> all communicated through the COM <I>IDispatch</I> interface. But VBA can use interfaces other than <I>IDispatch</I> to communicate with a component.

<p>If you look in the Windows Registry under HKEY_CLASSES_ROOT-\TypeLib, you'll find the class ID 
{00025E01-0000-0000-C000-000000000046} and the pathname for DAO350.DLL, which contains the DAO type library. If you select this item as a VBA reference (by pressing Alt-F11 in Excel and 
then choosing Object Browser from the Visual Basic View menu, for example), your VBA programs can use the DAO objects and you can browse the DAO library, as shown here.

<P><A HREF="javascript:fullSize('g32og01x.htm')"> <img src="g32og01.jpg" width=404 height=288 border=0 ALT = "Click to view at full size."> </A>

<p>Like <I>IDispatch</I> servers, the Microsoft DAO component implements objects that have properties and methods.

</BODY>
</HTML>




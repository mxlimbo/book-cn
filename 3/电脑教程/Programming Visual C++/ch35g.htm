<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="basicIE4.css" TYPE="text/css">
<TITLE>Using HTTP Cookies to Link Transactions</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY>
<A NAME="945"><H1>Using HTTP Cookies to Link Transactions</H1></A><P>Now that you've wolfed down the pizza, it's time for some dessert. 
However, the cookies that we'll be digesting in this section are not made with 
chocolate chips. <U>Cookies</U> are used to store information on our customers' hard disks. 
In the EX35A example, the server stores the customer name in a hidden field 
of the confirmation form. That works fine for linking the confirmation to the 
order, but it doesn't help you track how many pizzas Walter ordered this year. If 
you notice that Walter consistently orders pepperoni pizzas, you might want to 
send him some e-mail when you have a surplus of pepperoni.
<A NAME="946"><H2>How Cookies Work</H2></A><P>With cookies, you assign Walter a customer ID number with his first order 
and make him keep track of that number on his computer. The server assigns 
the number by sending a response header such as this one:
<P><PRE>Set-Cookie: customer_id=12345; path=/; expires=Monday, 
    02-Sep-99 00:00:00 GMT</PRE>
<P>The string <I>customer_id</I> is the arbitrary 
<U>cookie</U> <U>name</U> you have assigned, the / value for 
<I>path</I> means that the browser sends the cookie value for any 
request to your site (named CyberPizza.com), and the expiration date is necessary 
for the browser to store the cookie value.
<P>When the browser sees the <I>Set-Cookie</I> response header, it creates (or 
replaces) an entry in its cookies.txt file as follows:
<P><PRE>customer_id
12345
cyberpizza.com/
0
2096697344
0
2093550622
35
*</PRE>
<P>Thereafter, when the browser requests anything from CyberPizza.com, 
the browser sends a request header like this:
<P><PRE>Cookie: customer_id=12345</PRE>
<A NAME="947"><H2>How an ISAPI Server Extension Processes Cookies</H2></A><P>Your ISAPI server extension function makes a call like this one to store the 
cookie at the browser:
<P><PRE>AddHeader(pCtxt, &quot;Set-Cookie: session_id=12345; path=/;&quot;
     &quot; expires=Monday, &quot; 02-Sep-99 00:00:00 GMT\r\n&quot;);</PRE>
<P>To retrieve the cookie, another function uses code like this:
<P><PRE>char strCookies[200];
DWORD dwLength = 200;
pCtxt-&gt;GetServerVariable(&quot;HTTP_COOKIE&quot;, strCookies, &amp;dwLength);</PRE>
<P>The <I>strCookies</I> variable should now contain the text 
<I>customer_id=12345</I>.
<A NAME="948"><H2>Problems with Cookies</H2></A><P>There was an uproar some time ago when Internet users first discovered 
that companies were storing data on the users' PCs. New browser versions now 
ask permission before storing a cookie from a Web site. Customers could thus 
refuse to accept your cookie, they could erase their cookies.txt file, or this file 
could become full. If you decide to use cookies at your Web site, you'll just have 
to deal with those possibilities.
</BODY>
</HTML>




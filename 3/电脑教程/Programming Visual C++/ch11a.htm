<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="basicIE4.css" TYPE="text/css">
<TITLE>Chapter Eleven -- Bitmaps</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY>

<font size="+3">Chapter Eleven</font>
<A NAME="211"><H1>Bitmaps</H1></A>
<P>Without graphics images, Microsoft Windows-based applications would be pretty dull. Some applications depend on images for their usefulness, but any application can be spruced up with the addition of decorative clip art from a variety of sources. Windows <U>bitmaps</U> are arrays of bits mapped to display 
pixels. That might sound simple, but you have to learn a lot about bitmaps before you can use them to create professional applications for Windows.
<P>This chapter starts with the &quot;old&quot; way of programming 
bitmaps&#151;creating the device-dependent GDI bitmaps that work with a memory device context. You need to know these techniques because many programmers are still using them and you'll also need to use them on occasion.
<P>Next you'll graduate to the modern way of programming bitmaps&#151;creating device-independent bitmaps (DIBs). If you use DIBs, you'll have an easier time with colors and with the printer. In some cases you'll get better performance. The Win32 function <I>CreateDIBSection</I> gives you the benefits of DIBs 
combined with all the features of GDI bitmaps.
<P>Finally, you'll learn how to use the MFC <I>CBitmapButton</I> class to put bitmaps on pushbuttons. (Using <I>CBitmapButton</I> to put bitmaps on pushbuttons has nothing to do with DIBs, but it's a useful technique that would be difficult to master without an example.)
</BODY>
</HTML>




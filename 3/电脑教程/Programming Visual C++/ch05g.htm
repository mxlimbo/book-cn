<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="basicIE4.css" TYPE="text/css">
<TITLE>The EX05B Example</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY>
<A NAME="114"><H1>The EX05B Example</H1></A><P>This program is similar to EX05A except that it shows multiple fonts. The mapping mode is <I>MM_ANISOTROPIC</I>, with the scale dependent on the window size. The characters change size along with the window. This program effectively shows off some TrueType fonts and contrasts them with the old-style fonts. Here are the steps for building the application:<P>
<OL>
<B><LI>Run AppWizard to generate the EX05B project.</B> The options and the default class names are shown here.
<P>

<P><img src="G05OG04x.gif" width=413 height=418 border=0> <P>

<B><LI>Use ClassWizard to override the <I>OnPrepareDC</I> function in the 
<I>CEx05bView</I> class.</B> Edit the code in ex05bView.cpp as shown below.<P>
<PRE>void CEx05bView::OnPrepareDC(CDC* pDC, CPrintInfo* pInfo)
{
    <B>CRect clientRect;

    GetClientRect(clientRect);
    pDC-&gt;SetMapMode(MM_ANISOTROPIC); // +y = down
    pDC-&gt;SetWindowExt(400, 450);
    pDC-&gt;SetViewportExt(clientRect.right, clientRect.bottom);
    pDC-&gt;SetViewportOrg(0, 0);</B>
}
</PRE><P>
<B><LI>Add a private<I> TraceMetrics</I> helper function to the view class.</B> Add the following prototype in ex05bView.h:<P>
<PRE><B>private:
    void TraceMetrics(CDC* pDC);</B>
</PRE>
<P>Then add the function itself in ex05bView.cpp:<P>
<PRE><B>void CEx05bView::TraceMetrics(CDC* pDC)
{
    TEXTMETRIC tm;
    char       szFaceName[100];

    pDC-&gt;GetTextMetrics(&amp;tm);
    pDC-&gt;GetTextFace(99, szFaceName);
    TRACE(&quot;font = %s, tmHeight = %d, tmInternalLeading = %d,&quot;
          &quot; tmExternalLeading = %d\n&quot;, szFaceName, tm.tmHeight,
          tm.tmInternalLeading, tm.tmExternalLeading);
}
</B></PRE><P>
<B><LI>Edit the <I>OnDraw</I> function in ex05bView.cpp.</B> AppWizard always generates a skeleton <I>OnDraw</I> function for your view class. Find the 
function, and edit the code as follows:<P>
<PRE>void CEx05bView::OnDraw(CDC* pDC)
{
    <B>CFont fontTest1, fontTest2, fontTest3, fontTest4;

    fontTest1.CreateFont(50, 0, 0, 0, 400, FALSE, FALSE, 0,
                         ANSI_CHARSET, OUT_DEFAULT_PRECIS,
                         CLIP_DEFAULT_PRECIS, DEFAULT_QUALITY,
                         DEFAULT_PITCH | FF_SWISS, &quot;Arial&quot;);
    CFont* pOldFont = pDC-&gt;SelectObject(&amp;fontTest1);
    TraceMetrics(pDC);
    pDC-&gt;TextOut(0, 0, &quot;This is Arial, default width&quot;);
    
    fontTest2.CreateFont(50, 0, 0, 0, 400, FALSE, FALSE, 0,
                         ANSI_CHARSET, OUT_DEFAULT_PRECIS,
                         CLIP_DEFAULT_PRECIS, DEFAULT_QUALITY,
                         DEFAULT_PITCH | FF_MODERN, &quot;Courier&quot;);
                         // not TrueType
    pDC-&gt;SelectObject(&amp;fontTest2);
    TraceMetrics(pDC);
    pDC-&gt;TextOut(0, 100, &quot;This is Courier, default width&quot;);
    
    fontTest3.CreateFont(50, 10, 0, 0, 400, FALSE, FALSE, 0,
                         ANSI_CHARSET, OUT_DEFAULT_PRECIS,
                         CLIP_DEFAULT_PRECIS, DEFAULT_QUALITY,
                         DEFAULT_PITCH | FF_ROMAN, NULL);
    pDC-&gt;SelectObject(&amp;fontTest3);
    TraceMetrics(pDC);
    pDC-&gt;TextOut(0, 200, &quot;This is generic Roman, variable width&quot;);

    fontTest4.CreateFont(50, 0, 0, 0, 400, FALSE, FALSE, 0,
                         ANSI_CHARSET, OUT_DEFAULT_PRECIS,
                         CLIP_DEFAULT_PRECIS, DEFAULT_QUALITY,
                         DEFAULT_PITCH | FF_MODERN, &quot;LinePrinter&quot;);
    pDC-&gt;SelectObject(&amp;fontTest4);
    TraceMetrics(pDC);
    pDC-&gt;TextOut(0, 300, &quot;This is LinePrinter, default width&quot;);
    pDC-&gt;SelectObject(pOldFont);</B>
}
</PRE><P>
<B><LI>Build and run the EX05B program.</B> Run the program from the debugger to see the TRACE output. The program's window is shown here.<P>

<P><A HREF="javascript:fullSize('G05OG05x.htm')"> <img src="G05OG05.JPG" width=404 height=258 border=0 ALT = "Click to view at full size."> </A><P>

<P>Resize the window to make it smaller, and watch the font sizes change. Compare this window with the previous one.<P>

<P><img src="G05OG06x.gif" width=408 height=262 border=0> <P>
<P>If you continue to downsize the window, notice how the Courier font stops shrinking after a certain size and how the Roman font width changes.<P>
</OL>
<A NAME="115"><H2>The EX05B Program Elements</H2></A><P>Following is a discussion of the important elements in the EX05B example.
<A NAME="116"><H3>The <I>OnDraw</I> Member Function</H3></A><P>The <I>OnDraw</I> function displays character strings in four fonts, as follows:
<UL>
<P><B><LI><I>fontTest1</I></B>&#151;The TrueType font Arial with default width selection.<P>
<B><LI><I>fontTest2</I></B>&#151;The old-style font Courier with default width 
selection. Notice how jagged the font appears in larger sizes.<P>
<B><LI><I>fontTest3</I></B>&#151;The generic Roman font for which Windows supplies the TrueType font Times New Roman with programmed width selection. The width is tied to the horizontal window scale, so the font stretches to fit the window.<P>
<B><LI><I>fontTest4</I></B>&#151;The LinePrinter font is specified, but because this is not a Windows font for the display, the font engine falls back on the <I>FF_MODERN</I> specification and chooses the TrueType Courier New font.<P>
</UL>

<A NAME="117"><H3>The <I>TraceMetrics Helper</I> Function</H3></A><P>The <I>TraceMetrics</I> helper function calls <I>CDC::GetTextMetrics</I> and 
<I>CDC::GetTextFace</I> to get the current font's parameters, which it prints in the Debug window.
</BODY>
</HTML>




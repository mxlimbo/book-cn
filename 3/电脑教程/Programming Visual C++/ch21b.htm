<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="basicIE4.css" TYPE="text/css">
<TITLE>The Windows WinHelp Program</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY>
<A NAME="442"><H1><B>The Windows WinHelp Program</B></H1></A>
<P>If you've used commercial Windows-based applications, you've probably marveled at their sophisticated help screens: graphics, hyperlinks, and popups abound. At some software firms, including Microsoft, help authoring has been elevated to a profession in its own right. This section won't turn you into a help expert, but you can get started by learning to prepare a simple no-frills help file.

<A NAME="443"><H2><B>Rich Text Format</B></H2></A>
<P>The original Windows SDK documentation showed you how to format help files with the ASCII file format called rich text format. We'll be using rich text format too, but we'll be working in wysiwyg mode, thereby avoiding the direct use of awkward escape sequences. You'll write with the same fonts, sizes, and styles that your user sees on the help screens. You'll definitely need a word processor that handles RTF. I've used Microsoft Word for this book, but many other word processors accommodate the RTF format.

<DIV CLASS=note>
<BLOCKQUOTE>
<IMG SRC="note.jpg" width=123 height=18 BORDER=0><P>
Several commercial Windows help tools are available, including RoboHELP from Blue Sky Software and ForeHelp from the Forefront Corporation. RoboHELP is a set of templates and macros for Microsoft Word, and ForeHelp is a stand-alone package that simulates WinHelp, giving you immediate feedback as you write the help system.</blockquote></div>

<A NAME="444"><H2><B>Writing a Simple Help File</B></H2></A>
<P>We're going to write a simple help file with a table of contents and three topics. This help file is designed to be run directly from WinHelp and started from Windows. No C++ programming is involved. Here are the steps:

<OL>
<P><LI><B>Create a \vcpp32\ex21a subdirectory.</B>

<P><LI><B>Write the main help text file.</B>  Use Microsoft Word (or another RTF-compatible word processor) to type text as shown here.


<P><A HREF="javascript:fullSize('g21og01x.htm')"> <img src="g21og01.jpg" width=404 height=275 border=0 ALT = "Click to view at full size."> </A>


Be sure to apply the double-underline and hidden text formatting 
correctly and to insert the page break at the correct place.


<DIV CLASS=note>
<BLOCKQUOTE>
<IMG SRC="note.jpg" width=123 height=18 BORDER=0><P>
To see hidden text, you must turn on your word processor's hidden text viewing mode. In Word, choose Options from the Tools menu, click on the View tab, and select All in the Nonprinting Characters section.</blockquote>
</div>


<P><LI><B>Insert footnotes for the Table Of Contents screen.</B>  The Table Of Contents screen is the first topic screen in this help system. Using the specified custom footnote marks, insert the following footnotes at the beginning of the topic title.



<table cellpadding=5 width="95%">
<tr><td valign="top"><b>Footnote Mark</b></td>
<td valign="top"><b>Text</b></td>
<td valign="top"><b>Description</b></td></tr>
<tr><td valign="top">#</td>
<td valign="top">HID_CONTENTS</td>
<td valign="top">Help context ID</td></tr>
<tr><td valign="top">$</td>
<td valign="top">SIMPLE Help Contents</td>
<td valign="top">Topic title</td></tr>
</table>


When you're finished with this step, the document should look like this.


<P><A HREF="javascript:fullSize('g21og02x.htm')"> <img src="g21og02.jpg" width=404 height=304 border=0 ALT = "Click to view at full size."> </A>


<P><LI><B>Insert footnotes for the Help Topic 1 screen.</B>  The Help Topic 1 screen is the second topic screen in the help system. Using the specified custom footnote marks, insert the footnotes shown here.


<table cellpadding=5 width="95%">
<tr><td valign="top"><b>Footnote Mark</b></td>
<td valign="top"><b>Text</b></td>
<td valign="top"><b>Description</b></td></tr>
<tr><td valign="top">#</td>
<td valign="top">HID_TOPIC1</td>
<td valign="top">Help context ID</td></tr>
<tr><td valign="top">$</td>
<td valign="top">SIMPLE Help Topic 1</td>
<td valign="top">Topic title</td></tr>
<tr><td valign="top">K</td>
<td valign="top">SIMPLE Topics</td>
<td valign="top">Keyword text</td></tr>
</table>


<P><LI><B>Clone the Help Topic 1 screen.</B>  Copy the entire Help Topic 1 section of the document&#151;including the page break&#151;to the clipboard, and then paste two copies of the text into the document. The footnotes are copied along with the text. In the first copy, change all occurrences of <I>1</I> to <I>2</I>. In the second copy, change all occurrences of <I>1</I> to <I>3</I>. Don't forget to change the footnotes. With Word, seeing which footnote goes with which topic can be a little difficult&#151;be careful. When you're finished with this step, the document text (including footnotes) should look like this.


<P><A HREF="javascript:fullSize('g21og03x.htm')"> <img src="g21og03.jpg" width=404 height=558 border=0 ALT = "Click to view at full size."> </A>


<P><LI><B>Save the document.</B>  Save the document as \vcpp32\ex21a\Simple.rtf. Specify Rich Text Format as the file type.

<P><LI><B>Write a help project file.</B>  Using Visual C++ or another text editor, create the file \vcpp32\ex21a\Simple.hpj, as follows:

<P><B><pre>
[OPTIONS]
CONTENTS=HID_CONTENTS
TITLE=SIMPLE Application Help
COMPRESS=true
WARNING=2

[FILES]
Simple.rtf
</pre></b>

<P>This file specifies the context ID of the Table Of Contents screen and the name of the RTF file that contains the help text. Be sure to save the file in text (ASCII) format.

<P><LI><B>Build the help file.</B>  From Windows, run the Microsoft Help Workshop (HCRTF) utility (located by default in Program Files\Microsoft Visual Studio\Common\Tools). Open the file \vcpp32\ex21a\Simple.hpj, and then click the Save And Compile button.

<P>This step runs the Windows Help Compiler with the project file Simple.hpj. The output is the help file Simple.hlp in the same directory.


<DIV CLASS=note>
<BLOCKQUOTE>
<IMG SRC="note.jpg" width=123 height=18 BORDER=0><P>
If you use Word 97 to create or edit RTF files, make sure you use version 4.02 (or later) of the HCRTF utility. Earlier versions of the HCRTF cannot process the rich text flags generated by Word 97.</blockquote>
</div>


<P><LI><B>Run WinHelp with the new help file.</B>  From Windows Explorer, double-click the file \vcpp32\ex21a\Simple.hlp. The Table Of Contents screen should look like this.


<P><img src="g21og04.gif" width=344 height=218 border="0">


<P>Now move the mouse cursor to Topic 1. Notice that the cursor 
changes from an arrow to a pointing hand. When you press the left mouse button, the Help Topic 1 screen should appear, as shown here.


<P><img src="g21og05.gif" width=344 height=218 border="0">


<P>The <I>HID_TOPIC1</I> text in the Table Of Contents screen links to the corresponding context ID (the # footnote) in the topic page. This link is known as a <U>jump</U>.

<P>The link to Help Topic 2 is coded as a pop-up jump. When you click on Topic 2, here's what you see.


<P><img src="g21og06.gif" width=387 height=228 border="0">


<P><LI><B>Click the WinHelp Contents pushbutton.</B>  Clicking this button should take you to the Table Of Contents screen, as shown at the beginning of step 9. WinHelp knows the ID of the Table Of Contents window because you specified it in the HPJ file.

<P><LI><B>Click the WinHelp Index pushbutton.</B>  When you click the Index button, WinHelp opens its Index dialog, which displays the help file's list of keywords. In Simple.hlp, all topics (excluding the table of contents) have the same keyword (the K footnotes): SIMPLE Topics. When you double-click on this keyword, you see all associated topic titles (the $ footnotes), as shown here.

<P><img src="g21og07x.gif" width=434 height=428 border=0>


<P>What you have here is a two-level help search hierarchy. The user can type the first few letters of the keyword and then select a topic from a list box. The more carefully you select your keywords and topic titles, the more effective your help system will be.


<A NAME="445"><H2><B>An Improved Table of Contents</B></H2></A>
<P>You've been looking at the &quot;old-style&quot; help table of contents. The latest Win32 version of WinHelp can give you a modern tree-view table of contents. All you need is a text file with a CNT extension. Add a new file, Simple.cnt, in the \vcpp32\ex21a directory, containing this text:

<P><b><pre>
:Base Simple.hlp
1 Help topics
2 Topic 1=HID_TOPIC1
2 Topic 2=HID_TOPIC2
2 Topic 3=HID_TOPIC3
</pre></b>

<P>Notice the context IDs that match the help file. The next time you 
run WinHelp with the Simple.hlp file, you'll see a new contents screen similar to the one shown here.

<P><img src="g21og08x.gif" width=434 height=428 border=0> 

<P>You can also use HCRTF to edit CNT files. The CNT file is 
independent of the HPJ file and the RTF files. If you update your RTF files, you must make corresponding changes in your CNT file.

</BODY>
</HTML>




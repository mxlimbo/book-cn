<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="basicIE4.css" TYPE="text/css">
<TITLE>The EX18A Example</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY>
<A NAME="402"><H1>The EX18A Example</H1></A><P>This example is the MDI version of the EX17A example from the 
<A HREF="ch17a.htm">previous chapter</A>. It uses the same document and view class code and the same 
resources (except the program name). The application code and main frame class code 
are different, however. All the new code is listed here, including the code that 
AppWizard generates. A list of the files and classes in the EX18A example are 
shown in the table below.
<TABLE WIDTH="95%" CELLPADDING="5">
<TR><TD VALIGN="TOP"><B>Header File</B></TD><TD VALIGN="TOP"><B>Source Code File</B></TD><TD VALIGN="TOP"><B>Class</B></TD><TD VALIGN="TOP"><B>Description</B></TD></TR>
<TR><TD VALIGN="TOP">ex18a.h</TD><TD VALIGN="TOP">ex18a.cpp</TD><TD VALIGN="TOP"><I>CEx18aApp</I></TD><TD VALIGN="TOP">Application class (from AppWizard)</TD></TR>
<TR><TD VALIGN="TOP">&nbsp;</TD><TD VALIGN="TOP">&nbsp;</TD><TD VALIGN="TOP"><I>CAboutDlg</I></TD><TD VALIGN="TOP">About dialog</TD></TR>
<TR><TD VALIGN="TOP">MainFrm.h</TD><TD VALIGN="TOP">MainFrm.cpp</TD><TD VALIGN="TOP"><I>CMainFrame</I></TD><TD VALIGN="TOP">MDI main frame</TD></TR>
<TR><TD VALIGN="TOP">ChildFrm.h</TD><TD VALIGN="TOP">ChildFrm.cpp</TD><TD VALIGN="TOP"><I>CChildFrame</I></TD><TD VALIGN="TOP">MDI child frame</TD></TR>
<TR><TD VALIGN="TOP">StuDoc.h</TD><TD VALIGN="TOP">StuDoc.cpp</TD><TD VALIGN="TOP"><I>CStudentDoc</I></TD><TD VALIGN="TOP">Student document (from EX17A)</TD></TR>
<TR><TD VALIGN="TOP">StuView.h</TD><TD VALIGN="TOP">StuView.cpp</TD><TD VALIGN="TOP"><I>CStudentView</I></TD><TD VALIGN="TOP">Student form view (from EX16B)</TD></TR>
<TR><TD VALIGN="TOP">Student.h</TD><TD VALIGN="TOP">Student.cpp</TD><TD VALIGN="TOP"><I>CStudent</I></TD><TD VALIGN="TOP">Student record (from EX17A)</TD></TR>
<TR><TD VALIGN="TOP">StdAfx.h</TD><TD VALIGN="TOP">StdAfx.h</TD><TD VALIGN="TOP">&nbsp;</TD><TD VALIGN="TOP">Precompiled headers (with afxtempl.h included)</TD></TR>
</TABLE>

<A NAME="403"><H2><I>CEx18aApp</I></H2></A><P>In the <I>CEx18aApp </I>source code listing, the 
<I>OpenDocumentFile</I> member function is overridden only for the purpose of inserting a 
<I>TRACE</I> statement. Also, a few lines have been added before the 
<I>ProcessShellCommand</I> call in 
<I>InitInstance</I>. They check the argument to 
<I>ProcessShellCommand</I> and change it if necessary to prevent the creation of any empty document window on 
startup. Figure 18-5 shows the source code.


<TABLE cellpadding=5 width="95%"><TR><TD>
<P><B>EX18A.H</B>
<P><PRE>// ex18a.h : main header file for the EX18A application
//

#if !defined(AFX_EX18A_H__7B5FE267_85E9_11D0_8FE3_00C04FC2A0C2__INCLUDED_)
#define AFX_EX18A_H__7B5FE267_85E9_11D0_8FE3_00C04FC2A0C2__INCLUDED_

#if _MSC_VER &gt; 1000
#pragma once
#endif // _MSC_VER &gt; 1000

#ifndef __AFXWIN_H__
    #error include `stdafx.h' before including this file for PCH
#endif
#include &quot;resource.h&quot;       // main symbols

//////////////////////////////////////////////////////////////////////
// CEx18aApp:
// See ex18a.cpp for the implementation of this class
//

class CEx18aApp : public CWinApp
{
public:
    CEx18aApp();

// Overrides
    // ClassWizard generated virtual function overrides
    //{{AFX_VIRTUAL(CEx18aApp)
    public:
    virtual BOOL InitInstance();
    virtual CDocument* OpenDocumentFile(LPCTSTR lpszFileName);
    //}}AFX_VIRTUAL

// Implementation

    //{{AFX_MSG(CEx18aApp)
    afx_msg void OnAppAbout();
        // NOTE - the ClassWizard will add and remove member functions here.        
        //    DO NOT EDIT what you see in these blocks of generated code !
    //}}AFX_MSG

    DECLARE_MESSAGE_MAP()
};

//////////////////////////////////////////////////////////////////////

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations
//  immediately before the previous line.

#endif // !defined(AFX_EX18A_H__7B5FE267_85E9_11D0_8FE3_00C04FC2A0C2__INCLUDED_)</PRE>

<P><B>EX18A.CPP</B>
<P><PRE>// ex18a.cpp : Defines the class behaviors for the application.
//

#include &quot;stdafx.h&quot;
#include &quot;ex18a.h&quot;

#include &quot;MainFrm.h&quot;
#include &quot;ChildFrm.h&quot;
#include &quot;StuDoc.h&quot;
#include &quot;StuView.h&quot;

#ifdef _DEBUG
#define new DEBUG_NEW
#undef THIS_FILE
static char THIS_FILE[] = __FILE__;
#endif

//////////////////////////////////////////////////////////////////////
// CEx18aApp

BEGIN_MESSAGE_MAP(CEx18aApp, CWinApp)
    //{{AFX_MSG_MAP(CEx18aApp)
    ON_COMMAND(ID_APP_ABOUT, OnAppAbout)
        // NOTE - the ClassWizard will add and remove mapping macros here.
        //    DO NOT EDIT what you see in these blocks of generated code!
    //}}AFX_MSG_MAP
    // Standard file based document commands
    ON_COMMAND(ID_FILE_NEW, CWinApp::OnFileNew)
    ON_COMMAND(ID_FILE_OPEN, CWinApp::OnFileOpen)
END_MESSAGE_MAP()

//////////////////////////////////////////////////////////////////////
// CEx18aApp construction

CEx18aApp::CEx18aApp()
{
    // TODO: add construction code here,
    // Place all significant initialization in InitInstance
}
    
//////////////////////////////////////////////////////////////////////
// The one and only CEx18aApp object

CEx18aApp theApp;

//////////////////////////////////////////////////////////////////////
// CEx18aApp initialization

BOOL CEx18aApp::InitInstance()
{
    AfxEnableControlContainer();

    // Standard initialization
    // If you are not using these features and wish to reduce the size
    //  of your final executable, you should remove from the following
    //  the specific initialization routines you do not need.

#ifdef _AFXDLL
    Enable3dControls();    // Call this when using MFC in a shared DLL
#else
    Enable3dControlsStatic();       // Call this when linking to MFC
                                    //  statically
#endif

    // Change the registry key under which our settings are stored.
    // TODO: You should modify this string to be something appropriate
    // such as the name of your company or organization.
    SetRegistryKey(_T(&quot;Local AppWizard-Generated Applications&quot;));
    LoadStdProfileSettings();  // Load standard INI file options
                               //  (including MRU)
    // Register the application's document templates.  Document
    //  templates serve as the connection between documents, frame
    //  windows and views.

    CMultiDocTemplate* pDocTemplate;
    pDocTemplate = new CMultiDocTemplate(
        IDR_EX18ATYPE,
        RUNTIME_CLASS(CStudentDoc),
        RUNTIME_CLASS(CChildFrame), // custom MDI child frame
        RUNTIME_CLASS(CStudentView));
    AddDocTemplate(pDocTemplate);

    // create main MDI Frame window
    CMainFrame* pMainFrame = new CMainFrame;
    if (!pMainFrame-&gt;LoadFrame(IDR_MAINFRAME))
        return FALSE;
    m_pMainWnd = pMainFrame;

    // Enable drag/drop open
    m_pMainWnd-&gt;DragAcceptFiles();

    // Enable DDE Execute open
    EnableShellOpen();
    RegisterShellFileTypes(TRUE);

    // Parse command line for standard shell commands, DDE, file open
    CCommandLineInfo cmdInfo;
    ParseCommandLine(cmdInfo);

<B>    // no empty document window on startup
    if (cmdInfo.m_nShellCommand == CCommandLineInfo::FileNew) {
        cmdInfo.m_nShellCommand = CCommandLineInfo::FileNothing;
    }</B>

    // Dispatch commands specified on the command line
    if (!ProcessShellCommand(cmdInfo))
        return FALSE;

    // The main window has been initialized, so show and update it.
    pMainFrame-&gt;ShowWindow(m_nCmdShow);
    pMainFrame-&gt;UpdateWindow();

    return TRUE;
}
//////////////////////////////////////////////////////////////////////
// CAboutDlg dialog used for App About

class CAboutDlg : public CDialog
{
public:
    CAboutDlg();

// Dialog Data
    //{{AFX_DATA(CAboutDlg)
    enum { IDD = IDD_ABOUTBOX };
    //}}AFX_DATA
    // ClassWizard generated virtual function overrides
    //{{AFX_VIRTUAL(CAboutDlg)
    protected:
    virtual void DoDataExchange(CDataExchange* pDX); // DDX/DDV
                                                     // support
    //}}AFX_VIRTUAL

// Implementation
protected:
    //{{AFX_MSG(CAboutDlg)
        // No message handlers
    //}}AFX_MSG
    DECLARE_MESSAGE_MAP()
};

CAboutDlg::CAboutDlg() : CDialog(CAboutDlg::IDD)
{
    //{{AFX_DATA_INIT(CAboutDlg)
    //}}AFX_DATA_INIT
}

void CAboutDlg::DoDataExchange(CDataExchange* pDX)
{
    CDialog::DoDataExchange(pDX);
    //{{AFX_DATA_MAP(CAboutDlg)
    //}}AFX_DATA_MAP
}

BEGIN_MESSAGE_MAP(CAboutDlg, CDialog)
    //{{AFX_MSG_MAP(CAboutDlg)
        // No message handlers
    //}}AFX_MSG_MAP
END_MESSAGE_MAP()

// App command to run the dialog
void CEx18aApp::OnAppAbout()
{
    CAboutDlg aboutDlg;
    aboutDlg.DoModal();
}
//////////////////////////////////////////////////////////////////////
// CEx18aApp message handlers

CDocument* CEx18aApp::OpenDocumentFile(LPCTSTR lpszFileName) 
{
<B>    TRACE(&quot;CEx18aApp::OpenDocumentFile\n&quot;);</B>
    return CWinApp::OpenDocumentFile(lpszFileName);
}</PRE>

</TD></TR></TABLE>

<P><B>Figure 18-5.</B> <I>The </I>CEx18aApp<I> source code listing.</I>


<A NAME="404"><H2><I>CMainFrame</I></H2></A><P>This main frame class, listed in Figure 18-6, is almost identical to the SDI 
version, except that it's derived from 
<I>CMDIFrameWnd</I> instead of <I>CFrameWnd</I>.

<TABLE cellpadding=5 width="95%"><TR><TD>
<P><B>MAINFRM.H</B>
<P><PRE>// MainFrm.h : interface of the CMainFrame class
//
//////////////////////////////////////////////////////////////////////

#if !defined(AFX_MAINFRM_H__7B5FE26B_85E9_11D0_8FE3_00C04FC2A0C2__INCLUDED_)
#define AFX_MAINFRM_H__7B5FE26B_85E9_11D0_8FE3_00C04FC2A0C2__INCLUDED_

#if _MSC_VER &gt; 1000
#pragma once
#endif // _MSC_VER &gt; 1000

class CMainFrame : public CMDIFrameWnd
{
    DECLARE_DYNAMIC(CMainFrame)
public:
    CMainFrame();

// Attributes
public:
// Operations
public:

// Overrides
    // ClassWizard generated virtual function overrides
    //{{AFX_VIRTUAL(CMainFrame)
    virtual BOOL PreCreateWindow(CREATESTRUCT&amp; cs);
    //}}AFX_VIRTUAL

// Implementation
public:
    virtual ~CMainFrame();
#ifdef _DEBUG
    virtual void AssertValid() const;
    virtual void Dump(CDumpContext&amp; dc) const;
#endif

protected:  // control bar embedded members
    CStatusBar  m_wndStatusBar;
    CToolBar    m_wndToolBar;

// Generated message map functions
protected:
    //{{AFX_MSG(CMainFrame)
    afx_msg int OnCreate(LPCREATESTRUCT lpCreateStruct);
        // NOTE - the ClassWizard will add and remove member functions here.
        //    DO NOT EDIT what you see in these blocks of generated code!
    //}}AFX_MSG
    DECLARE_MESSAGE_MAP()
};

//////////////////////////////////////////////////////////////////////

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations
//  immediately before the previous line.

#endif // !defined(AFX_MAINFRM_H__7B5FE26B_85E9_11D0_8FE3_00C04FC2A0C2__INCLUDED_)</PRE>

<P><B>MAINFRM.CPP</B>
<P><PRE>// MainFrm.cpp : implementation of the CMainFrame class
//

#include &quot;stdafx.h&quot;
#include &quot;ex18a.h&quot;

#include &quot;MainFrm.h&quot;

#ifdef _DEBUG
#define new DEBUG_NEW
#undef THIS_FILE
static char THIS_FILE[] = __FILE__;
#endif

//////////////////////////////////////////////////////////////////////
// CMainFrame

IMPLEMENT_DYNAMIC(CMainFrame, CMDIFrameWnd)
BEGIN_MESSAGE_MAP(CMainFrame, CMDIFrameWnd)
    //{{AFX_MSG_MAP(CMainFrame)
        // NOTE - the ClassWizard will add and remove mapping macros here.
        //    DO NOT EDIT what you see in these blocks of generated code !
    ON_WM_CREATE()
    //}}AFX_MSG_MAP
END_MESSAGE_MAP()

static UINT indicators[] =
{
    ID_SEPARATOR,           // status line indicator
    ID_INDICATOR_CAPS,
    ID_INDICATOR_NUM,
    ID_INDICATOR_SCRL,
};

//////////////////////////////////////////////////////////////////////
// CMainFrame construction/destruction

CMainFrame::CMainFrame()
{
    // TODO: add member initialization code here
}
CMainFrame::~CMainFrame()
{
}

int CMainFrame::OnCreate(LPCREATESTRUCT lpCreateStruct)
{
    if (CMDIFrameWnd::OnCreate(lpCreateStruct) == -1)
        return -1;

    if (!m_wndToolBar.CreateEx(this, TBSTYLE_FLAT, WS_CHILD 
        | WS_VISIBLE | CBRS_TOP | CBRS_GRIPPER | CBRS_TOOLTIPS 
        | CBRS_FLYBY | CBRS_SIZE_DYNAMIC) ||
        !m_wndToolBar.LoadToolBar(IDR_MAINFRAME))
    {
        TRACE0(&quot;Failed to create toolbar\n&quot;);
        return -1;      // fail to create
    }
    if (!m_wndStatusBar.Create(this) ||
        !m_wndStatusBar.SetIndicators(indicators,
          sizeof(indicators)/sizeof(UINT)))
    {
        TRACE0(&quot;Failed to create status bar\n&quot;);
        return -1;      // fail to create
    }

    // TODO: Delete these three lines if you don't want the toolbar to
    //  be dockable
    m_wndToolBar.EnableDocking(CBRS_ALIGN_ANY);
    EnableDocking(CBRS_ALIGN_ANY);
    DockControlBar(&amp;m_wndToolBar);

    return 0;
}
BOOL CMainFrame::PreCreateWindow(CREATESTRUCT&amp; cs)
{
    if ( !CMDIFrameWnd::PreCreateWindow(cs) )
        return FALSE;
    // TODO: Modify the Window class or styles here by modifying
    //  the CREATESTRUCT cs

    return TRUE;
}
//////////////////////////////////////////////////////////////////////
// CMainFrame diagnostics

#ifdef _DEBUG
void CMainFrame::AssertValid() const
{
    CMDIFrameWnd::AssertValid();
}

void CMainFrame::Dump(CDumpContext&amp; dc) const
{
    CMDIFrameWnd::Dump(dc);
}

#endif //_DEBUG

//////////////////////////////////////////////////////////////////////
// CMainFrame message handlers</PRE>

</TD></TR></TABLE>
<P><B>Figure 18-6.</B> <I>The </I>CMainFrame<I> class listing.</I>


<A NAME="405"><H2><I>CChildFrame</I></H2></A><P>This child frame class, listed in Figure 18-7, lets you conveniently control 
the child frame window's characteristics by adding code in the 
<I>PreCreateWindow</I> function. You can also map messages and override other virtual functions.

<TABLE cellpadding=5 width="95%"><TR><TD>
<P><B>CHILDFRM.H</B>
<P><PRE>// ChildFrm.h : interface of the CChildFrame class
//
//////////////////////////////////////////////////////////////////////

#if !defined(AFX_CHILDFRM_H__7B5FE26D_85E9_11D0_8FE3_00C04FC2A0C2__INCLUDED_)
#define AFX_CHILDFRM_H__7B5FE26D_85E9_11D0_8FE3_00C04FC2A0C2__INCLUDED_

#if _MSC_VER &gt; 1000
#pragma once
#endif // _MSC_VER &gt; 1000

class CChildFrame : public CMDIChildWnd
{
    DECLARE_DYNCREATE(CChildFrame)
public:
    CChildFrame();

// Attributes
public:

// Operations
public:

// Overrides
    // ClassWizard generated virtual function overrides
    //{{AFX_VIRTUAL(CChildFrame)
    public:
    virtual BOOL PreCreateWindow(CREATESTRUCT&amp; cs);
    virtual void ActivateFrame(int nCmdShow = -1);
    //}}AFX_VIRTUAL

// Implementation
public:
    virtual ~CChildFrame();
#ifdef _DEBUG
    virtual void AssertValid() const;
    virtual void Dump(CDumpContext&amp; dc) const;
#endif

// Generated message map functions
protected:
    //{{AFX_MSG(CChildFrame)
        // NOTE - the ClassWizard will add and remove member functions here.
        //    DO NOT EDIT what you see in these blocks of generated code!
    //}}AFX_MSG
    DECLARE_MESSAGE_MAP()
};

//////////////////////////////////////////////////////////////////////

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations
//  immediately before the previous line.

#endif // !defined(AFX_CHILDFRM_H__7B5FE26D_85E9_11D0_8FE3_00C04FC2A0C2__INCLUDED_)</PRE>
<P><B>CHILDFRM.CPP</B>
<P><PRE>// ChildFrm.cpp : implementation of the CChildFrame class
//

#include &quot;stdafx.h&quot;
#include &quot;ex18a.h&quot;

#include &quot;ChildFrm.h&quot;

#ifdef _DEBUG
#define new DEBUG_NEW
#undef THIS_FILE
static char THIS_FILE[] = __FILE__;
#endif

//////////////////////////////////////////////////////////////////////
// CChildFrame

IMPLEMENT_DYNCREATE(CChildFrame, CMDIChildWnd)

BEGIN_MESSAGE_MAP(CChildFrame, CMDIChildWnd)
    //{{AFX_MSG_MAP(CChildFrame)
        // NOTE - the ClassWizard will add and remove mapping macros here.
        //    DO NOT EDIT what you see in these blocks of generated code !
    //}}AFX_MSG_MAP
END_MESSAGE_MAP()

//////////////////////////////////////////////////////////////////////
// CChildFrame construction/destruction

CChildFrame::CChildFrame()
{
    // TODO: add member initialization code here

}

CChildFrame::~CChildFrame()
{
}

BOOL CChildFrame::PreCreateWindow(CREATESTRUCT&amp; cs)
{
    // TODO: Modify the Window class or styles here by modifying
    //  the CREATESTRUCT cs

    if ( !CMDIChildWnd::PreCreateWindow(cs) )
        return FALSE;

    return TRUE;
}

//////////////////////////////////////////////////////////////////////
// CChildFrame diagnostics

#ifdef _DEBUG
void CChildFrame::AssertValid() const
{
    CMDIChildWnd::AssertValid();
}

void CChildFrame::Dump(CDumpContext&amp; dc) const
{
    CMDIChildWnd::Dump(dc);
}

#endif //_DEBUG

//////////////////////////////////////////////////////////////////////
// CChildFrame message handlers

void CChildFrame::ActivateFrame(int nCmdShow)
{<B>
    TRACE(&quot;Entering CChildFrame::ActivateFrame\n&quot;);</B>
    CMDIChildWnd::ActivateFrame(nCmdShow);
}</PRE>

</TD></TR></TABLE>

<P><B>Figure 18-7.</B> <I>The </I>CChildFrame <I>class listing.</I>


<A NAME="406"><H2>Testing the EX18A Application</H2></A><P>Do the build, run the program from Visual C++, and then make several documents. Try saving the documents on disk, closing them, and reloading 
them. Also, choose New Window from the Window menu. Notice that you now 
have two views (and child frames) attached to the same document. Now exit the 
program and start Windows Explorer. The files you created should show up 
with document icons. Double-click on a document icon and see whether the 
EX18A program starts up. Now, with both Windows Explorer and EX18A on the 
desktop, drag a document from Windows Explorer to EX18A. Was the file opened?
</BODY>
</HTML>




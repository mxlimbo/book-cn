<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="basicIE4.css" TYPE="text/css">
<TITLE>Going Further with ActiveX Document Servers</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY>
<A NAME="983"><H1>Going Further with ActiveX Document Servers</H1></A><P>EX36A used a worker thread to read a text file from an Internet server. It 
used the MFC WinInet classes, and it assumed that a standard 
HTTP server was available. An ActiveX document server could just as easily make Winsock 
calls using the <I>CBlockingSocket</I> class from <A HREF="ch34a.htm">Chapter 34</A>. That would imply that 
you were going beyond the HTTP and FTP protocols. You could, for example, 
write a custom internet server program that listened on port 81. (That server 
could run concurrently with IIS if necessary.) Your ActiveX document server 
could use a custom TCP/IP protocol to get binary data from an open socket. 
The server could use this data to update its window in real-time, or it could send 
the data to another device, such as a sound board.
</BODY>
</HTML>




<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="basicIE4.css" TYPE="text/css">
<TITLE>The VirtualAlloc Function -- Committed and Reserved Memory</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY>
<A NAME="204"><H1>The <I>VirtualAlloc</I> Function&#151;Committed and Reserved Memory</H1></A>
<P>If your program needs dynamic memory, sooner or later the Win32 <I>VirtualAlloc</I> function will be called. Chances are that your program will never call <I>VirtualAlloc</I>; instead you'll rely on the Windows heap or the CRT heap functions to call it directly. Knowing how <I>VirtualAlloc</I> works, however, will help you better understand the functions that call it.
<P>First you must know the meanings of <U>reserved</U> and <U>committed</U> memory. When memory is reserved, a contiguous virtual address range is set aside. If, for example, you know that your program is going to use a single 5-MB memory block (known as a <U>region</U>) but you don't need to use it all right away, you call <I>VirtualAlloc</I> with a <I>MEM_RESERVE</I> allocation type parameter and a 5-MB size parameter. Windows rounds the start address of the region to a 64-KB boundary and prevents your process from reserving other memory in the same range. You can specify a start address for your region, but more often you'll let Windows assign it for you. Nothing else happens. No RAM is allocated, and no swap file space is set aside.
<P>When you get more serious about needing memory, you call <I>VirtualAlloc</I> again to commit the reserved memory, using a <I>MEM_COMMIT </I>allocation type parameter. Now the start and end addresses of the region are rounded to 4-KB boundaries, and corresponding swap file pages are set aside together with the required page table. The block is designated either read-only or read/write. Still no RAM is allocated, however; RAM allocation occurs only when you try to access the memory. If the memory was not previously reserved, no problem. If the memory was previously committed, still no problem. The rule is that memory must be committed before you can use it.
<P>You call the <I>VirtualFree</I> function to &quot;decommit&quot; committed 
memory, thereby returning the designated pages back to reserved status. <I>VirtualFree</I> can also free a reserved region of memory, but you have to specify the base address you got from a previous <I>VirtualAlloc</I> reservation call.
</BODY>
</HTML>




<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="basicIE4.css" TYPE="text/css">
<TITLE>The Small-Block Heap, the C++ new and delete Operators, and _heapmin</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY>
<A NAME="206"><H1>The Small-Block Heap, the C++ <I>new</I> and <I>delete</I> Operators, and <I>_heapmin</I></H1></A>
<P>You can use the Windows <I>HeapAlloc</I> function in your programs, but you're more likely to use the <I>malloc</I> and <I>free</I> functions supplied by the CRT. If you write C++ code, you won't call these functions directly; instead, you'll use the <I>new</I> and <I>delete</I> operators, which map directly to <I>malloc</I> and <I>free</I>. If you use <I>new</I> to allocate a block larger than a certain threshold (480 bytes is the default), the CRT passes the call straight through to <I>HeapAlloc</I> to allocate memory from a Windows heap created for the CRT. For blocks smaller than the threshold, the CRT manages a <U>small-block</U> <U>heap</U>, calling <I>VirtualAlloc</I> and <I>VirtualFree</I> as necessary. Here is the algorithm:
<P>
<OL><LI>Memory is reserved in 4-MB regions.<P>
<LI>Memory is committed in 64-KB blocks (16 pages).<P>
<LI>Memory is decommitted 64 KB at a time. As 128 KB becomes free, the last 64 KB is decommitted.<P>
<LI>A 4-MB region is released when every page in that region has been decommitted.<P>
</OL>
<P>As you can see, this small-block heap takes care of its own cleanup. The CRT's Windows heap doesn't automatically decommit and unreserve pages, however. To clean up the larger blocks, you must call the CRT <I>_heapmin</I> function, which calls the windows <I>HeapCompact</I> function. (Unfortunately, the Windows 95 version of <I>HeapCompact</I> doesn't do anything&#151;all the more 
reason to use Windows NT.) Once pages are decommitted, other programs can reuse the corresponding swap file space.<P>
<DIV CLASS=note>
<BLOCKQUOTE>
<IMG SRC="note.jpg" width=123 height=18 BORDER="0"><P>
In previous versions of the CRT, the free list pointers were stored inside the heap pages. This strategy required the <I>malloc</I> function to &quot;touch&quot; (read from the swap file) many pages to find free space, and this degraded performance. The current system, which stores the free list in a separate area of memory, is faster and minimizes the need for third-party heap management software.
</BLOCKQUOTE></DIV>
<P>If you want to change or access the block size threshold, use the CRT functions<I> _set_sbh_threshold</I> and <I>_get_sbh_threshold</I>.
<P>A special debug version of <I>malloc</I>, <I>_malloc_dbg</I>, adds debugging information inside allocated memory blocks. The <I>new</I> operator calls <I>_malloc_dbg</I> when you build an MFC project with <I>_DEBUG</I> defined. Your program can then detect memory blocks that you forgot to free or that you inadvertently overwrote.
</BODY>
</HTML>




<html>
<head>
<title>看雪学苑</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<style type="text/css">
<!--
.p8 {  font-size: 8pt}
.p9 {  font-size: 9pt}
a:hover {  color: #00FF00}
a {  text-decoration: none}
.p12 {  font-size: 12pt; font-weight: bold; color: #FF3333}
-->
</style>
</head>

<body bgcolor="#FFFFFF">
<span class="p9"> 标 题:who can crack this soft ? (99字)<br>
发信人:IceBird<br>
时 间:2000-5-28 12:38:18<br>
阅读次数:78<br>
详细信息: </span>
<p><span class="p9">if you can crack this soft,would you link to tell me? :) <br>
  http://www.newhua.com.cn/down/njcv482.zip </span></p>
<p><span class="p9"><font color=blue>标 题:</font>已找到NMI's Java Code Viewer 4.8.2的注册码，内详 
  (3千字)<br>
  <font color=blue>发信人:</font>郭大志<br>
  <font color=blue>时 间:</font>2000-6-7 19:51:37 <br>
  <font color=blue>详细信息:</font><br>
  </span></p>
<blockquote><span class="p9"> 首先加载snjrt11.dll的符号表，这个DLL从名字上看似为Sun的Java Run Time支撑库。 
  <br>
  用bpx MultiByteToWideChar设断点，因为Java程序和VB程序一样，也是用WideChar形式的字符串。 <br>
  之后再用BPR断点监视WideChar形式的注册码，发现它把你输入的注册码转换成一个整数， <br>
  再用BPR或BPM断点监视这个整数，就到了生成注册码的程序段。 <br>
  <br>
  一个可用的注册码为： <br>
  Name:&nbsp; &nbsp; Me <br>
  Country:&nbsp; China <br>
  Code:&nbsp; &nbsp; &nbsp; 1605226644 <br>
  <br>
  下面的程序段生成并比较注册码。可见，写一个注册机也并非不可能。 <br>
  <br>
  0167:0040FD2C&nbsp; SUB&nbsp; &nbsp; &nbsp; ESP,18 <br>
  0167:0040FD2F&nbsp; PUSH&nbsp; &nbsp; &nbsp; EBX <br>
  0167:0040FD30&nbsp; PUSH&nbsp; &nbsp; &nbsp; EBP <br>
  0167:0040FD31&nbsp; PUSH&nbsp; &nbsp; &nbsp; ESI <br>
  0167:0040FD32&nbsp; PUSH&nbsp; &nbsp; &nbsp; EDI <br>
  0167:0040FD33&nbsp; MOV&nbsp; &nbsp; &nbsp; ECX,[ESP+3C] <br>
  0167:0040FD37&nbsp; MOV&nbsp; &nbsp; &nbsp; EBP,EAX <br>
  0167:0040FD39&nbsp; MOV&nbsp; &nbsp; &nbsp; [ESP+10],EAX <br>
  0167:0040FD3D&nbsp; MOV&nbsp; &nbsp; &nbsp; ESI,[ESP+34] <br>
  0167:0040FD41&nbsp; MOV&nbsp; &nbsp; &nbsp; EDI,[ESP+38] <br>
  0167:0040FD45&nbsp; MOV&nbsp; &nbsp; &nbsp; EBX,[ECX] <br>
  0167:0040FD47&nbsp; CMP&nbsp; &nbsp; &nbsp; DWORD PTR [ESP+2C],00 <br>
  0167:0040FD4C&nbsp; JNZ&nbsp; &nbsp; &nbsp; 0040FD76 <br>
  0167:0040FD4E&nbsp; MOV&nbsp; &nbsp; &nbsp; EDX,[SNJRT11!$Classjava_lang_String] 
  <br>
  0167:0040FD54&nbsp; MOV&nbsp; &nbsp; &nbsp; ECX,[EBX+04] <br>
  0167:0040FD57&nbsp; PUSH&nbsp; &nbsp; &nbsp; EDX <br>
  0167:0040FD58&nbsp; PUSH&nbsp; &nbsp; &nbsp; ECX <br>
  0167:0040FD59&nbsp; MOV&nbsp; &nbsp; &nbsp; EAX,[00427F00] <br>
  0167:0040FD5E&nbsp; CMP&nbsp; &nbsp; &nbsp; EAX,00000000 <br>
  0167:0040FD63&nbsp; MOV&nbsp; &nbsp; &nbsp; EDX,[EBX+04] <br>
  0167:0040FD66&nbsp; MOV&nbsp; &nbsp; &nbsp; ECX,[EDX+04] <br>
  0167:0040FD69&nbsp; CALL&nbsp; &nbsp; &nbsp; [ECX+44] <br>
  0167:0040FD6C&nbsp; PUSH&nbsp; &nbsp; &nbsp; EAX <br>
  0167:0040FD6D&nbsp; CALL&nbsp; &nbsp; &nbsp; SNJRT11!__j_checkcast@8 <br>
  0167:0040FD72&nbsp; MOV&nbsp; &nbsp; &nbsp; [ESP+2C],EAX <br>
  0167:0040FD76&nbsp; TEST&nbsp; &nbsp; &nbsp; EBP,EBP <br>
  0167:0040FD78&nbsp; JNZ&nbsp; &nbsp; &nbsp; 0040FDA0 <br>
  0167:0040FD7A&nbsp; MOV&nbsp; &nbsp; &nbsp; EDX,[SNJRT11!$Classjava_lang_String] 
  <br>
  0167:0040FD80&nbsp; MOV&nbsp; &nbsp; &nbsp; ECX,[EBX+04] <br>
  0167:0040FD83&nbsp; PUSH&nbsp; &nbsp; &nbsp; EDX <br>
  0167:0040FD84&nbsp; PUSH&nbsp; &nbsp; &nbsp; ECX <br>
  0167:0040FD85&nbsp; MOV&nbsp; &nbsp; &nbsp; EAX,[00427F44] <br>
  0167:0040FD8A&nbsp; CMP&nbsp; &nbsp; &nbsp; EAX,00000000 <br>
  0167:0040FD8F&nbsp; MOV&nbsp; &nbsp; &nbsp; EDX,[EBX+04] <br>
  0167:0040FD92&nbsp; MOV&nbsp; &nbsp; &nbsp; ECX,[EDX+04] <br>
  0167:0040FD95&nbsp; CALL&nbsp; &nbsp; &nbsp; [ECX+44] <br>
  0167:0040FD98&nbsp; PUSH&nbsp; &nbsp; &nbsp; EAX <br>
  0167:0040FD99&nbsp; CALL&nbsp; &nbsp; &nbsp; SNJRT11!__j_checkcast@8 <br>
  0167:0040FD9E&nbsp; MOV&nbsp; &nbsp; &nbsp; EBP,EAX <br>
  0167:0040FDA0&nbsp; MOV&nbsp; &nbsp; &nbsp; EAX,[ESP+30] <br>
  0167:0040FDA4&nbsp; TEST&nbsp; &nbsp; &nbsp; EAX,EAX <br>
  0167:0040FDA6&nbsp; JNZ&nbsp; &nbsp; &nbsp; 0040FDB2 <br>
  0167:0040FDA8&nbsp; MOV&nbsp; &nbsp; &nbsp; DWORD PTR [ESP+14],00000000 <br>
  0167:0040FDB0&nbsp; JMP&nbsp; &nbsp; &nbsp; 0040FDC1 <br>
  0167:0040FDB2&nbsp; MOV&nbsp; &nbsp; &nbsp; EAX,[ESP+30] <br>
  0167:0040FDB6&nbsp; MOV&nbsp; &nbsp; &nbsp; EDX,[EAX] <br>
  0167:0040FDB8&nbsp; CALL&nbsp; &nbsp; &nbsp; SNJRT11!$java_lang_Integer_intValue__ 
  <br>
  0167:0040FDBD&nbsp; MOV&nbsp; &nbsp; &nbsp; [ESP+14],EAX <br>
  0167:0040FDC1&nbsp; MOV&nbsp; &nbsp; &nbsp; [ESP+10],EBP <br>
  0167:0040FDC5&nbsp; MOV&nbsp; &nbsp; &nbsp; ECX,[SNJRT11!$Classjava_lang_StringBuffer] 
  <br>
  0167:0040FDCB&nbsp; PUSH&nbsp; &nbsp; &nbsp; ECX <br>
  0167:0040FDCC&nbsp; CALL&nbsp; &nbsp; &nbsp; SNJRT11!__j_new@4 <br>
  0167:0040FDD1&nbsp; CALL&nbsp; &nbsp; &nbsp; SNJRT11!$java_lang_StringBuffer__4init_5__ 
  <br>
  0167:0040FDD6&nbsp; MOV&nbsp; &nbsp; &nbsp; [ESP+18],EAX <br>
  0167:0040FDDA&nbsp; PUSH&nbsp; &nbsp; &nbsp; EAX <br>
  0167:0040FDDB&nbsp; MOV&nbsp; &nbsp; &nbsp; EAX,EDI <br>
  0167:0040FDDD&nbsp; CALL&nbsp; &nbsp; &nbsp; SNJRT11!$java_lang_StringBuffer_append__Ljava_lang_Stri 
  <br>
  0167:0040FDE2&nbsp; MOV&nbsp; &nbsp; &nbsp; EDX,[ESP+18] <br>
  0167:0040FDE6&nbsp; MOV&nbsp; &nbsp; &nbsp; EAX,ESI <br>
  0167:0040FDE8&nbsp; PUSH&nbsp; &nbsp; &nbsp; EDX <br>
  0167:0040FDE9&nbsp; CALL&nbsp; &nbsp; &nbsp; SNJRT11!$java_lang_StringBuffer_append__Ljava_lang_Stri 
  <br>
  0167:0040FDEE&nbsp; CALL&nbsp; &nbsp; &nbsp; SNJRT11!$java_lang_StringBuffer_toString__ 
  <br>
  0167:0040FDF3&nbsp; MOV&nbsp; &nbsp; &nbsp; [ESP+1C],EAX <br>
  0167:0040FDF7&nbsp; MOV&nbsp; &nbsp; &nbsp; EAX,EDI <br>
  0167:0040FDF9&nbsp; MOV&nbsp; &nbsp; &nbsp; ECX,[EDI] <br>
  0167:0040FDFB&nbsp; CALL&nbsp; &nbsp; &nbsp; SNJRT11!$java_lang_String_hashCode__ 
  <br>
  0167:0040FE00&nbsp; MOV&nbsp; &nbsp; &nbsp; [ESP+20],EAX <br>
  0167:0040FE04&nbsp; MOV&nbsp; &nbsp; &nbsp; EAX,ESI <br>
  0167:0040FE06&nbsp; MOV&nbsp; &nbsp; &nbsp; EDX,[ESI] <br>
  0167:0040FE08&nbsp; CALL&nbsp; &nbsp; &nbsp; SNJRT11!$java_lang_String_hashCode__ 
  <br>
  0167:0040FE0D&nbsp; MOV&nbsp; &nbsp; &nbsp; [ESP+24],EAX <br>
  0167:0040FE11&nbsp; MOV&nbsp; &nbsp; &nbsp; EAX,[ESP+1C] <br>
  0167:0040FE15&nbsp; MOV&nbsp; &nbsp; &nbsp; ECX,[EAX] <br>
  0167:0040FE17&nbsp; CALL&nbsp; &nbsp; &nbsp; SNJRT11!$java_lang_String_hashCode__ 
  <br>
  0167:0040FE1C&nbsp; MOV&nbsp; &nbsp; &nbsp; EBP,[ESP+20] <br>
  0167:0040FE20&nbsp; IMUL&nbsp; &nbsp; &nbsp; EBP,[ESP+24] <br>
  0167:0040FE25&nbsp; MOV&nbsp; &nbsp; &nbsp; EDX,[ESP+1C] <br>
  0167:0040FE29&nbsp; ADD&nbsp; &nbsp; &nbsp; EBP,EAX <br>
  0167:0040FE2B&nbsp; MOV&nbsp; &nbsp; &nbsp; ECX,[EDX] <br>
  0167:0040FE2D&nbsp; SUB&nbsp; &nbsp; &nbsp; EBP,[ECX+08] <br>
  0167:0040FE30&nbsp; JNS&nbsp; &nbsp; &nbsp; 0040FE34 <br>
  0167:0040FE32&nbsp; NEG&nbsp; &nbsp; &nbsp; EBP <br>
  0167:0040FE34&nbsp; CMP&nbsp; &nbsp; &nbsp; [ESP+14],EBP&nbsp; &nbsp; &nbsp; 
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //这里比较注册码！！！！ <br>
  0167:0040FE38&nbsp; JNZ&nbsp; &nbsp; &nbsp; 0040FF1F </span></blockquote>
<hr>
<p><span class="p9"><font color=blue>标 题:</font>注册机 (1千字)<br>
  <font color=blue>发信人:</font>郭大志<br>
  <font color=blue>时 间:</font>2000-6-8 12:31:13 <br>
  <font color=blue>详细信息:</font><br>
  </span></p>
<blockquote><span class="p9"> //Note: only English characters allowed. <br>
  //&nbsp; &nbsp; &nbsp; &nbsp; so you can't use your Chinese name :-( <br>
  <br>
  #include &lt;stdio.h> <br>
  #include &lt;string.h> <br>
  <br>
  long java_lang_String_hashCode(char *str); <br>
  <br>
  void main(void) <br>
  { <br>
  <br>
  &nbsp; &nbsp; char Name[128]; <br>
  &nbsp; &nbsp; char Country[128]; <br>
  &nbsp; &nbsp; long NameCode, CountryCode, AllCode, Code; <br>
  <br>
  &nbsp; &nbsp; printf("KeyGen for NMI's Java Code Viewer 4.8.2.\n"); <br>
  &nbsp; &nbsp; <br>
  &nbsp; &nbsp; printf("Input your name: "); <br>
  &nbsp; &nbsp; gets(Name); <br>
  &nbsp; &nbsp; printf("Input your country: "); <br>
  &nbsp; &nbsp; gets(Country); <br>
  &nbsp; &nbsp; <br>
  &nbsp; &nbsp; NameCode&nbsp; &nbsp; = java_lang_String_hashCode(Name); <br>
  &nbsp; &nbsp; CountryCode = java_lang_String_hashCode(Country); <br>
  &nbsp; &nbsp; AllCode&nbsp; &nbsp; = java_lang_String_hashCode(strcat(Name, 
  Country)); <br>
  &nbsp; &nbsp; <br>
  &nbsp; &nbsp; Code = NameCode * CountryCode + AllCode; <br>
  &nbsp; &nbsp; Code -= strlen(Name); <br>
  &nbsp; &nbsp; if (Code &lt; 0) <br>
  &nbsp; &nbsp; { <br>
  &nbsp; &nbsp; &nbsp; &nbsp; Code = -Code; <br>
  &nbsp; &nbsp; } <br>
  <br>
  &nbsp; &nbsp; printf("You code: %lu\n", Code); <br>
  } <br>
  <br>
  long java_lang_String_hashCode(char *str) <br>
  { <br>
  &nbsp; int&nbsp; k, len, edi,step; <br>
  &nbsp; long result; <br>
  <br>
  &nbsp; if (str == NULL) <br>
  &nbsp; { <br>
  &nbsp; &nbsp; &nbsp; return 0; <br>
  &nbsp; } <br>
  <br>
  &nbsp; result = 0; <br>
  <br>
  &nbsp; len = strlen(str); <br>
  &nbsp; &nbsp; <br>
  &nbsp; if (len &lt; 0x10) <br>
  &nbsp; { <br>
  &nbsp; &nbsp; &nbsp; for (k = 0; k &lt; len; k++) <br>
  &nbsp; &nbsp; &nbsp; { <br>
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; result *= 37; <br>
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; result += (long)str[k] &amp; 0xFF; <br>
  &nbsp; &nbsp; &nbsp; } <br>
  &nbsp; } <br>
  &nbsp; else <br>
  &nbsp; { <br>
  &nbsp; &nbsp; &nbsp; k = 0; <br>
  &nbsp; &nbsp; &nbsp; step = (len >> 3); <br>
  &nbsp; &nbsp; &nbsp; edi = len; <br>
  &nbsp; &nbsp; &nbsp; do <br>
  &nbsp; &nbsp; &nbsp; { <br>
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; edi -= step; <br>
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; result *= 0x27; <br>
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; result += (long)str[k]; <br>
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; k += step;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  <br>
  &nbsp; &nbsp; &nbsp; } while (edi > 0); <br>
  &nbsp; } <br>
  <br>
  &nbsp; return result; <br>
  } </span></blockquote>
<hr>
</body>
</html>

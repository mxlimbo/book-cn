<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=GB_2312-80">
<title>ADO 教程 (VJ++)</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h3><a name="mdhowadotutorialvj"></a>ADO 教程 (VJ++) </h3>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:请参阅">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdhowADOTutorialVJ_C">
</object></p>
<p>
本教程用于新版 ADO/WFC。</p>
<pre>ASCimport com.ms.wfc.data.*;

/**
* ADOTutorial:
* Purpose: Demonstrates the usage of Ado in Java. 
*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; opens a recordset through a command object
*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; and illustrates update within a transaction
*/
public class ADOTutorial
{
   public static String strConn = "Driver={SQL Server};SERVER=JDO_ODIN;DATABASE=JetQA;UID=testmod;PWD=testmod;";//odbc type conn string

   public static void main(String args[] )
   {
      try
      {
         Connection conn = new Connection();
         Command cmd = new Command();
         Recordset rs = new Recordset();
      
         int actErrorNum = 0;
         Field fld;
         AdoProperties fldProps;

// 步骤 1―打开连接
         conn.open(strConn);
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
// 步骤 2―创建命令
         cmd.setActiveConnection(conn);
         cmd.setCommandText("SELECT * from authors");

// 步骤 2―将具有源的记录集作为命令对象打开
         rs.setCursorLocation(AdoEnums.CursorLocation.CLIENT); 
         rs.setCursorType(AdoEnums.CursorType.DYNAMIC);
         rs.setLockType(AdoEnums.LockType.BATCHOPTIMISTIC);
         rs.open (cmd);
         
// 步骤 4―操作数据
         fldProps&nbsp; = rs.getField("au_lname").getProperties();
         
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fldProps.getItem("Optimize").setBoolean(true);

         rs.setSort("au_lname");

         rs.setFilter("phone like '415*'"); 

         rs.moveFirst();

         while ( !rs.getEOF())

         { 
            StringBuffer strBuf = new StringBuffer();
            System.out.println( " Name: " + rs.getField("au_fname").getString() + 
               "&nbsp; " + rs.getField("au_lname").getString() +
               "&nbsp;&nbsp; Phone : " + rs.getField("phone").getString() );
 
            //将字段的区域代码 415 更改为 779 
            fld =&nbsp; rs.getField("phone");

            strBuf.append( fld.getString());

            strBuf.setCharAt(0, '7');
            strBuf.setCharAt(1, '7');
            strBuf.setCharAt(2,&nbsp; '9');


            //将字段设置为新值
            fld.setString(strBuf.toString());
            
            rs.moveNext();
                  
         }

// 步骤 5―更新设置的字段值
         conn.beginTrans();

 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //STEP6 Part A: Conclude the Update
         try
         {

            rs.updateBatch();
            conn.commitTrans();

         }
// 步骤 6―结束更新 
         

         catch(com.ms.wfc.data.AdoException ex)
         {
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
           //出现错误，必须回卷事务
            rs.setFilter(new Integer                        (AdoEnums.FilterGroup.CONFLICTINGRECORDS));
            rs.moveFirst();

            while(!rs.getEOF())
            {
               //打印冲突记录
               System.out.println(" Conflict : Name : "+ rs.getField("au_fname").getString() + " " +
                  rs.getField("au_lname").getString() );
               
               rs.moveNext();
            }
            conn.rollbackTrans();
         }
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    System.out.println("type any character to continue...");
       &nbsp; System.in.read();

      }
      catch(Exception ex)
      {
         ex.printStackTrace();
      }
   }
}
</pre>
<p>
<b>VJ++ tutorial 教程到此结束。 </b></p>
</BODY>
</HTML>

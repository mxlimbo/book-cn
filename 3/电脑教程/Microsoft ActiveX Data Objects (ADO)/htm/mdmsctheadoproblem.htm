<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=GB_2312-80">
<title>本地数据访问的解决方案</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="mdmsctheadoproblem"></a>本地数据访问的解决方案</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:请参阅">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdmscTheADOProblem_C">
</object></p>
<h3>问题</h3>
<p>
您需要的是简单、一致的应用程序编程接口 (API)，使应用程序能够访问和修改各种各样的数据源。数据源可能象文本文件一样简单，也可能象一堆异构数据库那样复杂，或者是尚未定型的某种数据。此外，API 不应该预先设定访问和操作数据源的方式。</p>
<p>
虽然提出了这些要求，典型的数据源依然需要支持开放式数据库连接 (ODBC) 标准的关系型数据库，并可通过用结构化查询语言 (SQL) 编写的命令对它进行操作。</p>
<p>
Microsoft 对该问题提供的总体解决方案是 OLE DB，这是一套组件对象模型 (COM) 接口，可提供对存储在不同信息源进行统一访问的能力。但是 OLE DB 应用程序编程接口的设计目的是为了为多种多样的应用程序提供优化功能，它无法满足对简单化的要求。</p>
<p>
您需要的 API 应该是一座连接应用程序和 OLE DB 的桥梁，这就是 ActiveX&reg; Data Objects (ADO)。</p>
<h3>解决方案</h3>
<p>
ADO 定义编程模型，即访问和更新数据源所必需的活动顺序。编程模型概括了 ADO 的全部功能。</p>
<p>
编程模型意味着对象模型，即响应并执行编程模型的“对象”组。对象拥有“方法”，方法执行对数据进行的操作；对象拥有“属性”，属性指示数据的某些特性或控制某些对象方法的行为。</p>
<p>
与对象关联的是“事件”，事件是某些操作已经发生或将要发生的通知。</p>
<p>
<B><b>下一页</b></B>&nbsp;&nbsp;&nbsp;<a href="mdmscbasicadoprogrammingmodel.htm">基本的 ADO 编程模型</a>。</p>
</BODY>
</HTML>

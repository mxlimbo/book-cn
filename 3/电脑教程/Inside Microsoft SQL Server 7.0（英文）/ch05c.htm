<HTML>
<HEAD>
<link rel="STYLESHEET" type="text/css" href="squeal7.css">
<TITLE>Database Files</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch05b.htm">[Previous]</A> <A HREF="ch05d.htm">[Next]</A><P>

<A NAME="176"><H1>Database Files</H1></A>

<P>A database file is nothing more than an operating system file. (In addition 
to database files, SQL Server also has <I>backup 
devices,</I> which are logical devices that map to operating system files, to physical devices such as tape drives, or 
even to named pipes.) A database spans at least two, and possibly several, 
database files, and these files are specified when a database is created or altered. 
Every database must span at least two files, one for the data (as well as indexes 
and allocation pages), and one for the transaction log. SQL Server 7 allows 
the following three types of database files:</P>
<P>
<UL>
<P><LI><B>Primary data 
files</B> Every database has one primary data file 
that keeps track of all the rest of the files in the database, in addition 
to storing data. By convention, the name of a primary data file has 
the extension MDF.</LI></P>
<P><LI><B>Secondary data 
files</B>  A database might have zero or more secondary data files. By convention, the name of a secondary data file 
has the extension NDF.</LI></P>
<P><LI><B>Log 
files</B>  Every database will have at least one log file that 
contains the information necessary to recover all transactions in a database. By convention, a log file will have the suffix LDF.</LI></P>
</UL>
</P>
<P>Database files each have several properties. These include a logical 
filename, a physical filename, an initial size, a maximum size, and a growth increment. 
The properties of each file are noted in the 
<I>sysfiles</I> table (depicted in Table 5-1), 
which contains one row for each file used by a database.</P>

<P><B>Table 5-1.</B> <I>The </I>sysfiles<I> table.</I></P>

<p><table valign="top" cellpadding=5 width="95%">
<tr><th>Column Name</th>
<th>Description</th>
</tr>
<tr>
<td valign="top"><I>fileid</I></td>
<td valign="top">The file identification number (unique for each  
database).</td>
</tr>
<tr>
<td valign="top"><I>groupid</I></td>
<td valign="top"> The filegroup identification number.</td>
</tr>
<tr>
<td valign="top"><I>size</I></td>
<td valign="top">The size of the file (in 8-KB pages).</td>
</tr>
<tr>
<td valign="top"><I>maxsize</I></td>
<td valign="top">The maximum file size (in 8-KB pages). A value of  
0 indicates no growth, and a value of -1 indicates that the file should grow until the disk is full.</td>
</tr>
<tr>
<td valign="top"><I>growth</I></td>
<td valign="top">The growth size of the database. A value of 0 
indicates no growth. Can be either number of pages 
or percentage of file size, depending on value of status.</td>
</tr>
<tr>
<td valign="top"><I>status</I></td>
<td valign="top">0x2 = Disk file<BR>.0x40 = Log device.<BR>0x80 = File has been written to since last backup.<BR>0x100000 = Growth is in percentage, not pages.</td>
</tr>
<tr>
<td valign="top"><I>name</I></td>
<td valign="top">The logical name of the file.</td>
</tr>
<tr>
<td valign="top"><I>filename</I></td>
<td valign="top">The name of the physical device, including the full 
path of the file.</td>
</tr>
</table></p>
    

</BODY>
</HTML>




<HTML>
<HEAD>
<link rel="STYLESHEET" type="text/css" href="squeal7.css">
<TITLE>OS/2 and Friendly Fire</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch01e.htm">[Previous]</A> <A HREF="ch01g.htm">[Next]</A><P>

<A NAME="6"><H1>OS/2 and Friendly Fire</H1></A>

<P>In 1991, Microsoft released SQL Server 1.11, a maintenance release. SQL 
Server was slowly but steadily gaining acceptance and momentum&#8212;and a long list 
of independent software vendor (ISV) supporters. Client/server computing wasn't widely deployed yet, but new converts appeared every day. Customer satisfaction and loyalty were high, and press reviews of the product were all favorable. Sales were generally disappointing, but this was hardly a surprise because OS/2 had continued to be a major disappointment. Windows 3.0, however, was a runaway 
hit. Rather than move their desktop platforms from MS-DOS to OS/2, huge numbers of PC users moved to Windows 3.0 instead. OS/2 hadn't become a widespread operating system as anticipated, and it was now abundantly clear that it never would be.</P>

<p><div class="sidebar"><blockquote>
<B>SQL Server's Limitations and the Marketplace</B>
<P>Microsoft SQL Server 1.11 clearly had a scalability limit. It was a 16-bit product because OS/2 could provide only a 16-bit address space for applications. OS/2 lacked some high-performance capabilities, such as asynchronous I/O. Even though an astonishing amount of work could be performed successfully with SQL Server on OS/2, there would come a point at which it would simply run out of gas. No hard limit was established, but in general, SQL Server for OS/2 was used for workgroups of 50 users or less. For larger groups, customers could buy a version of Sybase SQL Server for higher-performance 
UNIX-based or VMS-based systems.</P>

<P>This was an important selling point for both Microsoft and Sybase. Customers considering the Microsoft product wanted to be sure they wouldn't outgrow it. The large number of ISV tools developed for Microsoft SQL Server worked largely unchanged with Sybase SQL Server, and applications that outgrew OS/2 could be moved quite easily to a bigger, more powerful, more expensive UNIX system. This 
relationship still made sense for both Microsoft and Sybase.</P>

<P>The need for compatibility and interoperability made it especially important for Microsoft SQL Server to be based on the version 4.2 source code as soon as possible. Furthermore, a major features version hadn't been released since version 1.0 in 1989. In the rapidly moving PC marketplace, the product was in danger of becoming stale. Customers had begun to do serious work with Microsoft SQL Server, and new features were in great demand. Microsoft's version 4.2 would add a long list of significant new features, including server-to-server stored procedures, UNION, online tape backup, and greatly improved international support that would make SQL Server more viable outside the United States.</P>
</blockquote></div></p>

<P>At the same time, Microsoft was working on a new SQL Server version that would sync up with the newest Sybase product on UNIX, version 4.2. When Microsoft SQL Server 1.0 shipped, Sybase's product was designated version 3.0. They had added some new features deemed necessary for the PC marketplace, such as <I>text</I> and <I>image</I> datatypes and browse mode. Sybase subsequently 
shipped version 4.0 for most platforms and version 4.2 on a more limited basis.</P>

<P>Meanwhile, in May 1991, Microsoft and IBM announced an end to their joint development of OS/2. Clearly, most customers were voting with their dollars for Windows, not OS/2. Microsoft decided to concentrate on future versions of Windows and applications for Windows. The announcement, although not a surprise, rocked the industry nonetheless. Microsoft was well underway in the development of a new microkernel-based operating system that was internally code-named <I>NT</I> (new technology). This new system was originallyenvisioned 
as a future release of OS/2 and was sometimes referred to as <I>OS/2 3.0</I>. After the termination of joint OS/2 development, the NT project was altered to 
include the Windows user interface and the Win32 application programming interface (API), and it became known henceforth as Microsoft Windows NT.</P>

<P>The first version of Windows NT wasn't expected for two years. Microsoft SQL Server would eventually be moved to Windows NT&#8212;that was a no-brainer. But in the meantime, Microsoft had to continue developing SQL Server on  OS/2, even though OS/2 was now a competitive product for Microsoft; there was no alternative. For the next couple of years, the SQL Server group got used to getting hit by friendly fire as Microsoft competed vigorously against OS/2.</P>

</BODY>
</HTML>




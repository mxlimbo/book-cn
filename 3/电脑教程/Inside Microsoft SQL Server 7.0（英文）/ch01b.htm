<HTML>
<HEAD>
<link rel="STYLESHEET" type="text/css" href="squeal7.css">
<TITLE>Ron's Story</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch01a.htm">[Previous]</A> <A HREF="ch01c.htm">[Next]</A><P>

<A NAME="2"><H1>Ron's Story</H1></A>

<P>In 1988, Ron Soukup was working for Covia, the United Airlines subsidiary 
that provided the Apollo Reservation System and related systems for airport and 
travel agency use. He had spent the previous five years working with the new 
breed of relational database products that had appeared on the minicomputer 
and mainframe computer scene. He had worked with IBM's DB/2 running on MVS; IBM's SQL/DS running on VM; and Oracle, Informix, and Unify running on UNIX. Ron viewed PC databases of the day essentially as toys that were good for storing recipes and addresses but not for much else. He used a PC for word processing, but that was about it. At work, they were beginning to use more and more LAN-based and PC-based systems, and Ron had begun doing some OS/2 programming. When he heard of the NDK, with this new SQL Server product that had been mentioned in the trade press, he ordered it immediately.</P>

<P>The NDK was very much a beta-level product. It didn't have a lot of fit and finish, and it crashed a couple of times a day. But from practically the 
first day, Ron knew that this product was something special. He was amazed 
that he was using a true DBMS <I>on a PC(!),</I> with such advanced features as 
transaction logging and automatic recovery. Even the performance seemed remarkably good. Having used mostly minicomputer and mainframe computer systems, he was most struck by the difference in PC response time. With the bigger systems, even a simple command resulted in an inevitable delay of at least a couple of seconds between pressing the Enter key and receiving a reply. PCs seemed  almost instantaneous. Ron knew PCs were fast for local tasks such as word processing, but this was different. In this case, at one PC he entered an SQL command that was sent over the network to a server machine running this new SQL Server product. The response time was a subsecond. He had never seen 
such responsiveness.</P>

<P>Ron's initial kick-the-tires trial was encouraging, and he received approval to test the product more thoroughly. He wanted to get a feel for the types of applications and workloads for which this interesting new product might be used. For this, Ron wanted more substantial hardware than the desktop machine he originally tested on (a 10MHz 286 computer with 6 MB of memory and a  
50-MB hard drive). Although SQL Server ran reasonably well on his desktop machine, he wanted to try it on one of the powerful new machines that used the Intel 80386 processor. Ron was able to procure a monster machine for the day&#8212;a 20-MHz 386 system with 10 MB of memory and two 100-MB disk drives&#8212;and was the envy of his division!</P>

<P>In 1987, Ron and a colleague at Covia had developed some multiuser database benchmark tests in C to help them choose a UNIX minicomputer system for a new application. So Ron dusted off these tests and converted the embedded C to the call-level interface provided in SQL Server (DB-Library) and ported these benchmarks to the PC. Ron hoped that SQL Server would handle several simultaneous users, although he didn't even consider that it could come close to handling the 15 to 20 simulated users they had tried in the earlier minicomputer tests. After many false starts and the typical problems that occur while running an early beta of a version 1.0 product, he persevered and got the test suite, 2000 lines of custom C code, running on a PC against the beta version of SQL Server.</P>

<P>The results were amazing. This beta version of SQL Server, running on 
a PC that cost less than $10,000, performed as well and in many cases better 
than the minicomputer systems that they had tested a few months earlier. 
Those systems cost probably 10 times as much as the PC that Ron was using, and 
they needed to be managed by a professional UNIX system administrator. Ron 
knew the industry was in for a big change.</P>

<P>In May 1989, Ashton-Tate/Microsoft SQL Server version 1.0 shipped. Press reviews were good, but sales lagged. OS/2 sales were far below what had been expected. Most users hadn't moved from MS-DOS to OS/2, as anticipated. And about the only tool available to create SQL Server applications was C. The promised dBASE IV Server Edition from Ashton-Tate was delayed, and although several ISVs had promised front-end development tools for SQL Server, these hadn't materialized yet.</P>

<P>During the preceding six months, Ron had come to really know, respect, and admire SQL Server, and he felt the same about the people at Microsoft with whom he had worked during this period. So in late 1989, Ron accepted a position at Microsoft in the SQL Server group in Redmond, Washington. A few months later, he was running the small but talented and dedicated SQL Server development team.</P>

</BODY>
</HTML>




<html>
<head>
<title>分离美工　杜绝重复</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="all.css">
</head>
<body background="bodybg.jpg" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table border="0" cellpadding="0" cellspacing="0" width="776" align="center">
  <tr valign="top"> 
    <td colspan="5" background="topbg.jpg"><img src="top1.jpg" width="100" height="38" border="0"><img src="link.jpg" width="259" height="38" border="0" usemap="#Map"><map name="Map"><area shape="rect" coords="178,6,251,29" href="45.htm"><area shape="rect" coords="91,6,164,29" href="43.htm"><area shape="rect" coords="12,6,85,29" href="content.htm"></map></td>
    <td width="35"><img src="top2.jpg" width="35" height="38" border="0"></td>
  </tr>
</table>
<table border="0" cellpadding="0" cellspacing="0" width="776" background="tablebg.jpg" align="center">
  <tr valign="top">
    <td width="149"><img src="left.jpg" width="149" height="365" border="0"></td>
    <td align="center"><br>
      <table width="580" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td> 
            <div align="center">
              <table bgcolor=#e1df9b border=0 cellpadding=3 cellspacing=1 class=P9-13 
width=541 bordercolorlight="#de5210" bordercolordark="#ffad00">
                <tbody> 
                <tr bgcolor=#ffad00> 
                  <td height=22><b>□...分离美工　杜绝重复</b></td>
                </tr>
                <tr bgcolor=#ffcc33> 
                  <td> 
                    <p class=P9-13>
                    <p><font color="#000000">摘自：大众网络报</font></p>
                    <p><font color="#000000">　　如果你正在设计一个交互式网站，你一定会关注两个主要的问题，就是美工和程序。这也是一个网站在建设中抛开其内容之后最关键的要素。通常有两种方式来协调美工和程序之间的关系：</font></p>
                    <p><font color="#000000">　　1.先做好美工页面，然后由程序员直接在美工页面的HTML文件中嵌入ASP、JSP、PHP等程序代码。</font></p>
                    <p><font color="#000000">　　2.美工和程序同时进行，但这时因为没有页面框架，程序只能做出一些关键代码，双方完成后再进行一次美工页面和程序代码的嵌入合成。</font></p>
                    <p><font color="#000000">　　在实际的网站建设过程中，由于人员、进度等环境的限制，大家通常会混合地使用上面两种协调方式。然而这两种方法都有不足之处：</font></p>
                    <p><font color="#000000">　　1. 效率不高。两者协调不好可能产生等待、重复代码调试步骤等现象；</font></p>
                    <p><font color="#000000">　　2. 调试不畅。由于程序代码最终需要嵌入在HTML页面中，代码的嵌入、调试、纠错都比较繁琐；</font></p>
                    <p><font color="#000000">　　3. 维护不便。一旦美工设计需要修改,如网站改版，那么所有程序和HTML代码混合页面都需要重写；</font></p>
                    <p><font color="#000000">　　如果你正在使用PHP程序建设网站，那么恭喜你，PHP的模板技术会比较圆满地解决上述问题。</font></p>
                    <p><font color="#000000">　　那么什么是PHP的模板技术？PHP模板即PHPlib的Template技术，是PHPLIB程序库中的一个主要模块之一，发展自Perl的Template。而PHPLIB则是在PHP上的一个扩展，提供了很多类库，能够方便地实现一些基本功能如用户认证，数据库封装等。我们可以在phplib.netuse.de上下载到其最新版本。要使用PHP模板，只需在PHPLIB的程序包中解开template.inc文件，并放到我们的PHP程序能够调用的目录里。</font></p>
                    <p><font color="#000000">　　剥开神秘的面纱，模板技术的核心概念简单得令人心跳：要将你的美工页面指定为模板文件，只需将页面中活动的内容如数据库输出，用户交互等部分定义成形式为{variable}的变量放在模板文件中相应的位置，当用户浏览时，由PHP程序文件打开该模板文件，将模板文件中定义的变量进行替换，当然，替换成对应的数据库输出或者用户交互等动态生成内容，举例如下：</font></p>
                    <p><font color="#000000">　　定义模板文件：Mytemplate.html</font></p>
                    <p><font color="#000000">Mytemplte.html的内容为：</font></p>
                    <p><font color="#000000">　　.....</font></p>
                    <p><font color="#000000">　　... <!--这可以是一个版面极其复杂的HTML页面--></font></p>
                    <p><font color="#000000">　&nbsp;今天是{today} <!--需要替换的变量以{..}形式存在--></font></p>
                    <p><font color="#000000">　　...</font></p>
                    <p>　　我们可以看到，事实上模板文件就是一个普通的HTML文件，它包含了你所想要的版面、美工等要素，而内部的活动内容则以变量的形式存在，并等待被替换。显然，模板文件直接被浏览是毫无意义的，因为它不包含任何PHP程序，所有的内容都是&quot;死&quot;的，现在我们来看看，怎样来调用模板，让它&quot;活动&quot;起来。</p>
                    <p>　　假设我们在test.php文件中使用了上述模板，当用户浏览test.php文件时，test.php文件处理过程如下：</p>
                    <p>　　mydate=date(&quot;Y年m月d日&quot;); //处理好变量的值</p>
                    <p>　　include(&quot;template.inc&quot;); //调入将模板程序模块</p>
                    <p>　　mytemp = new Template(&quot;/你的模板文件所在目录/&quot;); </p>
                    <p>　　//创建一个模板实例mytemp，如果模板就在当前目录，那么使用&quot;.&quot;就可以</p>
                    <p>　　mytemp-&gt;set_file(&quot;MyFileHandle&quot;,&quot;MyTemplate.html&quot;); 
                    </p>
                    <p>　　//设置MyFileHandle文件句柄指向我们所要调用的模板文件Mytemplate.html</p>
                    <p>　　mytemp-&gt;set_var(&quot;today&quot;, mydate); </p>
                    <p>　　//调用模板的set_var方法，设置模板中的变量today值为$mydate</p>
                    <p>　　mytemp-&gt;parse(&quot;MyOutput&quot;,&quot;MyFileHandle&quot;); 
                    </p>
                    <p>　　//调用模板的parse方法，对MyFileHandle文件句柄所指向的模板文件进行分析，替换其中相应变量</p>
                    <p>　　//并把替换结果即完整的HTML文件内容保存在字串变量MyOutput中</p>
                    <p>　　mytemp-&gt;p(&quot;MyOutput&quot;); </p>
                    <p>　　// 打印输出结果字串变量MyOutput的值</p>
                    <p>　　?&gt; </p>
                    <p>　　就是这么简单，模板技术很轻松地把网站设计分离成了清晰的美工和程序两个方面，并把他们的成果简单方便地结合了起来。如美工设计需要修改，那么我们只要记住原模板中各个变量名，把他们插入到新模板中对应位置就可以了。真的很轻松！另一方面，在PHP程序中基本没有了PHP脚本和HTML语法混合的现象，很大地提高了PHP系统的执行效率，而且如果是数据库等一些费时的操作，现在可以很及时地关闭数据库，释放资源，这样也在一定程度上提高了PHP和相关系统的资源使用效率。</p>
                    <p>　　好了，关于PHP模板技术的基本概念就介绍到这里，下次我们再介绍更高层的模板应用！ </p>
                    </table>
            </div>
            
          </td>
        </tr>
      </table>
      <br>
      <table width="580" cellspacing="0" cellpadding="0" border="0">
        <tr> 
          <td> 
            <table border=0 align=center>
              <tr> 
                <td width=101 height="21"> 
                  <div align="center"><a href="43.htm">上一页</a></div>
                </td>
                <td width=99 height="21"> 
                  <div align="center"><a href="content.htm">目　录</a></div>
                </td>
                <td width=100 height="21"> 
                  <div align="center"><a href="45.htm">下一页</a></div>
                </td>
              </tr>
            </table>
            <p align=center>□ 编辑整理：<a href="http://www.verychannel.com">非常频道</a> 
            <hr width="80%" noshade size="2">
            <p align=center>本书由“<a href="http://www.eshunet.com/">E书时空</a>”免费制作； 
              <br>
              想要更多的免费电子图书，请光临 <br>
              <a href="http://www.eshunet.com/">http://www.eshunet.com/</a></p>
            </td>
        </tr>
      </table>
    </td>
  </tr>  
</table>
<table width="776" border="0" cellspacing="0" cellpadding="0" align="center">
  <tr>
    <td><img src="bottom.jpg" width="776" height="15"></td>
  </tr>
</table>
<p></p>
                    </body>
</html>


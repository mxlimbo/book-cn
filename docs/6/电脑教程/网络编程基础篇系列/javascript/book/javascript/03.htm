<html>
<head>
<title>网络编程基础篇之JavaScript</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="ebook.css" type="text/css">
</head>
<body leftmargin="0" topmargin="0" background="bg.jpg">
<table width="100%" cellspacing="0">
  <tr>
    <td valign="top" bgcolor="#FFD26A">
      <table width="180" height="100%">
        <tr align="center" valign="top">
          <td>
            <p><img src="image.jpg"></p>
            <p><a href="list.htm"><img src="bd.gif" border="0"></a><br>
              <a href="02.htm"><img src="ap.gif" border="0"></a></p>
          </td>
        </tr>
        <tr align="center" valign="bottom">
          <td><a href="04.htm"><img src="np.gif" border="0"></a></td>
        </tr>
      </table>
    </td>
    <td valign="top"> 
      <blockquote>
        <div align="center"><img src="title.gif"></div>
        <!--正文开始-->
        <font color="#0000FF">JavaScript程序构成</font> 
        <p>JavaScript脚本语言的基本构成是由控制语句、函数、对象、方法、属性等,来实现编程的。</p>        
              <p><font color="#0000FF">一、程序控制流</font></p>        
              <p>在任何一种语言中，程序控制流是必须的，它能使得整个程序减小混乱，使之顺利按其一定的方式执行。下面是JavaScript常用的程序控制流结构及语句:         
              </p>        
              <p>１、if条件语句</p>        
              <p>　基本格式</p>        
              <p>if（表述式）</p>        
              <p>语句段１；</p>        
              <p>......</p>        
              <p>else</p>        
              <p>语句段２；</p>        
              <p>.....</p>        
              <p>　功能：若表达式为true，则执行语句段１；否则执行语句段２。</p>
              <p>　说明：</p>
              <p>if -else 语句是JavaScript中最基本的控制语句，通过它可以改变语句的执行顺序。 <br>        
                表达式中必须使用关系语句，来实现判断，它是作为一个布尔值来估算的。 <br>        
                它将零和非零的数分别转化成false和true。 <br>        
                若if后的语句有多行，则必须使用花括号将其括起来。 <br>        
              　</p>
              <p>if语句的嵌套</p>
              <p>if（布尔值）语句１；</p>
              <p>else（布尔值）语句２；</p>
              <p>else if（布尔值）语句３；</p>        
              <p>……</p>        
              <p>else 语句４；</p>        
              <p>　</p>        
              <p>在这种情况下，每一级的布尔表述式都会被计算，若为真，则执行其相应的语句，否则执行else后的语句。</p>        
              <p>　</p>        
              <p>２、For循环语句</p>        
              <p>　基本格式</p>        
              <p>for（初始化；条件；增量）</p>        
              <p>语句集；</p>        
              <p>　功能：实现条件循环，当条件成立时，执行语句集，否则跳出循环体。</p>        
              <p>　说明：</p>        
              <p>初始化参数告诉循环的开始位置，必须赋予变量的初值； <br>        
                条件：是用于判别循环停止时的条件。若条件满足，则执行循环体，否则 跳出。 <br>        
                增量：主要定义循环控制变量在每次循环时按什么方式变化。 <br>        
                三个主要语句之间，必须使用逗号分隔。 <br>        
                　</p>        
              <p>３、while循环</p>        
              <p>　基本格式</p>        
              <p>while（条件）</p>        
              <p>语句集；</p>        
              <p>该语句与For语句一样，当条件为真时，重复循环，否则退出循环。 </p>        
              <p>　For与while语句</p>
              <p>两种语句都是循环语句，使用For语句在处理有关数字时更易看懂，也较紧凑；而while循环对复杂的语句效果更特别。</p>
              <p>　</p>
              <p>４、break和continue语句</p>
              <p>与C++语言相同，使用break语句使得循环从For或while中跳出，continue使得跳过循环内剩余的语句而进入下一次循环。</p>
              <p>　<font color="#0000FF">二、函数</font></p>
              <p>函数为程序设计人员提供了一个丰常方便的能力。通常在进行一个复杂的程序设计时，总是根据所要完成的功能，将程序划分为一些相对独立的部分，每部分编写一个函数。从而，使各部分充分独立，任务单一，程序清晰，易懂、易读、易维护。JavaScript函数可以封装那些在程序中可能要多次用到的模块。并可作为事件驱动的结果而调用的程序。从而实现一个函数把它与事件驱动相关联。这是与其它语言不样的地方。</p>
              <p>１、JavaScript函数定义</p>
              <p>Function 函数名 （参数,变元）{</p>        
              <p>函数体;.</p>        
              <p>Return 表达式;</p>        
              <p>}</p>        
              <p>说明：</p>        
              <p>　当调用函数时,所用变量或字面量均可作为变元传递。</p>
              <p>　函数由关键字Function定义。</p>
              <p>　函数名：定义自己函数的名字。</p>
              <p>　参数表，是传递给函数使用或操作的值，其值可以是常量 ，变量或其它表达式。</p>
              <p>　通过指定函数名（实参）来调用一个函数。</p>
              <p>　必须使用Return将值返回。</p>
              <p>　函数名对大小写是敏感的。</p>
              <p>　</p>
              <p>２、函数中的形式参数：</p>
              <p>在函数的定义中，我们看到函数名后有参数表，这些参数变量可能是一个或几个。那么怎样才能确定参数变量的个数呢？在JavaScript中可通过arguments         
                .Length来检查参数的个数。例：</p>        
              
        <p>Function function_Name(exp1,exp2,exp3,exp4)<br>
          Number =function _Name . arguments .length;<br>
          if (Number&gt;1）<br>
          document.wrile(exp2);<br>
          if (Number&gt;2)<br>
          document.write(exp3);<br>
          if(Number&gt;3)<br>
          document.write(exp4);<br>
          ...</p>        
              <p>　　<font color="#0000FF">三、事件驱动及事件处理</font></p>
              <p>１、基本概念</p>
              <p>JavaScript是基于对象(object-based)的语言。这与Java不同,Java是面向对象的语言。而基于对象的基本特征，就是采用事件驱动(event-driven)。它是在用形界面的环境下，使得一切输入变化简单化。通常鼠标或热键的动作我们称之为事件（Event），而由鼠标或热键引发的一连串程序的动作，称之为事件驱动（Event         
                Driver）。而对事件进行处理程序或函数，我们称之为事件处理程序（Event Handler）。</p>        
              <p>２、事件处理程序</p>        
              <p>在JavaScript中对象事件的处理通常由函数(Function)担任。其基本格式与函数全部一样，可以将前面所介绍的所有函数作为事件处理程序。格式如下：</p>        
              <p>Function 事件处理名（参数表）{</p>        
              <p>事件处理语句集；</p>        
              <p>……</p>        
              <p>}</p>        
              <p>３、事件驱动</p>        
              <p>JavaScript事件驱动中的事件是通过鼠标或热键的动作引发的。它主要有以下几个事件：</p>        
              <p>（１）单击事件onClick</p>        
              <p>当用户单击鼠标按钮时，产生onClick事件。同时onClick指定的事件处理程序或代码将被调用执行。通常在下列基本对象中产生：</p>        
              <p>button（按钮对象） <br>        
                checkbox（复选框）或（检查列表框） <br>        
                radio （单选钮） <br>        
                reset buttons（重要按钮） <br>        
                submit buttons（提交按钮） <br>        
                例：可通过下列按钮激活change()文件：</p>        
              
        <p>&lt;Form&gt;<br>
          &lt;Input type="button" Value=“ ” onClick="change()"&gt;<br>
          &lt;/Form&gt;</p>        
              <p>在onClick等号后，可以使用自己编写的函数作为事件处理程序，也可以使用JavaScript中内部的函数。还可以直接使用JavaScript的代码等。例：         
              </p>        
              <p>&lt;Input type="button" value=" " onclick=alert("这是一个例子");</p>        
              <p>（２）onChange改变事件</p>        
              <p>当利用text或texturea元素输入字符值改变时发该事件，同时当在select表格项中一个选项状态改变后也会引发该事件。</p>        
              
        <p>例： </p>
        <p>&lt;Form&gt;<br>
          &lt;Input type="text" name="Test" value="Test" 
          onCharge="check('this.test)"&gt;<br>
          &lt;/Form&gt;</p>        
              <p>（３）选中事件onSelect</p>        
              <p>当Text或Textarea对象中的文字被加亮后，引发该事件。</p>        
              <p>（４）获得焦点事件onFocus</p>        
              <p>当用户单击Text或textarea以及select对象时，产生该事件。此时该对象成为前台对象。</p>        
              <p>（５）失去焦点onBlur</p>        
              <p>当text对象或textarea对象以及select对象不再拥有焦点、而退到后台时，引发该文件，他与onFocas事件是一个对应的关系。</p>        
              <p>（６）载入文件onLoad</p>        
              <p>当文档载入时，产生该事件。onLoad一个作用就是在首次载入一个文档时检测cookie的值，并用一个变量为其赋值，使它可以被源代码使用。</p>        
              <p>（７）卸载文件onUnload</p>        
              <p>当Web页面退出时引发onUnload事件，并可更新Cookie的状态。</p>        
              <p>　<font color="#0000FF">四、范例</font></p>        
              <p>　 范例1：下例程序是一个自动装载和自动卸载的例子。即当装入HTML文档时调用loadform()函数,而退出该文档进入另一HTML文档时则首先调用unloadform()函数,确认后方可进入。         
              </p>        
              <p>test3_1.htm </p>        
              
        <p>&lt;HTML&gt;<br>
          &lt;HEAD&gt;<br>
          &lt;script Language="JavaScript"&gt;<br>
          &lt;!--<br>
          function loadform(){<br>
          alert("这是一个自动装载例子!");<br>
          }<br>
          function unloadform(){<br>
          alert("这是一个卸载例子!");<br>
          }<br>
          //--&gt;<br>
          &lt;/Script&gt;<br>
          &lt;/HEAD&gt;<br>
          &lt;BODY OnLoad="loadform()" OnUnload="unloadform()"&gt; 
          <br>
          &lt;a href="test.htm"&gt;调用&lt;/a&gt;<br>
          &lt;/BODY&gt;<br>
          &lt;/HTML&gt;</p>        
              <p> </p>        
              <p>范例2：这是一个获取浏览器版本号的程序。该程序首先显示一个波浪一提示信息。之后显示浏览器的版本号有关信息。</p>        
              <p>test3_2.htm</p>        
              
        <p>&lt;html&gt;<br>
          &lt;head&gt;<br>
          &lt;script language="JavaScript"&gt;&lt;!--<br>
          // --&gt;<br>
          function makeArray(n){<br>
          this.length=n<br>
          return this<br>
          }<br>
          function hexfromdec(num) {<br>
          hex=new makeArray(1);<br>
          var hexstring="";<br>
          var shifthex=16;<br>
          var temp1=num;<br>
          for(x=1; x&gt;=0; x--) {<br>
          hex[x]=Math.round(temp1/shifthex - .5);<br>
          hex[x-1]=temp1 - hex[x] * shifthex;<br>
          temp1=hex[x-1];<br>
          shifthex /= 16;<br>
          }<br>
          for (x=1; x&gt;=0; x--) { hexstring+=getletter(hex[x]); }<br>
          return (hexstring);<br>
          }<br>
          function getletter(num) {<br>
          if (num &lt; 10) { return num; } <br>
          else {<br>
          if (num == 10) { return "A" }<br>
          if (num == 11) { return "B" }<br>
          if (num == 12) { return "C" }<br>
          if (num == 13) { return "D" }<br>
          if (num == 14) { return "E" }<br>
          if (num == 15) { return "F" }<br>
          }<br>
          }<br>
          function rainbow(text){<br>
          var color_d1;<br>
          var allstring="";<br>
          for(i=0;i&lt;text.length;i=i+2){<br>
          color_d1=255*Math.sin(i/(text.length/3));<br>
          color_h1=hexfromdec(color_d1);<br>
          allstring+="&lt;FONT COLOR="+color_h1+"ff"+color_h1+"&gt;"+text.substring(i,i+2)+"&lt;/FONT&gt;";<br>
          }<br>
          return allstring;<br>
          }<br>
          function sizefont(text){<br>
          var color_d1;<br>
          var allstring="";<br>
          var flag=0;<br>
          for(i=0,j=0;i&lt;text.length;i=i+1){<br>
          if (flag==0) {<br>
          j++;<br>
          if (j&gt;=7) {<br>
          flag=1;}}<br>
          if (flag==1) { <br>
          j=j-1;<br>
          if (j&lt;=0) {<br>
          flag=0; }}<br>
          allstring+="&lt;FONT SIZE="+ j + "&gt;" + text.substring(i,i+1) 
          + "&lt;/FONT&gt;";<br>
          }<br>
          return allstring;<br>
          }<br>
          document.write("&lt;font size=8&gt;&lt;CENTER&gt;")<br>
          document.write("&lt;BR&gt;&lt;BR&gt;")<br>
          document.write( sizefont("这是一个获取WEB浏览器的程序"))<br>
          document.write("&lt;/CENTER&gt;&lt;/font&gt;")<br>
          document.write("浏览器名称: "+navigator.appName+"&lt;br&gt;");<br>
          document.write("版本号: "+navigator.appVersion+"&lt;br&gt;");<br>
          document.write("代码名字: "+navigator.appCodeName+"&lt;br&gt;");<br>
          document.write("用户代理标识: "+navigator.userAgent);<br>
          &lt;/script&gt;<br>
          &lt;body&gt;<br>
          &lt;/body&gt;<br>
          &lt;/html&gt;</p>        
              <p>输出结果图2所示。</p>        
              
        <p><img src="003.gif"></p>        
              <p></p>        
              <p>图2</p>        
              <p>本讲介绍了JavaScript程序设计的有关内容。程序流、函数、事件是我们学习掌握JavaScript编程的重点。</p>
        <!--正文结束-->
        <center>
      <hr>
      <p>本书由<a href="http://www.huiniao.com/">【灰鸟资讯】</a>免费制作<br>
          想要更多的免费电子图书，请光临<br>
            <a href="http://www.huiniao.com">http://www.huiniao.com</a></p>
      </center>
      </blockquote>
    </td>
  </tr>
</table>
</body>
</html>

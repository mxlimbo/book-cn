<html>
<head>
<title>网络编程基础篇之PERL</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="ebook.css" type="text/css">
</head>
<body leftmargin="0" topmargin="0" background="bg.jpg">
<table width="100%" cellspacing="0">
  <tr>
    <td valign="top" bgcolor="#FFD26A">
      <table width="180" height="100%">
        <tr align="center" valign="top">
          <td>
            <p><img src="image.jpg"></p>
            <p><a href="list.htm"><img src="bd.gif" border="0"></a><br>
              <a href="06.htm"><img src="ap.gif" border="0"></a></p>
          </td>
        </tr>
        <tr align="center" valign="bottom">
          <td><a href="08.htm"><img src="np.gif" border="0"></a></td>
        </tr>
      </table>
    </td>
    <td valign="top">
      <blockquote>
        <div align="center"><img src="title.gif"></div>
        <!--正文开始-->
        <font color="#0000FF">控制结构</font> 
        <p> <font color="#0000FF"> 一、条件判断</font> <br>
          &nbsp;&nbsp;if ( &lt;expression&gt;) {<br>
          &nbsp;&nbsp;&nbsp;&nbsp;&lt;statement_block_1&gt;<br>
          &nbsp;&nbsp;}<br>
          &nbsp;&nbsp;elsif ( &lt;expression&gt; ) {<br>
          &nbsp;&nbsp;&nbsp;&nbsp;&lt;statement_block_2&gt;<br>
          &nbsp;&nbsp;}<br>
          &nbsp;&nbsp;...<br>
          &nbsp;&nbsp;else{<br>
          &nbsp;&nbsp;&nbsp;&nbsp;&lt;statement_block_3&gt;<br>
          &nbsp;&nbsp;}<br>
          <font color="#0000FF"> 二、循环：</font> <br>
          <font color="#0000FF"> 1、while循环</font> <br>
          &nbsp;&nbsp;while ( &lt;expression&gt; ) {<br>
          &nbsp;&nbsp;&nbsp;&nbsp;&lt;statement_block&gt;<br>
          &nbsp;&nbsp;}<br>
          <font color="#0000FF"> 2、until循环</font> <br>
          &nbsp;&nbsp;until ( &lt;expression&gt; ) {<br>
          &nbsp;&nbsp;&nbsp;&nbsp;&lt;statement_block&gt;<br>
          &nbsp;&nbsp;}<br>
          <font color="#0000FF"> 3、类C的for循环</font><br>
          如<br>
          &nbsp;&nbsp;for ($count=1; $count &lt;= 5; $count++) {<br>
          &nbsp;&nbsp;&nbsp;&nbsp;# statements inside the loop go here<br>
          &nbsp;&nbsp;}<br>
          下面是在for循环中使用逗号操作符的例子：<br>
          &nbsp;&nbsp;for ($line = &lt;STDIN&gt;, $count = 1; $count &lt;= 3;&nbsp;&nbsp; 
          $line = &lt;STDIN&gt;, $count++) {<br>
          &nbsp;&nbsp;&nbsp;&nbsp;print ($line);<br>
          &nbsp;&nbsp;}<br>
          它等价于下列语句：<br>
          &nbsp;&nbsp;$line = &lt;STDIN&gt;;<br>
          &nbsp;&nbsp;$count = 1;<br>
          &nbsp;&nbsp;while ($count &lt;= 3) { <br>
          &nbsp;&nbsp;&nbsp;&nbsp;print ($line);<br>
          &nbsp;&nbsp;&nbsp;&nbsp;$line = &lt;STDIN&gt;;<br>
          &nbsp;&nbsp;&nbsp;&nbsp;$count++;<br>
          &nbsp;&nbsp;}<br>
          <font color="#0000FF"> 4、针对列表(数组)每个元素的循环：foreach<br>
          </font>语法为：<br>
          &nbsp;&nbsp;foreach localvar (listexpr) {<br>
          &nbsp;&nbsp;&nbsp;&nbsp;statement_block;<br>
          &nbsp;&nbsp;}<br>
          例：<br>
          &nbsp;&nbsp;foreach $word (@words) {<br>
          &nbsp;&nbsp;&nbsp;&nbsp;if ($word eq "the") {<br>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print ("found the word 'the'\n"); 
          <br>
          &nbsp;&nbsp;&nbsp;&nbsp;}<br>
          &nbsp;&nbsp;}<br>
          注：<br>
          (1)此处的循环变量localvar是个局部变量，如果在此之前它已有值，则循环后仍恢复该值。<br>
          (2)在循环中改变局部变量，相应的数组变量也会改变，如：<br>
          &nbsp;&nbsp;@list = (1, 2, 3, 4, 5);<br>
          &nbsp;&nbsp;foreach $temp (@list) {<br>
          &nbsp;&nbsp;&nbsp;&nbsp;if ($temp == 2) {<br>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$temp = 20;<br>
          &nbsp;&nbsp;&nbsp;&nbsp;}<br>
          &nbsp;&nbsp;}<br>
          此时@list已变成了(1, 20, 3, 4, 5)。<br>
          <font color="#0000FF"> 5、do循环</font> <br>
          &nbsp;&nbsp;do {<br>
          &nbsp;&nbsp;&nbsp;&nbsp;statement_block<br>
          &nbsp;&nbsp;} while_or_until (condexpr);<br>
          &nbsp;&nbsp;do循环至少执行一次循环。<br>
          <font color="#0000FF"> 6、循环控制</font> <br>
          &nbsp;&nbsp;退出循环为last，与C中的break作用相同；执行下一个循环为next，与C中的continue作用相同；PERL特有的一个命令是redo，其含义是重复此次循环，即循环变量不变，回到循环起始点，但要注意，redo命令在do循环中不起作用。<br>
          <font color="#0000FF"> 7、传统的goto label;语句。</font> <br>
          <br>
          <font color="#0000FF"> 三、单行条件</font> <br>
          &nbsp;&nbsp;语法为statement keyword condexpr。其中keyword可为if、unless、while或until，如：<br>
          &nbsp;&nbsp;&nbsp;&nbsp;print ("This is zero.\n") if ($var 
          == 0);<br>
          &nbsp;&nbsp;&nbsp;&nbsp;print ("This is zero.\n") unless ($var 
          != 0);<br>
          &nbsp;&nbsp;&nbsp;&nbsp;print ("Not zero yet.\n") while ($var-- 
          &gt; 0);<br>
          &nbsp;&nbsp;&nbsp;&nbsp;print ("Not zero yet.\n") until ($var-- 
          == 0);<br>
          &nbsp;&nbsp;虽然条件判断写在后面，但却是先执行的。<br>
          <br>
          <!--正文结束-->
        <center>
      <hr>
      <p>本书由<a href="http://www.huiniao.com/">【灰鸟资讯】</a>免费制作<br>
          想要更多的免费电子图书，请光临<br>
          <a href="http://www.huiniao.com">http://www.huiniao.com</a></p>
      </center>
      </blockquote>
    </td>
  </tr>
</table>
</body>
</html>

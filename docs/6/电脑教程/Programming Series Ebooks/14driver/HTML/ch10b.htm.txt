<HTML>
<HEAD>
<TITLE>WMI Concepts</TITLE>
<link rel="STYLESHEET" type="text/css" href="waltoney.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<BODY bgcolor="#ffffff" text="#000000">
<p>
<A HREF="ch10a.htm">[Previous]</A> <A HREF="ch10c.htm">[Next]</a>
</p>

<A NAME="331"><H1>WMI Concepts</H1></A>

<p>Figure 10-2 diagrams the overall architecture of WMI. In the WMI model, the world is divided
into <i>consumers</i> and <i>providers</i> of data and events. Consumers consume, and providers
provide, blocks of data that are <i>instances</i> of abstract <i>classes.</i> The concept
involved here is no different from that of a class in the C++ language. Just like C++ classes,
WMI classes have data members and <i>methods</i> that implement <i>behaviors</i> for objects.
What goes inside a data block isn't specified by WMI&#8212;that depends on who's
producing and for what purpose. When it comes to device drivers, though, the content of a WMI
data block is most likely going to be statistical in nature. Consumers of driver data,
therefore, are often performance monitors of one kind or another.</p>

<p>
<A HREF="javascript:fullSize('F10wi02x.htm')"> <img src="images/F10wi02.JPG" width=404 height=175 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 10-2.</b> <i>The world of WMI.</i><!--/caption-->
</p>


<p>WMI allows for multiple <i>namespaces,</i> each of which contains classes belonging to one
or more user-mode providers. Providers register with the Windows Management Service by using
COM interfaces that are documented in the Platform SDK. When Windows 2000 ships, the operating
system (including all device drivers) will support a namespace called <b>root\cimv2</b>, which
stands for Version 2 of the Common Information Model. At the time of this writing, the
structure of the CIMV2 namespace was rather fluid, with the consequence that Microsoft has
temporarily decided to use another namespace, <b>root\wmi</b>, for device driver classes.</p>

<p>A WDM driver can act as a provider of instances of a WMI class. The description of all the
classes a driver can provide data for is known as the driver's <i>schema.</i> You define a
schema by using a language named the <i>Managed Object Format,</i> or MOF. The system maintains
a data dictionary known as the <i>repository</i> that contains the definitions of all known
schemas. Assuming you do all the right things in your driver, the system will automatically put
your schema into the repository when it initializes your driver.</p>

<A NAME="332"><H2>A Sample Schema</H2></A>

<p>Later in this chapter, I'll show you a sample named WMI42.SYS, which is available on the
companion disc. This sample has the following MOF schema:</p>


<table width="95%" cellpadding="5" valign="TOP" border=0>
<tr><td valign=top>
<pre>
1 <img src="images/arorite2.jpg" width=17 height=10 alt="" border="0">





2 <img src="images/arorite2.jpg" width=17 height=10 alt="" border="0">
</pre>
</td>
<td valign=top>
<pre>
[Dynamic,燩rovider(&quot;WMIProv&quot;),
燱MI,
<HTML>
<HEAD>
<TITLE>Configuring Your Device</TITLE>
<link rel="STYLESHEET" type="text/css" href="waltoney.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<BODY bgcolor="#ffffff" text="#000000">
<p>
<A HREF="ch07a.htm">[Previous]</A> <A HREF="ch07c.htm">[Next]</a>
</p>

<A NAME="227"><H1>Configuring Your Device</H1></A>

<p>In the <a href="ch06a.htm">previous chapter</a>, I discussed the various IRP_MJ_PNP requests that the Plug and Play
(PnP) Manager sends you. IRP_MN_START_DEVICE is the vehicle for giving you information about
the I/O resources that have been assigned by the PnP Manager for your use. I showed you how to
obtain parallel lists of raw and translated resource descriptions and how to call a <b>
StartDevice</b> helper function that would have the following prototype:</p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>NTSTATUS燬tartDevice(PDEVICE_OBJECT爁do,
牋PCM_PARTIAL_RESOURCE_LIST爎aw,
牋PCM_PARTIAL_RESOURCE_LIST爐ranslated)
牋{
牋...
牋}</pre>
</td></tr>
</table>
</p>

<p>The time has now come to explain what to do with these resource lists. In summary,
you'll extract descriptions of your assigned resources from the translated list and use
those descriptions to create additional kernel objects that give you access to your
hardware.</p>

<p>The CM_PARTIAL_RESOURCE_LIST structures contain a count and an array of
CM_PARTIAL_RESOURCE_DESCRIPTOR structures, as illustrated in Figure 7-1. Each resource
descriptor in the array has a <b>Type</b> member that indicates what type of resource it
describes and some additional members that supply the particulars about some allocated
resource. You're not going to be surprised by what you find in this array, by the way: if
your device uses an IRQ and a range of I/O ports, you'll get two resource descriptors in
the array. One of the descriptors will be for your IRQ, and the other will be for your I/O port
range. Unfortunately, you can't predict in advance the order in which these descriptors
will happen to appear in the array. Consequently, your StartDevice helper function has to begin
with a loop that &quot;flattens&quot; the array by extracting resource values into a collection
of local variables. You can later use the local variables to deal with the assigned resources
in whatever order you please (which, it goes without saying, can be different from the order in
which the PnP Manager chose to present them to you).</p>

<p>
<A HREF="javascript:fullSize('F07wi01x.htm')"> <img src="images/F07wi01.JPG" width=404 height=369 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 7-1.</b> <i>Structure of a partial resource list.</i><!--/caption-->
</p>


<p>In sketch, then, your <b>StartDevice</b> function looks like this:</p>

<p>
<table cellpadding=5 width="95%">
<tr><td valign=top>
<pre>





1 <img src="images/arorite2.jpg" width=17 height=10 border=0>

2 <img src="images/arorite2.jpg" width=17 height=10 border=0>
3 <img src="images/arorite2.jpg" width=17 height=10 border=0>


4 <img src="images/arorite2.jpg" width=17 height=10 border=0>















5 <img src="images/arorite2.jpg" width=17 height=10 border=0>
6 <img src="images/arorite2.jpg" width=17 height=10 border=0></pre>
</td>
<td valign=top>
<pre>
NTSTATUS燬tartDevice(PDEVICE_OBJECT爁do,
牋PCM_PARTIAL_RESOURCE_LIST爎aw,
牋PCM_PARTIAL_RESOURCE_LIST爐ranslated)
牋{
牋PDEVICE_EXTENSION爌dx
<HTML>
<HEAD>
<TITLE>Addressing a Data Buffer</TITLE>
<link rel="STYLESHEET" type="text/css" href="waltoney.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<BODY bgcolor="#ffffff" text="#000000">
<p>
<A HREF="ch07b.htm">[Previous]</A> <A HREF="ch07d.htm">[Next]</a>
</p>

<A NAME="228"><H1>Addressing a Data Buffer</H1></A>

<p>When an application initiates a read or write operation, it provides a data buffer by giving
the I/O Manager a user-mode virtual address and length. As I said back in Chapter 3,
&quot;<A HREF="ch03a.htm#65">Basic Programming Techniques</A>,&quot; a kernel driver hardly ever accesses memory using a
user-mode virtual address because, in general, you can't pin down the thread context with
certainty. Microsoft Windows 2000 gives you three ways to access a user-mode data buffer:</p>

<ul>
<p><li> In the <i>buffered</i> method, the I/O Manager creates a system buffer equal in size to
the user-mode data buffer. You work with this system buffer. The I/O Manager takes care of
copying data between the user-mode buffer and the system buffer.</li></p>

<p><li> In the <i>direct</i> method, the I/O Manager locks the physical pages containing the
user-mode buffer and creates an auxiliary data structure called a memory descriptor list (MDL)
to describe the locked pages. You work with the MDL.</li></p>

<p><li> In the <i>neither</i> method, the I/O Manager simply passes the user-mode virtual address
to you. You work&#8212;very carefully!&#8212;with the user-mode address.</li></p>
</ul>


<p>Figure 7-2 illustrates the first two methods. The last method, of course, is kind of a
nonmethod in that the system doesn't do anything to help you reach your data.</p>

<p>
<A HREF="javascript:fullSize('F07wi02x.htm')"> <img src="images/F07wi02.JPG" width=404 height=300 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 7-2.</b> <i>Accessing user-mode data buffers.</i><!--/caption-->
</p>


<A NAME="229"><H2>Specifying a Buffering Method</H2></A>

<p>You specify your device's buffering method for reads and writes by setting certain flag
bits in your device object shortly after you create it in your <b>AddDevice</b> function:</p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>NTSTATUS燗ddDevice(...)
牋{
牋PDEVICE_OBJECT爁do;
牋IoCreateDevice(...,
<html>
<head>
<title>Chapter 10 -- Windows Management Instrumentation</title>
<link rel="STYLESHEET" type="text/css" href="waltoney.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<BODY bgcolor="#ffffff" text="#000000">
<p>
<A HREF="ch09h.htm">[Previous]</A> <A HREF="ch10b.htm">[Next]</a>
</p>

<p>
<font size="+3">Chapter 10</font>
</p>

<A NAME="330"><H1>Windows Management Instrumentation </H1></A>

<p>Microsoft Windows 2000 supports a facility named Windows Management Instrumentation (WMI) as
a way to manage the computer system. WMI is Microsoft's implementation of a broader
industry standard called Web-Based Enterprise Management (WBEM). The goal of WMI is to provide
a model for system management and the description of management data in an enterprise network
that's as independent as possible from a specific API set or data object model. Such
independence facilitates the development of general mechanisms for creating, transporting, and
displaying data and for exercising control over individual system components.</p>

<p>WDM drivers fit into WMI in three ways. See Figure 10-1. First, WMI responds to requests for
data that (usually) convey information about performance. Second, controller applications of
various kinds can use the facilities of WMI to control generic features of conforming devices.
Finally, WMI provides an event-signalling mechanism that allows drivers to notify interested
applications of important events. I'll discuss all three of these aspects of driver
programming in this chapter. To help you understand the test programs that accompany the driver
samples for this chapter, I'm also going to describe how the user-mode side of WMI
works.</p>

<p>
<img src="images/F10wi01.JPG" width=380 height=223 border=0>
</p><p>
<!--caption--><b>Figure 10-1.</b> <i>The role of a WDM driver in WMI.</i><!--/caption-->
</p>


<p><div class="sidebar"><blockquote>
<b>The WMI and WBEM Names</b>

<p>The Common Information Model (CIM) is a specification for Web-based enterprise management
supported by the Distributed Management Task Force (DMTF), formerly named the Desktop
Management Task Force. Microsoft named its implementation of the Common Information Model
&quot;WBEM,&quot; which was essentially &quot;CIM for Windows.&quot; The kernel-mode portion of
CIM for Windows was called &quot;WMI.&quot; In order to get CIM more widely adopted, DMTF
started a marketing initiative and used WBEM as the name of CIM. Microsoft then renamed its
implementation of WBEM to WMI and renamed WMI (the kernel-mode portion) to &quot;WMI extensions
for WDM.&quot; That being said, WMI is compliant with the CIM and WBEM specification.</p>

<p>I'm afraid my usage of the various different terms in this chapter won't go very far
to resolve the confusion you might feel at this point. I'd suggest that you think
&quot;WMI&quot; whenever you see &quot;CIM&quot; or &quot;WBEM&quot; in this book and any
documentation Microsoft provides. You'll probably then at least be thinking about the same
concept that I and Microsoft are trying to write about&#8212;until something with a name like
&quot;Windows Basic Extensions for Mortals&quot; or &quot;Completely Integrated Mouse&quot;
comes along, that is. Then you're on your own.</p>
</blockquote></div></p>

</BODY>
</HTML>






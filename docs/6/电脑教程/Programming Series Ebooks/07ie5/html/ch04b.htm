<HTML>
<head>
<link rel="STYLESHEET" type="text/css" href="Progie5.css">
<TITLE>Creating HTAs</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch04a.htm">[Previous]</A> <A HREF="ch04c.htm">[Next]</A><P>

<A NAME="110"><H1>Creating HTAs</H1></A>


<p>An HTA is the simplest type of Windows application that you'll ever create. The 
easiest way to create an HTA is to take an existing Web page that has the extension .htm 
or .html and change the extension to .hta. That's it! Now you have an HTML 
Application. Try changing the extension of a Web page that you've already created to 
.hta, and then double-click the file in Windows Explorer. Now your HTML Application 
will run in a separate window of its own and not in the Internet Explorer window.</p>

<p>As an alternative, if you want to allow users to access your HTA on the 
Internet, you can provide a link to it on a Web page just as you would for any other Web 
page or application. When a user clicks this link, before the HTA is opened, Internet 
Explorer will display the File Download dialog box (shown in Figure 4-1), which is 
a security measure to alert the user that an executable application is about to 
open. Then the user can determine what to do next&#8212;open the application or save it to 
disk to run later.</p>


<p>
<A HREF="javascript:fullSize('F04ii01x.htm')"> <img src="images/F04ii01.JPG" width=404 height=295 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!-- caption --><B>Figure 4-1.</B> <i>File Download dialog box.</i><!-- /caption -->
</p>


<p>You'll notice one oddity about this new HTML Application: if the Web page 
you converted contains a hyperlink and you click on it in the HTA, a new 
Internet Explorer window will be created to navigate to the hyperlink's URL. The first time you see 
this happen, you might be a little surprised. Normally when you click on a hyperlink, 
the navigation occurs in the current window. Remember, though, that HTAs are 
applications: they aren't Web browsers. In normal Windows applications, you don't 
usually change the contents of the entire application window in response to the 
user interaction. You might change the contents of the client area, but not the 
application window. (You'll create a client area in your HTA later in this chapter in the 
section &quot;<A HREF="ch04c.htm#117">Creating an HTA with a Client Area</A>.&quot;)</p>

<A NAME="111"><H2>&lt;HTA:APPLICATION&gt; Tag</H2></A>


<p>Although creating an HTA can be as simple as renaming an .htm or .html file to 
an .hta file, without using the new 
&lt;HTA:APPLICATION&gt; tag the window that you 
create is just a basic HTA window that contains default settings for the user interface 
features, as shown in Figure 4-2. 
You can place the &lt;HTA:APPLICATION&gt; tag in any section of the HTML document, but it is recommended that you place 
it in the head section of the Web page for performance reasons. 
Also, because the &lt;HTA:APPLICATION&gt;<I> </I>tag isn't a block tag, no closing tag is needed. Listing 4-1 shows an example of a basic Web page that contains 
the &lt;HTA:APPLICATION&gt; tag. You can also find the code on the companion CD in 
the folder \Samples\Chap04.</p>


<p>
<A HREF="javascript:fullSize('F04ii02x.htm')"> <img src="images/F04ii02.JPG" width=404 height=265 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!-- caption --><B>Figure 4-2.</B> <i>Basic HTA window.</i><!-- /caption -->
</p>

<p><B>Listing 4-1.</B></p>


<p><table cellpadding=5 width="95%"><TR><TD>

<A NAME="112"><H3>Simple.hta</H3></A>
<PRE>&lt;HTML&gt;
&lt;HEAD&gt;
   &lt;TITLE&gt;Simple HTML Application&lt;/TITLE&gt;
   &lt;HTA:APPLICATION&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;
   &lt;H1&gt;This is a simple HTML Application.&lt;/H1&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;
</PRE>
</td></tr></table></p>


<A NAME="113"><H3>&lt;HTA:APPLICATION&gt; tag attributes</H3></A>


<p>Of course, using the &lt;HTA:APPLICATION&gt; tag without supplying any attributes is the same as excluding it. The 
&lt;HTA:APPLICATION&gt; tag provides several attributes 
that allow you to control the user interface features of your HTML Application. 
These attributes are shown in Table 4-1.</p>


<p><b>Table 4-1.</b> <i>&lt;HTA:APPLICATION&gt; Attributes</i></p>

<p>
<table valign="top" cellpadding="5" width="95%">
<tr>
<th><I>Attribute</I></TH>
<th><I>Description</I></TH>
<th><I>Values</I></TH>

</tr>

<tr>
<td valign="top">APPLICATIONNAME</td>
<td valign="top">Sets the name of the HTA.</td>
<td valign="top">String value.</td>
</tr>

<tr>
<td valign="top">BORDER</td>
<td valign="top">Sets the type of window border for the HTA.</td>      
<td valign="top"><B><I>thick</I></B> Thick border with a size 
          grip and sizing border. Default for
          the BORDER attribute. To resize 
          your window, you must specify 
          this value. The other values for 
          this attribute disable resizing.
<br><I><B>dialog</B></I> Dialog window border.
<br><B><I>none</I></B> No border.
<br><B><I>thin</I></B> Thin border with a caption.</td>
</tr>
		  
<tr>
<td valign="top">BORDERSTYLE</td>
<td valign="top">Sets the style of the content border in the HTA window. Maps to the Windows extended style values. </td>     
<td valign="top"><B><I>normal</I></B> Normal border style. 
          Default for the BORDERSTYLE 
         attribute.
<br><B><I>complex</I></B> Combination of the 
          raised and sunken styles.
<br><B><I>raised</I></B> Raised 3-D border.
<br><B><I>static</I></B> 3-D border. Normally used 
          for windows that don't allow user 
          input.
<br><B><I>sunken</I></B> Sunken 3-D border.</td>
</tr>

<tr>
<td valign="top">CAPTION</td>
<td valign="top">Boolean value that specifies whether the HTA displays a caption or a title bar.</td>      
<td valign="top"><B><I>yes</I></B> Default value of this attribute.
          All HTA attributes that take 
          Boolean values accept the value 
          <I>yes</I>,<I> 1</I>,<I> </I>or 
<I>true</I> for True and <I>no</I>,<I> 
          0</I>,<I> </I>or <I>false</I> for False. The application title for an HTA won't display 
          unless this attribute is set to 
<I>yes</I>.</td>
</tr>

<tr>
<td valign="top">ICON</td>
<td valign="top">Sets the path name of the icon      
     that is used for the HTA. The 
     icon appears in the upper left 
     corner of the HTA window. The 
     icon for an HTA can be either 
     an .ico or a .bmp file.</td>
<td valign="top">The path name of the icon.</td>
</tr>
 
<tr>
<td valign="top">ID</td>
<td valign="top">Sets the identifier for the      
     &lt;HTA:APPLICATION&gt; tag. The 
     identifier is needed to write 
     script to access the attributes of 
     the HTA.</td>
<td valign="top">String value.</td>
</tr>
     
<tr>
<td valign="top">MAXIMIZEBUTTON</td>
<td valign="top">Boolean value that determines whether a Maximize button is  displayed in the title bar.  </td>   
<td valign="top"><B><I>yes</I></B> Default value. The CAPTION
          attribute must be set to 
<I>yes </I>for the Maximize button to appear.</td>
</tr>


<tr>
<td valign="top">MINIMIZEBUTTON</td>
<td valign="top">Boolean value that determines whether a Minimize button is displayed in the title bar.</td>      
<td valign="top"><B><I>yes</I></B> Default value. The CAPTION<I> 
</I>               attribute must be set to 
<I>yes </I>for the 
          Minimize button to appear.</td>
</tr>
		        
<tr>
<td valign="top">SHOWINTASKBAR</td>
<td valign="top">Boolean value that determines      
     whether the HTA will appear in 
     the Windows task bar. This prop-
     erty does not affect whether the 
     application appears in the list of 
     applications that are accessible 
     when pressing the ALT-TAB key 
     combination.</td>
<td valign="top"><B><I>yes</I></B> Default value.  </td>  
</tr>  

<tr>
<td valign="top">SINGLEINSTANCE</td>
<td valign="top">Boolean value that determines whether only one instance of the  HTA can be run at a time. For SINGLEINSTANCE to work, the APPLICATIONNAME attribute must also be specified. </td>    
<td valign="top"><B><I>no</I></B> Default value. The value 
           means that multiple instances of 
         this particular HTA can be run 
         concurrently.</td>
</tr>
    
                    
<tr>
<td valign="top">SYSMENU</td>
<td valign="top">Boolean value that determines      
     whether a system menu is displayed in the HTA title bar. The 
     system menu is displayed when 
     you click the icon in the upper 
     left-hand corner of the HTA. 
     This menu contains all the commands that appear in a normal 
     Windows system menu for an 
     application.  </td>    
<td valign="top"><B><I>yes</I></B> Default value.</td>
</tr>

<tr>
<td valign="top">VERSION</td>
<td valign="top">Sets the version of the HTA.     
This version is for internal use 
     only and is not interpreted in 
     any way by the script engine or 
     the document-rendering engine. </td>    
<td valign="top">Default value is an empty string.</td>
</tr>

<tr>
<td valign="top">WINDOWSTATE</td>
<td valign="top">Sets the initial size of the HTA window. </td>     
<td valign="top"><B><I>normal</I></B> The HTA window will 
          be the default size for an Internet 
          Explorer window. Default value 
          of this attribute.
<br><B><I>minimize</I></B> HTA window will be 
          minimized when started.
<br><B><I>maximize</I></B> HTA window will be 
          maximized when it's launched.</td>
</tr>
</table>
</p>	  

  

<p>The HTML for an HTA in Listing 4-2 uses all of the attributes listed in Table 4-1.</p>

<p><B>Listing 4-2.</B></P>

<p><table cellpadding=5 width="95%"><TR><TD>

<A NAME="114"><H3>Complex.hta</H3></A>
<PRE>&lt;HTML&gt;
&lt;HEAD&gt;
   &lt;TITLE&gt;Complex HTML Application&lt;/TITLE&gt;
   &lt;HTA:APPLICATION
      ID=&quot;oHTA&quot;
      APPLICATIONNAME=&quot;ComplexHTA&quot;
      BORDER=&quot;thick&quot;
      BORDERSTYLE=&quot;sunken&quot;
      CAPTION=&quot;yes&quot;
      ICON=&quot;ComplexHTA.ico&quot;
      MAXIMIZEBUTTON=&quot;no&quot;
      MINIMIZEBUTTON=&quot;yes&quot;
      SHOWINTASKBAR=&quot;yes&quot;
      SINGLEINSTANCE=&quot;no&quot;
      SYSMENU=&quot;yes&quot;
      VERSION=&quot;1.0&quot;
      WINDOWSTATE=&quot;normal&quot;
   &gt;
&lt;/HEAD&gt;
&lt;BODY&gt;
   &lt;H1&gt;This is a complex HTML Application.&lt;/H1&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;
</PRE>
</td></tr></table></p>


<p>Figure 4-3 shows the results of the HTA in Listing 
4-2. You can find the code on the companion CD in the folder \Samples\Chap04.</p>

<p>Not surprisingly, you can access all the attributes in Table 4-1 using script on 
a Web page. You can retrieve the values of the properties corresponding to these 
attributes in script, but setting them has no effect.</p>

<p>The following example shows how to retrieve the values of all the 
attributes that were set in the HTA shown in Figure 4-3. It is a VBScript event handler for 
the <I>onclick</I> event of a button on the page loaded in this HTA. You can find the entire 
code for this example on the companion CD in the 
folder \Samples\Chap04\Scripting.hta.</p>

<p><table cellpadding=5 width="95%"><TR><TD>
<PRE>   &lt;SCRIPT LANGUAGE=&quot;VBScript&quot;&gt;
      Option Explicit

      Sub btnShowAtts_onclick
         Dim str

         str = &quot;ID: &quot; &amp; oHTA.ID &amp; vbCrLf _
             &amp; &quot;Application Name: &quot; &amp; oHTA.APPLICATIONNAME &amp; vbCrLf _
             &amp; &quot;Border: &quot; &amp; oHTA.BORDER &amp; vbCrLf _
             &amp; &quot;Border Style: &quot; &amp; oHTA.BORDERSTYLE &amp; vbCrLf _
             &amp; &quot;Caption: &quot; &amp; oHTA.CAPTION &amp; vbCrLf _
             &amp; &quot;Icon: &quot; &amp; oHTA.ICON &amp; vbCrLf _
             &amp; &quot;Maximize Button: &quot; &amp; oHTA.MAXIMIZEBUTTON &amp; vbCrLf _
             &amp; &quot;Minimize Button: &quot; &amp; oHTA.MINIMIZEBUTTON &amp; vbCrLf _
             &amp; &quot;Show in task bar: &quot; &amp; oHTA.SHOWINTASKBAR &amp; vbCrLf _
             &amp; &quot;Single Instance: &quot; &amp; oHTA.SINGLEINSTANCE &amp; vbCrLf _
             &amp; &quot;System Menu: &quot; &amp; oHTA.SYSMENU &amp; vbCrLf _
             &amp; &quot;Version: &quot; &amp; oHTA.VERSION &amp; vbCrLf _
             &amp; &quot;Window State: &quot; &amp; oHTA.WINDOWSTATE

         MsgBox str
      End Sub
   &lt;/SCRIPT&gt;
</PRE>
</td></tr></table></p>


<p>
<A HREF="javascript:fullSize('F04ii03x.htm')"> <img src="images/F04ii03.JPG" width=404 height=265 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!-- caption --><B>Figure 4-3.</B> <i>HTA using all attributes of the &lt;HTA:APPLICATION&gt; tag.</i><!-- /caption -->
</p>


<A NAME="115"><h3><I>commandLine</I> property</h3></A>

<p>You can set most properties of the 
&lt;HTA:APPLICATION&gt;<I> </I>tag with their 
corresponding attributes. One property of the 
&lt;HTA:APPLICATION&gt;<I> </I>tag that isn't accessible 
as an attribute, however, is the <I>commandLine 
</I>property. Because an HTA is a full-fledged Windows application (just like any other Windows application), you can pass 
data to it when running it from a command line. By using the 
<I>commandLine</I> property of the 
&lt;HTA:APPLICATION&gt;<I> </I>tag, you can retrieve command line parameters that 
are sent to the HTML Application.</p>

<p>The <I>commandLine </I>property returns a string that contains the full path to 
the HTA and any additional parameters that are specified when running the HTA. 
The string that is returned is a space-delimited list of all the command line 
parameters. For example, you can create a simple HTML Application named Hello.hta. If the 
user enters his name, the application displays a hello message. You can run Hello.hta 
from the command line in Windows NT and specify your name like so:</p>

<p><table cellpadding=5 width="95%"><TR><TD>
<PRE>C:\ProgIE5\Chap04&gt;Hello.hta Scott
</PRE>
</td></tr></table></p>

<p>To run an HTA from the command line in Windows 95 and later versions, 
you must create a shortcut to the HTA that contains the path to the HTA and contains 
any arguments as the target of the shortcut. (The companion CD includes a sample 
shortcut named ShrtHello.hta, which you can find in the folder \Samples\Chap04. You'll 
have to change the target of this shortcut to point to the Hello.hta in your CD-ROM drive.)</p>

<p>When you retrieve the value of the <I>commandLine 
</I>property, the string that is returned contains the full pathname of the HTA and any input parameters 
delimited by spaces. If you retrieve the value of the 
<I>commandLine </I>property at this point, the string returned will look similar to this:</p>

<p><table cellpadding=5 width="95%"><TR><TD>
<PRE>&quot;C:\ProgIE5\Chap04\Hello.hta Scott&quot;
</PRE>
</td></tr></table></p>

<p>To complete the Hello.hta example so that a hello message is displayed 
when you start the application, parse the command line for the first parameter that 
follows the path to the Hello.hta file. (This first parameter should be the user's name.) 
VBScript is used in this example, which is shown in Listing 4-3. You can also find the code 
on the companion CD in the folder \Samples\Chap04.</p>


<p><b>Listing 4-3.</b></p>

<p><table cellpadding=5 width="95%"><TR><TD>

<A NAME="116"><H3>Hello.hta</H3></A>
<PRE>&lt;HTML&gt;
&lt;HEAD&gt;
   &lt;TITLE&gt;Scripting the HTA:APPLICATION Tag&lt;/TITLE&gt;
   &lt;HTA:APPLICATION
      ID=&quot;oHTA&quot;
   &gt;

   &lt;SCRIPT LANGUAGE=&quot;VBScript&quot;&gt;
      Option Explicit

      Dim cmdLineArray
      Dim strHello

      ' This code assumes that you have no spaces in 
      ' the path to Hello.hta.  (In other words, this code
      ' splits the command line by spaces and assumes
      ' that your name is the second word.)
      '
      cmdLineArray = Split(oHTA.commandLine)
      strHello = &quot;Hello &quot; &amp; cmdLineArray(1) &amp; &quot;, &quot; _
               &amp; &quot;How are you?&quot;

      MsgBox strHello
   &lt;/SCRIPT&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;
</PRE>
</td></tr></table></p>

</BODY>
</HTML>







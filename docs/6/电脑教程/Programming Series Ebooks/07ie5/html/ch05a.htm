<HTML>
<head>
<link rel="STYLESHEET" type="text/css" href="Progie5.css">

<TITLE>Chapter 5 -- Creating ActiveX Controls</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch04d.htm">[Previous]</A> <A HREF="ch05b.htm">[Next]</A><P>



<FONT SIZE="+3">Chapter 5</FONT>

<A NAME="120"><H1>Creating ActiveX Controls</H1></A>

<P>Writing Web-based applications sometimes requires you to perform actions that 
you can't perform on a basic Web page created by using DHTML and script. 
Suppose you want to include complicated functionality in your Web page. For example, 
you might want to access information that is on a user's client system, such as a file 
you want to open or to which you want to save data. Or you might want to restrict 
users to certain Web pages on the Internet. Perhaps you want to prevent users from 
visiting certain game sites on the Web.</P>

<P>To accomplish these objectives, you could create your own application that 
hosts the WebBrowser control or automates Microsoft Internet Explorer (discussed in 
the <a href="ch06a.htm">next chapter</a>). Although creating an application with a WebBrowser control 
would give you total control and allow you to provide a lot of functionality that you 
couldn't otherwise provide, maybe you don't want to devote the time or resources to 
building a browser application just to restrict users' navigation. Using a Microsoft 
ActiveX control, you can hook into the Internet Explorer container and control almost 
any aspect of it, handle events, and access the DHTML Object Model. (I'll discuss 
how to hook into the Internet Explorer container in <A HREF="ch06a.htm">Chapter 6</A> in conjunction with 
the discussion of the WebBrowser control and Internet Explorer automation.)</P>

<P>This chapter explains how to create an ActiveX control first by using 
Microsoft Visual Basic and then by using the Active Template Library (ATL) that ships 
with Microsoft Visual C++. (We'll use ATL instead of Microsoft Foundation Classes, or 
MFC, because ATL was designed to help build ActiveX controls for the Web.) You 
aren't required to know COM for this chapter, but it certainly helps.</P>

<P>If you don't understand COM, you won't have any trouble in the section 
&quot;<A HREF="ch05c.htm#130">Creating Visual Basic ActiveX Controls</A>.&quot; You might run into snags in the section 
&quot;<A HREF="ch05d.htm#143">Creating ATL ActiveX Controls</A>,&quot; but if you follow the examples, you'll still be able to 
create ActiveX controls for Internet Explorer.</P>

<P><div class="sidebar"><blockquote><B>Where to Go for More Information</B>
<P>If you'd like to know more about COM, check out one of the many 
Microsoft Press books such as <I>Understanding ActiveX and 
OLE</I> by David Chappell, 
<I>Inside</I> <I>COM</I> by Dale Rogerson, or 
<I>ActiveX</I> <I>Controls</I> <I>Inside</I> 
<I>Out</I> by Adam Denning.</P>

<P>If you would like more information about the other topics in this 
chapter, refer to the MSDN Online Web Workshop at 
<I><A HREF="http://msdn.microsoft.com/workshop" TARGET="_window2">http://msdn.microsoft.com/workshop</A>.</I></P></blockquote></div>
</P>

</BODY>
</HTML>







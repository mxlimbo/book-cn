<HTML>
<head>
<link rel="STYLESHEET" type="text/css" href="Progie5.css">
<TITLE>Controlling Download and Execution</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch09e.htm">[Previous]</A> <A HREF="ch10a.htm">[Next]</A><P>

<A NAME="225"><H1>Controlling Download and Execution</H1></A>

<p>Along with letting you manage its user interface, the WebBrowser control lets 
you determine what it can download and execute. For example, you can decide to 
prevent the WebBrowser control from downloading images, video, script, ActiveX 
controls, and so on. You can also prevent the WebBrowser control from executing 
script, ActiveX controls, and Java applets.</p>

<p>To control what the WebBrowser control can download and execute, 
your host application must implement a special dispatch ID referred to as 
<I>DISPID_AMBIENT_DLCONTROL</I>. In your implementation of 
<I>IDispatch::Invoke</I>, you handle 
<I>DISPID_AMBIENT_DLCONTROL</I> in a <I>case</I> statement. When 
<I>Invoke</I> is called with its 
<I>dispidMember</I> parameter set to this ID, you set the 
<I>pvarResult </I>parameter to a combination of flags that indicate what can or cannot be downloaded, executed, or 
both. Table 9-5 shows the complete list of these flags.</p>

<p><b>Table 9-5.</b> <i>Download Control Values</i></p>

<p>
<table valign="top" cellpadding="5" width="95%">
<tr>
<th><i>Value</i></th>
<th><i>Description</i></th>
</tr>

<tr>
<td valign="top"><I>DLCTL_DLIMAGES</I></td>
<td valign="top">Images will be downloaded from the server.</td>
</tr>

<tr>
<td valign="top"><I>DLCTL_VIDEOS</I></td>
<td valign="top">Any video clips that are contained in 
the document will be played.</td>
</tr>

<tr>
<td valign="top"><I>DLCTL_BGSOUNDS</I></td>
<td valign="top">Background sounds associated with 
the document will be played.</td>
</tr>

<tr>
<td valign="top"><I>DLCTL_NO_SCRIPTS</I></td>
<td valign="top">Scripts will not be executed.</td>
</tr>

<tr>
<td valign="top"><I>DLCTL_NO_JAVA</I></td>
<td valign="top">Java applets will not be executed.</td>
</tr>

<tr>
<td valign="top"><I>DLCTL_NO_RUNACTIVEXCTLS</I></td>
<td valign="top">ActiveX controls will not be executed.</td>
</tr>

<tr>
<td valign="top"><I>DLCTL_NO_DLACTIVEXCTLS</I></td>
<td valign="top">ActiveX controls will not be downloaded.</td>
</tr>

<tr>
<td valign="top"><I>DLCTL_DOWNLOADONLY</I></td>
<td valign="top">The page will be downloaded but not displayed.</td>
</tr>

<tr>
<td valign="top"><I>DLCTL_NO_FRAMEDOWNLOAD</I></td>
<td valign="top">Frames will not be downloaded, but 
the frameset page will be downloaded and parsed. The frameset will also be ignored, and 
no frame tags will be rendered.</td>
</tr>

<tr>
<td valign="top"><I>DLCTL_RESYNCHRONIZE</I></td>
<td valign="top">Files in the cache will be ignored, and 
the server will be asked for updated information. The cached information will be used if 
the server indicates that the cached information 
is up-to-date. Using this value causes the 
<I>BINDF_RESYNCHRONIZE</I> flag to be set when making requests through URLMON.</td>
</tr>

<tr>
<td valign="top"><I>DLCTL_PRAGMA_NO_CACHE</I></td>
<td valign="top">The request will be forced through to 
the server, and the proxy will be ignored, even if the proxy indicates that the data is 
up-to-date. Using this value causes the<I> BINDF_PRAGMA_
NO_CACHE</I> flag to be set when making requests through URLMON.</td>
</tr>

<tr>
<td valign="top"><I>DLCTL_NO_BEHAVIORS</I></td>
<td valign="top">Behaviors are disabled in the document.</td>
</tr>

<tr>
<td valign="top"><I>DLCTL_NO_METACHARSET</I></td>
<td valign="top">HTML character sets reflected by 
META elements are suppressed in the document.</td>
</tr>

<tr>
<td valign="top"><I>DLCTL_URL_ENCODING_DISABLE_UTF8</I></td>
<td valign="top">This is the same as the 
<I>DOCHOSTUIFLAG_URL_
ENCODING_DISABLE_UTF8 </I>flag in Table 9-2. The difference between these two flags is 
that the flag in Table 9-2 is used only when the MSHTML component is first instantiated, 
and the download flag in Table 9-5 is used whenever the WebBrowser needs to perform 
a download. </td>
</tr>

<tr>
<td valign="top"><I>DLCTL_URL_ENCODING_ENABLE_UTF8</I></td>
<td valign="top">This is the same as the 
<I>DOCHOSTUIFLAG_URL_
ENCODING_ENABLE_UTF8 </I>flag in Table 9-2. The difference between the two flags 
described in the entry above applies to these two flags 
as well.</td>
</tr>

<tr>
<td valign="top"><I>DLCTL_FORCEOFFLINE</I></td>
<td valign="top">Always operates in offline mode. Using 
this value causes the 
<I>BINDF_OFFLINEOPERATION</I> flag to be set even if the computer is 
connected to the Internet when making requests 
through URLMON.</td>
</tr>

<tr>
<td valign="top"><I>DLCTL_NO_CLIENTPULL</I></td>
<td valign="top">No client pull operations will be performed.</td>
</tr>

<tr>
<td valign="top"><I>DLCTL_SILENT</I></td>
<td valign="top">No user interface will be displayed. Using 
this value causes the <I>BINDF_SILENTOPERATION</I> flag to be set when making requests 
through URLMON.</td>
</tr>

<tr>
<td valign="top"><I>DLCTL_OFFLINEIFNOTCONNECTED</I></td>
<td valign="top">Operates in offline mode if not connected 
to the Internet. Using this value causes the 
<I>BINDF_GETFROMCACHE_IF_NET_FAIL</I> flag to be set if the computer is connected to 
the Internet when making requests through URLMON.</td>
</tr>

<tr>
<td valign="top"><I>DLCTL_OFFLINE</I></td>
<td valign="top">Same as 
<I>DLCTL_OFFLINEIFNOTCONNECTED</I>.</td>
</tr>
</table>
</p>

<p>The code following the code below implements <I>Invoke</I>, which handles 
<I>DISPID_AMBIENT_DLCONTROL</I> to allow the download of images, videos, and 
background sounds, but turns off the execution of script.</p>

<p><table cellpadding=5 width="95%"><TR><TD>
<PRE>
STDMETHODIMP CAtlBrCon::Invoke(DISPID dispidMember, REFIID riid,
                               LCID lcid, WORD wFlags, 
                               DISPPARAMS* pDispParams,
                               VARIANT* pvarResult, 
                               EXCEPINFO* pExcepInfo,
                               UINT* puArgErr)
{
   switch (dispidMember)
   {
      case DISPID_AMBIENT_DLCONTROL:
         *pvarResult = DLCTL_DLIMAGES | DLCTL_VIDEOS
                     | DLCTL_BGSOUNDS | DLCTL_NO_SCRIPTS;
         break;

      default:
         return DISP_E_MEMBERNOTFOUND;
   }

   return S_OK;
}
</PRE>
</td></tr></table></p>

<p>The AtlBrowser example implements download control as well as the 
functionality of controlling the user interface features that I showed you earlier. To let 
you specify download control options on the fly, 
AtlBrowser provides a menu named Download Control that allows you to enable or disable some of its menu items.</p>

<p>In the same way a data member is used by other AtlBrowser menu items 
to control user interface features, a data member is used to keep track of which 
items listed in Table 9-5 should be enabled or disabled. When MSHTML needs to know 
what to download, it calls AtlBrowser's implementation of 
<I>Invoke</I>, passing <I>DISPID_AMBIENT_DLCONTROL </I>for the <I>dispidMember 
</I>input parameter. AtlBrowser then handles this dispatch ID and sets the 
<I>pvarResult </I>return value to the value of the 
data member that specifies which items should be downloaded. The following code 
performs this function:</p>

<p><table cellpadding=5 width="95%"><TR><TD>
<PRE>      case DISPID_AMBIENT_DLCONTROL:
         {
            CComVariant vtResult(static_cast&lt;long&gt;(m_dwDLControl));
            *pvarResult = vtResult;
         }

         break;
</PRE>
</td></tr></table></p>

<p>Note that AtlBrowser automatically allows the download of images, videos, 
and background sounds by initializing the <I>m_dwDLControl 
</I>data member in the constructor for 
<I>CAtlBrCon</I>, like so:</p>

<p><table cellpadding=5 width="95%"><TR><TD>
<PRE>CAtlBrCon::CAtlBrCon() :
   m_dwDLControl(DLCTL_DLIMAGES|DLCTL_VIDEOS|DLCTL_BGSOUNDS),

   <img src="images/grayvellip.JPG" width=3 height=13 border="0">
{
}
</PRE>
</td></tr></table></p>

<p>You might want to try out this download control feature using AtlBrowser. 
Also try adding some of the items in Table 9-5 that aren't implemented by AtlBrowser.</p>

<p>
<div class="sidebar"><blockquote>
<p><b>What's Next?</b></p>
<p>The advanced hosting interfaces let you control the user interface of 
the WebBrowser control as well as what the WebBrowser control can download 
and execute when you are hosting it. As usual, implementing this functionality 
in your applications is easy. And in doing so, you have total control over 
the browsing experience that you provide to your users.</p>
<p>In the <a href="ch10a.htm">next chapter</a>, you'll learn how to implement an Internet 
Explorer feature known as Web Accessories. Web Accessories allows you to enhance 
the user interface of the browser, further enabling you to provide an even 
richer browsing experience for your users.</p>
</blockquote></div>
</p>
</BODY>
</HTML>






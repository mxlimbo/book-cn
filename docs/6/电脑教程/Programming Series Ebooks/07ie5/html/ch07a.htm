<HTML>
<head>
<link rel="STYLESHEET" type="text/css" href="Progie5.css">

<TITLE>Chapter 7 -- Internet Explorer Events</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch06g.htm">[Previous]</A> <A HREF="ch07b.htm">[Next]</A><P>


<font size="+3">Chapter 7</font>

<A NAME="180"><H1>Internet Explorer Events</H1></A>

<p>In <A HREF="ch06a.htm">Chapter 6</A>, you created Web-enabled applications by hosting the 
WebBrowser control and by automating Microsoft Internet Explorer. In both cases, you used 
the methods and properties of the<I> IWebBrowser2 
</I>interface to create Internet applications quickly and efficiently. As you know, the 
<I>IWebBrowser2 </I>interface enables you to navigate to a URL or to a file, move backward and forward in the history list, 
manipulate the Internet Explorer user interface, and so on. What if I told you it provides 
even more functionality than that? It's true!</p>

<p>The methods and properties of <I>IWebBrowser2 
</I>give you a certain level of control over navigation and the user interface, but if you can't determine what the 
WebBrowser is doing and when it is doing it, you still don't have full control. For this reason, 
the WebBrowser control and Internet Explorer expose events through which you 
can monitor activity and perform certain actions as necessary. For example, let's say 
you are creating an application for your corporate intranet, and you want to restrict 
users from accessing certain Web pages. By handling events in Internet Explorer, you 
can tell when a user is attempting to navigate to a restricted URL and then cancel 
that navigation completely.</p>

<p>In this chapter, I'll explain events and how you can handle them in your 
applications. I'll show you all the events of the WebBrowser control and Internet 
Explorer, and I'll teach you how to handle them in Microsoft Visual Basic and Microsoft 
Visual C++ applications. I'll also explain how to handle Internet Explorer events on a Web 
page by using Microsoft ActiveX controls.</p>

</BODY>
</HTML>






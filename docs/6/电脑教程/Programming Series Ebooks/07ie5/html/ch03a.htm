<HTML>
<head>
<link rel="STYLESHEET" type="text/css" href="Progie5.css">

<TITLE>Chapter 3 -- Programming with DHTML</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch02d.htm">[Previous]</A> <A HREF="ch03b.htm">[Next]</A><P>



<FONT SIZE="+3">Chapter 3</FONT>
<A NAME="71"><H1>Programming with DHTML</H1></A>

<P>After reading <A HREF="ch02a.htm">Chapter 2</A>, you should be able to program for Microsoft Internet 
Explorer using basic HTML and script. Now we'll move on to the really cool aspects 
of Internet Explorer programming. This chapter covers most of the Dynamic 
HTML (DHTML) features that were introduced in Internet Explorer 4 as well as those 
that were added to version 5. (I'll explain some of the other exciting DHTML features 
as the book progresses.) First we'll look at DHTML and the DHTML Object Model, 
which enables you to access every HTML element on a Web page. Then we'll check out 
all the interesting features of DHTML&#8212;cascading style sheets (CSS) and 
positioning, dynamic properties, printing support, mouse capture, and context menus. 
DHTML is the basis for most of the material we're going to cover in the rest of the book.</P>
<P>So you're probably wondering what Dynamic HTML means. Well, it 
means exactly what it sounds like&#8212;DHTML is HTML that is dynamic. As you'll recall 
from <A HREF="ch01a.htm">Chapter 1</A>, prior to Internet Explorer 4, HTML was static. Whatever you placed on 
a Web page stayed the same throughout the life of that Web page. The only way 
you could change the contents of a page was to somehow invite the user to refresh 
the page so that Internet Explorer could go to your Web server and get a new version 
of the page. If your Web page was accepting data from a user, you couldn't validate 
that information on the fly. You had to make another trip to the server to validate it, 
usually by having the user click a button on a form, click on a hyperlink, or use a 
refresh &lt;META&gt; tag to force Internet Explorer to refresh the page after a certain amount of 
time.</P>
<P>Not only are these techniques clumsy, they're inefficient. Why should 
Internet Explorer have to make another trip to your Web server to update your Web page 
or validate data entered by the user? In a typical Microsoft Windows application, 
you don't have to revisit a server to update information or validate data in a dialog 
box or other window. Usually, your program performs this kind of action 
dynamically. This makes the entire user experience much more pleasant.</P>
<P>Using DHTML, you can build Web-based applications that act just like 
typical Windows applications. You can dynamically update your Web page or perform 
data validation without having to revisit your server, and all this can be done on the 
client side. Let's take a look at the DHTML Object Model.</P>

<P><DIV CLASS="SIDEBAR"><BLOCKQUOTE>
<P><B>Where to Go for More Information</B></P>
<P>This chapter provides a good general introduction to Dynamic 
HTML. If you want more advanced information, take a look at the MSDN Online 
Web Workshop or the book <I>Dynamic HTML Reference and Software 
Development Kit: Comprehensive Reference to DHTML for Microsoft Internet Explorer 
5</I> (Microsoft Press, 1999) by Microsoft Corporation.</P>
</BLOCKQUOTE></DIV></P>

</BODY>
</HTML>






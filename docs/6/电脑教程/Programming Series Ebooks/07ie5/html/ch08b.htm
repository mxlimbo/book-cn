<HTML>
<head>
<link rel="STYLESHEET" type="text/css" href="Progie5.css">
<TITLE>Revisiting the DHTML Object Model </TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch08a.htm">[Previous]</A> <A HREF="ch08c.htm">[Next]</A><P>

<A NAME="204"><H1>Revisiting the DHTML Object Model </H1></A>

<P>Every HTML element on a Web page is an object. Therefore, each element has 
methods, properties, events, and even possibly collections. You can use these 
methods, properties, and so on to manipulate the element or the content contained within 
the element. Examples of three elements and their related objects and interfaces follow:</P>

<P>
	<TABLE CELLPADDING=5 WIDTH="95%">
		
 		<TR>
			<TH><I>Element</I></TH>
			<TH><I>Visual Basic Object</I></TH>
			<TH><I>Visual C++ Interface</I></TH>
		</TR>
		
		<TR>
			<TD VALIGN="TOP">&lt;BODY&gt;</TD>
			<TD VALIGN="TOP"><I>HTMLBodyElement</I></TD>
			<TD VALIGN="TOP"><I>IHTMLBodyElement</I></TD>
		</TR>
		
		<TR>
			<TD VALIGN="TOP">&lt;A&gt;</TD>
			<TD VALIGN="TOP"><I>HTMLAnchorElement</I></TD>
			<TD VALIGN="TOP"><I>IHTMLAnchorElement</I></TD>
		</TR>
		
		<TR>
			<TD VALIGN="TOP">&lt;IMG&gt;</TD>
			<TD VALIGN="TOP"><I>HTMLImgElement</I></TD>
			<TD VALIGN="TOP"><I>IHTMLImgElement</I></TD>
		</TR>

	</TABLE>
</P>

<P>Most of the major HTML elements have objects and interfaces that apply 
specifically to them. Some of the minor HTML elements, such as &lt;B&gt; and &lt;I&gt;, use 
the same interface&#8212;<I>IHTMLElement</I>&#8212;in both Visual Basic and Visual C++ 
applications. In fact, you can use 
<I>IHTMLElement</I> to refer to all the elements on a Web page.</P>

<P>From within Visual Basic applications, you use an HTML element object in 
the same way you use any other object. And not surprisingly, because VBScript is a 
subset of Visual Basic, you access the DHTML Object Model from Visual Basic in the 
same way you access it from VBScript applications. (The syntax is similar.) As long as 
you have a reference to the <I>WebBrowser</I> object or 
<I>InternetExplorer</I> object in your application, you can retrieve a reference to an 
HTML document and all the HTML elements contained therein.</P>

<P>Accessing an object or an interface of the DHTML Object Model from within 
a Visual C++ application is a little more difficult than doing so from within a Visual 
Basic application. Just remember that every HTML element is an object, and objects 
have interfaces, so each HTML element on a Web page has an interface. Once you 
have a pointer to the <I>IWebBrowser2 </I>interface of the WebBrowser, you can easily get 
a pointer to the document and any HTML element object it contains. I'll show you 
how to do this shortly, but first let's see how to access the DHTML Object Model from 
within Visual Basic.</P>

<P><DIV CLASS="SIDEBAR"><BLOCKQUOTE>
<B>For More Information</B>

<P>In this chapter, you'll learn how to access and change the data on a Web 
page by using the objects and interfaces in the Internet Explorer DHTML 
Object Model. You will also learn how to handle events in DHTML. I'm going to 
show you only a few of the objects, interfaces, and events in the object model 
that you can access. Far too many exist to cover in one chapter. If you need 
more information, refer to the MSDN Online Web Workshop or to the book, 
<I>Dynamic HTML Reference and Software Development Kit: Comprehensive Reference 
to DHTML for Microsoft Internet Explorer 5.0</I>, available from Microsoft Press.</P>
</BLOCKQUOTE></DIV>
</P>


</BODY>
</HTML>






<HTML>
<head>
<link rel="STYLESHEET" type="text/css" href="Progie5.css">
<TITLE>Adding Context Menu Items</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch10f.htm">[Previous]</A> <A HREF="ch11a.htm">[Next]</A><P>

<A NAME="250"><H1>Adding Context Menu Items</H1></A>

<P>To wrap up our work with browser extensions, let's add menu items to 
Internet Explorer's standard context menu, the menu that is displayed when you 
right-click in the document window. You can add context menu items that execute script 
files located at a specific URL. Just as with adding toolbar buttons or menu items, 
creating context menu items involves adding some information to the Registry.</P>

<P>To add menu items to the Internet Explorer context menu, follow these steps:</P>
<OL>
<P><LI>Create a new key under the following Registry key:</LI></P>
<P><TABLE CELLPADDING="5" WIDTH="95%"><TR><TD>
<PRE>HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\MenuExt</PRE>
</TD></TR></TABLE></P>

<P><LI>Give the new key the name of the item as you want it to appear in 
the context menu. Include an ampersand character (&amp;) before the letter of 
your menu item that you want used as a shortcut key. The new key will 
look like this:</LI></P>
<P><TABLE CELLPADDING="5" WIDTH="95%"><TR><TD>
<PRE>HKEY_CURRENT_USER\Software\Microsoft\Internet 
   Explorer\MenuExt\&lt;Your Menu Text&gt;</PRE>
</TD></TR></TABLE></P>
   
<P><LI>Set the default value of this new key to the URL of the script file that 
you want to execute when this context menu item is selected. This script 
can obtain the <I>window </I>object of the parent window from the 
<I>menuArguments </I>property of the 
<I>external</I> object. For example, if you want to obtain 
the URL of the current document, use the <I>menuArguments 
</I>property, like this:</LI></P>
<P><TABLE CELLPADDING="5" WIDTH="95%"><TR><TD>
<PRE>alert(window.external.menuArguments.document.location.href);</PRE>
</TD></TR></TABLE></P>

<P>That's it. You're finished! Couldn't be much simpler. Now you might want 
to add a few optional values to your key to be more specific about when your 
menu item should be displayed and how the script should be run. For example, you 
might want to specify that your context menu item is displayed in the default context 
menu or only when the user right-clicks on a link. To specify when your context menu 
item should be displayed, create a new binary value under the context menu item key 
you created in step 1. The name of this binary value should be 
<I>Contexts</I>, and the value of <I>Contexts</I> should be one of the values listed in Table 10-3.</P>
</OL>

<P><B>Table 10-3.</B> Contexts <I>Binary Values</I></P>
<P><TABLE CELLPADDING="5" WIDTH="95%"><TR>
<TH><i>Context</i></TH>
<TH><i>Value</i></TH>
<TH><i>Description</i></TH>
</TR><TR>
<TD VALIGN="TOP">Default</TD>
<TD VALIGN="TOP"><I>0x01</I></TD>
<TD VALIGN="TOP">The menu item is displayed in the 
default context menu.</TD>
</TR><TR>
<TD VALIGN="TOP">Images</TD>
<TD VALIGN="TOP"><I>0x02</I></TD>
<TD VALIGN="TOP">The menu item is displayed in the 
context menu for images.</TD>
</TR><TR>
<TD VALIGN="TOP">Controls</TD>
<TD VALIGN="TOP"><I>0x04</I></TD>
<TD VALIGN="TOP">The menu item is displayed in the 
context menu for ActiveX controls.</TD>
</TR><TR>
<TD VALIGN="TOP">Tables</TD>
<TD VALIGN="TOP"><I>0x08</I></TD>
<TD VALIGN="TOP">The menu item is displayed in the 
context menu for tables.</TD>
</TR><TR>
<TD VALIGN="TOP">Text Selection</TD>
<TD VALIGN="TOP"><I>0x10</I></TD>
<TD VALIGN="TOP">The menu item is displayed in the 
context menu for selected text.</TD>
</TR><TR>
<TD VALIGN="TOP">Anchor</TD>
<TD VALIGN="TOP"><I>0x20</I></TD>
<TD VALIGN="TOP">The menu item is displayed in the 
context menu for anchors (also known as hyperlinks).</TD>
</TR></TABLE></P>


<P>Furthermore, you can combine these values to specify more than one 
context by logically OR'ing values together. For example, if you wanted the menu item 
to be displayed for the context menus for text selection and anchors, you would set 
the value of <I>Contexts </I>to <I>30</I>.</P>


<P><DIV CLASS="NOTE"><BLOCKQUOTE><B>NOTE</B><HR>Don't enter the 
<I>0x</I> portion of the value in the Registry. The 
<I>0x</I> just appears in the table so that you know that these are hexadecimal values.
</BLOCKQUOTE></DIV></P>


<P>Besides being able to specify in which context menu you want the menu 
item to display, you can also specify how you want the script to run. You can create 
a <I>DWORD</I> value that is named <I>Flags</I> under your menu item key. Currently, only 
one value can be specified for <I>Flags</I>: 
<I>0x01</I>. This value causes the script to be run as if 
it had been called via the <I>showModalDialog</I> method, in which case your script will 
not be able to access the <I>window </I>object of the parent through the 
<I>menuArguments</I> property of the <I>external 
</I>object.</P>
<P>That's it! Now that you've read this chapter, you can create your own 
Web Accessories by using different types of browser extensions. You can also 
download a number of Web Accessories from Microsoft's Web site&#8212;such as those 
created by Microsoft developers and a few created by third-party vendors&#8212;from 
<I><A HREF="http://www.microsoft.com/windows/ie/webaccess" TARGET="_window2">http://www.microsoft.com/windows/ie/webaccess</A>.</I>
Some of the Web Accessories are Explorer Bars that enhance your navigation experience. Others include a quick search tool, 
a context menu item to list all the links on a page, a context menu item that lets 
you zoom images on your Web page, and many more. I encourage you to download 
them all and give them a try.</P>

<P><DIV CLASS="SIDEBAR"><BLOCKQUOTE>
<P><B>What's Next?</B></P>
<P>In this chapter, you learned how to customize Internet Explorer to fit your 
needs and the needs of your users. By creating Web Accessories, you can 
customize Internet Explorer to make it easier to use.</P>
<P>In the <a href="ch11a.htm">next chapter</a>, we'll check out the hottest new Internet Explorer 
5 technology&#8212;Behaviors. Behaviors allow you to create components that you 
can reuse from one Web page to the next. You can create these components by 
using only DHTML and script or by using C++ and COM.</P>
</BLOCKQUOTE></DIV></P>
</BODY>
</HTML>






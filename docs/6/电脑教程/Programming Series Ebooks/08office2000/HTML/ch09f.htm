<HTML>
<HEAD>
<TITLE>Determining Client Browser Capabilities</TITLE>
<link rel="STYLESHEET" type="text/css" href="webcomp.css">
<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch09e.htm">[Previous]</A> <A HREF="ch09g.htm">[Next]</A><P>

<A NAME="188"><H1>Determining Client Browser Capabilities</H1></A>

<P>In this solution, I want to illustrate how you can determine the browser requesting 
your ASP page and generate appropriate content based on its capabilities. If the 
browser supports COM controls, I want to send back an option to view the mortgage 
calculation in the Spreadsheet control, allowing users to see the content in full fidelity 
and directly edit the variables to perform a &quot;what if&quot; analysis. If the browser supports 
cascading style sheets (CSS), I want to use style attributes for formatting static 
results because style attributes provide more control over the table appearance and layout.</P>

<P>Those of you familiar with ASP programming might already know about 
the BrowserType object. For those who are not familiar with this object, I will 
briefly describe what it provides and how it works; for those who are familiar with it, I 
will show you how I am using it to determine what content to return.</P>

<P>The BrowserType object is supplied with IIS and is implemented in the 
MSWC library. It uses an INI file called Browscap.ini to determine what functionality 
a particular browser supports, such as COM controls. The object knows the type of 
client browser because all browsers by convention pass a string describing themselves 
when requesting information from a web server. This string contains the browser name, 
the full version number, and an indication of whether it is a beta or released version. 
The BrowserType object matches this string to one contained in the Browscap.ini file 
to determine which capabilities it should indicate the browser supports. Needless to 
say, the Browscap.ini file is the one that contains all the real information, and it is 
extremely important to keep this file up to date.</P>

<P>Using the BrowserType object is quite easy. The following code, taken 
from Default.asp, shows how I use it:</P>

<P><table cellpadding=5 width="95%"><tr><td>
<PRE>
' Get information about the client browser
Set m_BrowserInfo = Server.CreateObject(&quot;MSWC.BrowserType&quot;)
On Error Resume Next
If IsNumeric(m_BrowserInfo.majorver) Then
    m_nMajorVer = CLng(m_BrowserInfo.majorver)
Else
    m_nMajorVer = 0
End If
If IsNumeric(m_BrowserInfo.minorver) Then
    m_nMinorVer = CLng(m_BrowserInfo.minorver)
Else
    m_nMinorVer = 0
End If
m_fCOMCtls = CBool(m_BrowserInfo.ActiveXControls)
m_sBrowserName = m_BrowserInfo.browser
On Error Goto 0

' Determine whether we should use CSS for formatting.
' Note: This assumes that if the browser's major
' version is 4 or greater, it supports CSS. That
' might not be the best test, and it would be better
' to include this in the Browscap.ini file for each browser.
m_fUseCSS = (m_nMajorVer &gt;= 4)
</pre></td></tr></table></p>

<P>As mentioned in the code comment above, there does not seem to be a 
property for determining whether the client browser supports CSS. In place of an 
explicit property, I check the major version number of the browser and if it is equal to 
or greater than 4, I assume that the browser does support CSS. Although Internet 
Explorer 3 supported some parts of the CSS standard, in this solution I assume that 
I should use CSS formatting attributes only for version 4 or later.</P>

<P><div class="sidebar"><blockquote>
<b>So Where Do I Find the Current Browscap.ini File?</b>

<P>When I started to write the code for this chapter, I quickly built a page that 
would echo back to the client browser a True or False value indicating whether 
the page thought the browser supported COM controls. I started Internet 
Explorer version 5.0, hit the page, and promptly got back False. &quot;What do you 
mean Internet Explorer 5.0 doesn't support COM controls?&quot; I mused.</P>

<P>Of course, my problem was that I had installed IIS 4, which shipped 
long before Internet Explorer 5 released, and therefore, the Browscap.ini file on 
my machine had no information for Internet Explorer 5. So I wondered, &quot;How 
do I get the most current version of this file?&quot; I went to 
http://www.microsoft.com, went to the search page, and typed 
<I>browscap.ini</I>. Amazingly, the first search result was 
titled &quot;Where can I find the latest browscap.ini file?&quot; Following the 
link will eventually lead you to the cyScape.com site, where you can download 
the latest version of this file for free after viewing lots of advertising for their 
product that automatically downloads new versions for you.</P>

<P>If you run the Loan Calculation solution using Internet Explorer 5 and 
you have not downloaded the newest Browscap.ini file, you will notice that you 
do not have the option to view the results in an interactive Spreadsheet 
control. Update the file and you will see the option. You can also manually 
append <I>Interactive=on</I> to the end of the URL generated by the form to force the 
ASP script to return an interactive page.</P>
</blockquote></div></p>

</BODY>
</HTML>






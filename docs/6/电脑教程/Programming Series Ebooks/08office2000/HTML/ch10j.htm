<HTML>
<HEAD>
<TITLE>Summary of Chapter 10</TITLE>
<link rel="STYLESHEET" type="text/css" href="webcomp.css">
<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch10i.htm">[Previous]</A> <A HREF="ch11a.htm">[Next]</A><P>

<A NAME="205"><H1>Summary</H1></A>

<P>Property binding introduces a push model into the Spreadsheet component. 
By implementing a control that raises property change notifications, you can push 
new data values into a spreadsheet model as they become available, without writing 
any script to coordinate the two controls. Nonprogramming users authoring pages 
in FrontPage can use your control and the Spreadsheet control to build solutions 
such as the real-time stock portfolio described in this chapter.</P>

<P>However, remember that property binding works only if you are building 
your solution in Internet Explorer. Also, if you just want to expose custom calculations 
to a spreadsheet model, property binding is not necessary and you will instead 
want to implement a custom function library. <A HREF="ch11a.htm">Chapter 11</A> explains how to do that and 
shows you some interesting functions that extend the Spreadsheet component to work 
with other kinds of data sources, such as a multidimensional database.</P>
</BODY>
</HTML>






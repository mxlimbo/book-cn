<HTML>
<HEAD>
	<link rel="STYLESHEET" type="text/css" href="Library.css">
<TITLE>Digitally Signing VBA Projects</TITLE>


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch14e.htm", "chaaa.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="435"><H1>Digitally Signing VBA Projects</H1></A>

<p>The <i>Microsoft Office 2000/Visual Basic Programmer's Guide </i>is a rich source of documentation on many critical aspects of operation, including how to sign a project digitally. If you obtain an Authenticode certificate, you can digitally sign Word, Excel, PowerPoint, and Outlook VBA projects so that they do not display the macro warning message even when security is set to high.</p>

<p>Figure 14-5 shows a pair of warning messages. The top one appears for unsigned documents with VBA projects. The bottom one appears for documents with signed projects before they are trusted. You cannot add a digital signature to the trusted list directly&#8212;you must select the Always Trust Macros From This Source check box and enable its macros. Thereafter, all documents with the digital signature for that document are trusted, and no macro warning messages appear for properly signed VBA projects from that source.</p>

<P><A HREF="javascript:fullSize('F14QH05x.htm')"> <img src="Images/F14QH05.JPG" width=404 height=406 border=0 ALT="Click to view at full size."> </A>
</P><P><!-- CAPTION --><b>Figure 14-5.</b> <i>A typical macro warning message for an unsigned document and a warning message for the first document from a new digitally signed source.</i><!-- /CAPTION -->
</P>

<p><div class="NOTE"><blockquote>
<b>NOTE</b><hr>
Authenticode verification works only on workstations that run Internet Explorer version 4 or later. Workstations running an earlier version of Internet Explorer or a different brand of browser will not have the Authenticode verification software installed on the workstation.
</blockquote></div>
</p>

<p>Authenticode technology relies on public-key cryptography to sign software publications, such as VBA projects. When an author saves a file, the Authenticode software performs a hashing operation to create a &quot;digital fingerprint&quot; for the document and encrypts the fingerprint with the private key. When a recipient receives the document, the Authenticode software attempts to unlock the fingerprint and decode it. Documents that pass this process can be opened without the macro warning message. Others bring up the message. If another user modifies the VBA project and saves it, that removes the digital signature, so a warning message will appear the next time someone tries to open the file.</p>

<p>To digitally sign a VBA project, you must first obtain a valid digital certificate. There are three ways to do this. The first way is to create your own with the Selfcert.exe utility that ships with Office 2000. This is appropriate for personal testing or for a small workgroup. The second way is to obtain a certificate from your organization's internal certification authority. This is appropriate for an enterprise or for a major enterprise and its suppliers. The third way is to obtain a digital certificate from a commercial certification authority. This is a good general solution.</p>

<p>The digital signature applies strictly to the VBA project and not its associated Office document, such as a workbook. This allows a user to modify a worksheet but not the associated VBA project. From the VBE window, select the project in the Project Explorer window. Then choose Digital Signature from the Tools menu. The first time that you use the certificate, select the certificate and click OK twice. Otherwise, just click OK.</p>

<p>The following pair of procedures shows how to determine whether a workbook file is digitally signed. The procedure <i>callIsDSigned</i> calls the function <i>isDSigned</i> twice. In the first call, <i>callIsDSigned</i> passes along the name for the current file. In the second call, <i>callIsDSigned</i> shows one way of gathering a file name from the user and passing it along to <i>isDSigned</i>. Since a workbook must be open to determine whether it is digitally signed, <i>callIsDSigned</i> opens the file with the name input by the user.</p>

<p>
	<table cellpadding=5 width="95%">
		<tr>
			<td>
<pre>Sub callIsDSigned()
Dim myName As String

'Check whether current workbook is digitally signed.
    myName = Application.Workbooks(1).Name
    isDSigned (myName)

'Prompt user for workbook name and
'check whether that workbook is digitally signed.
    myName = InputBox(&quot;Type name as filename.xls&quot;, _
        &quot;Programming Microsoft Access 2000&quot;, myName)
    Workbooks.Open myName
    isDSigned (myName)

End Sub


Public Function isDSigned(fileName As String)
    isDSigned = _
        Application.Workbooks(fileName).VBASigned
    If isDSigned Then
        Debug.Print fileName &amp; &quot; is digitally signed.&quot;
    Else
        Debug.Print fileName &amp; &quot; is not digitally signed.&quot;
    End If

End Function
</pre></td>
		</tr>
	</table>
</p>

<p>The <i>IsDSigned</i> function stores the return value of the <i>VBASigned</i> property and then branches to one of two print statements based on that value. The property is set to <i>True</i> if the workbook is digitally signed. You can use similar code to determine whether Word documents and PowerPoint presentations have been digitally signed. (The precise syntax for opening a file varies across applications, but Word and PowerPoint also support the <i>VBASigned</i> property.)</p>
</body>
</html>




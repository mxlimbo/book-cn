<HTML>
<HEAD>
	<link rel="STYLESHEET" type="text/css" href="Library.css">
<TITLE>Creating Tables with Wizards</TITLE>


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch03b.htm", "ch03d.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="82"><H1>Creating Tables with Wizards</H1></A>

<p>Access wizards simplify many database tasks, such as building and 
maintaining tables. Access offers more than 20 database wizards, such as the Contact Management wizard, Time And Billing wizard, Service Call Management wizard, and Video Collection Management wizard. All of these create whole applications, including the table design. The Table wizard automatically builds individual tables and even adds primary keys to a table and links one table to another table for you. The Field Builder helps you maintain tables by simplifying the addition of fields.

<A NAME="83"><H2>Database Wizards</H2></A>

<p>You can view the available database wizards when you start Access 2000 
by selecting the Access Database Wizards, Pages, And Projects option in the 
Microsoft Access dialog box and then clicking OK. When the New dialog box 
appears, click on the Databases tab and then double-click the icon for the wizard that you want to start. (You can also open the New dialog box by choosing New from the File menu.)</P>


<p>The basic functionality of a wizard-generated database is perfect for 
novices because it contains forms, tables, reports, and even some sample data. You can examine the database design and use it as a model for your own custom applications. More advanced developers can edit the basic design by adding their own tables, queries, forms, reports, and modules.

<A NAME="84"><H2>The Table Wizard</H2></A></P>


<p>The Table wizard focuses exclusively on table design. You can open it from the Tables item in the <I>Objects </I>collection in the Database window. Double-click the Create Table By Using Wizard icon to open the initial Table Wizard dialog box. This wizard offers a collection of prebuilt business and personal designs. The business table designs include 
<I>Contacts</I>,<I> Customers</I>,<I> Employees</I>,<I> Products</I>,<I> Orders</I>,<I> Invoices</I>, and <I>Events</I> tables. The personal designs are very complete and can also serve some small business functions. The designs include <I>Recipes</I>, <I>Plants</I>, <I>Exercise Log</I>, 
<I>Books</I>, <I>Video Collection</I>, and <I>Recordings </I>tables. The wizard does not populate a table with starter values, but it does suggest links to other tables that are already in the database design. It will even 
automatically construct these relationships.</P>


<p>After selecting a prebuilt table design, you can populate your 
custom version of it with fields from a list box. The initial Table Wizard dialog box offers a set of buttons for transferring field names between the Sample Fields list box and the Fields In My New Table list box. Figure 3-4 shows an <I>Invoices</I> table in the process of construction. Several sample fields have been transferred to the Fields In My New Table list box. At this point, you can click Next three times to construct an <I>Invoices</I> table. The defaults create a primary key for you, 
link your new table to any table already in the database that links to it naturally, and let you enter data directly into the table. When you click the final Finish button after accepting all the defaults, the table opens in Datasheet view so you can populate it with values. You can override any of the defaults before clicking Finish in the final dialog box.</P>


<P><A HREF="javascript:fullSize('F03QH04x.htm')"> <img src="images/F03QH04.JPG" width=404 height=268 border=0 ALT="Click to view at full size."> </A>
</P><P><!-- CAPTION --><B>Figure 3-4.</B> <I>Creating an </I>Invoices<I> table in the initial Table Wizard dialog box.</I><!-- /CAPTION -->
</P>


<p>The automatic detection of links to other tables is particularly helpful 
if you are just starting to learn about relational databases. Figure 3-5 below shows the third Table Wizard dialog box for the creation of an <I>Invoice Details</I> table. This table can include an <I>InvoiceID</I> field that acts as a foreign key to the <I>Invoices</I> table. If the wizard detects the <I>Invoices</I> table, it automatically relates the two tables. While you can override the link or create other links not suggested by the wizard, the safe thing for new developers to do is to accept the default recommendations.</P>


<P><A HREF="javascript:fullSize('F03QH05x.htm')"> <img src="images/F03QH05.JPG" width=404 height=268 border=0 ALT="Click to view at full size."> </A>
</P><P><!-- CAPTION --><B>Figure 3-5.</B> <I>A Table Wizard dialog box showing the detection of an automatic link between the </I>Invoice Details<I> table and the previously created </I>Invoices<I> table.</I><!-- /CAPTION -->
</P>


<A NAME="85"><H2>The Field Builder</H2></A>

<p>After you use a wizard to construct a table, you might want to add another field to the table. This apparently simple task can be more difficult than it initially appears, especially if the field needs to link with fields in other tables. This is because it is easier to create a new field with a different data type than it is to create a field in another table. When you try to relate similarly named fields from different tables whose data types are not identical, the attempt will fail without explanation. One solution to this problem is to use the Field Builder 
when you add new fields to tables.</P>


<p>You open the Field Builder by right-clicking on a blank row in a 
table's Design view and choosing Build from the shortcut menu. The Field 
Builder dialog box has two list boxes: one for selecting a table type, such as <I>Invoices</I> or <I>Invoice Details</I>, and one for selecting a field from that table type. When you highlight different table types, the entries change in the Sample Fields list box. Find the field that you want to add, and click OK to add it to the table. This ensures that your new fields will have data types that are consistent with the fields added using the Table wizard.</P>

</BODY>
</HTML>





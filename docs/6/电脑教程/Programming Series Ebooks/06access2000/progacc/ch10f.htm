<HTML>
<HEAD>
	<link rel="STYLESHEET" type="text/css" href="Library.css">
<TITLE>Transactions</TITLE>


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch10e.htm", "ch11a.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="348"><H1>Transactions</H1></A>


<P>You can use transactions to bundle two or more database operations so 
that either they all occur or none of them occur. Transactions are useful in two types of situations: when your application must perform a set of operations as a unit (such as a funds transfer between a savings account and a checking account); and when you have to speed up a set of database operations by wrapping them in a transaction (because writing to a temporary cache in memory is faster than writing to a disk for each element within the transaction group).</P>


<P>
Three <I>Connection </I>object methods in ADO support transactions: 
<I>BeginTrans</I>, <I>CommitTrans</I>, and 
<I>Rollback</I>. <I>BeginTrans </I>opens a transaction level. Jet 
supports up to five nested transactions. Once you start a transaction, you can end it with either the <I>CommitTrans </I>method or the <I>Rollback </I>method. You use <I>CommitTrans </I>to complete the database operations. You invoke the <I>Rollback </I>method to end a transaction without performing the database operations launched since the last <I>BeginTrans </I>method.</P>

<P>
The procedure below uses three transaction methods for the 
<I>Connection </I>object. It loops through the records in a database while looking for one of 
three criteria matches. Once it finds a match, the procedure writes 
<I>US </I>in a field that Access stores in a data cache rather than to the database file. The 
procedure invokes the <I>BeginTrans </I>method just before starting the 
<I>Do </I>loop. At the end of the loop, the procedure asks whether the user wants to commit the 
changes. If the user replies <I>yes</I>, the sample invokes the 
<I>CommitTrans </I>method to commit the changes to the database. If the user replies 
<I>no</I>, the procedure discards the changes by invoking the 
<I>Rollback </I>method.</P>

<P><TABLE CELLPADDING=5 WIDTH="95%"><TR><TD>

<PRE>Sub changeInTrans()
On Error GoTo changeTrap
Dim cnn1 As ADODB.Connection
Dim rst1 As New ADODB.Recordset
Dim iChanges As Long
Const conLockedByAnotherUser = -2147217887

'Open recordset based on WebBasedList in current project.
Set cnn1 = CurrentProject.Connection
rst1.Open &quot;WebBasedList&quot;, cnn1, adOpenKeyset, _
    adLockPessimistic, adCmdTable
    
'Loop through all records to find those to update to US.
cnn1.BeginTrans
Do Until rst1.EOF
    If rst1.Fields(&quot;Country&quot;) = &quot;&quot; _
        Or IsNull(rst1.Fields(&quot;Country&quot;)) = True _
        Or rst1.Fields(&quot;Country&quot;) = &quot;USA&quot; Then
        rst1.Fields(&quot;Country&quot;) = &quot;US&quot;
        iChanges = iChanges + 1
    End If
rst1.MoveNext
Loop
    
'Commit all changes if user says so.
'Roll changes back otherwise.
If MsgBox(&quot;Are you sure that you want to update&quot; &amp; _
    &quot; these &quot; &amp; iChanges &amp; &quot; records?&quot;, vbYesNo, _
    &quot;Programming MS Access&quot;) = vbYes Then
    cnn1.CommitTrans
Else
    cnn1.RollbackTrans
End If
Exit Sub
    
changeExit:
    Exit Sub

changeTrap:
    If Err.Number = conLockedByAnotherUser Then
        MsgBox &quot;Recordset not available for update.  &quot; &amp; _
            &quot;Try again later.&quot;, vbCritical, _
            &quot;Programming MS Access&quot;
    Else
        Debug.Print Err.Number; Err.Description
    End If
    cnn1.RollbackTrans
    Resume changeExit
    
End Sub
</PRE>
</TD></TR></TABLE></P>


<P>The <I>changeInTrans </I>procedure also invokes the 
<I>Rollback </I>method if a run-time error occurs&#8212;such as when the database is locked by another user. In this situation, it is impossible to edit one or more records. With some 
databases, performing an operation on a subset of records can corrupt the whole database. If the procedure encounters an error for any reason, it rolls back any pending operations before exiting the procedure. Invoking the <I>Rollback </I>method maintains the integrity of the database file.</P>

</BODY>
</HTML>





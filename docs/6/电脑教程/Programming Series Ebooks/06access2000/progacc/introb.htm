<HTML>
<HEAD>
	<link rel="STYLESHEET" type="text/css" href="Library.css">
<TITLE>What's New with Access 2000?</TITLE>


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("introa.htm", "ch01a.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="461"><H1>What's New with Access 2000?</H1></A>

<P>Access 2000 makes major strides in many areas. Microsoft has created a 
profoundly new product that still feels like the Access you know. This book 
highlights five specific areas of innovation: ActiveX Data Objects (ADO), enhanced 
SQL Server interoperability, Visual Basic for Applications (VBA) and packaging 
enhancements, Microsoft Jet engine improvements, and improved Web interoperability.</P>

<A NAME="462"><H2>ActiveX Data Objects</H2></A>

<P>ADO replaces nearly all of the data access functions that you previously 
performed with Data Access Objects (DAO). Access 2000 offers ADO functionality via 
three libraries: ADODB, ADOX, and JRO.</P>

<P>The ActiveX Data Objects 2.1 (ADODB) library offers core data access 
processing functions. The main ADODB objects include the 
<I>Connection</I>, <I>Recordset</I>, and <I>Command 
</I>objects. You can use these objects, along with their 
properties and methods, to connect to and manipulate a data source. The 
<I>Connection </I>object offers an interface to the new OLE DB provider 
technology. This technology is critical to the Microsoft Universal Data Access (UDA) 
architecture that provides high-performance access to a variety of data formats (both 
relational and nonrelational) on multiple platforms across the enterprise. UDA 
facilitates the integrated processing of traditional data sources, such as Jet and 
SQL Server data sources, with non-traditional sources, such as mail, file 
directories, and even video. UDA represents an evolutionary advance beyond today's 
standard data interfaces, such as Open Database Connectivity (ODBC), Remote 
Data Objects (RDO), and DAO.</P>

<P>The Microsoft ADO Extensions 2.1 for DDL and Security (ADOX) 
library offers an object-based approach to data definition and user-level security. 
It provides the traditional Jet user-level collections of 
<I>Users </I>and <I>Groups</I>. It ties permissions in database files to members of the 
<I>Users</I> and <I>Groups</I> collections in a workgroup information file. The ADOX model for this 
library tackles data definition chores using such objects as 
<I>Tables</I>, <I>Columns</I>, <I>Indexes</I>, 
<I>Keys</I>, <I>Views</I>, and <I>Procedures</I>. You can use these objects to dynamically define new tables, 
indexes, and relationships among tables. You can also define queries on the tables.</P>

<P>The Microsoft Jet and Replication Objects 2.1 (JRO) library primarily 
delivers Jet engine replication services through an ADO interface. This new 
ADO model lets you take advantage of all the new programmatic Jet database 
replication features. In addition, this model includes Jet engine functions such 
as compacting databases and refreshing the cache.</P>

<A NAME="463"><H2>Enhanced SQL Server Interoperability</H2></A>

<P>With Access 2000, you can process enterprise databases as easily as you 
work with Microsoft Jet databases. ADO connectivity is a part of the reason. 
However, integration is even tighter for SQL Server 6.5 and SQL Server 7 with 
the new Access Project. This new file type (.adp) works with SQL Server 
and Microsoft Data Engine (MSDE) databases in much the same way that .mdb 
files facilitate the processing of Jet databases. MSDE is a new database engine 
built on the SQL Server 7 model; it is meant for small workgroup solutions 
and complements the traditional Jet database engine. You can use either Jet or 
MSDE to develop solutions.</P>

<P>Access Projects explicitly expose views and procedures in the 
familiar database container framework. You can instantly connect to remote SQL 
Server databases, with the same graphical simplicity that you 
have with Jet databases. You can also use the SQL Server data with Access forms and reports (just 
as you do Jet data).</P>

<P>You also have seamless OLE DB interoperability with SQL Server 
and other back-end data sources. Using the ADO <I>Connection</I> 
object and OLE DB providers, you can connect to remote data sources and easily reference 
them programmatically for your custom applications.</P>

<A NAME="464"><H2>VBA and Packaging Enhancements</H2></A>

<P>Access continues to move toward VBA parity with the rest of Office. Access 
2000 introduces a Visual Basic Editor (VBE) that has the same user interface as 
the one in Microsoft Word, Excel, and PowerPoint. You can transfer your 
code management and development skills directly to these other packages and 
thus enrich non-Access applications with data access functions.</P>

<P>The Office 2000 Developer Edition offers improved packaging and 
deployment options. For example, you can deploy solutions with MSDE and 
solutions that rely on a SQL Server-like database. You get the richness of views 
and procedures from the graphical interface as well as the programmatic 
interface. This is particularly important if an application might grow to require the 
capabilities of a full-fledged SQL Server database.</P>

<P>A new deployment option lets you deploy custom setup packages for 
your solutions via the Internet. You can thus vastly extend the range of clients that 
you serve. Your pool of potential development clients expands to include 
anyone around the globe with an Internet connection.</P>

<A NAME="465"><H2>Jet Engine Improvements</H2></A>

<P>Access 2000 ships with version 4 of the Jet database engine, which offers 
improvements in several areas of functionality. Particularly attractive is the 
availability of row-level page locking. Prior versions of Access performed locking at 
no lower than the page level. One reason for the introduction of row-level 
locking is the availability of Unicode support for text characters. You can now 
represent text data in different languages in multilingual applications. The new 
coding for text-based fields expands the space requirements for each character from 
1 to 2 bytes and the page size from 2 to 4 KB. Since the page size has 
grown, Microsoft has enabled row-level locking to reduce the possibility of 
concurrent locks on the same page in multi-user applications.</P>

<P>Database replication has also improved in several areas. One 
improvement is the availability of column-level replication. In previous Jet versions, 
conflicts were detected at the row level so two replicas conflicted even if 
they changed different fields for the same record. Column-level replication 
improves performance by eliminating such conflicts. Access 2000 also introduces 
two-way replication between Jet and SQL databases. The prior version permitted 
only one-way replication from SQL Server to Jet.</P>

<P>Another praiseworthy improvement is programmatic control for 
changing the value of AutoNumber fields. You can set the initial and step values 
for AutoNumber fields when you create a table. You can also change these 
values for the next record in a table. In an Access Project, you can set 
AutoNumber fields from Table Design view. You can also change these values after a 
table is initially created.</P>

<P>Jet also offers SQL-level access to views and procedures. The Jet 
SQL improvements let you create and alter both types of database object models.</P>

<A NAME="466"><H2>Improved Web Interoperability</H2></A>

<P>One of the most significant new features of Access 2000 is data access 
pages, which act like Access forms and reports on the Web. You can design 
Web pages that bind directly to Jet or SQL Server data sources. With pages that act 
like forms, users can edit, add, and delete records graphically from a page. You 
can use design-time tools to programmatically control these features as well as 
sorting and filtering capabilities. While these pages do not enable subforms, you 
can create grouped data access pages that expand conditionally based on 
user input.</P>

<P>Data access pages can also serve as a host for the new Office 2000 
Web Components, which you can use to create pages that contain interactive 
spreadsheets, dynamic charts, and pivot tables. You can also tie the spreadsheet 
and charting Web components to data displayed in grouped and ungrouped 
data access pages. This means that you can present calculations and charts 
that change dynamically as you move from one record to the next. Data access 
pages with pivot tables do not interact with other data sources on a page, but they 
do offer Excel-style &quot;pivoting&quot;&#8212;graphically moving parts of the data for a 
different view. In addition, pivot tables can be used for the analysis of multiple kinds 
of data, including SQL Server, Jet, and online analytical processing (OLAP) 
data sources.</P>
</BODY>
</HTML>





<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="basicIE4.css" TYPE="text/css">
<TITLE>MFC Text Editing Options</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY>
<A NAME="264"><H1>MFC Text Editing Options</H1></A>
<P>Windows itself supplies two text editing tools: edit control and Windows rich edit common control. Both can be used as controls within dialogs, but both can also be made to look like view windows. The MFC library supports this versatility with the <I>CEditView</I> and <I>CRichEditView</I> classes.
<A NAME="265"><H2>The <I>CEditView</I> Class</H2></A>
<P>This class is based on the Windows edit control, so it inherits all the edit control's limitations. Text size is limited to 64 KB, and you can't mix fonts. AppWizard gives you the option of making <I>CEditView</I> the base class of your view class. When the framework gives you an edit view object, it has all the functionality of both <I>CView</I> and <I>CEdit</I>. There's no multiple inheritance here, just some magic that involves window subclassing. The <I>CEditView</I> class implements and maps the clipboard cut, copy, and paste functions, so they appear active on the Edit menu.
<A NAME="266"><H2>The <I>CRichEditView</I> Class</H2></A>
<P>This class uses the rich edit control, so it supports mixed formats and large quantities of text. The <I>CRichEditView</I> class is designed to be used with the <I>CRichEditDoc</I> and <I>CRichEditCntrItem</I> classes to implement a complete ActiveX container application. 
<A NAME="267"><H2>The <I>CRichEditCtrl</I> Class</H2></A>
<P>This class wraps the rich edit control, and you can use it to make a fairly decent text editor. That's exactly what we'll do in the EX13A example. We'll use an ordinary view class derived from <I>CView</I>, and we'll cover the view's client area with a big rich edit control that resizes itself when the view size changes. The <I>CRichEditCtrl</I> class has dozens of useful member functions, and it picks up other functions from its <I>CWnd</I> base class. The functions we'll use in this chapter are as follows.
<TABLE WIDTH="95%" CELLPADDING="5">
<TR><TD VALIGN="TOP"><B>Function</B></TD><TD VALIGN="TOP"><B>Description</B></TD></TR>
<TR><TD VALIGN="TOP"><I>Create</I></TD><TD VALIGN="TOP">Creates the rich edit control window (called from the parent's WM_CREATE handler)</TD></TR>
<TR><TD VALIGN="TOP"><I>SetWindowPos</I></TD><TD VALIGN="TOP">Sets the size and position of the edit window (sizes the control to cover the view's client area)</TD></TR>
<TR><TD VALIGN="TOP"><I>GetWindowText</I></TD><TD VALIGN="TOP">Retrieves plain text from the control (other functions available to retrieve the text with rich text formatting codes)</TD></TR>
<TR><TD VALIGN="TOP"><I>SetWindowText</I></TD><TD VALIGN="TOP">Stores plain text in the control</TD></TR>
<TR><TD VALIGN="TOP"><I>GetModify</I></TD><TD VALIGN="TOP">Gets a flag that is 
<I>TRUE</I> if the text has been modified (text modified if the user types in 
the control or if the program calls <I>SetModify(TRUE)</I>)</TD></TR>
<TR><TD VALIGN="TOP"><I>SetModify</I></TD><TD VALIGN="TOP">Sets the modify flag to <I>TRUE</I> or <I>FALSE</I></TD></TR>
<TR><TD VALIGN="TOP"><I>GetSel</I></TD><TD VALIGN="TOP">Gets a flag that indicates whether the user has selected text</TD></TR>
<TR><TD VALIGN="TOP"><I>SetDefaultCharFormat</I></TD><TD VALIGN="TOP">Sets the control's default format characteristics</TD></TR>
<TR><TD VALIGN="TOP"><I>SetSelectionCharFormat</I></TD><TD VALIGN="TOP">Sets the format characteristics of the selected text</TD></TR>
</TABLE>
<P>
<DIV CLASS=note>
<BLOCKQUOTE>
<IMG SRC="note.jpg" width=123 height=18 BORDER=0>
<P>If you use the dialog editor to add a rich edit control to a dialog resource, your application class <I>InitInstance</I> member function must call the function <I>AfxInitRichEdit</I>.
</BLOCKQUOTE></DIV>
<P>
</BODY>
</HTML>




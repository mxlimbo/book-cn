<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="basicIE4.css" TYPE="text/css">
<TITLE>The CFrameWnd Class and the ActivateFrame Member Function</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY>
<A NAME="299"><H1>The <I>CFrameWnd</I> Class and the <I>ActivateFrame</I> Member Function</H1></A>
<P>Why choose <I>CFrameWnd</I> as the base class for a persistent window? Why not have a persistent view class instead? In an MFC SDI application, the main frame window is always the parent of the view window. This frame window is created first, and then the control bars and the view are created as child windows. The application framework ensures that the child windows shrink and expand appropriately as the user changes the size of the frame window. It wouldn't make sense to change the view size after the frame was created.
<P>The key to controlling the frame's size is the <I>CFrameWnd::ActivateFrame</I> member function. The application framework calls this virtual function (declared in <I>CFrameWnd</I>) during the SDI main frame window creation process (and in response to the File New and File Open commands). The framework's job is to call the <I>CWnd::ShowWindow</I> function with the parameter <I>nCmdShow</I>. <I>ShowWindow</I> makes the frame window visible along with its menu, view window, and control bars. The <I>nCmdShow</I> parameter determines whether the window is maximized or minimized or both.
<P>If you override <I>ActivateFrame</I> in your derived frame class, you can 
change the value of <I>nCmdShow</I> before passing it to the <I>CFrameWnd::ActivateFrame</I> function. You can also call the <I>CWnd::SetWindowPlacement</I> function, which sets the size and position of the frame window, and you can set the visible status of the control bars. Because all changes are made before the frame window becomes visible, no annoying flash occurs on the screen.
<P>You must be careful not to reset the frame window's position and size after every File New or File Open command. A first-time flag data member ensures that your <I>CPersistentFrame::ActivateFrame</I> function operates only when the application starts.
</BODY>
</HTML>




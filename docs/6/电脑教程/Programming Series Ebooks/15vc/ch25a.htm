<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="basicIE4.css" TYPE="text/css">
<TITLE>Chapter Twenty-Five -- Automation</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY>

<font size="+3">Chapter Twenty-Five</font>

<A NAME="525"><H1>Automation</H1></A>
<P>After reading <A HREF="ch24a.htm">Chapter 24</A>, you should know what an interface is; you've already seen two standard COM interfaces, <I>IUnknown</I> and <I>IClassFactory</I>. Now you're ready for &quot;applied&quot; COM, or at least one aspect of it&#151;Automation (formerly known as OLE Automation). You'll learn about the COM <I>IDispatch</I> interface, which enables C++ programs to communicate with Microsoft 
Visual Basic for Applications (VBA) programs and with programs written in other scripting languages. In addition, <I>IDispatch</I> is the key to getting your COM object onto a Web page. You'll use the MFC library implementation of <I>IDispatch</I> to write C++ Automation component and client programs. Both out-of-process components and in-process components are explored.

<P>But before jumping into C++ Automation programming, you need to know how the rest of the world writes programs. In this chapter, you'll get some exposure to VBA as it is implemented in Microsoft Excel. You'll run your C++ components from Excel, and you'll run Excel from a C++ client program.

</BODY>
</HTML>




<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="basicIE4.css" TYPE="text/css">
<TITLE>Appendix A -- Message Map Functions in the Microsoft Foundation Class Library</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY>

<font size="+3">Appendix A</font>
<A NAME="999"><H1>Message Map Functions in the Microsoft Foundation Class Library</H1></A><P>
<B>HANDLERS FOR WM_COMMAND MESSAGES</B>
<P>
<TABLE WIDTH="95%" CELLPADDING="5">
<TR><TD VALIGN="TOP"><B>Map Entry</B></TD><TD VALIGN="TOP"><B>Function Prototype</B></TD></TR>
<TR><TD VALIGN="TOP">ON_COMMAND(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_COMMAND_EX(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg BOOL memberFxn(UINT);</TD></TR>
<TR><TD VALIGN="TOP">ON_COMMAND_EX_RANGE(&lt;id&gt;, &lt;idLast&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg BOOL memberFxn(UINT);</TD></TR>
<TR><TD VALIGN="TOP">ON_COMMAND_RANGE(&lt;id&gt;, &lt;idLast&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn(UINT);</TD></TR>
<TR><TD VALIGN="TOP">ON_UPDATE_COMMAND_UI(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn(CCmdUI*);</TD></TR>
<TR><TD VALIGN="TOP">ON_UPDATE_COMMAND_UI_RANGE (&lt;id&gt;, &lt;idLast&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn(CCmdUI*);</TD></TR>
<TR><TD VALIGN="TOP">ON_UPDATE_COMMAND_UI_REFLECT (&lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn(CCmdUI*);</TD></TR>
</TABLE>
<P>
<B>HANDLERS FOR CHILD WINDOW NOTIFICATION MESSAGES</B>
<P>
<TABLE WIDTH="95%" CELLPADDING="5">
<TR><TD VALIGN="TOP"><B>Map Entry</B></TD><TD VALIGN="TOP"><B>Function Prototype</B></TD></TR>
<TR><TD VALIGN="TOP"><B><I>Generic Control Notification Codes</I></B></TD><TD>&nbsp;</TD></TR>
<TR><TD VALIGN="TOP">ON_CONTROL(&lt;wNotifyCode&gt;, &lt;id&gt;,  &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_CONTROL_RANGE(&lt;wNotifyCode&gt;,  &lt;id&gt; &lt;idLast&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP"> afx_msg void memberFxn(UINT);</TD></TR>
<TR><TD VALIGN="TOP">ON_CONTROL_REFLECT(&lt;wNotifyCode&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_CONTROL_REFLECT_EX(&lt;wNotifyCode&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg BOOL memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_NOTIFY(&lt;wNotifyCode&gt;, &lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn(NMHDR*, LRESULT*);</TD></TR>
<TR><TD VALIGN="TOP">ON_NOTIFY_EX(&lt;wNotifyCode&gt;, &lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg BOOL memberFxn(UINT, NMHDR*, LRESULT*);</TD></TR>
<TR><TD VALIGN="TOP">ON_NOTIFY_EX_RANGE(&lt;wNotifyCode&gt;, &lt;id&gt;, &lt;idLast&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg BOOL memberFxn(UINT, NMHDR*, LRESULT*);</TD></TR>
<TR><TD VALIGN="TOP">ON_NOTIFY_RANGE(&lt;wNotifyCode&gt;, &lt;id&gt;, &lt;idLast&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn(UINT, NMHDR*, LRESULT*);</TD></TR>
<TR><TD VALIGN="TOP">ON_NOTIFY_REFLECT(&lt;wNotifyCode&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn(NMHDR*, LRESULT*);</TD></TR>
<TR><TD VALIGN="TOP">ON_NOTIFY_REFLECT_EX(&lt;wNotifyCode&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg BOOL memberFxn(NMHDR*, LRESULT*);</TD></TR>
<TR><TD VALIGN="TOP"><B><I>User Button Notification Codes</I></B></TD><TD VALIGN="TOP">&nbsp;</TD></TR>
<TR><TD VALIGN="TOP">ON_BN_CLICKED(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_BN_DOUBLECLICKED(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_BN_KILLFOCUS(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_BN_SETFOCUS(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP"><B><I>Combo Box Notification Codes</I></B></TD><TD VALIGN="TOP">&nbsp;</TD></TR>
<TR><TD VALIGN="TOP">ON_CBN_CLOSEUP(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_CBN_DBLCLK(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_CBN_DROPDOWN(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_CBN_EDITCHANGE(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_CBN_EDITUPDATE(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_CBN_ERRSPACE(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_CBN_KILLFOCUS(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_CBN_SELCHANGE(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_CBN_SELENDCANCEL(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_CBN_SELENDOK(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_CBN_SETFOCUS(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP"><B><I>Check List Box Notification Codes</I></B></TD><TD VALIGN="TOP">&nbsp;</TD></TR>
<TR><TD VALIGN="TOP">ON_CLBN_CHKCHANGE(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP"> afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP"><B><I>Edit Control Notification Codes</I></B></TD><TD VALIGN="TOP">&nbsp;</TD></TR>
<TR><TD VALIGN="TOP">ON_EN_CHANGE(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_EN_ERRSPACE(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_EN_HSCROLL(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_EN_KILLFOCUS(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_EN_MAXTEXT(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_EN_SETFOCUS(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_EN_UPDATE(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_EN_VSCROLL(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP"><B><I>List Box Notification Codes</I></B></TD><TD VALIGN="TOP">&nbsp;</TD></TR>
<TR><TD VALIGN="TOP">ON_LBN_DBLCLK(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_LBN_ERRSPACE(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_LBN_KILLFOCUS(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_LBN_SELCANCEL(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_LBN_SELCHANGE(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_LBN_SETFOCUS(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP"><B><I>Static Control Notification Codes</I></B></TD><TD VALIGN="TOP">&nbsp;</TD></TR>
<TR><TD VALIGN="TOP">ON_STN_CLICKED(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_STN_DBLCLK(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_STN_DISABLE(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
<TR><TD VALIGN="TOP">ON_STN_ENABLE(&lt;id&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn();</TD></TR>
</TABLE>
<P>
<B>HANDLERS FOR WINDOW NOTIFICATION MESSAGES</B>
<P>
<TABLE WIDTH="95%" CELLPADDING="5">
<TR><TD VALIGN="TOP"><B>Map Entry</B></TD><TD VALIGN="TOP"><B>Function Prototype</B></TD></TR>
<TR><TD VALIGN="TOP">ON_WM_ACTIVATE()</TD><TD VALIGN="TOP">afx_msg void OnActivate(UINT, CWnd*, BOOL);</TD></TR> 
<TR><TD VALIGN="TOP">ON_WM_ACTIVATEAPP()</TD><TD VALIGN="TOP">afx_msg void OnActivateApp(BOOL, HTASK);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_ASKCBFORMATNAME()</TD><TD VALIGN="TOP">afx_msg void OnAskCbFormatName(UINT, LPTSTR);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_CANCELMODE()</TD><TD VALIGN="TOP">afx_msg void OnCancelMode();</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_CAPTURECHANGED()</TD><TD VALIGN="TOP">afx_msg void OnCaptureChanged(CWnd*);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_CHANGECBCHAIN()</TD><TD VALIGN="TOP">afx_msg void OnChangeCbChain(HWND, HWND);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_CHAR()</TD><TD VALIGN="TOP">afx_msg void OnChar(UINT, UINT, UINT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_CHARTOITEM()</TD><TD VALIGN="TOP">afx_msg int OnCharToItem(UINT, CListBox*, UINT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_CHARTOITEM_REFLECT()</TD><TD VALIGN="TOP">afx_msg int CharToItem(UINT, UINT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_CHILDACTIVATE()</TD><TD VALIGN="TOP">afx_msg void OnChildActivate();</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_CLOSE()</TD><TD VALIGN="TOP">afx_msg void OnClose();</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_COMPACTING()</TD><TD VALIGN="TOP">afx_msg void OnCompacting(UINT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_COMPAREITEM()</TD><TD VALIGN="TOP">afx_msg int OnCompareItem(int, LPCOMPAREITEMSTRUCT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_COMPAREITEM_REFLECT()</TD><TD VALIGN="TOP">afx_msg int CompareItem (LPCOMPAREITEMSTRUCT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_CONTEXTMENU()</TD><TD VALIGN="TOP">afx_msg void OnContextMenu(CWnd*, CPoint);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_COPYDATA()</TD><TD VALIGN="TOP">afx_msg BOOL OnCopyData(CWnd*, COPYDATASTRUCT*);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_CREATE()</TD><TD VALIGN="TOP">afx_msg int OnCreate(LPCREATESTRUCT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_CTLCOLOR()</TD><TD VALIGN="TOP">afx_msg HBRUSH OnCtlColor(CDC*, CWnd*, UINT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_CTLCOLOR_REFLECT()</TD><TD VALIGN="TOP">afx_msg HBRUSH CtlColor(CDC*, UINT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_DEADCHAR()</TD><TD VALIGN="TOP">afx_msg void OnDeadChar(UINT, UINT, UINT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_DELETEITEM()</TD><TD VALIGN="TOP">afx_msg void OnDeleteItem(int, LPDELETEITEMSTRUCT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_DELETEITEM_REFLECT()</TD><TD VALIGN="TOP">afx_msg void DeleteItem (LPDELETEITEMSTRUCT)</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_DESTROY()</TD><TD VALIGN="TOP">afx_msg void OnDestroy();</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_DESTROYCLIPBOARD()</TD><TD VALIGN="TOP">afx_msg void OnDestroyClipboard();</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_DEVICECHANGE()</TD><TD VALIGN="TOP">afx_msg BOOL OnDeviceChange(UINT, DWORD);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_DEVMODECHANGE()</TD><TD VALIGN="TOP">afx_msg void OnDevModeChange(LPTSTR);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_DRAWCLIPBOARD()</TD><TD VALIGN="TOP">afx_msg void OnDrawClipboard();</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_DRAWITEM()</TD><TD VALIGN="TOP">afx_msg void OnDrawItem(int, LPDRAWITEMSTRUCT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_DRAWITEM_REFLECT()</TD><TD VALIGN="TOP">afx_msg void DrawItem (LPDRAWITEMSTRUCT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_DROPFILES()</TD><TD VALIGN="TOP">afx_msg void OnDropFiles(HDROP);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_ENABLE()</TD><TD VALIGN="TOP">afx_msg void OnEnable(BOOL);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_ENDSESSION()</TD><TD VALIGN="TOP">afx_msg void OnEndSession(BOOL);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_ENTERIDLE()</TD><TD VALIGN="TOP">afx_msg void OnEnterIdle(UINT, CWnd*);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_ENTERMENULOOP()</TD><TD VALIGN="TOP">afx_msg void OnEnterMenuLoop(BOOL);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_ERASEBKGND()</TD><TD VALIGN="TOP">afx_msg BOOL OnEraseBkgnd(CDC*);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_EXITMENULOOP()</TD><TD VALIGN="TOP">afx_msg void OnExitMenuLoop(BOOL);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_FONTCHANGE()</TD><TD VALIGN="TOP">afx_msg void OnFontChange();</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_GETDLGCODE()</TD><TD VALIGN="TOP">afx_msg UINT OnGetDlgCode();</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_GETMINMAXINFO()</TD><TD VALIGN="TOP">afx_msg void OnGetMinMaxInfo (MINMAXINFO*);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_HELPINFO()</TD><TD VALIGN="TOP">afx_msg BOOL OnHelpInfo(HELPINFO*);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_HSCROLL()</TD><TD VALIGN="TOP">afx_msg void OnHScroll(UINT, UINT, CScrollBar*);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_HSCROLL_REFLECT()</TD><TD VALIGN="TOP">afx_msg void HScroll(UINT, UINT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_HSCROLLCLIPBOARD()</TD><TD VALIGN="TOP">afx_msg void OnHScrollClipboard(CWnd*, UINT, UINT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_ICONERASEBKGND()</TD><TD VALIGN="TOP">afx_msg void OnIconEraseBkgnd(CDC*);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_INITMENU()</TD><TD VALIGN="TOP">afx_msg void OnInitMenu(CMenu*);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_INITMENUPOPUP()</TD><TD VALIGN="TOP">afx_msg void OnInitMenuPopup(CMenu*, UINT, BOOL);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_KEYDOWN()</TD><TD VALIGN="TOP">afx_msg void OnKeyDown(UINT, UINT, UINT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_KEYUP()</TD><TD VALIGN="TOP">afx_msg void OnKeyUp(UINT, UINT, UINT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_KILLFOCUS()</TD><TD VALIGN="TOP">afx_msg void OnKillFocus(CWnd*);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_LBUTTONDBLCLK()</TD><TD VALIGN="TOP">afx_msg void OnLButtonDblClk(UINT, CPoint);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_LBUTTONDOWN()</TD><TD VALIGN="TOP">afx_msg void OnLButtonDown(UINT, CPoint);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_LBUTTONUP()</TD><TD VALIGN="TOP">afx_msg void OnLButtonUp(UINT, CPoint);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_MBUTTONDBLCLK()</TD><TD VALIGN="TOP">afx_msg void OnMButtonDblClk(UINT, CPoint);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_MBUTTONDOWN()</TD><TD VALIGN="TOP">afx_msg void OnMButtonDown(UINT, CPoint);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_MBUTTONUP()</TD><TD VALIGN="TOP">afx_msg void OnMButtonUp(UINT, CPoint);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_MDIACTIVATE()</TD><TD VALIGN="TOP">afx_msg void OnMDIActivate(BOOL, CWnd*, CWnd*);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_MEASUREITEM()</TD><TD VALIGN="TOP">afx_msg void OnMeasureItem(int, LPMEASUREITEMSTRUCT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_MEASUREITEM_REFLECT()</TD><TD VALIGN="TOP">afx_msg void MeasureItem (LPMEASUREITEMSTRUCT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_MENUCHAR()</TD><TD VALIGN="TOP">afx_msg LRESULT OnMenuChar(UINT, UINT, CMenu*);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_MENUSELECT()</TD><TD VALIGN="TOP">afx_msg void OnMenuSelect(UINT, UINT, HMENU);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_MOUSEACTIVATE()</TD><TD VALIGN="TOP">afx_msg int OnMouseActivate(CWnd*, UINT, UINT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_MOUSEMOVE()</TD><TD VALIGN="TOP">afx_msg void OnMouseMove(UINT, CPoint);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_MOUSEWHEEL()</TD><TD VALIGN="TOP">afx_msg BOOL OnMouseWheel(UINT, short, CPoint);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_MOVE()</TD><TD VALIGN="TOP">afx_msg void OnMove(int, int);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_MOVING()</TD><TD VALIGN="TOP">afx_msg void OnMoving(UINT, LPRECT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_NCACTIVATE()</TD><TD VALIGN="TOP">afx_msg BOOL OnNcActivate(BOOL);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_NCCALCSIZE()</TD><TD VALIGN="TOP">afx_msg void OnNcCalcSize(BOOL, NCCALCSIZE_PARAMS*);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_NCCREATE()</TD><TD VALIGN="TOP">afx_msg BOOL OnNcCreate (LPCREATESTRUCT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_NCDESTROY()</TD><TD VALIGN="TOP">afx_msg void OnNcDestroy();</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_NCHITTEST()</TD><TD VALIGN="TOP">afx_msg UINT OnNcHitTest(CPoint);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_NCLBUTTONDBLCLK()</TD><TD VALIGN="TOP">afx_msg void OnNcLButtonDblClk(UINT, CPoint);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_NCLBUTTONDOWN()</TD><TD VALIGN="TOP">afx_msg void OnNcLButtonDown(UINT, CPoint);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_NCLBUTTONUP()</TD><TD VALIGN="TOP">afx_msg void OnNcLButtonUp(UINT, CPoint);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_NCMBUTTONDBLCLK()</TD><TD VALIGN="TOP">afx_msg void OnNcMButtonDblClk(UINT, CPoint);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_NCMBUTTONDOWN()</TD><TD VALIGN="TOP">afx_msg void OnNcMButtonDown(UINT, CPoint);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_NCMBUTTONUP()</TD><TD VALIGN="TOP">afx_msg void OnNcMButtonUp(UINT, CPoint);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_NCMOUSEMOVE()</TD><TD VALIGN="TOP">afx_msg void OnNcMouseMove(UINT, CPoint);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_NCPAINT()</TD><TD VALIGN="TOP">afx_msg void OnNcPaint();</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_NCRBUTTONDBLCLK()</TD><TD VALIGN="TOP">afx_msg void OnNcRButtonDblClk(UINT, CPoint);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_NCRBUTTONDOWN()</TD><TD VALIGN="TOP">afx_msg void OnNcRButtonDown(UINT, CPoint);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_NCRBUTTONUP()</TD><TD VALIGN="TOP">afx_msg void OnNcRButtonUp(UINT, CPoint);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_PAINT()</TD><TD VALIGN="TOP">afx_msg void OnPaint();</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_PAINTCLIPBOARD()</TD><TD VALIGN="TOP">afx_msg void OnPaintClipboard(CWnd*, HGLOBAL);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_PALETTECHANGED()</TD><TD VALIGN="TOP">afx_msg void OnPaletteChanged(CWnd*);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_PALETTEISCHANGING()</TD><TD VALIGN="TOP">afx_msg void OnPaletteIsChanging(CWnd*);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_PARENTNOTIFY()</TD><TD VALIGN="TOP">afx_msg void OnParentNotify(UINT, LPARAM);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_PARENTNOTIFY_REFLECT()</TD><TD VALIGN="TOP">afx_msg void ParentNotify(UINT, LPARAM);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_QUERYDRAGICON()</TD><TD VALIGN="TOP">afx_msg HCURSOR OnQueryDragIcon();</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_QUERYENDSESSION()</TD><TD VALIGN="TOP">afx_msg BOOL OnQueryEndSession();</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_QUERYNEWPALETTE()</TD><TD VALIGN="TOP">afx_msg BOOL OnQueryNewPalette();</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_QUERYOPEN()</TD><TD VALIGN="TOP">afx_msg BOOL OnQueryOpen();</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_RBUTTONDBLCLK()</TD><TD VALIGN="TOP">afx_msg void OnRButtonDblClk(UINT, CPoint);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_RBUTTONDOWN()</TD><TD VALIGN="TOP">afx_msg void OnRButtonDown(UINT, CPoint);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_RBUTTONUP()</TD><TD VALIGN="TOP">afx_msg void OnRButtonUp(UINT, CPoint);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_RENDERALLFORMATS()</TD><TD VALIGN="TOP">afx_msg void OnRenderAllFormats();</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_RENDERFORMAT()</TD><TD VALIGN="TOP">afx_msg void OnRenderFormat(UINT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_SETCURSOR()</TD><TD VALIGN="TOP">afx_msg BOOL OnSetCursor(CWnd*, UINT, UINT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_SETFOCUS()</TD><TD VALIGN="TOP">afx_msg void OnSetFocus(CWnd*);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_SETTINGCHANGE()</TD><TD VALIGN="TOP">afx_msg void OnSettingChange(UINT, LPCTSTR);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_SHOWWINDOW()</TD><TD VALIGN="TOP">afx_msg void OnShowWindow(BOOL, UINT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_SIZE()</TD><TD VALIGN="TOP">afx_msg void OnSize(UINT, int, int);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_SIZECLIPBOARD()</TD><TD VALIGN="TOP">afx_msg void OnSizeClipboard(CWnd*, HGLOBAL);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_SIZING()</TD><TD VALIGN="TOP">afx_msg void OnSizing(UINT, LPRECT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_SPOOLERSTATUS()</TD><TD VALIGN="TOP">afx_msg void OnSpoolerStatus(UINT, UINT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_STYLECHANGED()</TD><TD VALIGN="TOP">afx_msg void OnStyleChanged(int, LPSTYLESTRUCT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_STYLECHANGING()</TD><TD VALIGN="TOP">afx_msg void OnStyleChanging(int, LPSTYLESTRUCT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_SYSCHAR()</TD><TD VALIGN="TOP">afx_msg void OnSysChar(UINT, UINT, UINT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_SYSCOLORCHANGE()</TD><TD VALIGN="TOP">afx_msg void OnSysColorChange();</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_SYSCOMMAND()</TD><TD VALIGN="TOP">afx_msg void OnSysCommand(UINT, LPARAM);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_SYSDEADCHAR()</TD><TD VALIGN="TOP">afx_msg void OnSysDeadChar(UINT, UINT, UINT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_SYSKEYDOWN()</TD><TD VALIGN="TOP">afx_msg void OnSysKeyDown(UINT, UINT, UINT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_SYSKEYUP()</TD><TD VALIGN="TOP">afx_msg void OnSysKeyUp(UINT, UINT, UINT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_TCARD()</TD><TD VALIGN="TOP">afx_msg void OnTCard(UINT, DWORD);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_TIMECHANGE()</TD><TD VALIGN="TOP">afx_msg void OnTimeChange();</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_TIMER()</TD><TD VALIGN="TOP">afx_msg void OnTimer(UINT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_VKEYTOITEM()</TD><TD VALIGN="TOP">afx_msg int OnVKeyToItem(UINT, CListBox*, UINT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_VKEYTOITEM_REFLECT()</TD><TD VALIGN="TOP">afx_msg int VKeyToItem(UINT, UINT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_VSCROLL()</TD><TD VALIGN="TOP">afx_msg void OnVScroll(UINT, UINT, CScrollBar*);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_VSCROLL_REFLECT()</TD><TD VALIGN="TOP">afx_msg void VScroll(UINT, UINT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_VSCROLLCLIPBOARD()</TD><TD VALIGN="TOP">afx_msg void OnVScrollClipboard(CWnd*, UINT, UINT);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_WINDOWPOSCHANGED()</TD><TD VALIGN="TOP">afx_msg void OnWindowPosChanged (WINDOWPOS*);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_WINDOWPOSCHANGING()</TD><TD VALIGN="TOP">afx_msg void OnWindowPosChanging (WINDOWPOS*);</TD></TR>
<TR><TD VALIGN="TOP">ON_WM_WININICHANGE()</TD><TD VALIGN="TOP">afx_msg void OnWinIniChange(LPCTSTR);</TD></TR>
</TABLE>
<P>
<B>USER-DEFINED MESSAGE CODES</B>
<P>
<TABLE WIDTH="95%" CELLPADDING="5">
<TR><TD VALIGN="TOP"><B>Map Entry</B></TD><TD VALIGN="TOP"><B>Function Prototype</B></TD></TR>
<TR><TD VALIGN="TOP">ON_MESSAGE(&lt;message&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg LRESULT memberFxn(WPARAM, LPARAM);</TD></TR>
<TR><TD VALIGN="TOP">ON_REGISTERED_MESSAGE (&lt;nMessageVariable&gt;,&lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg LRESULT memberFxn(WPARAM, LPARAM);</TD></TR>
<TR><TD VALIGN="TOP">ON_REGISTERED_THREADMESSAGE(&lt;nMessageVariable&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn(WPARAM, LPARAM);</TD></TR>
<TR><TD VALIGN="TOP">ON_THREAD_MESSAGE (&lt;message&gt;, &lt;memberFxn&gt;)</TD><TD VALIGN="TOP">afx_msg void memberFxn(WPARAM, LPARAM);</TD></TR>
</TABLE>
<P>
</BODY>
</HTML>




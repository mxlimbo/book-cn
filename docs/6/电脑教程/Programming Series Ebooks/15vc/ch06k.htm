<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="basicIE4.css" TYPE="text/css">
<TITLE>Using Other Control Features</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY>
<A NAME="147"><H1>Using Other Control Features</H1></A>
<P>You've seen how to customize the control class <I>CScrollBar</I> by adding code in the dialog's <I>OnInitDialog</I> member function. You can program other 
controls in a similar fashion. In the <I>Microsoft Visual C++ MFC Library Reference,</I> or in the online help under &quot;Microsoft Foundation Class Libary and Templates,&quot; look at the control classes, particularly 
<I>CListBox</I> and <I>CComboBox</I>. Each has a number of features that ClassWizard does not directly support. Some combo boxes, for example, can support multiple selections. If you want to use these features, don't try to use ClassWizard to add data members. Instead, define your own data members and add your own exchange code in <I>OnInitDialog</I> and <I>OnClickedOK</I>.
<P>
<DIV CLASS=note>
<BLOCKQUOTE>
<B>For Win32 Programmers</B>
<P>If you've programmed controls in Win32, you'll know that parent windows communicate to controls via Windows messages. So what does a function such as 
<I>CListBox::InsertString</I> do? (You've seen this function called in your <I>OnInitDialog</I> function.) If you look at the MFC source code, you'll see that <I>InsertString</I> sends an LB_INSERTSTRING message to the designated list-box control. Other control class member functions don't send messages because they apply to all window types. The <I>CScrollView::SetScrollRange</I> function, for example, calls the Win32 <I>SetScrollRange</I> function, specifying the correct <I>hWnd</I> as a parameter.
</BLOCKQUOTE></DIV>
<P>
</BODY>
</HTML>




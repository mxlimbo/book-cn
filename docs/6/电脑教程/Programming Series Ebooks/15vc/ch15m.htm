<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="basicIE4.css" TYPE="text/css">
<TITLE>Persistent Frames in MDI Applications</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY>
<A NAME="308"><H1>Persistent Frames in MDI Applications</H1></A><P>You won't get to Multiple Document Interface (MDI) applications until <A HREF="ch18a.htm">Chapter 18</A>, but if you're using this book as a reference, you might want to apply the persistent frame technique to MDI applications.
<P>The <I>CPersistentFrame</I> class, as presented in this chapter, won't work in an MDI application because the MDI main frame window's <I>ShowWindow</I> function is called, not by a virtual <I>ActivateFrame</I> function, but directly by the application class's <I>InitInstance</I> member function. If you need to control the characteristics of an MDI main frame window, add the necessary code to 
<I>InitInstance</I>.
<P>The <I>ActivateFrame</I> function is called, however, for <I>CMDIChildWnd</I> objects. This means your MDI application could remember the sizes and positions of 
its child windows. You could store the information in the Registry, but you would have to accommodate multiple windows. You would have to modify the <I>CPersistentFrame</I> class for this purpose.
</BODY>
</HTML>




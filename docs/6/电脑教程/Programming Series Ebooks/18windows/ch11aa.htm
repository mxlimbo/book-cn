<HTML>
<HEAD>
	<LINK REL=StyleSheet HREF="petzoldi.css" TYPE="text/css">
<title>Chapter 11 -- Dialog Boxes</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff">

<font size="+3">Chapter 11</font>

<A NAME="331"><h1>Dialog Boxes</h1></A><P>Dialog boxes are most often used for obtaining additional input from the user beyond 
what can be easily managed through a menu. The programmer indicates that a menu item 
invokes a dialog box by adding an ellipsis (...) to the menu item.
<P>A dialog box generally takes the form of a popup window containing various 
child window controls. The size and placement of these controls are specified in a &quot;dialog 
box template&quot; in the program's resource script file. Although a programmer can define a 
dialog box template &quot;manually,&quot; these days dialog boxes are usually interactively 
designed in the Visual C++ Developer Studio. Developer Studio then generates the dialog template. 
<P>When a program invokes a dialog box based on a template, Microsoft Windows 
98 is responsible for creating the dialog box popup window and the child window 
controls, and for providing a window procedure to process dialog box messages, including 
all keyboard and mouse input. The code within Windows that does all this is sometimes 
referred to as the &quot;dialog box manager.&quot;
<P>Many of the messages that are processed by that dialog box window procedure 
located within Windows are also passed to a function within your own program, called 
a &quot;dialog box procedure&quot; or &quot;dialog procedure.&quot; The dialog procedure is similar to a 
normal window procedure, but with some important differences. Generally, you will not 
be doing much within the dialog procedure beyond initializing the child window controls 
when the dialog box is created, processing messages from the child window controls, and 
ending the dialog box. Dialog procedures generally do not process WM_PAINT messages, 
nor do they directly process keyboard and mouse input.
<P>The subject of dialog boxes would normally be a big one because it involves the 
use of child window controls. However, we have already explored child window controls 
in <a href="ch09a.htm#806">Chapter 9</a>. When you use child window controls in dialog boxes, the Windows dialog 
box manager picks up many of the responsibilities that we assumed in <a href="ch09a.htm#806">Chapter 9</a>. In 
particular, the problems we encountered with passing the input focus among the scroll bars 
in the COLORS1 program disappear when working with dialog boxes. Windows handles 
all the logic necessary to shift input focus among controls in a dialog box.
<P>However, adding a dialog box to a program is a bit more involved than adding an icon or a menu. We'll begin with a simple dialog box to give you a feel for the 
interconnections between these various pieces.
</BODY>
</HTML>


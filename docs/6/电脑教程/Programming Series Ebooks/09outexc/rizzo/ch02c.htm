<HTML>
<HEAD>
<TITLE>Information Management</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch02b.htm", "ch03a.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="33"><H1>Information Management</H1></A>

<P>Outlook is more than an e-mail client. It is an information management 
tool. It can integrate calendars, contacts, tasks, your file system, custom views, 
and rules to control the flow of information in each component. You can 
automatically take advantage of Outlook's information management features in 
your applications. A few of these features are described in the following sections.</p>

<A NAME="34"><H2>Calendars</H2></A>

<P>Outlook manages both personal and group calendars. It allows your users 
to quickly create, move, and delete appointments in their calendars as well as 
drag and drop appointments to other Outlook modules. Outlook lets you 
programmatically call calendar features or change properties for appointments 
through the Outlook object library. These are a few of the features you can leverage 
in your Outlook applications:</p>

<UL>
<P><LI>Recurring appointments</li></p>

<P><LI>Free/busy information for others</li></p>

<P><LI>Internet standards support</li></p>
</UL>

 <P>Let's look briefly at the Internet support feature, which makes built-in, 
real-time collaboration possible. Users schedule an Internet meeting using 
Outlook. Once the online meeting has been properly configured, Outlook can 
automatically start NetMeeting for each attendee. (Figure 2-7 illustrates creating an 
online meeting request in Outlook 98.) Outlook automatically tracks the 
responses (accept, decline, or tentative, with or without comments) to meeting requests.</p>

<P>
<A HREF="javascript:fullSize('F02OH07x.htm')"> <img src="images/F02OH07.JPG" width=404 height=303 border=0 ALT="Click to view at full size."> </A>
</P><P>
<!-- CAPTION --><B>Figure 2-7</B> <I>Users can schedule an online meeting through Outlook.</I><!-- /CAPTION -->
</p>

<P>Outlook also supports the iCalendar and vCalendar Internet standards. 
The iCalendar standard defines a way for a calendar application to share 
free/busy information over the Internet with other calendaring applications. The 
vCalendar standard defines a way for vCalendar-compliant systems to send and 
receive meeting requests over the Internet.</p>

<A NAME="35"><H2>Contacts</H2></A>

<P>In addition to managing calendars, Outlook manages contacts. Users can 
drag and drop contacts between Outlook modules as well as track all 
information about a particular contact. Some highlights of Outlook's contact 
management capabilities are described in the following sections.</p>

<A NAME="36"><H3>Integrated Journaling</H3></A>

<P>Outlook supports the ability to keep a journal of every item or event that 
occurs between users and a contact, such as sending e-mail, working on a Word 
document, or dialing a contact on the telephone through Outlook. Outlook 
automatically stores this information in the integrated journal. (Figure 2-8 
shows the journal page for a specific contact.) Recording journal information is 
optional and is not the default. Journaling is enabled via the Journal tab or the Tools menu.</p>

<P>
<A HREF="javascript:fullSize('F02OH08x.htm')"> <img src="images/F02OH08.JPG" width=404 height=303 border=0 ALT="Click to view at full size."> </A>
</P><P>
<!-- CAPTION --><B>Figure 2-8</B> <I>Integrated journaling enables Outlook to remember what users do with information in your application.</I><!-- /CAPTION -->
</p>

<P>You can use this built-in journaling feature in your custom contact 
applications to provide journaling services. For example, you could build a sales 
force automation application that stores all communications with sales contacts. 
Outlook 2000 supports a new feature called Activity Tracking, which lets users 
associate items and documents with a contact. This is discussed more in <A HREF="ch09a.htm">Chapter 9</A>.</p>

<A NAME="37"><H3>Contact Actions</H3></A>

<P>Outlook's integrated Actions menu makes actions such as sending a letter 
using Microsoft Word, dialing a contact on the phone, or creating a meeting 
request for the contact fast and efficient. For example, in the Account Tracking 
application in <A HREF="ch07a.htm">Chapter 7</A>, the action of sending a letter to a contact is used to 
launch Microsoft Word automatically and address a letter to that contact. By 
leveraging this functionality, 100 lines of VBScript code were cut from the application.</p>

<A NAME="38"><H3>Flags</H3></A>

<P>Outlook supports the flagging of contacts for specific action items. (Contact 
flags are similar to message flags.) A user can customize the text of the action 
item and set a specific day and time reminder for the action. Contact flags are set 
via right-clicking on the contact or on the Actions menu. This functionality 
makes developing custom sales or contact-type applications much easier for you. 
You no longer have to display reminders or track action items by writing code.</p>

<A NAME="39"><H3>vCard Support</H3></A>

<P>Using the Internet standard vCard format, which is an electronic business 
card format, Outlook users can easily share contact information over the Internet 
with other vCard-compliant users. Outlook users can also create contacts they 
receive from other vCard users by simply dragging and dropping those contacts 
into their contacts folders. This functionality allows your contact applications to 
be vCard-compliant, so you don't have to write any code.</p>

<A NAME="40"><H2>Tasks</H2></A>

<P>With Outlook, users can manage a range of tasks. These tasks can be 
simple, part of a larger project, or involve many people working together to 
complete a goal. They can also be recurring, much in the same way that appointments 
can be recurring. As a developer, you can extend the built-in task features in 
your applications.</p>

<A NAME="41"><H3>Due Dates and Reminders</H3></A>

<P>Users can set start and due dates for a particular task. For due dates, 
Outlook automatically sends reminders. Both date fields, start and due, use 
Outlook's natural language support. For example, users can type in 
<I>third Monday of August </I>as the start date of a task and Outlook automatically calculates the correct 
date. If a task goes uncompleted beyond its due date, Outlook automatically 
changes the color of the task in the folder.</p>

<P>You can use all of these features in your applications. By customizing 
the task form in Outlook, your application automatically inherits due dates, 
reminders, and natural language support. You can modify or extend these features 
by using the TaskItem object in the Outlook object library. The Account 
Tracking application in <A HREF="ch07a.htm">Chapter 7</A> shows you how to use Outlook tasks to track team tasks.</p>

<A NAME="42"><H3>Delegation</H3></A>

<P>Outlook supports the delegation of tasks by a user to other users in an 
organization. These new options in the task item let users decide how they want 
to be informed of a task's progress: Keep An Updated Copy Of This Task On 
My Task List and Send Me A Status Report When This Task Is Complete. When 
a user enables these options, she receives e-mail notification when the task is 
either updated or finished.</p>

<A NAME="43"><H2>Journal</H2></A>

<P>Your users can keep a record of their daily activities in the Journal. 
Outlook automatically adds to the journal entries that pertain to contacts or 
Microsoft Office documents worked on during the day. Some built-in features of 
the Journal that you can leverage are described in the following sections.</p>

<A NAME="44"><H3>Multiple Types of Entries</H3></A>

<P>The Journal stores many types of entries, such as e-mail messages, 
appointments, tasks, telephone calls, faxes, and Office documents. Using Journal views, 
users can sort and group these entries based on their type and the associated 
contacts, and they can filter out specific entry types, such as only those showing 
phone calls. You can customize all of these views.</p>

<A NAME="45"><H3>Automatic Entries</H3></A>

<P>Users can enable the Journal to automatically record any activities that 
occur for specific contacts, that is, everything they work on inside of Microsoft 
Outlook. With this capability, you can create reporting or analysis applications 
that tell users where they spend most of their time during the day and which 
contacts they do the most work for.</p>

<A NAME="46"><H3>Timer Support</H3></A>

<P>A timer in the Journal form keeps track of the actual time a Journal entry is 
open, so users can record the duration of telephone calls or the amount of time 
they worked on particular items during a day. The elapsed time is recorded in 
the duration field on the Journal form. You can provide this timer functionality 
in your custom applications, and you can automate this feature from the 
Outlook object library.</p>

<A NAME="47"><H2>Integrated File Management</H2></A>

<P>Outlook has integrated file management capabilities that allow your users 
to manage a file system in the same way they manage their Outlook items and 
to customize views that sort and group items on their hard disks or network. 
Some features of integrated file management are described in the following sections.</p>

<A NAME="48"><H3>Outlook Bar</H3></A>

<P>The Outlook Bar is a user interface element in Outlook where users can add 
and customize icons and groups that organize their favorite Outlook folders and 
file folders. Since Outlook has integrated file management, users can add 
shortcuts to file folders on the Outlook Bar. These file folders can exist on a local 
computer or on the network. Figure 2-9 shows an Outlook Bar with file folders 
and Outlook folders mixed together. Users can point the shortcuts on the 
Outlook Bar to any type of folder.</p>

<P>
<A HREF="javascript:fullSize('F02OH09x.htm')"> <img src="images/F02OH09.JPG" width=404 height=303 border=0 ALT="Click to view at full size."> </A>
</P><P>
<!-- CAPTION --><B>Figure 2-9</B> <I>Integrated file management allows users to add shortcuts to your application's file data, if necessary.</I><!-- /CAPTION -->
</p>

<A NAME="49"><H3>Delegates</H3></A>

<P>Some of your users might have an assistant who helps them manage phone 
calls or regular paper mail. Microsoft Outlook provides similar functionality 
through delegate access, in which a user can give another user permission to access 
his Inbox and any other Outlook folder. A user with delegate access can 
access certain folders, create items, and respond to requests. The item that the 
delegate responds to contains both the manager's and delegate's names.</p>

<P>You can use delegates in your applications so that users can take 
advantage of the custom folders you set up. For example, you could create a 
custom Exchange mailbox for a help desk application in which help desk technicians 
had delegate access to the help desk mailbox. This would enable the technicians 
to process customer requests sent to the mailbox; they would not have to wait 
for requests to be redistributed to them.</p>

<A NAME="50"><H2>Filtered Replication</H2></A>

<P>One feature of Outlook that eases development and improves performance 
of offline applications is filtered replication. Filtered replication allows the user 
to select which content should be replicated to the Outlook offline store. 
The parameters used in selecting the items to replicate can be built-in properties 
such as whom the item is from and when it was created. Custom properties 
and formulas can also be used to determine which items should be replicated. 
For example, imagine an Outlook public folder that contains 50,000 contacts. 
Users would need a lot of disk space to replicate that much information to 
their machines. With filtered replication, users can set up parameters that limit 
the number of contacts they download, such as only those contacts in a 
particular sales district.</p>

<A NAME="51"><H2>Rules</H2></A>

<P>Rules are an integral part of information management in Outlook. By using 
rules, users control and filter the information they receive based on specific criteria 
they set. Let's look more closely at these rules.</p>

<A NAME="52"><H3>Rules Wizard</H3></A>

<P>Outlook includes a Rules Wizard. Creating a rule&#8212;even a complex one&#8212;is 
very easy through the wizard's accessible user interface. The Rules Wizard asks 
the user a series of questions and creates a rule based on the answers. For 
example, a rule might be &quot;flag every message from my boss for follow-up in three 
days,&quot; or &quot;move the message to my work folder and notify me when the message 
is from a coworker.&quot;</p>

<A NAME="53"><H3>Rule Types</H3></A>

<P>Users can create two types of rules in the Rules Wizard: client-based or 
server-based. The difference between client-based rules and server-based rules is 
where the rule executes. Client-based rules require the Outlook client to be 
logged on to the Exchange Server for the rule to fire. Server-based rules execute on 
the Exchange Server and do not require the Outlook client to be logged on to 
the server for the rule to fire. Most rules are server-based. Those that aren't 
either use client functionality, such as message flagging or categorization; or 
interact with the user's computer interface, for example, by displaying a notification 
and playing a sound when items of high importance arrive. The Rules Wizard 
automatically creates the correct type of rule based on the criteria the user 
selects in the wizard. Users can distinguish which type of rule the wizard created 
by looking at the name of the rule. The phrase &quot;(client-only)&quot; appears at the 
end of the name of a client-based rule.</p>

<P>In your applications, you can customize functionality by using rules 
in Public Folders as well as in application mailboxes. Rules for Public Folders 
must be server-based, but for application mailboxes, you can use the Rules 
Wizard to create complex client-based or server-based rules. If the rules are 
client-based, an Outlook client must be logged on to the application mailbox so that 
Outlook can handle them.</p>

<A NAME="54"><H3>Properties Support</H3></A>

<P>Users receive much more than simple e-mail in Outlook&#8212;for example, 
some messages contain Office documents and others are based on custom forms. 
To support the different types of information users receive, rules in Outlook 
accept Office documents and custom form properties as criteria. So a user could 
create a rule that checks the author and last save time of incoming Office 
documents, and based on these properties, performs a specific action. Your applications 
can also take advantage of these built-in capabilities.</p>

<A NAME="55"><H2>Views</H2></A>

<P>To help users sort and filter information, Outlook supports sophisticated 
view capabilities. A view is simply a way to organize information in Outlook. 
Outlook, out of the box, has many predefined views that users can take 
advantage of. These built-in views are customized for the different Outlook modules 
and meet the needs of most users, but as you will see in <A HREF="ch04a.htm">Chapter 4</A>, you can 
customize these views or create new ones for your applications.</p>

<A NAME="56"><H3>Folder and Common Views</H3></A>

<P>Users can create<B> </B>two types of views: folder views and common views. 
Folder views are available only in the folders in which they were created. A user 
can create a folder view that is visible only to that user or that is shared among 
all the users of the folder.</p>

<P>Common views are available for all folders of the type in which the 
user created the view. For example, if a user created a view in his Inbox, he 
could make it a common view across all his e-mail folders.</p>

<A NAME="57"><H3>Conditional Formatting</H3></A>

<P>Conditional formatting allows users to set conditions on views so that 
specific information is rendered in a desired font and color. Users can set simple 
conditions, such as whether a message is sent directly to the user, or advanced 
conditions, such as whether the message has attachments and who the author 
of the attachments is. After setting these conditions, you can specify the font 
to use for messages that meet these conditions. Figure 2-10 shows a folder 
with conditional formatting enabled.</p>

<P>
<A HREF="javascript:fullSize('F02OH10x.htm')"> <img src="images/F02OH10.JPG" width=404 height=303 border=0 ALT="Click to view at full size."> </A>
</P><P>
<!-- CAPTION --><B>Figure 2-10</B> <I>Formatting of views can include adding color so that users can quickly find important data in your applications.</I><!-- /CAPTION -->
</p>

<A NAME="58"><H3>Outlook Today Views</H3></A>

<P>The Outlook Today view, shown in Figure 2-11, gives users the ability to 
display and manage e-mail, calendar, and task information in a single view. 
Users can choose Outlook Today as their default page view when they start 
Outlook to help them prioritize their work. Since Outlook Today is implemented 
using HTML, the information in it is hyperlinked so that users simply click on an 
item in Outlook Today to get the details about it. Users can customize the 
layout and type of information displayed by the view using a standard HTML 
editing program such as Microsoft FrontPage. In addition, users can create 
multiple types of Outlook Today views. For example, each division in a corporation 
could display a different Outlook Today page based on its interests.</p>

<P>
<A HREF="javascript:fullSize('F02OH11x.htm')"> <img src="images/F02OH11.JPG" width=404 height=303 border=0 ALT="Click to view at full size."> </A>
</P><P>
<!-- CAPTION --><B>Figure 2-11</B> <I>Outlook Today provides an HTML view of a user's important information and can be extended by developers.</I><!-- /CAPTION -->
</p>

</BODY>
</HTML>






<HTML>
<HEAD>
<TITLE>The Script Debugger</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch06c.htm", "ch06e.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="200"><H1>The Script Debugger</H1></A>

<P>Using the Microsoft Script Debugger, shown in Figure 6-2, you can debug 
the VBScript you add to an Outlook application. You also use this debugger 
for Microsoft Active Server Pages, so learn to use it&#8212;it will assist you as you 
develop all your Exchange Server applications.</p>

<P>
<A HREF="javascript:fullSize('f06oh02x.htm')"> <img src="images/f06oh02.JPG" width=404 height=303 border=0 ALT="Click to view at full size."> </A>
</P><P>
<!-- CAPTION --><B>Figure 6-2</B> <I>The Microsoft Script Debugger.</I><!-- /CAPTION -->
</P>

<P>To use the Script Debugger, you must first install it. 
The Script Debugger is part of the Development Tools component in 
Outlook. You can add this component by running Add/Remove Programs for Outlook 98.</p>

<P>The Script Debugger can be launched in two ways. The first way is 
by inserting a Stop statement in your VBScript. When you run your form and 
the Stop statement is executed, the Script Debugger should automatically be 
launched. The second way is to launch it manually from a form that contains VBScript 
and is in run mode by choosing Tools/Forms and then Script Debugger.</p>

<P>The following list describes some of the common tasks you will want 
to perform with the Script Debugger:</p>

<UL>

<P><LI><i>Set a breakpoint.</I>To set a breakpoint, insert a Stop statement in 
your VBScript code. When this Stop statement is encountered, the 
Script Debugger should be automatically launched.</li></p>

<P><LI><i>Control script execution.</I>Once in the Script Debugger, you can 
control the execution of the script. You can either step through a 
procedure line by line or step over procedures. You can also cause 
the script to continue executing normally after it has been stopped.</li></p>

<P><LI><i>View and change values at run time.</I>Through the Command window of the Script 
Debugger, you can view and change the values for 
specific variables in your application. These changes are preserved 
only in the context of the current script. For example, you can print 
out to the Command window the value of a variable, such as the 
Subject property of the current item, by using the command 
<I>? Item.Subject</I>. You can also change the value by typing in an assignment 
statement such as <I>Item.Subject = &quot;My Debugged 
Script&quot;.</I> You can execute methods inside of your script by calling them directly.</li></p>

<P><LI><i>Trace the call stack.</I>The Script Debugger includes all the 
currently running procedures in your script. This allows you to see how a 
particular procedure was called, which is especially helpful when 
that procedure is a part of a nested procedure. (Note that you can 
view the source of your script in the Script Debugger, but it's 
read-only. To make changes to your script, you need to go back to the 
Outlook Script Editor.)</li></p>

</UL>


</BODY>
</HTML>






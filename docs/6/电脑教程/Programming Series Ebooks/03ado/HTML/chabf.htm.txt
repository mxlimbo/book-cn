<HTML>
<HEAD>
<TITLE>Identity In Hierarchy</title>
<link rel="STYLESHEET" type="text/css" href="progado.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<BODY bgcolor="#ffffff" text="#000000">
<A HREF="chabe.htm">[Previous]</A> <A HREF="chabg.htm">[Next]</A><P>

<h1>Identity In Hierarchy</h1>

<p>The programmers I've spoken to who have worked with hierarchical
recordsets have been pleased, overall, with their experiences. However,
they frequently ask about one specific scenario: how do you build a
hierarchy that uses a relationship based on an auto-incrementing
identity field if you need to add new records to that hierarchy?</p>

<p>For example, imagine a hierarchy involving the Orders and Order
Details tables in the Northwind database. The logical field on which to
base a relationship is the OrderID field. Unfortunately, you'll
encounter problems if you place new orders and details for those orders
into this hierarchy. The Identity In Hierarchy example is designed to
help you understand why this scenario has problems and to offer an
alternative solution.</p>

<p>The Identity In Hierarchy sample works with the SQL Server OLE DB
provider and ODBC driver with a Northwind database from SQL Server 7 or
MSDE, or with the Jet 4.0 OLE DB Provider and a Northwind database in
Access 2000 format. An important part of the sample will not work with
databases created using previous versions of Access; the ADO cursor
engine will be unable to retrieve the newly generated auto-increment
identity values.</p>

<p>Like the Huge Hierarchy sample, the Identity In Hierarchy sample
uses the modSettingsFile module to try retrieving the last successful
connection string from a settings file. If this attempt fails, the
sample displays the Data Link Properties dialog box to request a valid
connection string to connect to a Northwind database and then saves
that string in the settings file for future use.</p>

<p>Once the sample successfully connects to a Northwind database, it
displays an MDI parent form with three menu options: Bad Hierarchy,
Good Hierarchy, and Order Entry. If you click the first option, the
sample displays a form called frmBadHierarchy, shown in Figure B-6. The
code in this form opens a small orders and order details
hierarchy&#8212;pulling the contents of two existing orders from the
Northwind database and adding to the hierarchy two new orders (with two
line items per order). Two bound grids display the two levels of the
hierarchy. When the form appears, everything looks great. So why does
the form name imply that this is a &quot;bad&quot; hierarchy?</p>

<p>
<A HREF="javascript:fullSize('F0Bno06x.htm')"> <img src="images/F0Bno06.JPG" width=404 height=274 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure B-6. </b> <i>Select Bad Hierarchy to display the frmBadHierarchy form, titled Bad Hierarchy Based On Identity Field. </i><!-- /caption -->
</p>



<p>Let's look at the line items for the two new orders. Because
these orders are pending in the hierarchy, they do not have a value for
the OrderID field yet. If you're working with a SQL Server or an
MSDE database and you click either of the pending orders, you'll
notice the same four line items appear in the lower grid for both
orders. If you're using the Jet 4.0 OLE DB Provider, selecting
either pending order will display a blank line in the lower grid. (The
difference in the behavior here is due to a difference in how the
providers handle comparisons with null values.) Here's why: When
you move to a new record in the orders level of the hierarchy, the data
shape provider looks at the value of the OrderID field for the order
and then makes visible the records in the order details level of the
hierarchy with the same value in the OrderID field. Because these
pending orders do not have a value for the OrderID field, there is no
way for the data shape provider to locate only their line items. So
what should you do? If only you could add a new field to each level of
the hierarchy and base the relationship between the levels on that
field. Fortunately, you can.</p>

<p>If you close the Bad Hierarchy form and click the Good Hierarchy
menu option, the sample will display a form with a hierarchy that has a
similar structure to the bad hierarchy. You'll quickly notice that
each level of the hierarchy has a new field that contains a globally
unique identifier (GUID). Now move to the pending orders and make sure
that two line items are visible for each pending order. The sample uses
this new field, which I call PseudoKey, rather than the OrderID field
to set the relationship for the hierarchy.</p>

<p><div class="note"><blockquote><b>NOTE</b><hr>I chose a GUID field because you can request a GUID
from Windows and know that you'll receive a unique value. You could
base the relationship on an integer instead and simply keep track of
the values you've used.</blockquote></div>
</p>

<p>This is the query string that the &quot;bad&quot; hierarchy uses to
retrieve its order data:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>
SHAPE爗SELECT燨rderID,燙ustomerID,燛mployeeID,燨rderDate,燬hipVia
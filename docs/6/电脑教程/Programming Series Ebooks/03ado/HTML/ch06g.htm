<html>
<head>
<TITLE>ADO Stream Object Properties</title>
<link rel="STYLESHEET" type="text/css" href="progado.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<BODY bgcolor = "#ffffff" text="#000000">
<A HREF="ch06f.htm">[Previous]</A> <A HREF="ch06h.htm">[Next]</A><P>

<A NAME="221"><H1>ADO Stream Object Properties</H1></A>

<p>Here's a list of the properties available on the Stream
object.</p>

<table cellpadding="5" border="0" width="95%">
<tr><th colspan="3">Stream Object Properties</th></tr>
<tr><th><i>Property Name</i></th><th><i>Data Type</i></th><th><i>Description</i></th></tr>
<tr><td valign="top">Charset</td><td valign="top">String</td><td valign="top">Specifies the character set for the text stream</td></tr>
<tr><td valign="top">EOS</td><td valign="top">Boolean</td><td valign="top">Indicates whether the current position is at the end of stream (EOS)</td></tr>
<tr><td valign="top">LineSeparator</td><td valign="top">LineSeparatorEnum</td><td valign="top">Specifies the character or combination of characters used as the line separator in the text stream</td></tr>
<tr><td valign="top">Mode</td><td valign="top">ConnectModeEnum</td><td valign="top">Indicates the permissions for modifying data in the Stream object</td></tr>
<tr><td valign="top">Position</td><td valign="top">Long</td><td valign="top">Specifies the current position in the stream</td></tr>
<tr><td valign="top">Size</td><td valign="top">Long</td><td valign="top">Indicates the size of the stream of data</td></tr>
<tr><td valign="top">State</td><td valign="top">ObjectStateEnum</td><td valign="top">Indicates the current state of the Stream object</td></tr>
<tr><td valign="top">Type</td><td valign="top">StreamTypeEnum</td><td valign="top">Indicates the type of data stored in the Stream object</td></tr>
</table>

<A NAME="222"><H2>Charset Property</H2></A>

<p>The Charset property contains a string that specifies the character
set used to store string data in the Stream. You can set this property
to any of the registered character sets available in your local
registry under the key HKEY_CLASSES_ROOT\MIME\Database\Charset. The Stream object's Position property must be set
to 0 before you can set the Charset property. If the Stream is set to
store binary data, this property is ignored.</p>

<p>The Stream object stores text data in Unicode format, no matter what
the value of the Charset property is. If you're going to work with
text data that uses a different character set, you should set the
Charset property to reflect that character set so ADO can translate the
data to the correct format as it's read into and out of the Stream
object. Say you're working with ANSI data and you want to store
that data in a Stream object and then save it to a file. If you leave
the Charset property with its default setting, the data will be saved
to the text file in Unicode format. However, you can set the Charset
property to the appropriate character set so your data will be stored
to the text file in the desired format. For example, if you want to
specify that you're using ANSI data, set the Charset property as
shown here:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>
Stream.Charset = &quot;iso-8859-1&quot;
</pre>
</td></tr></table>
</p>

<p>Remember that this property affects how ADO accepts and returns
string data, so you're best off setting this property when the
Stream object is closed. You can modify the Charset property after
you've already stored text in your Stream, but this will only
affect how ADO translates the string data when it's returned.</p>

<A NAME="223"><H2>EOS Property</H2></A>

<p>The EOS property is similar to the EOF property on the Recordset
object. It stores a Boolean value that indicates whether you're
positioned at the end of the data stored in the Stream object. You can
call the <i>SetEOS</i> method to denote the end of the data.</p>

<A NAME="224"><H2>LineSeparator Property</H2></A>

<p>Use the LineSeparator property on the Stream object to control the
character or characters that ADO will use to separate lines of text.
This value can be set to any of the values available in
LineSeparatorEnum, shown in the following table. You can set the
LineSeparator property on the Stream object at any time, regardless of
whether the Stream is open or closed.</p>

<table cellpadding="5" border="0" width="95%">
<tr><th colspan="3">LineSeparatorEnum Values</th></tr>
<tr><th><i>Constant</i></th><th><i>Value</i></th><th><i>Description</i></th></tr>
<tr><td valign="top">adCRLF</td><td valign="top">-1</td><td valign="top">Default; a combination of the carriage return and line feed characters will be used to separate lines of text.</td></tr>
<tr><td valign="top">adLF</td><td valign="top">10</td><td valign="top">The line feed character will be used to separate lines of text.</td></tr>
<tr><td valign="top">adCR</td><td valign="top">13</td><td valign="top">The carriage return character will be used to separate lines of text.</td></tr>
</table>

<A NAME="225"><H2>Mode Property</H2></A>

<p>The Mode property indicates the permissions for modifying the Stream
object. This property contains a long value that represents a bitmask
of values in ConnectModeEnum. (See &quot;<A HREF="ch06d.htm#203">Mode Property</A>&quot; under the
Record object discussion earlier in this chapter for a list of values.)
The Stream object's Mode property functions similarly to the Record
object's Mode property.</p>

<A NAME="226"><H2>Position Property</H2></A>

<p>The Position property contains a long value that specifies the
current byte position (0-based) in the stream of data. This property is
read/write while the Stream object is open. If you attempt to check the
Position property on a closed Stream, you'll receive a run-time
error.</p>

<p>When using a Stream to store Unicode data or other multibyte string
data, be sure to set the Position property to an even number because
each character uses 2 bytes of space.</p>

<A NAME="227"><H2>Size Property</H2></A>

<p>The Size property is read-only and returns a long value that
indicates the size, in bytes, of the data stored in the Stream object.
Checking the value of this property on a closed Stream will generate a
run-time error. The Size property will return -1 if the data in the
Stream object is an undetermined size. If the data is too large to be
stored in a long integer, the Size property will be truncated.</p>

<A NAME="228"><H2>State Property</H2></A>

<p>The Stream object's State property has the same functionality
for a Stream object as the Record object's State property has for a
Record. See &quot;<A HREF="ch06d.htm#208">State Property</A>&quot; under the Record object
discussion earlier in this chapter for a description of the
State property and its possible values.</p>

<A NAME="229"><H2>Type Property</H2></A>

<p>The Type property indicates the type of data stored in the Stream
object. This property will take one of the values in StreamTypeEnum, as
listed in the following table. You can set the Type property on a
closed Stream object or on an open Stream object whose Position
property value is 0.</p>

<table cellpadding="5" border="0" width="95%">
<tr><th colspan="3">StreamTypeEnum Values</th></tr>
<tr><th><i>Constant</i></th><th><i>Value</i></th><th><i>Description</i></th></tr>
<tr><td valign="top">adTypeBinary</td><td valign="top">1</td><td valign="top">The Stream object contains binary data.</td></tr>
<tr><td valign="top">adTypeText</td><td valign="top">2</td><td valign="top">Default; the Stream object contains text data.</td></tr>
</table>

</BODY>
</HTML>







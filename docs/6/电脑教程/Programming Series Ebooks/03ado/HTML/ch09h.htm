<html>
<head>
<TITLE>Hierarchical Recordsets</title>
<link rel="STYLESHEET" type="text/css" href="progado.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<BODY bgcolor = "#ffffff" text="#000000">
<A HREF="ch09g.htm">[Previous]</A> <A HREF="ch09i.htm">[Next]</A><P>

<A NAME="286"><H1>Hierarchical Recordsets</H1></A>

<p>Data doesn't exist in a vacuum. If you build an order entry
system and the user requests data for a particular order, you'll
probably include information from more than one table. Maybe you'll
want to display the information from the Customers table about the
customer who placed the order, as well as the items from the Orders
table that make up the order.</p>

<p>The ADO Cursor Engine includes functionality that lets you organize
data from separate tables into a hierarchy. You can issue a single
query that retrieves information such as customer, order, and order
detail into different levels of a hierarchy. As you navigate through
the customer level of the hierarchy, you'll see only the orders
that apply to that customer. And as you look at a particular order,
you'll see only those items that the order includes.</p>

<p>In <A HREF="ch14a.htm">Chapter 14</A>, you'll see how ADO organizes this data and
synchronizes it in your hierarchy. The query syntax to build the
hierarchy is somewhat confusing. We'll look at some examples of
this syntax without going into too much depth. The topic of
hierarchical query syntax could fill an entire book. The goal in
<A HREF="ch14a.htm">Chapter 14</A> is to help you understand how this feature works so that you
can use it intelligently and avoid coding yourself into a corner.</p>

</BODY>
</HTML>







<html>
<head>
<TITLE>Joins</title>
<link rel="STYLESHEET" type="text/css" href="progado.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<BODY bgcolor = "#ffffff" text="#000000">
<A HREF="ch10d.htm">[Previous]</A> <A HREF="ch10f.htm">[Next]</A><P>

<A NAME="309"><H1>Joins</H1></A>

<p>In a perfect world&#8212;or a perfect data access object
model&#8212;you could update data based on a join that you design
however you see fit. You'd have enough control to tell the object
model exactly what it means to insert, modify, or delete a record in
your Recordset. But as I'm sure you've noticed, this is not a
perfect world and ADO is not a perfect data access object model.
Although queries that use joins are fine for read-only data, updating a
Recordset based on a join query is not as easy as you might think.</p>

<p>Let's take a look at a simple update example. Suppose that you
want to retrieve customer and order information into a single recordset
by joining information, as in the following query:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>
SELECT
<html>
<head>
<TITLE>Benefits of Using the ADO Cursor Engine</title>
<link rel="STYLESHEET" type="text/css" href="progado.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<BODY bgcolor = "#ffffff" text="#000000">
<A HREF="ch09j.htm">[Previous]</A> <A HREF="ch09l.htm">[Next]</A><P>

<A NAME="289"><H1>Benefits of Using the ADO Cursor Engine</H1></A>

<p>Some of the greatest advantages of using the ADO Cursor Engine are
that you can save time, simplify your code, and write code that is
database independent.</p>

<A NAME="290"><H2>Saving Time</H2></A>

<p>The biggest benefit of using the ADO Cursor Engine is the time you
can save by leveraging the libraries created by the ADO development
team.</p>

<p>If you're an accomplished programmer, there is nothing that the
ADO Cursor Engine does that you can't do yourself&#8212;given enough
time. But that's the catch. How many programmers have enough time
to develop such a flexible, powerful set of libraries?</p>

<p>Notice that I said &quot;accomplished programmer.&quot; As
you'll see in the upcoming chapters, most of the features of the
ADO Cursor Engine are nontrivial. While they're not perfect, they
are rather well thought out. It takes a great deal of planning and
expertise to develop such a helpful set of features. I fancy myself a
decent programmer, and I know better than to criticize developers in
the Microsoft Data Access Group. They could probably do my job. But I
don't think I could handle theirs.</p>

<p>While I would never tell a programmer <i>not</i> to try to develop a
set of libraries similar to the ADO Cursor Engine, I'd wish him
luck and hope he has a backup plan or an impressive
r&eacute;sum&eacute;.</p>

<A NAME="291"><H2>Simplifying Your Code</H2></A>

<p>Using the ADO Cursor Engine can also simplify your code. Some of the
most impressive developers I've worked with, both inside and
outside of Microsoft, write code that is disorganized and difficult to
follow. The biggest drawback to such spaghetti code&#8212;code that
works but which no one but its creator can understand&#8212;is that it
can become impossible to maintain.</p>

<p>As a support professional, I spend a good portion of my time
reviewing code written by customers and coworkers. You can follow
another programmer's code much more easily if the programmer relies
on components that you're already familiar with, such as those of
the ADO Cursor Engine.</p>

<A NAME="292"><H2>Writing Database-Independent Code</H2></A>

<p>Have you ever developed an application to interact with an Access
database only to discover later that the plans have changed? Perhaps
someone within your company has decided that the next version of your
application must instead work with a client/server database such as SQL
Server, Oracle, Sybase, Informix, or DB2.</p>

<p>If your application relies on features available in the Access
driver or provider's server-side cursors, you'll have a lot of
code to rewrite if your new database doesn't expose server-side
cursors or has functionality that's different from that of Access
databases. If you initially designed your application to use the ADO
Cursor Engine, however, you'll be able to use most of your code to
communicate with the new type of database.</p>

<p>The features of the ADO Cursor Engine are designed to be database
independent, allowing you to use the same code against any
database.</p>

</BODY>
</HTML>







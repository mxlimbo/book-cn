<html>
<head>
<TITLE>Passing Recordsets Across Process Boundaries</title>
<link rel="STYLESHEET" type="text/css" href="progado.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<BODY bgcolor = "#ffffff" text="#000000">
<A HREF="ch09h.htm">[Previous]</A> <A HREF="ch09j.htm">[Next]</A><P>

<A NAME="287"><H1>Passing Recordsets Across Process Boundaries</H1></A>

<p>You've probably heard that two-tiered client/server applications
are pass&eacute; and that Component Services (Microsoft Transaction
Server) and Microsoft Internet Information Services (IIS) are now the
tools of choice for building large, multiuser applications. Maybe you
know a little bit about the inner workings of COM as well as its
distributed counterpart, DCOM, but you're not sure how to proceed
with your development.</p>

<p>The ADO Cursor Engine makes passing Recordset objects across process
boundaries amazingly simple. From a programming standpoint, you can
treat the Recordset object almost like a standard data type, such as an
integer.</p>

<p>We'll cover some of the basics of passing Recordset objects
across process boundaries in <A HREF="ch15a.htm">Chapter 15</A>. But be forewarned: this is a
fairly advanced topic in COM, and while I cover many of the inner
workings of ADO, the inner workings of COM are beyond the scope of this
book. I strongly recommend picking up a book or two on the topic such
as <i>Understanding ActiveX and OLE,</i> by David Chappell [Microsoft
Press, 1996], or <i>Inside COM,</i> by Dale Rogerson [Microsoft Press,
1997].</p>

</BODY>
</HTML>







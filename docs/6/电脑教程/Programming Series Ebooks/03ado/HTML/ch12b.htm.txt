<html>
<head>
<TITLE>Now What?</title>
<link rel="STYLESHEET" type="text/css" href="progado.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<BODY bgcolor = "#ffffff" text="#000000">
<A HREF="ch12a.htm">[Previous]</A> <A HREF="ch12c.htm">[Next]</A><P>

<A NAME="332"><H1>Now What?</H1></A>

<p>I hear this question a lot from programmers who call Microsoft
Developer Support wanting to know what to do when their optimistic
update attempts fail. Just as there's no simple answer to the
question, &quot;How do I handle errors in my application?&quot;
there's no simple answer here. And yet, it's not overly
complicated to handle failed optimistic update attempts. You simply
have to figure out what went wrong, why it happened, and what to do
about it. That's not so difficult, right?</p>

<p>A lot of programmers I speak with about handling failed optimistic
update attempts are surprised when I ask them, &quot;Well, once you
understand what went wrong, how do you want your code to
react?&quot;</p>

<p>When I explain error handling of optimistic updates to customers, I
tend to go back to the same example each time&#8212;the same snippet of
code we've used throughout most of the book:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>
strSQL
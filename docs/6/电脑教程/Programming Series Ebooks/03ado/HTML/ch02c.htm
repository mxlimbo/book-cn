<html>
<head>
<TITLE>Dynamic Properties</title>
<link rel="STYLESHEET" type="text/css" href="progado.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<BODY bgcolor = "#ffffff" text="#000000">
<A HREF="ch02b.htm">[Previous]</A> <A HREF="ch02d.htm">[Next]</A><P>

<A NAME="16"><H1>Dynamic Properties</H1></A>

<p>Developers familiar with the DAO object model have probably had some
experience with DAO's dynamic properties. DAO's Properties
collection contains information about all of an object's defined
properties (such as the DAO Recordset object's Updatable property).
The Properties collection also allows you to retrieve information about
user-defined properties.</p>

<p>ADO has a dynamic Properties collection, though it serves a
different purpose than DAO's Properties collection. ADO's
Properties collection contains Property objects that store information
about database system features.</p>

<p>Different database systems expose different features. For example,
secure Microsoft Access databases require a system database file
(System.mdw). Microsoft SQL Server has options for using standard or
integrated security. With RDO, you would need to provide database
system information in the connection string or by making ODBC API calls
to take advantage of the unique features of your particular database
system. It would be impractical to attempt to make features such as
these explicitly available through the ADO type library. Instead, ADO
makes these features available through its object model by means of the
dynamic ADO Properties collection, which is reserved for these database
or provider-specific features. It does not contain information already
available through the type library.</p>

</BODY>
</HTML>







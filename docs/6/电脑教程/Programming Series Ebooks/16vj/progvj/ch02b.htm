<HTML>
<HEAD><LINK REL="STYLESHEET" TYPE="text/css" HREF="Library.css">
<TITLE>The Windows Foundation Classes</TITLE>


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch02a.htm", "ch02c.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>
<A NAME="92"><H1>The Windows Foundation Classes</H1></A>

<p>WFC is a large library of Java classes&#8212;much too large for us to cover in one chapter. In fact, investigating the classes that make up WFC will consume all of Part II and much of the remainder of this book. In this chapter, we'll discuss one package of classes&#8212;the file input/output (I/O) package <I>com.ms.wfc.io</I>. From this discussion, you will get a basic knowledge of how WFC works. You will be able to use this information when we investigate windowed applications in <A HREF="ch04a.htm">Chapter 4</A>.


<A NAME="93"><H2>The Organization of WFC</H2></A>

<p>WFC is organized into a series of packages as follows:
<TABLE WIDTH="95%" CELLPADDING="5">

<TR>
<td valign=top><B><I>Package</I></B></TD>
<td valign=top><B><I>Package description</I></B></TD>
</TR>

<TR>
<td valign=top><I>com.ms.wfc.app </I></TD>
<td valign=top>Provides classes that encapsulate Windows application operations such as threads, messaging, and access to the Clipboard and the Windows registry.</TD>
</TR>

<TR>
<td valign=top><I>com.ms.wfc.core</I></TD>
<td valign=top>Used by the Java development tools. Most of these 
classes are not used directly by the programmer.</TD>
</TR>

<TR>
<td valign=top><I>com.ms.wfc.data</I></TD>
<td valign=top>Provides access to data stored in databases by means 
of ActiveX Data Objects (ADO).</TD>
</TR>

<TR>
<td valign=top><I>com.ms.wfc.html</I></TD>
<td valign=top>Provides classes for accessing Dynamic HTML. This is 
the only WFC package that is devoted to applet development.</TD>
</TR>

<TR>
<td valign=top><I>com.ms.wfc.io</I></TD>
<td valign=top>Includes the classes that perform file 
input/output (I/O). This package is presented in this chapter.</TD>
</TR>

<TR>
<td valign=top><I>com.ms.wfc.ui</I></TD>
<td valign=top>Provides the WFC user interface for Windows applications.</TD>
</TR>

<TR>
<td valign=top><I>com.ms.wfc.util</I></TD>
<td valign=top>A catchall package of unrelated utility classes.</TD>
</TR>

</TABLE>

<p>The <I>com </I>in the package name indicates that a package isn't intrinsic to Java. The rules of Java require this prefix to avoid name collisions with packages 
provided by other companies. The <I>ms</I> presumably stands for Microsoft. Thus, the full name of the <I>File</I> class within the WFC <I>io</I> package is <I>com.ms.wfc.io.File</I>.

<P>
<DIV CLASS="NOTE">
<BLOCKQUOTE>
<B>NOTE</B>
<HR>Don't panic; the <I>import</I> statement makes using the prefix optional, as you will see in the examples later in this chapter.
</BLOCKQUOTE>
</DIV>


<A NAME="94"><H2>Why WFC?</H2></A>

<p>Before we talk about how to write WFC-based applications, I think I should answer the question, &quot;Why?&quot; This is really two questions in one: &quot;Why create Windows-specific Java applications?&quot; and &quot;Why use WFC?&quot;

<p>In answer to the first question, once an application has been compiled into an executable, it is automatically specific to the operating system for which it was compiled. Thus, to say that your .EXE file is limited to running under Windows isn't a limitation at all. True, you can deploy Java programs as .class files, but for applications the prospect of forcing the user to supply JVIEW or an equivalent Java application viewer doesn't seem practical. The point is that you can recompile source code that uses the generic Java library functions to run under any operating system. However, using WFC limits your applications to run under only Microsoft Windows. You must decide whether this is a limitation that you can live with.

<p>I should point out that you would be limiting yourself to about 95 percent of all of the desktop machines in the market. In addition, if Microsoft Windows is your only operating system and you're writing an application for your own use, this is no limitation at all.

<p>To offset this restriction of using WFC, you would expect to receive some benefits. Here we arrive at an answer to the second question above. The WFC package provides four distinct advantages to the Windows programmer:

<UL>
<p><li>WFC classes have more expressive power than does Java alone.

<p><li>Many of the WFC classes look a lot like the classes provided by other windowing languages, such as Microsoft Visual C++. This similarity reduces the learning curve for non-Java Windows programmers. In many cases, the similarity in classes gives WFC the same look and feel as the C++ MFC library.

<p><li>Tying WFC to the Windows operating system makes WFC-based applications more responsive by reducing the code distance between the application code and the underlying operating system. In addition, the number of repaints is significantly reduced. (For reasons unknown to me AWT-based applications repainted more than they needed to, resulting in slower application performance than with the WFC-based applications.)

<p><li>The development tools provided with Visual J++ 6 use WFC to enhance greatly the programmer's application development capability.
</UL>

<p>Let's examine the first three assertions by looking at the WFC package <I>ms.com.wfc.io</I>. I'll spend the remainder of the book demonstrating the development tools.


</BODY>
</HTML>





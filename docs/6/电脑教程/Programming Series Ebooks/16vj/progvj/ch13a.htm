<HTML>

<HEAD>
<LINK REL=StyleSheet HREF="Library.css" TYPE="text/css">
<title>Chapter 13 -- Creating Controls</TITLE>


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch12h.htm", "ch13b.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<font size="+3">Chapter 13</font>

<A NAME="431"><H1>Creating Controls</H1></A>

<p>The Microsoft Visual J++ 6 Toolbox contains a number of Microsoft Windows Foundation Classes for Java (WFC) controls. In fact, the majority of Part II was devoted to demonstrating the power and flexibility of WFC controls. There might come a time, however, when you'll need some exotic control that isn't in the Visual J++ Toolbox. For example, you might want to create a clock object with hands that sweep out the minute and hour, or a button with rounded edges. Fortunately, Visual J++ 6 allows you to create your own controls and add them to the Toolbox.

<p>You can create two types of controls in Visual J++:
<UL>

<p><li> Local WFC-style controls

<p><li> Remote ActiveX controls
</UL>

<p>For the remainder of this chapter, I'll refer to these two types of controls as WFC-style controls and ActiveX controls.

<p><div class="note"><blockquote>
<b>NOTE</b><hr>
ActiveX controls are actually no more remote than local WFC-style controls. Unlike local controls, however, they are available outside Visual J++. 
</blockquote></div>

<p>You can create your own WFC-style control to perform the same types of tasks as a Label control, an Edit control, a Button control, and so on. A user-defined WFC-style control looks and acts like the controls that are already in the WFC Controls section of the Toolbox. In fact, once you've created your own WFC-style control, you can add it to the Toolbox. Essentially, there is no difference between your WFC-style control and the controls that Visual J++ provides.

<p>You can easily turn WFC-style controls into ActiveX controls. You can then add these ActiveX controls to the Visual J++ Toolbox, although you'll lose some of the editing capability you had when they were WFC-style controls. You can also add ActiveX controls to the toolbars of other Microsoft Visual Studio 6 languages, such as Microsoft Visual Basic 6.

<p>In this chapter, we'll create our own WFC-style control. This control will have the same type of data and active properties as WFC controls, and will support both a data property and an event that we create. We'll add this control to the Toolbox, and use it in a very simple example program to demonstrate how it works.

<p>Once we've created our WFC-style control, we'll turn it into an ActiveX control. We'll first use this ActiveX control in a Visual J++ 6 program and then in a Visual Basic 6 program.

<p><div class="note"><blockquote>
<b>NOTE</b><hr>
The WeightEdit control developed throughout this chapter is included on the companion CD in the Custom Controls subdirectory. The control is built in stages, so you'll find each version of the control located in a separate subdirectory within the Custom Controls subdirectory. Because only one copy of the WeightEdit class files can be in the \Windows\Java\Classes directory (explained later), you'll find WeightEditTest.exe in the same directory as WeightEdit for test purposes. 
</blockquote></div>

</BODY>
</HTML>





<HTML>
<HEAD><LINK REL="STYLESHEET" TYPE="text/css" HREF="Library.css">
<TITLE>Exceptions</TITLE>


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("appe.htm", "appg.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>
<A NAME="56"><H1>Exceptions</H1></A>

<p>Java uses the exception mechanism to report and process errors that occur while 
a program is running.

<A NAME="57"><H2>Throwing an Exception</H2></A>

<p>You can generate an exception with the keyword 
<I>throw,</I> followed by an object that implements the interface 
<I>Throwable</I>. User exceptions should extend the class 
<I>Exception,</I> which implements 
<I>Throwable</I>.

<p>A method that throws an exception must include the 
<I>throws</I> keyword, followed by a list of the exceptions thrown in the method declaration, as follows:

<p><pre>
class TV
{
    void tune(int channel)
        throws IllegalChannel
    {
        if (channel &gt;= MINIMUM_CHANNEL &amp;&amp;
           channel &lt;= MAXIMUM_CHANNEL)
        {
            throw new IllegalChannel(channel);
        }
        .
        .
        .
    }
}
</PRE>

<p>Here, <I>IllegalChannel</I> is a user-defined class that extends the class 
<I>Exception</I>.

<p>It's not necessary to include a <I>throws</I> keyword before throwing 
run-time 
exceptions. This is because Java itself generates these exceptions.

<A NAME="58"><H2>Catching an Exception</H2></A>

<p>The keyword <I>catch</I> is used to introduce a block of code designed to process 
an exception. You must follow the <I>catch</I> keyword with a class that implements 
the <I>Throwable</I> interface.

<p>A <I>catch</I> block must immediately follow a block of code flagged with the 
<I>try</I> keyword, as shown in the following example. The 
<I>catch</I> block is only valid for 
exceptions thrown from within the <I>try</I> block or from within methods called from 
the <I>try</I> block.

<p><pre>
void myMethod()
{
    try
    {
        .
        .
        . 
    }
    catch(Exception e)
    {
        // &#8230;process the exception e&#8230;
    }
}
</PRE>

<p>The class name next to the <I>catch</I> keyword acts as a filter, catching only 
objects that inherit from <I>Exception</I>.

<p>It's not required that a method handle an exception thrown by a method it 
calls; however, if it doesn't, it must use the 
<I>throws</I> keyword to declare that an exception can be passed out of the method.

<A NAME="59"><H2>Multiple Exceptions</H2></A>

<p>It's possible for a method to handle different types of exceptions independently, 
as shown here:

<p><pre>
void myMethod()
{
    try
    {
        .
        .
        .		
		
    }
    // catch IllegalChannel exceptions
    catch(IllegaleChannel ic)
    {
    }
    // catch any type of exception other than
    // the IllegalChannel exception
    catch(Exception e)
    {
    }
}
</PRE>

<p>Java processes exceptions in order. Thus, placing a more general 
<I>catch</I> in front of a less general 
<I>catch</I> generates a compile-time error since the second 
<I>catch</I> would be unreachable.

<A NAME="60"><H2>Final</H2></A>

<p>Control exits a <I>try</I> block as soon as the program executes a return or an 
exception is thrown. However, the keyword 
<I>final</I> introduces a block of code that runs no 
matter how control exits a method.

</BODY>
</HTML>


  


<HTML>
<HEAD><LINK REL="STYLESHEET" TYPE="text/css" HREF="Library.css">
<TITLE>ActiveX Data Objects</TITLE>


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch12b.htm", "ch12d.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>
<A NAME="398"><H1>ActiveX Data Objects</H1></A>

<p>The balance of this chapter deals with the use of Microsoft ActiveX Data 
Objects (ADO) and the relationship of ADO to Visual J++ and SQL.

<A NAME="399"><H2>What is ADO?</H2></A>

<p>As I mentioned earlier, the internal data structure might (and in fact, generally 
does) vary from one database to another. This isn't a problem when you are entering 
commands from a SQL tool, but it's a problem when accessing these databases 
from Visual J++.

<p>As part of the Windows Open System Architecture (WOSA), Microsoft 
defined the Open Database Connectivity (ODBC) application program interface (API). 
The current 32-bit version, ODBC32, replaces the older 16-bit version.

<p>ODBC32 provides an API that database vendors implement by means of 
ODBC drivers specific to their particular database. Your program uses this API to call 
the ODBC32 Driver Manager, a dynamic-link library that passes the calls to the 
appropriate driver. The driver, in turn, interacts with the database using SQL.

<p>As a Windows standard, there is an ODBC32 driver for almost every 
common database in existence. Unfortunately, the ODBC32 API is somewhat complicated 
and is not optimized for Visual J++. To address the ODBC32 complexity problem, 
version 6 of the development environment for the Microsoft Visual Studio languages 
introduces the ADO 2.0 interface. This interface is an API that is ideal for 
object-oriented languages like Visual J++: it has fewer classes and a simpler interface than 
ODBC32. Since ADO is built on top of the 32-bit version of ODBC, the ADO classes can 
be used with any database for which an ODBC32 driver exists.

<p>Visual J++ 6 also contains a number of Toolbox tools for adding database 
interaction capabilities to your application. While these tools certainly simplify 
the job, you still must have some knowledge of ADO to develop applications that 
use databases.

<A NAME="400"><H2>Approaches to ADO</H2></A>

<p>In this chapter, we'll cover three basic approaches to writing ADO applications: 
writing the application manually; using the Application Wizard; and using the Toolbox 
data tools. 

<p>I have always felt that a person needs to know how to multiply by hand 
before using a calculator. With that in mind, we'll begin by manually creating a 
simple example application that accesses a small database by means of ADO. From 
there, we'll move to an application built by the fully automatic but inflexible 
Application Wizard. The chapter wraps up with a demonstration of a slightly more 
complicated but much more flexible approach. We'll use the Toolbox data tools and learn 
how to access databases on PCs connected to your PC by means of a LAN.

</BODY>
</HTML>





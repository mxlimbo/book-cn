<HTML>
<HEAD>
<link rel="STYLESHEET" type="text/css" href="Library.css">
<TITLE>Chapter 15 -- Bitmaps, Palettes, and Regions</TITLE>


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch14d.htm", "ch15b.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>


<P><font size="+3">Chapter 15</font></P>

<A NAME="447"><H1>Bitmaps, Palettes, and Regions</H1></A>

<P>Getting a firm grasp of the Microsoft Windows GDI is an important milestone on 
the road to becoming a Windows programmer because all graphical output to 
screens, printers, and other devices is performed through the GDI. So far in this book, 
we've used three of the six MFC classes that represent GDI objects: 
<I>CPen</I>, <I>CBrush</I>, and <I>CFont</I>. In this chapter, we'll examine the remaining three: 
<I>CPalette</I>, <I>CBitmap</I>, and <I>CRgn</I>.</P>

<P><I>CPalette</I> represents palettes&#8212;tables of color that allow Windows to balance 
the sometimes conflicting needs of applications that demand more colors than the 
video adapter can provide. If every video adapter displayed 24-bits-per-pixel color (8 
bits each for red, green, and blue), palettes would be unnecessary. But 256-color 
video adapters are a fact of life and probably will be for some time to come. By default, 
a Windows application that executes in a 256-color environment has access to only 
20 colors. If you're careful about how you pick your colors and make those colors 
part of a palette, you can expand the selection to 256 colors and write Windows 
applications whose color output is almost as good on 256-color screens as it is on 
screens that display millions of colors. In this chapter, you'll see how to use palettes in 
your applications to generate color output as rich as the hardware will allow.</P>

<P>MFC's <I>CBitmap</I> class represents GDI bitmaps. 
<I>CBitmap</I> is a primitive class that does very little on its own. Combined with MFC's 
<I>CDC</I> class, however, <I>CBitmap</I> makes it relatively easy to draw on virtual display surfaces in memory, load 
bitmap resources, and display simple bitmap images on the screen. You can also use 
<I>CBitmap</I> to build more capable bitmap classes that exploit the capabilities of the 
Windows device-independent bitmap (DIB) engine. One technique you'll see demonstrated 
in this chapter is a method for creating DIB sections from BMP files and attaching 
them to ordinary <I>CBitmap</I> objects&#8212;all in just three lines of code.</P>

<P><I>CRgn</I> is one of MFC's more obscure classes, but one that you can use for 
some exotic graphics effects. Rather than spoil the fun, I'll leave the details for the end 
of the chapter.</P>

</BODY>
</HTML>





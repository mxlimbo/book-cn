<HTML>
<HEAD>
<link rel="STYLESHEET" type="text/css" href="Library.css">
<TITLE>Chapter 19 -- The Clipboard and OLE Drag-and-Drop</TITLE>


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch18c.htm", "ch19b.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>


<P><font SIZE="+3">Chapter 19</font></P>

<A NAME="583"><H1>The Clipboard and OLE Drag-and-Drop</H1></A>

<P>Since version 1.0, Microsoft Windows has supported the transfer of data through the clipboard. The clipboard is a centralized location where data can be stored en route from one application to another or on its way to another part of the same application. Even novices quickly grasp the clipboard's simple cut/copy/paste paradigm: select the data, cut it or copy it to the clipboard, and paste it somewhere else. Many applications feature Cut, Copy, and Paste commands in their Edit menus, and millions of Windows users know Ctrl-X, Ctrl-C, and Ctrl-V as the keyboard equivalents of these basic clipboard commands.</p>

<P>The original clipboard (which I'll refer to as the <I>legacy clipboard</I> or simply as <I>the clipboard</I>) is still present in Windows 98 and Windows 2000, but programmers are encouraged to forego using it in favor of a newer, more capable clipboard known as the <I>OLE clipboard</I>. The OLE clipboard is backward-compatible with the legacy clipboard, meaning that one application can copy data to the OLE clipboard and another application can retrieve that data from the legacy clipboard, and vice versa. More important, the OLE clipboard lets programmers do a few things that the legacy clipboard doesn't. To transfer a large bitmap using the legacy clipboard, for example, you must allocate enough memory to store the entire bitmap. Transfer the same bitmap through the OLE clipboard, however, and you can store the bitmap in a more sensible storage medium, such as in a file on a hard disk.</p>

<P>Closely related to the OLE clipboard is a visual method of transferring data called <I>OLE drag-and-drop</I>. OLE drag-and-drop simplifies cut/copy/paste by eliminating the middleman. Rather than requiring one command to move the data to the clipboard and another to paste it into a document, OLE drag-and-drop lets you grab a piece of data with the mouse and drag it to the desired location. Under the hood, a mechanism much like the OLE clipboard is used to facilitate the data transfer. But to the user, the transfer appears seamless&#8212;and very intuitive.</p>

<P>MFC doesn't provide explicit support for operations involving the legacy clipboard, but it does support the OLE clipboard and OLE drag-and-drop. Writing code to use either of these data transfer mechanisms is no picnic if you're doing it from scratch, but MFC makes it surprisingly simple.</p>

<P>The best way to understand the mechanics of the OLE clipboard and OLE drag-and-drop is to first understand how the legacy clipboard works. To that end, I'll begin this chapter with an overview of the legacy clipboard and a review of the Windows API functions used to access it. I'll then introduce the OLE clipboard and OLE drag-and-drop and demonstrate how to use MFC to develop applications that support both of them in no time flat.</p>

</BODY>
</HTML>





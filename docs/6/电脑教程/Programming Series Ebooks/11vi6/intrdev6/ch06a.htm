<HTML>
<HEAD>
	<LINK REL=StyleSheet HREF="Library.css" TYPE="text/css">
<TITLE>Chapter 6 -- Using Design-Time Controls</TITLE>


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch05e.htm", "ch06b.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>


<P>
<FONT size="+3">Chapter 6</font>

</P>
<A NAME="102"><H1>Using Design-Time Controls</H1></A><A NAME="103"><H1>Introduction</H1></A>
<P>Design-time controls (DTCs) offer you a more functional and 
aesthetically pleasing interface for creating data-enriched pages than do standard 
HTML controls. The data-bound DTCs simplify incorporating data in your ASP 
Web pages or HTML pages to talk to a database (as you saw in the <A HREF="ch05a.htm">last chapter</A>). 
The DTCs included with Microsoft Visual InterDev 6 allow you to target a wide 
range of browsers or to narrow the focus of the application to take advantage of 
the unique features of Microsoft Internet Explorer 4.

</P>
<P>This chapter focuses on the features and uses of DTCs in 
applications. <A HREF="ch08a.htm">Chapter 8</A> will focus on how to use server and client script with DTCs.

</P>
<P>DTCs have two components:

</P>
<UL>
<P><LI>The control that runs in Visual InterDev to provide you with 
property pages and automated design features

</LI>
</P>
<P><LI>The run-time scripting objects that implement the control
</LI></P>
</UL>




<P>These two components work together to provide the developer with 
a powerful set of controls for use in Visual InterDev's integrated 
development environment (IDE).

</P>
<P>Visual InterDev 6 includes a number of DTCs that automatically 
generate much of the server-side and client-side scripting required for applications. 
This includes traditional HTML, Microsoft VBScript (Visual Basic, Scripting 
Edition), Microsoft JScript, and ADO (ActiveX Data Objects) code. Many DTCs 
generate all the logic necessary to establish database connections within a Web 
site, perform queries, and display results.

</P>
<P>Visual InterDev 6 builds upon the rich DTC foundation laid by 
Visual InterDev 1. The new DTC features not only work to automate ADO 
functions but also provide data-bound features that automatically link components 
such as Textbox DTCs with a Recordset DTC. This new functionality makes it 
extremely easy to build a Web page with fields linked to a database on the server.

</P>
<P>Insert a DTC into a page by following these steps:

</P>
<OL>
<P><LI>  Select the Design-Time Controls tab of the Toolbox.

</LI>
</P>
<LI><P>  Drag the DTC you wish to insert from the Toolbox, and drop it 
on the ASP file in the editor.

</P>
<P>Edit the properties of a DTC by following these steps:

</P>
</LI>
<P><LI>  Right-click the DTC in the editor, and select Properties.

</LI>
</P>
<P><LI>  Make your changes in the Properties dialog box, and click Apply.
</LI>
</P>
</OL>




<P>The new DTCs do not display the code for the implementation of the 
control in the editor as they did in Visual InterDev 1. Instead, the controls are 
represented graphically in both the Source View and Design View editors. Figure 6-1 
shows the Design View editor with a Textbox DTC and a Label DTC on a page.

</P>
<P>You can see how the two fields are represented graphically in the 
Design View editor. The label is a large text site and appears to be standard HTML 
text typed into the page. The string &quot;Inventory Solutions&quot; is actually text that 
is entered in the <I>DataField</I> property of the DTC. The other control on the 
page is the Textbox DTC containing the text &quot;txtItemNumber.&quot; This text is the 
<I>ID</I> property of the DTC.

</P>
<P>If you switch to Source view, the DTCs will still be graphically 
displayed. The display you see there is the same display that we have used in most of 
the figures in this book so far. Figure 6-2 shows the same page that is shown 
in Figure 6-1.

</P>
<P><A HREF="javascript:fullSize('f06lh01x.htm')"> <IMG SRC="images/f06lh01.jpg" width=404 height=296 border=0 ALT="Click to view at full size."> </A>
</P>
<P>
<!-- CAPTION --><B>Figure 6-1.</B> <I>The Visual InterDev 6 editors show a graphical version of the 
DTCs by default.</I><!-- /CAPTION -->

</P>
<P><A HREF="javascript:fullSize('f06lh02x.htm')"> <IMG SRC="images/f06lh02.jpg" width=404 height=296 border=0 ALT="Click to view at full size."> </A>
</P>
<P>
<!-- CAPTION --><B>Figure 6-2.</B> <I>The Source View editor also renders the DTCs graphically.</I><!-- /CAPTION -->

</P>
<P>Often you will see the Source View editor when it is in the process 
of rendering the graphical display for a DTC. This occurs when you switch 
to Source view from another view or when you scroll along a page quickly. 
This is quite normal. When it happens, you might see Visual InterDev with a 
display similar to that in Figure 6-3.

</P>
<P><A HREF="javascript:fullSize('f06lh03x.htm')"> <IMG SRC="images/f06lh03.jpg" width=404 height=296 border=0 ALT="Click to view at full size."> </A>
</P>
<P>
<!-- CAPTION --><B>Figure 6-3.</B> <I>Visual InterDev renders the DTCs in a page each time it 
must redisplay the portion of the page viewable in the editor.</I><!-- /CAPTION -->

</P>
<P>The display in Figure 6-3 shows some of the static text used to store the 
DTC properties in the page. For instance, you can see the text displayed in the 
Textbox DTC is set to &quot;Inventory Solutions,&quot; just as we set it in the DTC properties.

</P>
<P>You can also display the code for a DTC by changing a setting for 
the control in the editor. Follow these steps:

</P>
<OL>
<P><LI>  Display the page containing the DTC in Source view.

</LI>
</P>
<P><LI>  Right-click the DTC.

</LI>
</P>
<P><LI>  Select Show Run-Time Text.
</LI>
</P>
</OL>




<P>Displaying the run-time text of a DTC will result in a display similar 
to Figure 6-4. You can see how the DTC relies on server-side code in the 
Script Library and also uses client-side Java code to implement the control. 
Examining this code will give you a good understanding of how a particular DTC 
is implemented.

</P>
<P><A HREF="javascript:fullSize('f06lh04x.htm')"> <IMG SRC="images/f06lh04.jpg" width=404 height=296 border=0 ALT="Click to view at full size."> </A>
</P>
<P>
<!-- CAPTION --><B>Figure 6-4.</B> <I>The run-time text for a control can be displayed in the 
Source View editor.</I><!-- /CAPTION -->

</P>
<P>You can quickly hide the DTC's run-time code once you have 
finished reviewing it by selecting View Controls Graphically from the View menu.

</P>
<P>You can view controls (that is, DTCs, Java applets, and other controls) 
in Source view as text. This is useful for viewing the exact contents of a 
page and for quickly making changes to a series of controls. You can choose to 
view a control always as text in the Source View editor. This shows the control 
in the same fashion as a Visual InterDev 1 DTC, shown in Figure 6-5 below.

</P>
<P>Viewing a control as text applies only in Source view. Design view 
and Quick view always render the graphical view of a control (if possible). You 
can set the default view for DTCs by selecting Options from the Tools menu 
and using the HTML<B> </B>section of the Options dialog box.

</P>
<P>You can view a control as text by following these steps:

</P>
<OL>
<P><LI> Right-click the DTC in the Source View editor.

</LI>
</P>
<P><LI> Select Always View As Text.
</LI>
</P>
</OL>




<P>These steps set the VIEWASTEXT attribute in the DTC's &lt;OBJECT&gt; tag.

</P>
<P>You can also view all DTCs as text by selecting View Controls As Text 
on the View menu. When you select this option, all DTCs on the page will 
be displayed as text until you switch to Design view or Quick view and back. 
You can also use the View Controls Graphically command on the View menu 
to redisplay DTCs graphically. Any DTCs for which you have selected the 
Always View As Text option will continue to be viewed as text.

</P>
<P>Selecting Refresh from the View menu will cause the editor to display 
all DTCs in the current default view except those whose &lt;OBJECT&gt; tag 
contains the VIEWASTEXT attribute.

</P>
<P><A HREF="javascript:fullSize('f06lh05x.htm')"> <IMG SRC="images/f06lh05.jpg" width=404 height=296 border=0 ALT="Click to view at full size."> </A>
</P>
<P>
<!-- CAPTION --><B>Figure 6-5.</B> <I>DTCs can also be displayed as text in the Source View editor.</I><!-- /CAPTION -->

</P>
<P>Displaying DTCs as text can affect how DTCs function on a page. 
DTCs do not function properly if they are displayed as text, because they 
cannot communicate with the Scripting Object Model framework. You must make 
sure the options are set to view DTCs graphically before you add a DTC to a 
page. If you inadvertently add a DTC to the page while the view controls as text 
option is set, the HTML editor cannot create an instance of the DTC and will 
display only the HTML &lt;OBJECT&gt; tag for the DTC, not the DTC itself.

</P>
<P>You can permanently convert a DTC's code to text by following these steps:

</P>
<OL>
<P><LI>  Display the page containing the DTC in Source view.

</LI>
</P>
<P><LI>  Right-click the DTC, and select Convert To Run-Time Text from 
the popup menu.

</LI>
</P>
<P><LI>  Visual InterDev will display a confirmation message warning you 
that this action cannot be undone and that you will experience a loss 
in functionality. (See Figure 6-6.) Click Yes to convert the DTC to text.
</LI>
</P>
</OL>




<P><A HREF="javascript:fullSize('f06lh06x.htm')"> <IMG SRC="images/f06lh06.jpg" width=404 height=101 border=0 ALT="Click to view at full size."> </A>
</P>
<P>
<!-- CAPTION --><B>Figure 6-6.</B> <I>This message warns you that the Convert To Run-Time Text 
action cannot be undone and that the DTC will experience a loss in functionality.</I><!-- /CAPTION -->

</P>
<P>Once you have converted a DTC to run-time text, the run-time code 
for the DTC will appear in the Source View editor. For example, the run-time 
code for the Textbox DTC looks like this:

</P>
<P><PRE>
&lt;script language=&quot;JavaScript&quot; 
    src=&quot;_ScriptLibrary/TextBox.HTM&quot;&gt;&lt;/script&gt;
&lt;SCRIPT LANGUAGE=JavaScript&gt;
function _inittxtItemNumber()
{
    txtItemNumber.setStyle(TXT_TEXTBOX);
    txtItemNumber.setMaxLength(30);
    txtItemNumber.setColumnCount(30);
}
CreateTextbox('txtItemNumber', _inittxtItemNumber, null);
&lt;/script&gt;
</PRE>

</P>
<P>This code is now editable and can be changed to suit your purposes.

</P>
<P><div class="warning"><blockquote>
<B>WARNING</B><HR>Microsoft is going to replace the Scripting Object 
Model JScript code with COM objects in early 1999. It is quite likely that some 
or all of the run-time code for the DTCs will change at that point. For this 
reason, you should treat the code that a DTC generates as a black box. 
As with all black-box code, do not change it directly since you might 
render the code unusable in future versions. <I>Caveat emptor.</I>
</blockquote></div>

</P>
<A NAME="104"><H2>DTC Properties Window and Property Pages</H2></A><P>Visual InterDev now includes the Properties window that lists the 
properties for selected objects such as DTCs. The Properties window lists the 
property name and the current settings, as shown in Figure 6-7.

</P>
<P>As you work with objects, the Properties window will continually 
update to display the properties for the current object. Each time you select another 
object, the Properties window will update for that object. As you change properties, 
the changes are applied immediately. You can also use the drop-down list at the 
top of the Properties window to display the properties for another object.

</P>
<P>You can display the Properties window at any time by pressing the F4 key.

</P>
<P>Many objects will display a Custom property with an ellipsis button 
(a button with three periods on it). Clicking the ellipsis will display the 
property pages for that object.

</P>
<P><A HREF="javascript:fullSize('f06lh07x.htm')"> <IMG SRC="images/f06lh07.jpg" width=404 height=296 border=0 ALT="Click to view at full size."> </A>
</P>
<P>
<!-- CAPTION --><B>Figure 6-7.</B> <I>The Properties window updates automatically as you select 
objects in the editors.</I><!-- /CAPTION -->

</P>
<P>The first property shown in Figure 6-7 is Custom. You can click the 
ellipsis to the right of the Custom property or double-click Custom and Visual 
InterDev 6 will display the custom property pages for the object. Figure 6-8 shows 
the custom property pages for the Label DTC.

</P>
<P><IMG SRC="images/f06lh08.gif" width=401 height=279 border="0">
</P>
<P>
<!-- CAPTION --><B>Figure 6-8.</B> <I>Most DTCs have custom property pages.</I><!-- /CAPTION -->

</P>
<P>Like the Properties window, the custom property pages will display 
properties for the currently selected object in the editor. Just click a different 
object in the editor and the custom property pages will display for the new object.

</P>
<P>Each DTC will display its own set of properties. Some controls have 
similar properties. For example, all the DTCs use the 
<I>ID</I> property to name the control. This is the property you use in your script code to refer to the control. The 
<I>ID</I> property is shown as ID in the Properties window and as Name on property pages.

</P>
</BODY>
</HTML>





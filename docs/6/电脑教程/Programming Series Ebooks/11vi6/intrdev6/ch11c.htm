<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="Library.css" TYPE="text/css">
<TITLE>Integrating Client-Side Java Applets</TITLE>


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch11b.htm", "ch12a.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>
<A NAME="213"><H1>Integrating Client-Side Java Applets</H1></A>
<P>Java applets are commonly used for user interface elements such as 
scrolling tickers, advertisement animations, charts, and so forth. The advantage of 
Java applets over ActiveX controls is their breadth of deployment. In theory, you 
can write a Java applet once and deploy it anywhere. In practice, Java applets 
that are intended to run in multiple types of browser require a lot of testing to 
ensure consistent functionality across all browser platforms. It is therefore up to 
you as a developer to understand the trade-offs involved in choosing to go 
with ActiveX controls or Java applets.</P>
<P>
ActiveX controls are generally easier to write but are restricted 
somewhat in their browser support. Java applets, on the other hand, take a little 
longer to develop (arguably) and require more testing but can run on a wider 
variety of browsers and platforms. </P>
<P>
Ultimately, the decision rests upon the target audience for your 
applications. If you are developing for the Internet, where the client-side is 
unknown, it's often best to go with Java applets or even plain HTML. If you are 
developing for an intranet or extranet, where the client-side is known or can be 
controlled more easily, it's often best to go with ActiveX controls or plain 
HTML. In recent years, there has been somewhat of a push-back on both 
ActiveX controls and Java applets, and organizations are often opting for the 
more straightforward HTML deployment option, especially for their Internet 
and extranet applications. For intranet applications, ActiveX controls and Java 
applets can give your end users the interactivity they need without causing too 
much stress for developers since the client platform is known and controlled.

</P>
<A NAME="214"><H2>Inserting Java Applets into HTML and ASP Files</H2></A><P>The easiest way to integrate a Java applet into an HTML or ASP Web page is 
to manually code the &lt;APPLET&gt; tag directly into the Visual InterDev Source 
View editor. If you plan to reuse the &lt;APPLET&gt; code, you can highlight the code 
in the Source View editor and drag it onto the Toolbox to create a new item. 
You might also want to create a new tab named Java Applets prior to dragging 
the applet code onto the Toolbox so that you have a way to organize your 
applets and keep them separate from your ActiveX controls.

</P>
<P>If you add a Java applet to the Toolbox, be sure to rename the item 
so that it is more meaningful. By default, applets are given the name 
<I>HTML Fragment</I>, so you'll want to change the name to reference your specific 
applet. Figure 11-7 shows an applet in the Source View editor and its 
corresponding item in the Toolbox. The item was named 
<I>ChartGear Sample</I> after the name of the Java applet.

</P>
<P>
<A HREF="javascript:fullSize('F11lh07x.htm')"> <IMG SRC="images/F11lh07.JPG" width=404 height=303 border=0 ALT="Click to view at full size."> </A>
</P>
<P>
<!-- CAPTION --><B>Figure 11-7.</B> <I>A Java applet in the Source View editor and shown in the Java Applets tab in the Toolbox.</I><!-- /CAPTION -->

<div class="note"><BLOCKQUOTE>
<B>NOTE</B><hr>The ChartGear applet is available from Solstice Inc. on their 
Web site at <I><A TARGET="_window2" HREF="http://www.solsticeinc.net/">http://www.solsticeinc.net</A></I>. This applet can be used for 
creating graphs and has been rated in the top five percent of applets on the 
Web by the Java Applet Rating Service (JARS).
</BLOCKQUOTE></div>

</P>
<P>Applets are similar to ActiveX controls in that they also use &lt;PARAM&gt; 
tags to specify additional properties. The following code shows an example 
applet within an HTML page:

</P>
<P><PRE>&lt;HTML&gt;
&lt;HEAD&gt;
&lt;META NAME=&quot;GENERATOR&quot; Content=&quot;Microsoft Visual Studio 6.0&quot;&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;

&lt;H2&gt;Sample Applet&lt;/H2&gt;
&lt;HR&gt;

&lt;APPLET code=ChartGear.class id=SBSChart width=&quot;550&quot; 
    height=&quot;225&quot; VIEWASTEXT&gt;
    &lt;PARAM name=Num_Items value=&quot;7&quot;&gt;
    &lt;PARAM name=Data(1) value=&quot;6.4&quot;&gt;
    &lt;PARAM name=Data(2) value=&quot;11.7&quot;&gt;
    &lt;PARAM name=Data(3) value=&quot;12.9&quot;&gt;
    &lt;PARAM name=Data(4) value=&quot;14.5&quot;&gt;
    &lt;PARAM name=Data(5) value=&quot;9.1&quot;&gt;
    &lt;PARAM name=Data(6) value=&quot;10.0&quot;&gt;
    &lt;PARAM name=Data(7) value=&quot;1.5&quot;&gt;
&lt;/APPLET&gt;

&lt;/BODY&gt;
&lt;/HTML&gt;
</PRE>

</P>
<P>This code is taken from the Java Sample.htm page in the CHAP11 folder on 
the CD-ROM. The code displays the ChartGear applet, as shown in Figure 11-8.

</P>
<P>
<A HREF="javascript:fullSize('F11lh08x.htm')"> <IMG SRC="images/F11lh08.JPG" width=404 height=316 border=0 ALT="Click to view at full size."> </A>
</P>
<P>
<!-- CAPTION --><B>Figure 11-8.</B> <I>The Java Sample.htm page showing a graphing applet.</I><!-- /CAPTION -->

</P>
<P>When deploying applets, you might also need files that the applet 
depends on. The applet may have a number of additional .class files that you need 
to include on your Web server and in your development environment. Class 
files are the machine-independent byte code generated from .java files by the 
javac compiler in the JDK or by another compiler in a visual Java 
development environment such as Microsoft Visual J++. When deploying Java applets, 
you must be aware of the applet's requirements in terms of required files and 
make sure you meet them.</P>
<P>
As with ActiveX controls, you can switch to viewing the graphical 
representation of your Java applets within the Source View editor by 
right-clicking the applet section of the code and unchecking Always View As Text on 
the context menu.

</P>
<A NAME="215"><H2>Scripting Java Applets</H2></A><P>One of the interesting uses of ASP server-side scripting is to dynamically 
generate parameters for Java applets before you send the Web page to the 
browser. For instance, using ASP, you can query a database and then dynamically map 
the returned results into client-side &lt;PARAM&gt; tags for the applet so that the 
variables are sent down to the client with the applet. You can use a Chart applet that 
charts data in this manner&#8212;by setting the chart values to equal values coming from 
a database. This is easy to do; you simply use the 
<I>&lt;%=varname%&gt; </I>expression or a similar expression within the appropriate &lt;PARAM&gt; tags for the applet in 
the ASP Web page. An ASP Web page can contain any number 
of Java applets.
</P>
<P>As an example of how to script Java applets within Visual InterDev, 
we'll use a sample ASP Web page that builds a dynamically created graph, as 
described earlier. The page is named Funds.asp and is included on the 
CD-ROM under the CHAP11 folder.
</P>
<P>The example uses a graphing applet so that the end user can see his 
or her 401K investment fund performance by twelve-month period and by 
two-week period. The data is pulled from the database for that specific user and 
is output both as &lt;PARAM&gt; tags for the Java applet and as an HTML table 
below the applet. The user is also given the option of being able to change the 
chart display type and the periods to be graphed. In addition to supplying the 
data for the fund performance graph, the database query also supplies the data 
for some of the graph labels, such as the period ending date. A Recordset DTC 
is used to perform the query within the ASP Web page.
</P>
<P>Figure 11-9 shows the Funds.asp page as it appears in the Netscape 
Communicator 4.01 browser. This browser was chosen to illustrate that the code 
is functional both within Internet Explorer and within Communicator.

</P>
<P>The code below shows the source code for the Funds.asp page. The 
code for the Recordset DTC has been edited so that it shows the SQL query only. 
Also, the code that displays the HTML table with all the fund performance values 
at the bottom of the Web page has also been removed for the sake of brevity. 
As you can see from the code, the &lt;PARAM&gt; tags for the applet are created 
using a loop over each record in the recordset. This allows the resulting graph to 
contain however many rows are returned from the query. In the query, you'll 
see that there are six funds selected.

</P>
<P>
<A HREF="javascript:fullSize('F11lh09x.htm')"> <IMG SRC="images/F11lh09.JPG" width=404 height=305 border=0 ALT="Click to view at full size."> </A>
</P>
<P>
<!-- CAPTION --><B>Figure 11-9.</B> <I>The Funds.asp page showing the dynamically created data displayed in the Fund Performance graph. The graph uses the ChartGear Java applet.</I><!-- /CAPTION -->

</P>
<P><PRE>&lt;%@ LANGUAGE=&quot;VBSCRIPT&quot; %&gt;
&lt;% ' VI 6.0 Scripting Object Model Enabled %&gt;
&lt;!--#include file=&quot;_ScriptLibrary/pm.asp&quot;--&gt;
&lt;% if StartPageProcessing() Then Response.End() %&gt;
&lt;FORM name=thisForm METHOD=post&gt;

&lt;HTML&gt;
&lt;HEAD&gt;
&lt;TITLE&gt;&amp;quot;Pandora&amp;quot; 401K Investment Fund Information&lt;/TITLE&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;

&lt;!--METADATA TYPE=&quot;DesignerControl&quot; startspan
&#8230;
&lt;Recordset DTC&gt;
&#8230;
cmdTmp.CommandText = 'SELECT id, Date_start, Date_end, fund_a, 
    fund_c, fund_d, fund_e, fund_f, fund_g FROM FundPerformance 
    WHERE Date_End IN (SELECT Max(Date_End) FROM FundPerformance)
    ORDER BY id, Date_end'
&#8230;
&lt;!--METADATA TYPE=&quot;DesignerControl&quot; endspan--&gt;


&lt;CENTER&gt;
&lt;% DataCommand1.MoveLast %&gt;
&lt;H2&gt;401K Fund Performance - Period Ending &lt;% = 
    CStr(DataCommand1.fields.getValue(&quot;Date_End&quot;)) %&gt;&lt;/h2&gt;
&lt;% DataCommand1.MoveFirst %&gt;
 | &lt;i&gt;&lt;a HREF=&quot;funds.asp&quot;&gt;Latest Performance&lt;/a&gt;&lt;/i&gt;
 |
&lt;i&gt;&lt;a HREF=&quot;funds_history_2wk.asp&quot;&gt;2-Week Period Rates of Return&lt;/a&gt;&lt;/i&gt;
 | 
&lt;i&gt;&lt;a HREF=&quot;funds_history.asp&quot;&gt;12-Month Period Rates of Return&lt;/a&gt;&lt;/i&gt;
 |
 &lt;i&gt;&lt;a HREF=&quot;preferences.asp&quot;&gt;Preferences&lt;/a&gt;&lt;/i&gt;
 |
&lt;/CENTER&gt;

&lt;HR&gt;

&lt;TABLE&gt;
&lt;TR&gt;
&lt;TD&gt;

&lt;APPLET code=&quot;ChartGear.class&quot; align=&quot;baseline&quot; width=&quot;500&quot; 
    height=&quot;300&quot; id=&quot;graph1&quot; VIEWASTEXT&gt;

&lt;%
counter = 1
DO WHILE NOT DataCommand1.EOF
cnt = 1
%&gt;

&lt;PARAM name=&quot;Data(&lt;% = counter %&gt;,&lt;% = cnt %&gt;)&quot; 
    value=&quot;&lt;% = DataCommand1.fields.getValue(&quot;Fund_A&quot;) %&gt;&quot;&gt;
&lt;% cnt = cnt + 1 %&gt;
&lt;PARAM name=&quot;Data(&lt;% = counter %&gt;,&lt;% = cnt %&gt;)&quot; 
    value=&quot;&lt;% = DataCommand1.fields.getValue(&quot;Fund_C&quot;) %&gt;&quot;&gt;
&lt;% cnt = cnt + 1 %&gt;
&lt;PARAM name=&quot;Data(&lt;% = counter %&gt;,&lt;% = cnt %&gt;)&quot; 
    value=&quot;&lt;% = DataCommand1.fields.getValue(&quot;Fund_D&quot;) %&gt;&quot;&gt;
&lt;% cnt = cnt + 1 %&gt;
&lt;PARAM name=&quot;Data(&lt;% = counter %&gt;,&lt;% = cnt %&gt;)&quot; 
    value=&quot;&lt;% = DataCommand1.fields.getValue(&quot;Fund_E&quot;) %&gt;&quot;&gt;
&lt;% cnt = cnt + 1 %&gt;
&lt;PARAM name=&quot;Data(&lt;% = counter %&gt;,&lt;% = cnt %&gt;)&quot; 
    value=&quot;&lt;% = DataCommand1.fields.getValue(&quot;Fund_F&quot;) %&gt;&quot;&gt;
&lt;% cnt = cnt + 1 %&gt;
&lt;PARAM name=&quot;Data(&lt;% = counter %&gt;,&lt;% = cnt %&gt;)&quot; 
    value=&quot;&lt;% = DataCommand1.fields.getValue(&quot;Fund_G&quot;) %&gt;&quot;&gt;
&lt;% cnt = cnt + 1 %&gt;

&lt;% counter = counter + 1 %&gt;
&lt;% DataCommand1.MoveNext %&gt;
&lt;% 
LOOP
%&gt;

&lt;PARAM name=&quot;Num_Items&quot; value=&quot;&lt;% = cnt - 1 %&gt;&quot;&gt;
&lt;% num_sets = counter - 1 %&gt;
&lt;PARAM name=&quot;Num_Sets&quot; value=&quot;&lt;% = counter - 1 %&gt;&quot;&gt;

&lt;% DataCommand1.MoveFirst %&gt;

&lt;PARAM name=&quot;Set_Name(1)&quot; value=&quot;12-Month Period&quot;&gt;
&lt;PARAM name=&quot;Set_Name(2)&quot; value=&quot;2-Week Period&quot;&gt;

&lt;% cnt = 1 %&gt;
&lt;PARAM name=&quot;Item_Name(&lt;% = cnt %&gt;)&quot; value=&quot;Fund A&quot;&gt;
&lt;% cnt = cnt + 1 %&gt;
&lt;PARAM name=&quot;Item_Name(&lt;% = cnt %&gt;)&quot; value=&quot;Fund C&quot;&gt;
&lt;% cnt = cnt + 1 %&gt;
&lt;PARAM name=&quot;Item_Name(&lt;% = cnt %&gt;)&quot; value=&quot;Fund D&quot;&gt;
&lt;% cnt = cnt + 1 %&gt;
&lt;PARAM name=&quot;Item_Name(&lt;% = cnt %&gt;)&quot; value=&quot;Fund E&quot;&gt;
&lt;% cnt = cnt + 1 %&gt;
&lt;PARAM name=&quot;Item_Name(&lt;% = cnt %&gt;)&quot; value=&quot;Fund F&quot;&gt;
&lt;% cnt = cnt + 1 %&gt;
&lt;PARAM name=&quot;Item_Name(&lt;% = cnt %&gt;)&quot; value=&quot;Fund G&quot;&gt;

&lt;PARAM name=&quot;Legend_Color&quot; value=&quot;white&quot;&gt; 
&lt;PARAM name=&quot;Legend_BG_Color&quot; value=&quot;black&quot;&gt; 
&lt;PARAM name=&quot;Legend_Location&quot; value=&quot;Bottom&quot;&gt;

&lt;PARAM name=&quot;Title&quot; value=&quot;MAP Fund Performance&quot;&gt;
&lt;% DataCommand1.MoveLast %&gt;
&lt;PARAM name=&quot;Set_Label&quot; value=&quot;Period Ending &lt;% = 
    CStr(DataCommand1.fields.getValue(&quot;Date_End&quot;)) %&gt;&quot;&gt;
&lt;PARAM name=&quot;Mag_Label&quot; value=&quot;Percentage&quot;&gt;

&lt;/APPLET&gt;

&lt;/TD&gt;
&lt;TD valign=top&gt;

&lt;TABLE&gt;
&lt;TR&gt;
&lt;TD align=&quot;center&quot; bgcolor=&quot;#0000FF&quot;&gt;
    &lt;FONT color=&quot;#FFFFFF&quot;&gt;Select Period&lt;/FONT&gt;
&lt;/TD&gt;
&lt;/TR&gt;

&lt;TR&gt;
&lt;TD valign=&quot;top&quot; width=&quot;175&quot;&gt;&lt;FONT size=&quot;2&quot;&gt;
&lt;INPUT type=&quot;radio&quot; name=&quot;Set&quot; value=&quot;Set2&quot; 
    onclick=&quot;if(document.graph1 != null) {
        document.graph1.set_Area_Of_Interest(1,1);
        document.graph1.refresh();
    }&quot;&gt;Focus on 12-Month Period&lt;BR&gt;

&lt;INPUT type=&quot;radio&quot; name=&quot;Set&quot; value=&quot;Set1&quot; 
    onclick=&quot;if(document.graph1 != null) {
        x = 2
        y = 3   
        document.graph1.set_Area_Of_Interest(2,2);
        document.graph1.refresh();
    }&quot;&gt;Focus on 2-Week Period 
        
&lt;INPUT type=&quot;radio&quot; name=&quot;Set&quot; value=&quot;SetAll&quot; 
    onclick=&quot;if(document.graph1 != null) {
        document.graph1.set_Area_Of_Interest(1,2);
        document.graph1.refresh();
    }&quot;&gt;Display ALL Data&lt;/FONT&gt;
&lt;/TD&gt;
&lt;/TR&gt;
&lt;/TABLE&gt;

&lt;/TD&gt;
&lt;/TR&gt;
&lt;/TABLE&gt;

&lt;BR&gt;
&lt;/P&gt;

&lt;HR&gt;
&#8230;
&lt;Code to display the HTML table&gt;
&#8230;
&lt;HR&gt;
Be sure to visit the rest of our site!

&lt;% 
DataCommand1.Close 
%&gt;

&lt;/BODY&gt;
&lt;% ' VI 6.0 Scripting Object Model Enabled %&gt;
&lt;% EndPageProcessing() %&gt;
&lt;/FORM&gt;
&lt;/HTML&gt;
</PRE>

</P>
<P>The page also contains some code that allows the graph to be 
changed dynamically by the end user. A series of radio buttons allow the end user 
to select the area of interest to graph. This can be fund performance for the 
two-week period, the twelve-month period, or both periods.
</P>
<P>While there is quite a lot of code within this sample, once you have 
developed such a page you have a very flexible and powerful way of 
graphing data dynamically from the database. This single ASP Web page can 
provide customized graphs to end users and can even be customized further to 
display only those fund types that the user wants to see. One way to achieve 
this customization is via conditional logic in the ASP Web page and the use of 
cookies to store user preferences.
</P>
<P>The trick to sucessfully integrating Java applets into your ASP Web 
pages is in learning all the events, methods, and properties that are available to 
you within the applet itself. Once you know how it can be manipulated and 
what parameters it requires, it's relatively easy to write the ASP code or other 
script code for your applications. Be sure to use the Script Outline window 
within Visual InterDev to assist you in your scripting. Also, when working with 
Java applets, you'll want to be sure to test the applet in whatever browsers you 
need to support.
</P>
</BODY>
</HTML>





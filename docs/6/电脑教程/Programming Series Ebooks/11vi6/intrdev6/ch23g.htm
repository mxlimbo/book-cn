<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="Library.css" TYPE="text/css">
<TITLE>Writing ASP Code to Read Client-Side Certificates</TITLE>


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch23f.htm", "ch23h.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>
<A NAME="417"><H1>Writing ASP Code to Read Client-Side Certificates</H1></A>
<P>As you might recall, Active Server Pages has six built-in objects: 
<I>Request</I>, <I>Response</I>, 
<I>Application</I>, <I>Session</I>, <I>Server</I>, and 
<I>ObjectContext</I>. The <I>Request</I> object 
has a collection named <I>ClientCertificate</I>. This collection can be accessed via 
ASP to read the values in a client certificate. 

</P>
<P>If the Web browser is using Secure Sockets Layer to connect to your 
Web server and the server requests certification, a series of client certificate 
objects in this collection will contain information about the client's certification. 
You can tell when an SSL connection is being used because the address in 
the browser begins with <I>https://</I> instead of 
<I>http://</I>.

</P>
<P>The syntax for retrieving these certificates is

</P>
<P><PRE>
Request.ClientCertificate( Key[SubField] )
</PRE>

</P>
<P>Table 23-2 lists the possible key values, along with their uses.

</P>
<P><B>Table 23-2.</B> <I>Key values in the </I>ClientCertificate<I> collection of the </I>Request<I> object.</I>

</P>
<P>
<table cellpadding=5 width="95%">

<TR>
<TH VALIGN="top"><B><I>Key</I></B></TH>
<TH VALIGN="top"><B><I>Use</I></B></TH>
</TR>

<TR>
<TD VALIGN="top"><I>Subject</I></TD>
<TD VALIGN="top">A list of values that contain information about the subject of the certificate. Subfields are used with this key to extract the individual values from the list.</TD>
</TR>

<TR>
<TD VALIGN="top"><I>Issuer</I></TD>
<TD VALIGN="top">A list of values that contain information about the issuer of the certificate. Subfields are used with this key to extract the individual values from the list.</TD>
</TR>

<TR>
<TD VALIGN="top"><I>ValidFrom</I></TD>
<TD VALIGN="top">A valid date that indicates when the certificate becomes active.</TD>
</TR>

<TR>
<TD VALIGN="top"><I>ValidUntil</I></TD>
<TD VALIGN="top">A valid date that indicates when the certificate expires.</TD>
</TR>

<TR>
<TD VALIGN="top"><I>SerialNumber</I></TD>
<TD VALIGN="top">A string that represents the serial number. This string is a series of hexadecimal bytes separated by hyphens.</TD>
</TR>

<TR>
<TD VALIGN="top"><I>Certificate</I></TD>
<TD VALIGN="top">The entire certificate (all the previous keys). It is represented in a binary format, so it's best to use the other keys to attain the values.</TD>
</TR>

<TR>
<TD VALIGN="top"><I>Flags</I></TD>
<TD VALIGN="top">A set of flags that provide additional client certificate information. The following flags can be set: <I>ceCert Present</I>&#8212;a client certificate is present. <I>ceUnrecognizedIssuer</I>&#8212;the last certification in this chain is from an unknown issuer.</TD>
</TR>
</TABLE>

</P>
<P>A variety of subfield values are available to extract specific 
information from the <I>Subject</I> and 
<I>Issuer</I> keys. Table 23-3 shows some of the common 
subfield values for these keys.

</P>
<P><B>Table 23-3.</B> <I>Subfield values for the </I>Subject<I> and </I>Issuer<I> keys.</I>

</P>
<P>
<table cellpadding=5 width="95%">

<TR>
<TH VALIGN="top"><B><I>Subfield</I></B></TH>
<TH VALIGN="top"><B><I>Use</I></B></TH>
</TR>

<TR>
<TD VALIGN="top">C</TD>
<TD VALIGN="top">Specifies the name of the country of origin</TD>
</TR>

<TR>
<TD VALIGN="top">CN</TD>
<TD VALIGN="top">Specifies the common name of the user; only used with the <I>Subject</I> key</TD>
</TR>

<TR>
<TD VALIGN="top">GN</TD>
<TD VALIGN="top">Specifies a given name</TD>
</TR>

<TR>
<TD VALIGN="top">I</TD>
<TD VALIGN="top">Specifies a set of initials</TD>
</TR>

<TR>
<TD VALIGN="top">L</TD>
<TD VALIGN="top">Specifies a locality</TD>
</TR>

<TR>
<TD VALIGN="top">O</TD>
<TD VALIGN="top">Specifies the company or organization name</TD>
</TR>

<TR>
<TD VALIGN="top">OU</TD>
<TD VALIGN="top">Specifies the name of the organizational unit</TD>
</TR>

<TR>
<TD VALIGN="top">S</TD>
<TD VALIGN="top">Specifies a state or province</TD>
</TR>

<TR>
<TD VALIGN="top">T</TD>
<TD VALIGN="top">Specifies the title of the person or organization</TD>
</TR>
</TABLE>


</P>
<P>The code below is taken from a sample Web page named 
ClientCertificate.asp in the Certificate Web project included on the CD-ROM. This sample 
page shows how to read the values in a client certificate using the 
<I>Request</I> object and displays the values in the browser.

</P>
<P><PRE>
&lt;%@ Language=VBScript %&gt;
&lt;HTML&gt;
&lt;HEAD&gt;
&lt;META NAME=&quot;GENERATOR&quot; Content=&quot;Microsoft Visual Studio 6.0&quot;&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;

&lt;H2&gt;Client Certificate Sample&lt;/H2&gt;
&lt;HR&gt;

&lt;%
If Len(Request.ClientCertificate(&quot;Subject&quot;)) = 0 Then
    Response.Write &quot;No client certificate was presented&quot;
Else
    Response.Write &quot;&lt;TABLE BORDER=1 CELLSPACING=5 CELLPADDING=5&gt;&quot;
    Response.Write &quot;&lt;TR&gt;&lt;TD&gt;Subject&lt;/TD&gt;&lt;TD&gt;&quot; + _
        Request.ClientCertificate(&quot;Subject&quot;) + &quot;&lt;/TD&gt;&lt;/TR&gt;&quot;
    Response.Write &quot;&lt;TR&gt;&lt;TD&gt;Issuer&lt;/TD&gt;&lt;TD&gt;&quot; + _
        Request.ClientCertificate(&quot;Issuer&quot;) + &quot;&lt;/TD&gt;&lt;/TR&gt;&quot;
    Response.Write &quot;&lt;TR&gt;&lt;TD&gt;ValidFrom&lt;/TD&gt;&lt;TD&gt;&quot; + _
        CStr(Request.ClientCertificate(&quot;ValidFrom&quot;)) + &quot;&lt;/TD&gt;&lt;/TR&gt;&quot;
    Response.Write &quot;&lt;TR&gt;&lt;TD&gt;ValidUntil&lt;/TD&gt;&lt;TD&gt;&quot; + _
        CStr(Request.ClientCertificate(&quot;ValidUntil&quot;)) + &quot;&lt;/TD&gt;&lt;/TR&gt;&quot;
    Response.Write &quot;&lt;TR&gt;&lt;TD&gt;SerialNumber&lt;/TD&gt;&lt;TD&gt;&quot; + _
        Request.ClientCertificate(&quot;SerialNumber&quot;) + &quot;&lt;/TD&gt;&lt;/TR&gt;&quot;
    Response.Write &quot;&lt;TR&gt;&lt;TD&gt;Certificate&lt;/TD&gt;&lt;TD&gt;&quot; + _
        Request.ClientCertificate(&quot;Certificate&quot;) + &quot;&lt;/TD&gt;&lt;/TR&gt;&quot;
    Response.Write &quot;&lt;TR&gt;&lt;TD&gt;Flags&lt;/TD&gt;&lt;TD&gt;&quot; + _
        CStr(Request.ClientCertificate(&quot;Flags&quot;)) + &quot;&lt;/TD&gt;&lt;/TR&gt;&quot;
    Response.Write &quot;&lt;/TABLE&gt;&quot;
End If
%&gt;

&lt;/BODY&gt;
&lt;/HTML&gt;
</PRE>

</P>
<P>Figure 23-10 shows an example of the resulting browser output from 
the ClientCertificate.asp page. 

</P>
<P>
<A HREF="javascript:fullSize('f23LH10x.htm')"> <IMG SRC="images/f23LH10.JPG" width=404 height=303 border=0 ALT="Click to view at full size."> </A>

</P>
<P>
<!-- CAPTION --><B>Figure 23-10.</B> <I>The Internet Explorer 4.0 browser showing the output from 
the ClientCertificate.asp page that lists the values of the keys within a client 
certificate that has been presented to the Web server.</I><!-- /CAPTION -->

</P>
<P>Of course, in a real application you would read the values in the client 
certificate to determine whether the user is authorized to have access to your 
application instead of simply returning the values back to the browser. For 
example, you might use the common name (CN), organization name (O), or the 
organizational unit name (OU) subfield values of the 
<I>Subject</I> key to identify the user.

</P>
<P>Once you have identified the user, you can take whatever next steps 
you need to within your particular application. This might include any of the 
following: redirection to a page specific to the user's role; performing a 
database lookup given one of the certificate subfield values to gather more 
information and ensure that the user is a valid business partner, customer, or 
employee; display a personalized welcome message; or many others. You could even 
read the EMAIL subfield value to send personalized e-mail messages (using 
the CDONTS NewMail server-side component) for cross-selling and other purposes.

</P>
<P>To read a subfield value within ASP, you simply add the subfield to 
the key name, as shown here:

</P>
<P><PRE>
CommonName = Request.ClientCertificate(&quot;SubjectCN&quot;)
</PRE>

</P>
<P>In this example, the common name subfield value of the 
<I>Subject</I> key is stored in a variable named 
<I>CommonName</I>.

</P>
<P>The following code reads the e-mail address of the end user from 
their client certificate:

</P>
<P><PRE>
EMail = Request.ClientCertificate(&quot;SubjectEMAIL&quot;)
</PRE>

</P>
<A NAME="418"><H2>Using the <I>ServerVariables</I> Collection</H2></A>

<P>In addition to using the 
<I>ClientCertificate</I> collection of the 
<I>Request</I> object to read client certificates, you can get a lot of useful information from the 
<I>ServerVariables</I> collection.

</P>
<P>The code below is taken from a sample Web page named 
ServerVariables.asp in the Certificate Web project included on the CD-ROM. This sample 
page shows how to read the values that relate to both client and server-side 
certificates using the 
<I>Request.ServerVariables</I> syntax and displays the values in the browser.

</P>
<P><PRE>
&lt;%@ Language=VBScript %&gt;
&lt;HTML&gt;
&lt;HEAD&gt;
&lt;META NAME=&quot;GENERATOR&quot; Content=&quot;Microsoft Visual Studio 6.0&quot;&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;

&lt;H2&gt;Client Certificate (ServerVariables) Sample&lt;/H2&gt;
&lt;HR&gt;

&lt;%
Response.Write &quot;&lt;TABLE BORDER=1 CELLSPACING=5 CELLPADDING=5&gt;&quot;
Response.Write &quot;&lt;TR&gt;&lt;TD&gt;CERT_COOKIE&lt;/TD&gt;&lt;TD&gt;&quot; + _
    Request.ServerVariables(&quot;CERT_COOKIE&quot;) + &quot;&lt;/TD&gt;&lt;/TR&gt;&quot;
Response.Write &quot;&lt;TR&gt;&lt;TD&gt;CERT_FLAGS&lt;/TD&gt;&lt;TD&gt;&quot; + _
    Request.ServerVariables(&quot;CERT_FLAGS&quot;) + &quot;&lt;/TD&gt;&lt;/TR&gt;&quot;
Response.Write &quot;&lt;TR&gt;&lt;TD&gt;CERT_ISSUER&lt;/TD&gt;&lt;TD&gt;&quot; + _
    Request.ServerVariables(&quot;CERT_ISSUER&quot;) + &quot;&lt;/TD&gt;&lt;/TR&gt;&quot;
Response.Write &quot;&lt;TR&gt;&lt;TD&gt;CERT_KEYSIZE&lt;/TD&gt;&lt;TD&gt;&quot; + _
    Request.ServerVariables(&quot;CERT_KEYSIZE&quot;) + &quot;&lt;/TD&gt;&lt;/TR&gt;&quot;
Response.Write &quot;&lt;TR&gt;&lt;TD&gt;CERT_SECRETKEYSIZE&lt;/TD&gt;&lt;TD&gt;&quot; + _
    Request.ServerVariables(&quot;CERT_SECRETKEYSIZE&quot;) + &quot;&lt;/TD&gt;&lt;/TR&gt;&quot;
Response.Write &quot;&lt;TR&gt;&lt;TD&gt;CERT_SERIALNUMBER&lt;/TD&gt;&lt;TD&gt;&quot; + _
    Request.ServerVariables(&quot;CERT_SERIALNUMBER&quot;) + &quot;&lt;/TD&gt;&lt;/TR&gt;&quot;
Response.Write &quot;&lt;TR&gt;&lt;TD&gt;CERT_SERVER_ISSUER&lt;/TD&gt;&lt;TD&gt;&quot; + _
    Request.ServerVariables(&quot;CERT_SERVER_ISSUER&quot;) + &quot;&lt;/TD&gt;&lt;/TR&gt;&quot;
Response.Write &quot;&lt;TR&gt;&lt;TD&gt;CERT_SERVER_SUBJECT&lt;/TD&gt;&lt;TD&gt;&quot; + _
    Request.ServerVariables(&quot;CERT_SERVER_SUBJECT&quot;) + &quot;&lt;/TD&gt;&lt;/TR&gt;&quot;
Response.Write &quot;&lt;TR&gt;&lt;TD&gt;CERT_SUBJECT&lt;/TD&gt;&lt;TD&gt;&quot; + _
    Request.ServerVariables(&quot;CERT_SUBJECT&quot;) + &quot;&lt;/TD&gt;&lt;/TR&gt;&quot;
Response.Write &quot;&lt;/TABLE&gt;&quot;
%&gt;

&lt;/BODY&gt;
&lt;/HTML&gt;
</PRE>

</P>
<P>Figure 23-11 shows an example of the resulting browser output from 
the ServerVariables.asp page. 

</P>
<P>
<A HREF="javascript:fullSize('f23LH11x.htm')"> <IMG SRC="images/f23LH11.JPG" width=404 height=303 border=0 ALT="Click to view at full size."> </A>

</P>
<P>
<!-- CAPTION --><B>Figure 23-11.</B> <I>The Internet Explorer 4.0 browser showing the output from 
the ServerVariables.asp page that lists several values of the keys from both a 
client certificate and server certificate.</I><!-- /CAPTION -->

</P>
</BODY>
</HTML>





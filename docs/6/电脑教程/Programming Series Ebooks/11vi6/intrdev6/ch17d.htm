<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="Library.css" TYPE="text/css">
<TITLE>The Ad Rotator Component</TITLE>


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch17c.htm", "ch17e.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>
<A NAME="311"><H1>The Ad Rotator Component</H1></A>
<P>The Ad Rotator component displays advertisements on your Web page. 
You configure a data file called a Rotator Schedule file with information about 
the different ads you want to display. The Ad Rotator displays a graphic image 
with your ad and creates a hyperlink to a Web site associated with your ad. Each 
time the Web page is downloaded or refreshed, the Ad Rotator determines 
which ad in the data file should appear and then inserts the appropriate HTML. 
You do not have to change the ads yourself; simply update the Rotator Schedule 
file. The Ad Rotator also has a mechanism for recording the number of times a 
visitor jumps to a site that your ad points to.

</P>
<P>You can implement an Active Server component in either an EXE or 
DLL; the Ad Rotator is implemented in the DLL named adrot.dll. If you are 
running IIS, the file is in the C:\WINNT\SYSTEM32\INETSRV folder.

</P>
<P>In general, components that are implemented as DLLs perform better. 
When a component is implemented as an EXE, it must run as its own process. When 
the component and IIS pass data between them, the interprocess 
communication<I> </I>that must occur is relatively expensive. The same component written as a DLL is loaded as part of IIS's processes&#8212;there is no interprocess communication, so 
performance is better. All the components that come with Visual InterDev are 
implemented as DLLs.

</P>
<A NAME="312"><H2>The Rotator Schedule File</H2></A><P>The Rotator Schedule file holds the information about the ads you display. 
The default filename is adrot.txt, and it is in the 
C:\InetPub\iissamples\sdk\asp\components folder if you are using IIS.

</P>
<P>The file holds four pieces of information about each ad:

</P>
<UL>
<P><LI><B><I>adURL</I></B> The path to the image file
</LI>
</P>
<P><LI><B><I>adHomePageURL</I></B> The URL of the advertiser's home page
</LI>
</P>
<P><LI><B><I>Text</I></B> Text to be displayed if the browser does not support graphics
</LI>
</P>
<P><LI><B><I>Impressions</I></B> A priority for the ad
</LI></P>
</UL>




<P>The priority for the ad is a number that can range from 0 
through 4,294,967,295. This number determines what percentage of time the ad is 
shown compared to the other ads in the Rotator Schedule file. To figure the 
percentage, total all the priorities for all the ads in the Rotator Schedule file and 
compare the ad's priority to that total. For instance, if you have ads with 
priorities set at 100, 300, 400, and 200, they are shown 10, 30, 40, and 20 percent of 
the time, respectively.

</P>
<P>The Rotator Schedule file also contains header information that you 
specify only once for the entire file:

</P>
<UL>
<P><LI><B><I>Redirect</I></B> The URL for a redirector page. This page counts the number of hits that each ad gets.
</LI>
</P>
<P><LI><B><I>Width</I></B> The width of the ad image, in pixels. The default is 440.
</LI>
</P>
<P><LI><B><I>Height</I></B> The height of the ad image, in pixels. The default is 60. You'll notice that 440 x 60 is a common size for ads on Web pages.
</LI>
</P>
<P><LI><B><I>Border</I></B> The thickness of the border around the image, in pixels. The default is 1. This parameter can be set to 0 for no border.
</LI></P>
</UL>




<P>Below is a sample Rotator Schedule file layout that contains three ads. 
An asterisk marks the beginning of the actual ad settings; the four items in 
each setting contain no keywords.

</P>
<P><PRE>
&#8212; ADROT.TXT &#8212;
REDIRECT AdCounter.asp
WIDTH 440
HEIGHT 60
BORDER 1
*
images/ads/vi-bank/vi-bank.jpg 
http://www.vi-bank.com/
Welcome to the premier Internet Bank!
10
images/ads/cau/logo.jpg
_
Consultants Are Us
20 
images/ads/cc/freecomponents.gif
http://www.coolcomponents.com/
Free Server-Side Components
70
</PRE>

</P>
<P>This schedule file contains three ads. The header section specifies 
that AdCounter.asp is to be called each time a user clicks on one of the ads on 
this page. The height, width, and border settings are the same as the default 
settings, so you can omit these lines. Lines beginning with a hyphen in the 
header section are ignored; they simply describe what's happening in the header. 
An asterisk indicates that the ad information is beginning. You cannot put 
any comments in this section&#8212;this is why it's important to put all your 
descriptive text in the header. The position of the lines in this section determines 
their meaning, so you have to be careful. For instance, the first line is the path 
to the image, and the second is the URL for the advertiser's Web site. If the 
advertiser doesn't have a Web site, you must hold the position with a hyphen. 
The Consultants Are Us ad, for instance, doesn't include a Web site address for 
Consultants Are Us.

</P>
<A NAME="313"><H2>Using the Ad Rotator in an ASP Web Page</H2></A><P>To use the Ad Rotator in an ASP Web page, simply drag the component 
onto your page from the Server Objects tab on the Toolbox. You can also use 
the following syntax:

</P>
<P><PRE>
Set oAdRotator = Server.CreateObject(&quot;MSWC.AdRotator&quot;)
</PRE>

</P>
<P>In this case, the <I>Server</I> object's <I>CreateObject </I>method instantiates the <I>AdRotator</I> object. This means that it loads the DLL into memory and creates an instance of the object. The <I>Set </I>keyword assigns the object to a variable. Here, a variable named <I>oAdRotator </I>refers to the new <I>AdRotator</I> object you created. Table 17-2 describes the properties available in the <I>AdRotator</I> object.

</P>
<P><B>Table 17-2.</B> <I>Properties in the </I>AdRotator<I> object.</I>

<TABLE CELLPADDING=5 WIDTH="95%">
<TR>
<TH VALIGN="TOP"><B><I>Property</I></B></TH>
<TH VALIGN="TOP"><B><I>Description</I></B></TH>
</TR>

<TR>
<TD VALIGN="TOP"><I>Border</I></TD>
<TD VALIGN="TOP">Sets the size of the border around the image. If you set this property in your VBScript code, it overrides the same property set in your Rotator Schedule file.</TD>
</TR>

<TR>
<TD VALIGN="TOP"><I>Clickable</I></TD>
<TD VALIGN="TOP">When this property is set to False, the user cannot jump to the advertiser's Web site by clicking on the image. This overrides the advertiser's URL setting that might or might not be set in the Rotator Schedule file.</TD>
</TR>

<TR>
<TD VALIGN="TOP"><I>TargetFrame</I></TD>
<TD VALIGN="TOP">When used on a Web page that has multiple frames, the property specifies the frame in which the ad will be displayed. The HTML frame tag has a name attribute 
so that you can name your frames. It's good practice to put your ads in a frame so that users can browse your site in one frame without disturbing the ad in another frame.</TD>
</TR>
</TABLE>


</P>
<P>The <I>GetAdvertisement</I> method, shown below, does the work for 
the <I>AdRotator</I> object:

</P>
<P><PRE>
Output = oAdRotator.GetAdvertisement(&quot;<I>schedule file&quot;)</I>
</PRE>

</P>
<P>When called, the <I>GetAdvertisement</I> method generates the HTML image 
tag appropriate for the ad, including hyperlink information. You pass a path to 
a Rotator Schedule file as an argument to this method. You typically pass the 
result of this method to the browser using the <I>Response.Write 
</I>method or using the leading equal sign syntax.

</P>
<A NAME="314"><H3>Pulling it all together</H3></A><P>To use the <I>AdRotator</I> object, you need to create a Rotator Schedule file, 
a redirector ASP file, the Web page that will display the actual ad, and some 
images to display. The Components Web project in the Components/VIntDev98 
folder on the companion CD-ROM contains all the source code for this exercise.

</P>
<P>The code below assumes that the images can be found in a 
directory named /images/ads in your Web project. The Rotator Schedule file in the 
code below lists three ads, which are scheduled at 40, 20, and 40 percent, 
respectively. It also specifies an ASP Web page named AdCounter.asp to act as 
your redirector page. The rotator schedule file, adrot.txt, is located in the root 
directory of the Components Web project.

</P>
<P><PRE>
&#8212;
&#8212; Advertisement Schedule
&#8212;
&#8212; Contains three ads to be shown 40%, 20%, and 40%
&#8212; of the time, respectively
&#8212;
REDIRECT AdCounter.asp
WIDTH 88
HEIGHT 31
BORDER 1
*
images/ads/vi-bank.jpg
http://www.vi-bank.com
VI-Bank
40
images/ads/nts_iis.gif
http://www.microsoft.com/iis
Microsoft Internet Information Server
20
images/ads/ie.gif
_
Microsoft Internet Explorer
40
</PRE>

</P>
<P>The third ad, for Internet Explorer, doesn't have a URL to go to. The 
hyphen holds the place of the URL.

</P>
<P>The sample redirector page, AdCounter.asp, does a couple of things. 
First, it records when users visit one of your advertisers' Web pages. Second (and 
most obvious), it helps send users to the advertiser's Web site. The 
<I>AdRotator</I> object does not do this automatically; when a user clicks on the image of the ad, 
the <I>AdRotator</I> object calls your redirector page and the advertiser's URL is sent 
in the query string. Therefore, in your redirector page, you have to check 
the <I>Request.QueryString </I>object and see which URL to redirect to.

</P>
<P><PRE>
&lt;%@ Language=VBScript %&gt;
&lt;%
    TargetURL = Request.QueryString(&quot;URL&quot;)
    HitCount = Session(&quot;ADCNT&quot; &amp; TargetURL)
    Session(&quot;ADCNT&quot; &amp; TargetURL) = HitCount + 1

    Response.Redirect TargetURL
%&gt;
</PRE>

</P>
<P>The redirector page has Active Server Script code that saves the URL 
that you need to go to. The URL is passed to this page in a variable named 
<I>URL </I>in the <I>QueryString </I>object. A counter is then used to determine the number of 
times this URL has been jumped to during this session. Look for a variable in 
the <I>Session </I>object named <I>ADCNT </I>with the URL appended. The 
<I>Session</I> variable name might look like this:

</P>
<P><PRE>
ADCNThttp://www.vi-bank.com
</PRE>

</P>
<P>If the URL has not been jumped to during the current session, 
referring to this variable creates a new session variable and initializes its value to 0. 
The code then saves the previous number of hits plus one in the 
<I>Session </I>object. This updates the number of times the URL has been jumped to during this 
session. Moreover, the <I>Redirect </I>method of the <I>Response </I>object is used to jump to the target URL.

</P>
<P>This process saves the number of hits to the URL in the 
<I>Session </I>object. At the end of the session, you must save this information more permanently. 
The best place to store this information is in a database.

</P>
<A NAME="315"><H3>Putting the ad on a Web page </H3></A><P>Now that the images are in place, a redirector ASP file is built, and a 
schedule file is ready to go, all you need to do is put the ad on a page. You create 
an <I>AdRotator</I> object and then call its <I>GetAdvertisement 
</I>method. You can do both of these tasks on the same page. However, you probably want to use the 
same set of ads in more than one page in your site. So it's better programming 
practice not to create an <I>AdRotator</I> object on each page but rather to create 
one <I>AdRotator</I> object for the session and use it on each page necessary.

</P>
<P>To create the <I>AdRotator</I> object once for the session, create it in the 
<I>Session_OnStart </I>event procedure in the global.asa file as shown below:

</P>
<P><PRE>
&lt;SCRIPT LANGUAGE=VBScript RUNAT=Server&gt;

Sub Session_OnStart
    ' Create an AdRotator object to be
    ' used in this session
    Set Session(&quot;oAdRotator&quot;) = _
        Server.CreateObject(&quot;MSWC.AdRotator&quot;)
End Sub

' Session_OnEnd
' Application_OnStart
' Application_OnEnd
 
&lt;/SCRIPT&gt;
</PRE>

</P>
<P>Notice that since the code needs to reside within a &lt;SCRIPT&gt; block, we 
cannot use the &lt;OBJECT&gt; block to define the Ad Rotator component. We 
therefore have to use the <I>Server.CreateObject</I> syntax.

</P>
<P>Use the <I>Set </I>keyword to create an <I>AdRotator</I> object named <I>oAdRotator</I>. 
The <I>Server.CreateObject(&quot;MSWC.AdRotator&quot;) </I>command creates the object for you. The value <I>MSWC.AdRotator </I>is the programmatic ID of the object you want 
to create. If you are not using the Server Objects tab of the Toolbox, you must 
know the programmatic ID of any component that you need to use from your 
ASP Web page. 

</P>
<P>After the object is created, you can use it from any page in your 
application without having to create the object each time. The code below, 
AdRotator.asp, shows how to actually put the ad on a page:

</P>
<P><PRE>
&lt;@ Language=VBScript %&gt;
&lt;HTML&gt;
&lt;HEAD&gt;
&lt;META NAME=&quot;GENERATOR&quot; Content=&quot;Microsoft Visual Studio 6.0&quot;&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;

&lt;H2&gt;Ad Rotator Sample&lt;/H2&gt;
&lt;HR&gt;

&lt;%
Output = Session(&quot;oAdRotator&quot;).GetAdvertisement(&quot;adrot.txt&quot;)
Response.Write Output
%&gt;

&lt;P&gt;
&lt;A HREF=&quot;AdRotator.asp&quot;&gt;Reload Page&lt;/A&gt;
&lt;P&gt;
&lt;A HREF=&quot;AdCounterDisplay.asp&quot;&gt;Check number of image clicks&lt;/A&gt;

&lt;/BODY&gt;
&lt;/HTML&gt;
</PRE>

</P>
<P>You need only one line&#8212;the call to the <I>GetAdvertisement 
</I>method of the <I>AdRotator</I> object. You pass the path to the schedule file you created earlier. The object itself stays in the <I>Session </I>object&#8212;you created it in the 
<I>Session_OnStart </I>procedure in the global.asa file when the session started.

</P>
<P>When the Web browser hits this page, it sees the source code shown below:

</P>
<P><PRE>
&lt;@ Language=VBScript %&gt;
&lt;HTML&gt;
&lt;HEAD&gt;
&lt;META NAME=&quot;GENERATOR&quot; Content=&quot;Microsoft Visual Studio 6.0&quot;&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;

&lt;H2&gt;Ad Rotator Sample&lt;/H2&gt;
&lt;HR&gt;

&lt;A HREF=&quot;AdCounter.asp?url=http://www.vi-bank.com
    &amp;image=images/ads/vi-bank.jpg&quot;&gt;
    &lt;IMG SRC=&quot;images/ads/vi-bank.jpg&quot; 
    ALT=&quot;VI-Bank&quot; WIDTH=88 HEIGHT=31 BORDER=1&gt;&lt;/A&gt;
&lt;P&gt;
&lt;A HREF=&quot;AdRotator.asp&quot;&gt;Reload Page&lt;/A&gt;
&lt;P&gt;
&lt;A HREF=&quot;AdCounterDisplay.asp&quot;&gt;Check number of image clicks&lt;/A&gt;

&lt;/BODY&gt;
&lt;/HTML&gt;
</PRE>

</P>
<P>The <I>AdRotator</I> object places a reference (using the HTML &lt;A&gt; tag) to 
your redirector page and passes it two variables in the query string. The first is 
the URL for the ad, and the second is the URL for the image file. It also inserts 
the image file with the appropriate size and border. When users click on the 
image, the query string is sent to your redirector. In the example on the 
CD-ROM, you can access the AdCounterDisplay.asp page to query the current values 
of the session values that track the number of hits to the various images.

</P>
</BODY>
</HTML>





<HTML>
<HEAD>
	<LINK REL="STYLESHEET" TYPE="text/css" HREF="Library.css">
<TITLE>Chapter 18 -- Creating ActiveX Components with Visual Basic 6</TITLE>


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch17m.htm", "ch18b.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>


<P>
<FONT SIZE="+3">Chapter 18</FONT>

</P>
<A NAME="334"><H1>Creating ActiveX Components with Visual Basic 6.0</H1></A><A NAME="335"><H1>Introduction</H1></A>
<P>In the last chapter, we saw the various types of architectures that can be 
designed using Microsoft Web technologies. We also took a look at the server 
objects provided with Microsoft Internet Information Server (IIS) 4.0 that 
developers for Microsoft Visual InterDev can take advantage of in their applications.

</P>
<P>In this chapter, we'll see how we can create our own Microsoft 
ActiveX components, how they can be staged on the Web server, and how they can 
be called from within Active Server Pages (ASP) Web pages. We'll use 
Microsoft Visual Basic 6.0 to develop these ActiveX components.

</P>
<P>This type of n-tier application architecture is often employed to 
create more reusable and component-based Web applications. It employs a 
browser-based client for the presentation layer, components in the middle tier for 
the business rules layer, and a relational database management system (RDBMS) 
for the data layer. Rather than having ASP communicate directly with the 
database via the Data Environment or the ActiveX Data Objects (ADO) model, the 
ASP Web pages call methods within COM components, which then communicate 
with the database. These COM components can also use ADO for their 
database access. ADO has a simpler object model than either Data Access Objects 
(DAO) or Remote Data Objects (RDO), some of the earlier database 
access techniques.

</P>
<P>This application architecture is also a nice way to create more 
object-oriented and componentized code. Instead of having your business logic 
embedded within ASP Web pages (and often intermingled with the 
presentation logic), it resides in components. These components are compiled so that 
they can execute faster than interpreted ASP code.

</P>
</BODY>
</HTML>





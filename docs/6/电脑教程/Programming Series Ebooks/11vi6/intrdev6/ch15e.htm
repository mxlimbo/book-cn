<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="Library.css" TYPE="text/css">
<TITLE>Debugging and Executing Stored Procedures</TITLE>


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch15d.htm", "ch15f.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>
<A NAME="282"><H1>Debugging and Executing Stored Procedures</H1></A>
<P>After you have entered your stored procedure into the source code editor 
and have saved it, you'll see the new stored procedure name appear in the Data 
View window under the Stored Procedures icon.

</P>
<P>To execute the stored procedure from within Visual InterDev, 
follow these steps:

</P>
<OL>
<P><LI>   Right-click the name of your stored procedure from the list of 
procedures under the Stored Procedures icon in the Data View window.
</LI>
</P>
<P><LI>   Select Execute from the context menu. An Output window 
will appear showing the results of the stored procedure execution.
</LI>
</P>
</OL>




<P>Figure 15-6 shows the Output window after execution of the <I>spCompany </I>procedure.

</P>
<P>
<A HREF="javascript:fullSize('f15lh06x.htm')"> <IMG SRC="images/f15lh06.jpg" width=404 height=303 border=0 ALT="Click to view at full size."> </A>

</P>
<P>
<!-- CAPTION --><B>Figure 15-6. </B> <I> The Visual InterDev Output window showing the result of executing the </I>spCompany<I> stored procedure.</I><!-- /CAPTION -->

</P>
<P>If you execute a stored procedure that requires input parameters, 
you'll see a dialog box as shown in Figure 15-7. This Execute dialog box prompts 
you to enter the values for all parameters that the stored procedure requires. 
In Figure 15-7, the Execute dialog box is prompting for the 
<I>City</I> parameter for use by the <I>spCompanybyCity</I> stored procedure. Notice that the Execute dialog box also displays the data type and name of the required parameters.

</P>
<P>
<A HREF="javascript:fullSize('f15lh07x.htm')"> <IMG SRC="images/f15lh07.jpg" width=404 height=217 border=0 ALT="Click to view at full size."> </A>

</P>
<P>
<!-- CAPTION --><B>Figure 15-7. </B> <I>The Execute dialog box, in which you enter the value of the required parameters for a stored procedure.</I><!-- /CAPTION -->

</P>
<P>In addition to choosing the Execute option from the context menu, 
there's another way you can execute stored procedures within Visual InterDev. 
You can use the SQL pane in the Query Designer. To execute a stored 
procedure in this manner, carry out the following steps:

</P>
<OL>
<P><LI>   Open up the SQL pane within the Query Designer.
</LI>
</P>
<LI><P>   Enter your SQL code to execute the stored procedure using the 
<I>EXEC</I> <I>procedure_name</I> syntax. If you need to pass parameters along to 
the stored procedure, include them after the procedure name using 
the following syntax:

</P>
<P><PRE>
EXEC <I>procedure_name parameter1, parameter2, &#8230;parameter n</I>
</PRE>
</P>
</LI>

<P><LI>  Choose Run Query from the Query toolbar to execute the query.
</LI>
</P>
</OL>




<P>Figure 15-8 shows the output after having executed the 
<I>spCompanybyCity</I> stored procedure from within the SQL pane and passing it the parameter 
'Dallas' for the city name.

</P>
<P>If you use the EXEC statement to call a stored procedure from within 
the SQL pane and you omit some required parameters, you'll get a warning 
message. For example, if you execute the 
<I>spCompanybyCity</I> stored procedure without supplying the city name to search for, you'll see a warning message like 
the one shown in Figure 15-9. You'll also get a similar message if you click the 
Verify SQL Syntax button on the Query toolbar prior to executing the same command.

</P>
<P><div class="note"><blockquote>
<B>Note</B><hr>If you can't remember the parameters that need to be passed 
to your stored procedure, it's best to choose the first method of 
execution using the Execute menu item from the context menu. This way the 
Execute dialog box will prompt you to fill out all the required parameters. On 
the other hand, if you know which parameters need to be passed to your 
stored procedure and you want to be able to more easily read the resulting 
output from the procedure, use the EXEC statement in the SQL pane. 
This way you can see the results in the Results Pane, which is easier to 
read than the Output window.
</blockquote></div>

</P>
<P>
<A HREF="javascript:fullSize('f15lh08x.htm')"> <IMG SRC="images/f15lh08.jpg" width=404 height=303 border=0 ALT="Click to view at full size."> </A>

</P>
<P>
<!-- CAPTION --><B>Figure 15-8. </B> <I>Stored procedure output shown in the Results pane of the Query Designer.</I><!-- /CAPTION -->

</P>
<P>
<A HREF="javascript:fullSize('f15lh09x.htm')"> <IMG SRC="images/f15lh09.jpg" width=404 height=104 border=0 ALT="Click to view at full size."> </A>

</P>
<P>
<!-- CAPTION --><B>Figure 15-9. </B> <I>A warning message displayed by Visual InterDev when a stored procedure is missing a required parameter.</I><!-- /CAPTION -->

</P>
<A NAME="283"><H2>Debugging SQL Server Stored Procedures</H2></A><P>If you have the Enterprise edition of Microsoft Visual Studio, Visual 
InterDev includes a SQL debugger that you can use to debug SQL Server stored 
procedures and triggers in much the same way that you debug other kinds of 
scripts or programs.

</P>
<P>To run the SQL Debugger, you must have the following components installed:

</P>
<UL>
<P><LI>Visual Studio, Enterprise Edition
</LI>
</P>
<P><LI>SQL Server 6.5 with Service Pack 2
</LI>
</P>
<P><LI>Microsoft Windows NT 4.0 or later
</LI>
</P>
<P><LI>Workstation running Microsoft Windows 95 or Windows NT 4.0 or later
</LI></P>
</UL>




<P>In addition, you must have installed the SQL Server Debugging 
components onto your server from the Visual Studio, Enterprise Edition CD-ROM. 
You must also have set up Distributed COM (DCOM) for SQL Debugging. For 
more details about the installation and configuration of these components, please 
see the online Visual Studio documentation.

</P>
<P>To debug a stored procedure within Visual InterDev, follow these steps:

</P>
<OL>
<P><LI>  In the Data View window, right-click the stored procedure 
and choose Debug from the context menu. The source code editor 
window will open with the stored procedure code in it.
</LI>
</P>
<P><LI>  Now you can add breakpoints by clicking to the left of the code 
in the gray vertical border or by right-clicking and choosing 
Insert Breakpoint from the context menu.
</LI>
</P>
</OL>




<P>The options on the Debug menu allow you to control the 
debugging process.

</P>
<P>Figure 15-10 shows a stored procedure within the source code editor 
with some breakpoints applied. You can also see the context menu showing the 
Insert Breakpoint command.

</P>
<P>The Locals window allows you to view the values of variables and 
parameters. You can also drag an expression from the stored procedure code and 
drop it into the Watch window. You can open up the Locals window and the 
Watch window by clicking the appropriate buttons on the Debug toolbar. 

</P>
<P>
<A HREF="javascript:fullSize('f15lh10x.htm')"> <IMG SRC="images/f15lh10.jpg" width=404 height=303 border=0 ALT="Click to view at full size."> </A>

</P>
<P>
<!-- CAPTION --><B>Figure 15-10.</B> <I>Debugging a stored procedure from within the source code editor.</I><!-- /CAPTION -->

</P>
</BODY>
</HTML>





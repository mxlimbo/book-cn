<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="Library.css" TYPE="text/css">
<TITLE>The CDONTS NewMailObject</TITLE>


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch17h.htm", "ch17j.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>
<A NAME="329"><H1>The CDONTS NewMailObject</H1></A>
<P>The Microsoft CDO for NTS Library version 1.2 exposes messaging objects for use by Visual Basic, C/C++, Visual C++, and VBScript applications. The library makes it easy to add mail functionality (both sending and receiving) into 
the server-side of your Visual InterDev 6.0 applications via ASP scripting. There is no user interface supported by the library, and you must be running on Windows NT 4.0. The nice thing about the CDONTS Library is that you don't 
even need to be running Exchange&#8212;all you need is the SMTP server component of IIS 4.0 installed.

</P>
<P>The <I>NewMail</I> object is just one object in the CDONTS Library. Other objects are shown in Table 17-12.

</P>
<P><B>Table 17-12.</B> <I>Objects in the CDONTS Library.</I>

<TABLE CELLPADDING=5 WIDTH="95%">
<TR>
<TH VALIGN="TOP"><B><I>Object</I></B></TH>
<TH VALIGN="TOP"><B><I>Description</I></B></TH>
</TR>

<TR>
<TD VALIGN="TOP"><I>AddressEntry</I></TD>
<TD VALIGN="TOP">Specifies addressing information for an individual messaging user</TD>
</TR>

<TR>
<TD VALIGN="TOP"><I>Attachment</I></TD>
<TD VALIGN="TOP">Associates an additional object with a message</TD>
</TR>

<TR>
<TD VALIGN="TOP"><I>Attachments collection</I></TD>
<TD VALIGN="TOP">Accesses all attachments on a message; creates new attachments</TD>
</TR>

<TR>
<TD VALIGN="TOP"><I>Folder</I></TD>
<TD VALIGN="TOP">Opens the default Inbox or Outbox folder in a message store</TD>
</TR>

<TR>
<TD VALIGN="TOP"><I>Message</I></TD>
<TD VALIGN="TOP">Composes, populates, sends, and receives an e-mail document</TD>
</TR>

<TR>
<TD VALIGN="TOP"><I>Messages collection</I></TD>
<TD VALIGN="TOP">Accesses all messages in a folder; creates new messages</TD>
</TR>

<TR>
<TD VALIGN="TOP"><I>Recipient</I> </TD>
<TD VALIGN="TOP">Specifies information for a messaging user intended to receive a message</TD>
</TR>

<TR>
<TD VALIGN="TOP"><I>Recipients collection</I></TD>
<TD VALIGN="TOP">Accesses all recipients of a message; creates new recipients</TD>
</TR>

<TR>
<TD VALIGN="TOP"><I>Session</I></TD>
<TD VALIGN="TOP">Establishes a connection between an application and a messaging system</TD>
</TR>
</TABLE>     
  

</P>
<P>The <I>NewMail</I> object is specifically designed to give developers a quick 
way to send an automated message with little coding required. All that's needed 
is to create the object, set some properties, send the message, and then set 
the object to <I>Nothing</I> to clean up. You can even send file attachments or send 
attachments with an associated URL.

</P>
<P>The following code shows an example of how to create the <I>NewMail</I> object and then send an e-mail message:

</P>
<P><PRE>
&lt;@ Language=VBScript %&gt;
&lt;HTML&gt;
&lt;HEAD&gt;
&lt;META NAME=&quot;GENERATOR&quot; Content=&quot;Microsoft Visual Studio 6.0&quot;&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;

&lt;OBJECT RUNAT=server PROGID=CDONTS.NewMail id=oNewMail&gt;&lt;/OBJECT&gt;

&lt;%
oNewMail.From = &quot;nick.evans@us.pwcglobal.com&quot;
oNewMail.To = &quot;nick.evans@us.pwcglobal.com&quot;
oNewMail.Subject = &quot;CDONTS&quot;

oNewMail.Body = &quot;This NewMail object makes sending e-mail simple!&quot;
oNewMail.Send
Set oNewMail = Nothing
%&gt;

&lt;/BODY&gt;
&lt;/HTML&gt;
</PRE>

</P>
<P>The code below shows an example of how to create the 
<I>NewMail</I> object and then send a file attachment within an e-mail message:

</P>
<P><PRE>&lt;OBJECT RUNAT=server PROGID=CDONTS.NewMail id=objNewMail&gt;
&lt;/OBJECT&gt;

objNewMail.AttachFile(&quot;\\ntserver\reports\1998q1.xls&quot;, &quot;1998Q1.XLS&quot;)
objNewMail.Send(&quot;Automated Report Generator&quot;, &quot;manager@xyz.com&quot;, _
    &quot;1998 Sales Report _ 1<SUP>st</SUP> Quarter&quot;, _
    &quot;Here's the latest sales report for the 1<SUP>st</SUP> quarter 1998&quot;, 0)
objNewMail = Nothing
</PRE>

</P>
<P>In this code example, the parameters included within the 
<I>Send</I> method specify the sender, recipient, subject line, body, and importance of the e-mail 
message, as the following syntax shows:

</P>
<P><PRE>ObjNewMail.Send ( [From] [, To] [, Subject] [, Body] [, Importance] )
</PRE>

</P>
<P>These parameters correspond to the <I>From</I>,<I> To</I>,<I> Subject</I>,<I> 
Body</I>, and <I>Importance</I> properties of the <I>NewMail</I> object. The <I>AttachFile</I> method takes the full path and filename of the file plus the file name to appear in the attachment's placeholder in the message as arguments.

</P>
<P>In your applications, you could easily create an HTML form to capture 
user input in a feedback form and then pass those values as the parameters for 
the e-mail message. This is a great way to automate the capture of input and 
the creation and routing of e-mail messages. In addition to forwarding the 
e-mail messages to the appropriate parties (perhaps based upon a selection from 
a drop-down list), you can also store the e-mail responses in a relational 
database. This way you have both a workflow process&#8212;so that the e-mails 
get routed&#8212;and a storage area for the e-mail information for analysis at a later 
date. For example, in an Internet Banking application you might have a loan 
application form for your users to complete. The message body in the 
completed form could be e-mailed to the loan processing department and the rest of 
the data could be captured in a relational database table so that the loan 
processors can access it later on. The CDONTS Library extends the possibilities for 
your Visual InterDev applications so that you can move from relational 
database access into the world of e-mail and workflow.

</P>
</BODY>
</HTML>





<HTML>
<HEAD>
<TITLE>Part V: Building the Topic List and Sending Mail</TITLE>
</HEAD>
<BODY BGCOLOR = "#ffffff">
<H1>Part V: Building the Topic List and Sending Mail</H1>
<P>In this part of the project, you will create the list of topics to appear in 
the drop-down list box on the home page. Use ADO to read the database 
and create the list.
<H2>
<B>Step 1</B>
</H2>
<P>If you don't already have the EMailInfo web open in Visual InterDev, open 
it now. Open DEFAULT.ASP in Visual InterDev. Identify the &lt;SELECT&gt; tag 
that creates the drop-down list box.
<P>Add an &lt;OPTION&gt; &lt;/OPTION&gt; tag pair for each topic in the 
database. These tags are used to denote items in the list. Add the following code 
between the &lt;SELECT&gt; and &lt;/SELECT&gt; tags:
<PRE WIDTH="0">&lt;%

` Variables
Dim objConnection
Dim objRecordset

` Open a&#160;connection
Set objConnection = Server.CreateObject(&quot;ADODB.Connection&quot;)
objConnection.Open &quot;EMailInfo&quot;

` Get entries
Set objRecordset = Server.CreateObject(&quot;ADODB.Recordset&quot;)
objRecordset.Open&#160;_
    &quot;SELECT ItemID, ItemDescription FROM Items&quot;, objConnection

` Build the&#160;list.
` The description is shown in the list,
` but the ItemID is returned in code
` so that&#160;you can search the database.
Do While Not objRecordset.EOF%&gt;
    &lt;OPTION VALUE=&lt;%=objRecordset(&quot;ItemID&quot;)%&gt;&gt;
    &lt;%=objRecordset(&quot;ItemDescription&quot;)%&gt;
    &lt;/OPTION&gt;&lt;%
    objRecordset.MoveNext
Loop

` Close the&#160;connection
objRecordset.Close
objConnection.Close
Set objRecordset = Nothing
Set objConnection = Nothing

%&gt;
</PRE>
<P>Save your work.
<H2>
<B>Step 2</B>
</H2>
<P>Preview DEFAULT.ASP in Internet Explorer. You should see the topics in 
the drop-down list box, as shown in Figure 9-4.<P>
<img src="pictures/F09XF04.JPG" width=600 height=449 border=0><P>
<B>Figure 9-4.</B>


<I>The topic list.</I>
<H2>
<B>Step 3</B>
</H2>
<P>Now that the information form is complete, you are ready to send the mail. 
Add a new page to your project by choosing New from the File menu. In the 
New dialog box, add a new ASP page, name it MAIL.ASP, and click OK.
<H2>
<B>Step 4</B>
</H2>
<P>To send the mail, use the E-Mail component you created earlier. Because 
the component was written in Visual Basic 5.0, it is already properly registered 
and ready to use. You create an instance of this component in the same way 
that you create an instance of any component&#151;by using the CreateObject 
method of the Server object. Add the following code to the BODY section of 
MAIL.ASP to access the E-Mail component:
<PRE WIDTH="0">&lt;%

` Variables
Dim objMail
Dim objConnection
Dim objRecordset
Dim blnSuccess

blnSuccess = False

` Create the E-Mail component
Set objMail = Server.CreateObject(&quot;VBMail.Connector&quot;)

` Create database objects
Set objConnection = Server.CreateObject(&quot;ADODB.Connection&quot;)
Set objRecordset = Server.CreateObject(&quot;ADODB.Recordset&quot;)

` Get the item to send
objConnection.Open &quot;EMailInfo&quot;
objRecordset.Open&#160;_
    &quot;SELECT ItemDescription, ItemText FROM Items WHERE ItemID =&quot; _
    &amp; Request.Form(&quot;lstTopic&quot;), objConnection

If Not objRecordset.EOF Then
` Set data into Mail component
objMail.Sender = Application(&quot;Sender&quot;)
objMail.Recipient = Request.Form(&quot;txtEMail&quot;)
objMail.SenderName = Application(&quot;SenderName&quot;)
objMail.RecipientName = Request.Form(&quot;txtFirstName&quot;) _
    &amp; &quot; &quot; &amp; Request.Form(&quot;txtLastName&quot;)
objMail.Subject = objRecordset(&quot;ItemDescription&quot;)
objMail.Body = objRecordset(&quot;ItemText&quot;)
objMail.Server = Application(&quot;Server&quot;)

` Send mail!
blnSuccess = objMail.Send
End If

If blnSuccess Then%&gt;
&lt;H1&gt;Thank You!  Your mail was sent.&lt;/H1&gt;
&lt;%Else%&gt;
&lt;H1&gt;We're sorry!  There is a problem sending mail.  
Please check your information.&lt;/H1&gt;
&lt;%End If%&gt;
</PRE>
<H2>
<B>Step 5</B>
</H2>
<P>In the code for the E-Mail component, you specified several key 
properties using Application variables. These variables provide a simple way of 
customizing the application for your e-mail server and information topics. To set 
up these variables in the GLOBAL.ASA file, open the file in Visual 
InterDev. GLOBAL.ASA traps four important events in your project: 
Session_OnStart, Session_OnEnd, Application_OnStart, and Application_OnEnd. Here is 
the code:
<PRE WIDTH="0">&lt;SCRIPT LANGUAGE=&quot;VBScript&quot; RUNAT=&quot;Server&quot;&gt;

    Sub Application_OnStart
        Application(&quot;Sender&quot;) = &quot;<I>[Your Company E-Mail]</I>&quot;
        Application(&quot;Server&quot;) = &quot;<I>[Your E-Mail Server]</I>&quot;
        Application(&quot;SenderName&quot;) = &quot;<I>[Your Company Name]</I>&quot;
    End Sub

&lt;/SCRIPT&gt;
</PRE>
<P>Save your work.
<H2>
<B>Step 6</B>
</H2>
<P>Test your application. You should now be able to send e-mail!
<P><HR><BLOCKQUOTE>
<B>NOTE:</b> This application requires that all form fields be filled 
out! The user can crash the application by not providing information 
for all fields in DEFAULT.ASP. Add data validation to the form later 
as an extra exercise.
</BLOCKQUOTE><HR><P>







</BODY>
</HTML>

<HTML>
<HEAD>
<TITLE>Part III: Browsing the Catalog</TITLE>
</HEAD>
<BODY BGCOLOR = "#ffffff">
<H1>Part III: Browsing the Catalog</H1>
<P>In this part, you will create the Web page that displays the catalog items for 
the selected category. The display includes photos and text descriptions of 
the catalog items.
<H2>
<B>Step 1</B>
</H2>
<P>If you don't already have the Catalog project open, open it now. Open the 
file DEFAULT.HTM. Add the code on the facing page to the SCRIPT section 
of the page to trap the OnClick event for a category. When a user clicks a 
category, your program will display a page featuring the items in that category.
<PRE WIDTH="0">Sub&#160;divCategories_OnClick()
&#160;&#160;&#160;&#160;`&#160;User&#160;selects&#160;a&#160;category

&#160;&#160;&#160;&#160;`&#160;Variables
&#160;&#160;&#160;&#160;Dim&#160;objEvent
&#160;&#160;&#160;&#160;Dim&#160;strTarget
&#160;&#160;&#160;&#160;Dim&#160;strQuery

&#160;&#160;&#160;&#160;On&#160;Error&#160;Resume&#160;Next

&#160;&#160;&#160;&#160;`&#160;Get&#160;target&#160;element
&#160;&#160;&#160;&#160;Set&#160;objEvent&#160;=&#160;Window.Event
&#160;&#160;&#160;&#160;strTarget&#160;=&#160;objEvent.SrcElement.ID

&#160;&#160;&#160;&#160;`&#160;Build&#160;query&#160;string
&#160;&#160;&#160;&#160;If&#160;strTarget&#160;&lt;&gt;&#160;&quot;divCategories&quot;&#160;Then
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;`&#160;Build&#160;target&#160;URL
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Select&#160;Case&#160;strTarget
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Case&#160;&quot;Category1&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;strQuery&#160;=&#160;&quot;catalog.asp?Category=1&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Case&#160;&quot;Category2&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;strQuery&#160;=&#160;&quot;catalog.asp?Category=2&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Case&#160;&quot;Category3&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;strQuery&#160;=&#160;&quot;catalog.asp?Category=3&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Case&#160;&quot;Category4&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;strQuery&#160;=&#160;&quot;catalog.asp?Category=4&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;End&#160;Select
&#160;&#160;&#160;&#160;End&#160;If

&#160;&#160;&#160;&#160;`&#160;Navigate&#160;to&#160;the&#160;new&#160;page
&#160;&#160;&#160;&#160;Window.Navigate&#160;strQuery
End&#160;Sub
</PRE>
<P>Save the Web page, and close it.
<H2>
<B>Step 2</B>
</H2>
<P>Choose New from the File menu. In the New dialog box, add an ASP page 
to the project, name the page CATALOG.ASP, and click OK. This is the only 
piece of the project that depends on server-side functionality. You will use the 
server side only for receiving the submitted category identifier from the home page.
<H2>
<B>Step 3</B>
</H2>
<P>The CATALOG.ASP page is used to view all the items in a particular 
category. The items for the category are retrieved by using the ADC. The query run 
by the ADC is based on the category that received the click on the home 
page. Add the following lines to the BODY section of the code to insert the ADC 
in the page:
<PRE WIDTH="0">&lt;!--&#160;The&#160;Advanced&#160;Data&#160;Control&#160;--&gt;
&lt;OBJECT&#160;ID=&quot;datItems&quot;
&#160;&#160;&#160;&#160;CLASSID=&quot;CLSID:BD96C556-65A3-11D0-983A-00C04FC29E33&quot;
&#160;&#160;&#160;&#160;ALIGN=&quot;baseline&quot;&#160;BORDER=&quot;0&quot;&#160;WIDTH=&quot;10&quot;&#160;HEIGHT=&quot;10&quot;&gt;
&#160;&#160;&#160;&#160;&lt;PARAM&#160;NAME=&quot;SQL&quot;&#160;VALUE=
&#160;&#160;&#160;&#160;&quot;SELECT&#160;*&#160;FROM&#160;Products&#160;WHERE&#160;CategoryID=&lt;%=Request.QueryString(&quot;Category&quot;)%&gt;&quot;&gt;
&#160;&#160;&#160;&#160;&lt;PARAM&#160;NAME=&quot;SERVER&quot;&#160;VALUE=&quot;<B><I>[your&#160;site&#160;name]</I></B>&quot;&gt;
&#160;&#160;&#160;&#160;&lt;PARAM&#160;NAME=&quot;CONNECT&quot;&#160;VALUE=&quot;DSN=HomePage&quot;&gt;
&lt;/OBJECT&gt;
</PRE>
<P><HR><BLOCKQUOTE>
<B>WARNING:</b> This project was written using Preview 2 of 
Internet Explorer 4.0 and Remote Data Services. Verify that the CLSID 
for the Advanced Data Control has not changed. This can be done 
by selecting Into HTML/ActiveX Control from the Visual InterDev 
Insert menu and inserting the ADC into the Web page.
</BLOCKQUOTE><HR>
<P>
<H2>
<B>Step 4</B>
</H2>
<P>Close CATALOG.ASP in Visual InterDev, and right-click it on the FileView 
tab in the project window. Choose Open With from the pop-up menu. In the 
Open With dialog box, open the file by using Microsoft FrontPage Editor.<P>
In FrontPage Editor, choose Background from the Format menu. Set 
the page background color to white, and click OK.
<H2>
<B>Step 5</B>
</H2>
<P>The navigation toolbar for this page will be a set of four pushbuttons in a 
table. To create the table, move to a new line in the page and choose Insert Table 
from the Table menu. In the Insert Table dialog box, select one row and four 
columns, set the table width to 100 percent, and click OK. Save your work, 
and return to Visual InterDev.<P>
Open CATALOG.ASP in the text editor of Visual InterDev, and 
locate the table that you just inserted in the page. Use the &lt;INPUT&gt; tag to add 
a pushbutton to each of the four cells in the table. Here is the code:
<PRE WIDTH="0">&lt;TABLE&#160;BORDER=&quot;0&quot;&#160;WIDTH=&quot;100%&quot;&gt;
&#160;&#160;&#160;&#160;&lt;TR&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;TD&#160;WIDTH=&quot;25%&quot;&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;INPUT&#160;TYPE=&quot;BUTTON&quot;&#160;NAME=&quot;BtnBack&quot;&#160;&#160;VALUE=&quot;BACK&quot;&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/TD&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;TD&#160;WIDTH=&quot;25%&quot;&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;INPUT&#160;TYPE=&quot;BUTTON&quot;&#160;NAME=&quot;BtnNext&quot;&#160;&#160;VALUE=&quot;NEXT&quot;&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/TD&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;TD&#160;WIDTH=&quot;25%&quot;&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;INPUT&#160;TYPE=&quot;BUTTON&quot;&#160;NAME=&quot;BtnOrder&quot;&#160;VALUE=&quot;ORDER&quot;&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/TD&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;TD&#160;WIDTH=&quot;25%&quot;&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;INPUT&#160;TYPE=&quot;BUTTON&quot;&#160;NAME=&quot;BtnHome&quot;&#160;&#160;VALUE=&quot;HOME&quot;&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/TD&gt;
&#160;&#160;&#160;&#160;&lt;/TR&gt;
&lt;/TABLE&gt;
</PRE>
<H2>
<B>Step 6</B>
</H2>
<P>Your page will use Dynamic HTML to display product information as the 
user browses the catalog. Add the following lines to the BODY section of the 
code to insert two product information text areas in the page:
<PRE WIDTH="0">&lt;CENTER&gt;
&lt;P&gt;
&lt;!--&#160;The&#160;item&#160;name&#160;--&gt;
&lt;SPAN&#160;ID=&quot;ItemName&quot;&#160;STYLE=&quot;font-family:verdana;&#160;font-size:20;&quot;&gt;
&lt;/SPAN&gt;
&lt;/P&gt;

&lt;P&gt;
&lt;!--&#160;The&#160;item&#160;description&#160;--&gt;
&lt;SPAN&#160;ID=&quot;ItemDescription&quot;&#160;STYLE=&quot;font-family:verdana;&#160;font-size:12;&quot;&gt;
&lt;/SPAN&gt;
&lt;/P&gt;
&lt;/CENTER&gt;
</PRE>
<H2>
<B>Step 7</B>
</H2>
<P>Each item description should be accompanied by a photo. To display a 
photo of any item in the catalog, insert an &lt;IMG&gt; tag between the two &lt;SPAN&gt; 
tags in the code. Here is the code for the image:
<PRE WIDTH="0">&lt;!--&#160;The&#160;item&#160;photo&#160;--&gt;
&lt;P&gt;&lt;IMG&#160;ID=&quot;imgItem&quot;&#160;SRC=&quot;&quot;&gt;&lt;/P&gt;
</PRE>
<H2>
<B>Step 8</B>
</H2>
<P>You must also add some code to the page to display the information from 
the database. You want to show the first item in the category when the page is 
first loaded. You can accomplish this by creating a Window_OnLoad event in 
the HEAD section. Here is the code:
<PRE WIDTH="0">&lt;SCRIPT&#160;LANGUAGE=&quot;VBScript&quot;&gt;
&lt;!--

&#160;&#160;&#160;&#160;Sub&#160;Window_OnLoad()
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DisplayData
&#160;&#160;&#160;&#160;End&#160;Sub

&#160;&#160;&#160;&#160;Sub&#160;DisplayData()
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;`&#160;Variables
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Dim&#160;objRecordset
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Dim&#160;objTextRange

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;`&#160;Get&#160;objects
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Set&#160;objRecordset&#160;=&#160;datItems.Recordset

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;`&#160;Display&#160;item&#160;name
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ItemName.InnerText&#160;=&#160;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;objRecordSet(&quot;ProductName&quot;).Value&#160;&amp;&#160;&quot;,&#160;$&quot;&#160;&amp;&#160;_
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;objRecordset(&quot;ProductPrice&quot;).Value
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;`&#160;Display&#160;item&#160;GIF
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;imgItem.src&#160;=&#160;&quot;/Catalog/Images/&quot;&#160;&amp;&#160;_
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;objRecordset(&quot;ProductImage&quot;).Value
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;`&#160;Display&#160;item&#160;description
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ItemDescription.InnerText&#160;=&#160;_
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;objRecordset(&quot;ProductDescription&quot;).Value&#160;&amp;&#160;&quot;&quot;
&#160;&#160;&#160;&#160;End&#160;Sub

--&gt;
&lt;/SCRIPT&gt;
</PRE>
<H2>
<B>Step 9</B>
</H2>
<P>Next provide code for operating the navigation toolbar you created in step 
5. This code accesses the Recordset object of the Advanced Data Control to 
move between the records. (The Advanced Data Control can bind to elements in 
a Web page, and you will often use it for this. <a href="ch04a.htm">Chapter 4</a> contains examples 
of binding the ADC.  However, in this project, you do not want to bind data; 
you want to use script code to read the data out and present it in a different way. 
 The Recordset object provides a means for accessing data in the ADC when 
it is not functioning as a bound control.)
<P>The Recordset object used in the ADC is closely related to the 
ActiveX Data Objects (ADO) used in Active Server Pages. Methods associated with 
ADO Recordsets can also be used with the ADC Recordset object. This allows 
navigation through the familiar MoveFirst, MoveLast, MoveNext, and 
MovePrevious methods. Accessing any individual field in the current record is 
done by&#160;referencing the field name in parentheses&#151;for example, 
MyRecordset (&quot;MyField&quot;).<P>
Add the following SCRIPT section to your code so that users will be 
able to browse the database:
<PRE WIDTH="0">&lt;SCRIPT&#160;LANGUAGE=&quot;VBScript&quot;&gt;
&lt;!--

&#160;&#160;&#160;&#160;Sub&#160;btnNext_OnClick
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;`&#160;Move&#160;to&#160;next&#160;item
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;datItems.Recordset.MoveNext

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;If&#160;datItems.Recordset.EOF&#160;Then
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;datItems.Recordset.MoveLast
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Else
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DisplayData
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;End&#160;If
&#160;&#160;&#160;&#160;End&#160;Sub

&#160;&#160;&#160;&#160;Sub&#160;btnBack_OnClick
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;`&#160;Move&#160;to&#160;previous&#160;item
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;datItems.Recordset.MovePrevious

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;If&#160;datItems.Recordset.BOF&#160;Then
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;datItems.Recordset.MoveFirst
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Else
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DisplayData
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;End&#160;If
&#160;&#160;&#160;&#160;End&#160;Sub

&#160;&#160;&#160;&#160;Sub&#160;btnHome_OnClick
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;`&#160;Go&#160;home
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Window.Navigate&#160;&quot;/Catalog/default.htm&quot;
&#160;&#160;&#160;&#160;End&#160;Sub

&#160;&#160;&#160;&#160;Sub&#160;btnOrder_OnClick
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;`Go&#160;to&#160;order&#160;page
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Window.Navigate&#160;&quot;/Catalog/orders.asp?Product=&quot;&#160;&amp;&#160;_
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;lblName.Caption
&#160;&#160;&#160;&#160;End&#160;Sub

--&gt;
&lt;/SCRIPT&gt;
</PRE>
<H2>
<B>Step 10</B>
</H2>
<P>Save your work, and test the catalog browsing features. Your Web page 
should look like the one in Figure 7-9.<P>
<img src="pictures/F07XF09.JPG" width=600 height=452 border=0><P>
<B>Figure 7-9.</B>


<I>Browsing the catalog.</I>







</BODY>
</HTML>

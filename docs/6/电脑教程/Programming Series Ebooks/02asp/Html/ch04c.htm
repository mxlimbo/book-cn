<HTML>
<HEAD>
<TITLE>Cascading Style Sheets</TITLE>
</HEAD>
<BODY BGCOLOR = "#ffffff">
<H1>Cascading Style Sheets</H1>
<P>Cascading style sheets are an important part of Web development and 
have expanded significance in the world of Dynamic HTML. Cascading style 
sheets specify the layout of a Web page in a format that is separate from the 
actual Web page content. Separating the style from the content makes a Web site 
easier to maintain. In Dynamic HTML, style sheets can also be changed 
dynamically, allowing for special effects such as dynamic styles and dynamic layouts.<P>
Style sheets came into use with the release of Internet Explorer 3.0. 
Under IE 3.0, developers of Web content could specify additional formatting such 
as font size and color for various portions of a page and could factor out 
the styles for easier maintenance of the site. Style sheets are described as 
<I>cascading</I> because they can be implemented at different levels of the content and 
can override styles defined at higher levels. You can choose to implement styles 
in one of three ways: linked style sheets, embedded styles, and inline styles.
<H2>
<B>Linked Style Sheets</B>
</H2>
<P>Linked style sheets are the most global of all style sheet implementations. 
In this scenario, you can define a style sheet as a separate document and 
<I>link</I> its style to one or more Web pages. This provides a way of setting up a 
thematic style for your site&#151;one that is inherited by all pages.<P>
Linked style sheets are constructed as plain text in a file with a CSS 
extension. In the CSS file, you must provide one or more style definitions, 
which are used to format the linked page. A style definition is an HTML tag 
accompanied by a list of tag attributes in curly braces. Each attribute is named 
and followed by a colon and the attribute's value. Multiple attributes can be 
specified by using a semicolon to separate the attribute/value pairs. The 
following code defines a style for the &lt;H1&gt; tag:
<PRE WIDTH="0">H1&#160;{font-size:&#160;20pt;&#160;color:&#160;red}
</PRE>
<P>You can specify as many tags as you want in one style sheet and then 
link them to a Web page. Linking to a Web page is accomplished by using 


the &lt;LINK&gt; tag, which is placed directly in the page where the styles are to 
be applied. The tag is placed in the HEAD section so that it's available before 


the page is rendered. As an example, suppose you have a style sheet 
named MYSTYLE.CSS and you want to link it to a Web page. In the HEAD 
section of the page, you use the following HTML:
<PRE WIDTH="0">&lt;LINK&#160;REL=STYLESHEET&#160;HREF=&quot;MYSTYLE.CSS&quot;&gt;
</PRE>
<P>The HREF attribute of the &lt;LINK&gt; tag points to the URL where the 
style sheet can be found. The definitions provided in the style sheet are then 
applied universally throughout the Web page. If you want to change the styles in all 
of the linked Web pages, you have only to change the definitions in the style 
sheet. Listing 4-4 shows a typical style sheet.


<P>
<P><B>Listing 4-4.</B>


<I>A partial style sheet.</I>
<HR><BLOCKQUOTE>
<PRE WIDTH="0">
BODY&#160;{&#160;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;margin-left:50px;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;font:9pt/11pt&#160;&quot;Arial&quot;;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;color:black;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;text-align:left;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;background:transparent;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
P&#160;{&#160;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;margin-left:0px;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;font:9pt/11pt&#160;&quot;Arial&quot;;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;color:black;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}

H1&#160;{
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;margin-left:0px;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;font:18pt/18pt&#160;&quot;Times&#160;New&#160;Roman&quot;;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;color:black;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;font-weight:bold;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}
</PRE>


</blockquote><HR>


<P>
<H2>
<B>Embedded Styles</B>
</H2>
<P>In addition to linking a Web page to a style sheet, you can choose to 
embed styles directly in the page's HTML. Embedded styles are created using 
the &lt;STYLE&gt; tag. In the tag, style definitions are coded in the same format as 
in the linked style sheet:
<PRE WIDTH="0">&lt;STYLE&gt;
&lt;!--
&#160;&#160;&#160;&#160;H1&#160;{font-size:20pt;&#160;color:red}
--&gt;
&lt;/STYLE&gt;
</PRE>
<P>The styles applied in the embedded section will override any styles 
defined in a linked style sheet. Notice also that embedded styles use HTML 
comment marks (&lt;!-- --&gt;) to hide the style definitions from old browsers that do 
not recognize the &lt;STYLE&gt; tag. (Hiding code is a common practice when new 
tags are involved. The technique is used with the &lt;SCRIPT&gt; tag, for example, 
to hide script code from old browsers.) Listing 4-5 provides complete code for 
a Web page with embedded styles.


<P>
<B>Listing 4-5.</B>


<I>Embedded styles.</I>
<HR><BLOCKQUOTE>
<PRE WIDTH="0">
&lt;HTML&gt;
&lt;HEAD&gt;
&lt;META&#160;NAME=&quot;GENERATOR&quot;&#160;Content=&quot;Microsoft&#160;Developer&#160;Studio&quot;&gt;
&lt;META&#160;HTTP-EQUIV=&quot;Content-Type&quot;&#160;content=&quot;text/html;&#160;
&#160;&#160;&#160;&#160;charset=iso-8859-1&quot;&gt;
&lt;TITLE&gt;Embedded&#160;Styles&lt;/TITLE&gt;

&lt;STYLE&#160;TYPE=&quot;text/css&quot;&gt;
&lt;!--
&#160;&#160;&#160;&#160;BODY&#160;{font:10pt&#160;&quot;Arial&quot;}
&#160;&#160;&#160;&#160;H1&#160;&#160;&#160;{font:15pt/17pt&#160;&quot;Stencil&quot;}
&#160;&#160;&#160;&#160;P&#160;&#160;&#160;&#160;{font:10pt&#160;&quot;Arial&quot;}
--&gt;
&lt;/STYLE&gt;
&lt;/HEAD&gt;

&lt;BODY&gt;

&lt;H1&gt;This&#160;is&#160;the&#160;H1&#160;style&lt;/H1&gt;
&lt;P&gt;This&#160;is&#160;the&#160;P&#160;style&lt;/P&gt;

&lt;/BODY&gt;
&lt;/HTML&gt;
</PRE>


</blockquote><HR>


<P>
<H2>
<B>Inline Styles</B>
</H2>
<P>If you want to define styles for a particular tag or to override styles created 
by linked or embedded styles, you can use inline styles. Inline styles are 
created by using the STYLE attribute of a tag. This attribute and its values are 
placed directly in the tag:
<PRE WIDTH="0">&lt;H1&#160;STYLE=&quot;font-size:20pt;&#160;color:red&quot;&gt;Welcome!&lt;/H1&gt;
</PRE>
<P>Inline styles allow changes to an individual tag, embedded styles affect 
a whole page, and linked style sheets can be applied to the site. But what if 
you need to change just one section of a Web page? The answer is to use the 
&lt;DIV&gt; tag to define a <I>division</I> in the page. A division in a Web page is similar to 
a section in any Microsoft Word document: it's used to specify that part of 
the document be treated as one unit. The &lt;DIV&gt; tag allows you to specify 
styles that apply to only a section of the page. Listing 4-6 contains sample code 
for styles in a division.


<P>
<B>Listing 4-6.</B>


<I>Styles in a division.</I>
<HR><BLOCKQUOTE>
<PRE WIDTH="0">
&lt;HTML&gt;
&lt;HEAD&gt;
&lt;META&#160;NAME=&quot;GENERATOR&quot;&#160;Content=&quot;Microsoft&#160;Developer&#160;Studio&quot;&gt;
&lt;META&#160;HTTP-EQUIV=&quot;Content-Type&quot;&#160;content=&quot;text/html;&#160;
&#160;&#160;&#160;&#160;charset=iso-8859-1&quot;&gt;
&lt;TITLE&gt;A&#160;Division&#160;in&#160;a&#160;Web&#160;Page&lt;/TITLE&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;

This&#160;line&#160;is&#160;outside&#160;the&#160;division
&lt;DIV&#160;STYLE=&quot;font-size:18pt;&#160;color:red&quot;&gt;
This&#160;line&#160;is&#160;inside&#160;the&#160;division
&lt;/DIV&gt;
This&#160;line&#160;is&#160;outside&#160;the&#160;division

&lt;/BODY&gt;
&lt;/HTML&gt;
</PRE>


</blockquote><HR>
<H2>
<B>Style Definition Techniques</B>
</H2>
<P>Style sheets can be implemented through several coding techniques that 
simplify the use of styles. One technique for declaring styles is to use a style 
<I>class,</I> a predefined style that can be applied at the tag level. A style class is 
defined in a manner similar to a regular style, but you can name the style. The 
following code creates three style classes&#151;Normal, Military, and Fancy&#151;for 
the &lt;H1&gt; tag:
<PRE WIDTH="0">&lt;STYLE&gt;
&lt;!--
H1.Normal&#160;{font-size:12pt;&#160;font-family:arial;}
H1.Military&#160;{font-size:20pt;&#160;font-family:stencil}
H1.Fancy&#160;{font-size:14pt;&#160;font-family:courier;&#160;font-style:italic}
--&gt;
&lt;/STYLE&gt;
</PRE>
<P>Using the style class becomes a matter of invoking the class name 
through the CLASS attribute of a tag. The style class works as if you had defined 
the complete style for the class in the STYLE attribute of the affected tag. 
The following code shows a style class applied to an individual tag as well as to 
a division in the page:
<PRE WIDTH="0">&lt;H1&#160;CLASS=Military&gt;This&#160;is&#160;the&#160;Military&#160;class&lt;/H1&gt;
</PRE>
<P>Another technique available for style definition is to use a style 
<I>group,</I> a set of tags that share similar styles and are grouped together for easy 
definition. For example, suppose you want to share similar styles across all of 
your header tags. The following code simplifies the definitions:
<PRE WIDTH="0">H1&#160;H2&#160;H3&#160;H4&#160;H5&#160;H6&#160;H7&#160;{font-family:arial}
</PRE>
<P>A complete style reference for Internet Explorer 4.0 is included on 
the CD-ROM that accompanies this book.
<H2>
<B>Dynamic Styles</B>
</H2>
<P>Styles play a vital role not only in standard HTML but in Dynamic HTML 
as well. In Dynamic HTML, all styles in the Document object are available as 
Style objects. Style objects can be manipulated through VBScript code, resulting 
in comprehensive changes to a page while requiring less code. These 
manipulations are known as <I>dynamic styles</I>.<P>
Dynamic styles can be coded at the same levels that styles are 
applied&#151;through linking, embedding, and inline styles&#151;and can be used for 
everything, from allowing users to customize Web pages to adding subtle 
effects when the mouse passes over key text. You can manipulate styles across an 
entire page by dynamically changing the style sheet that is linked to the page. As 
an example, let's customize a feedback form for using two different style 
sheets. Listing 4-7 shows the complete feedback form and customization script. 
The style sheets offer a choice between a red theme and a blue theme. The 
style can be set dynamically at run time, but initially the page is linked to the 
blue theme:

<PRE WIDTH="0">&lt;LINK&#160;ID=&quot;LinkStyle&quot;&#160;REL=STYLESHEET&#160;HREF=&quot;BLUE.CSS&quot;&gt;
</PRE>
<P>Notice that the &lt;LINK&gt; tag has an ID attribute so that it can be 
addressed in code later. On the page, two option buttons allow the selection of a red 
or blue theme. These are standard HTML option buttons in a form. When 
an option is checked, the selected theme is sent to a VBScript routine, 
which changes the linked style sheet by addressing the 
&lt;LINK&gt; tag through its ID attribute.


<P>
<B>Listing 4-7.</B> <I>Changing a style sheet dynamically.</I>
<HR><BLOCKQUOTE>
<PRE WIDTH="0">&lt;HTML&gt;
&lt;HEAD&gt;
&lt;TITLE&gt;Feedback&#160;Form&lt;/TITLE&gt;
&lt;LINK&#160;ID=&quot;LinkStyle&quot;&#160;REL=STYLESHEET&#160;HREF=&quot;BLUE.CSS&quot;&gt;

&lt;SCRIPT&#160;LANGUAGE=&quot;VBScript&quot;&gt;
&lt;!--

&#160;&#160;&#160;&#160;Sub&#160;ChangeStyle(strStyle)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;LinkStyle.HRef&#160;=&#160;strStyle&#160;&amp;&#160;&quot;.CSS&quot;
&#160;&#160;&#160;&#160;End&#160;Sub

--&gt;
&lt;/SCRIPT&gt;

&lt;/HEAD&gt;

&lt;BODY&gt;

&lt;H1&gt;Feedback&#160;Form&lt;/H1&gt;
&lt;HR&gt;
&lt;!--&#160;This&#160;form&#160;changes&#160;the&#160;page&#160;style&#160;--&gt;
&lt;H2&gt;Pick&#160;a&#160;page&#160;style!&lt;/H2&gt;
&lt;FORM&#160;NAME=&quot;frmStyle&quot;&gt;
&lt;INPUT&#160;TYPE=&quot;RADIO&quot;&#160;NAME=&quot;optStyle&quot;&#160;
&#160;&#160;&#160;&#160;OnClick=&quot;ChangeStyle('BLUE')&quot;CHECKED&gt;Blue&#160;Style&lt;P&gt;
&lt;INPUT&#160;TYPE=&quot;RADIO&quot;&#160;NAME=&quot;optStyle&quot;&#160;
&#160;&#160;&#160;&#160;OnClick=&quot;ChangeStyle('RED')&quot;&gt;Red&#160;Style&lt;P&gt;
&lt;/FORM&gt;

&lt;!--&#160;The&#160;rest&#160;of&#160;the&#160;HTML&#160;is&#160;just&#160;for&#160;the&#160;
Web&#160;page&#160;content&#160;--&gt;

&lt;P&gt;
Tell&#160;us&#160;what&#160;you&#160;think&#160;about&#160;our&#160;Web&#160;site,&#160;our&#160;products,&#160;
our&#160;organization,&#160;or&#160;anything&#160;else&#160;that&#160;comes&#160;to&#160;mind.&#160;We&#160;
welcome&#160;all&#160;of&#160;your&#160;comments&#160;and&#160;suggestions.
&lt;/P&gt;

&lt;FORM&gt;

&lt;P&gt;&lt;STRONG&gt;
What&#160;kind&#160;of&#160;comment&#160;would&#160;you&#160;like&#160;to&#160;send?
&lt;/STRONG&gt;&lt;/P&gt;


&lt;DL&gt;&lt;DD&gt;
&#160;&#160;&#160;&#160;&lt;INPUT&#160;TYPE=&quot;radio&quot;&#160;NAME=&quot;MessageType&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;VALUE=&quot;Complaint&quot;&gt;Complaint&#160;
&#160;&#160;&#160;&#160;&lt;INPUT&#160;TYPE=&quot;radio&quot;&#160;NAME=&quot;MessageType&quot;&#160;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;VALUE=&quot;Problem&quot;&gt;Problem
&#160;&#160;&#160;&#160;&lt;INPUT&#160;TYPE=&quot;radio&quot;&#160;CHECKED&#160;NAME=&quot;MessageType&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;VALUE=&quot;Suggestion&quot;&gt;Suggestion&#160;
&#160;&#160;&#160;&#160;&lt;INPUT&#160;TYPE=&quot;radio&quot;&#160;NAME=&quot;MessageType&quot;&#160;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;VALUE=&quot;Praise&quot;&gt;Praise
&lt;/DD&gt;&lt;/DL&gt;

&lt;P&gt;&lt;STRONG&gt;
What&#160;about&#160;us&#160;do&#160;you&#160;want&#160;to&#160;comment&#160;on?
&lt;/STRONG&gt;&lt;/P&gt;

&lt;DL&gt;&lt;DD&gt;
&#160;&#160;&#160;&#160;&lt;SELECT&#160;NAME=&quot;Subject&quot;&#160;SIZE=&quot;1&quot;&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;OPTION&#160;SELECTED&gt;Web&#160;Site&lt;/OPTION&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;OPTION&gt;Company&lt;/OPTION&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;OPTION&gt;Products&lt;/OPTION&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;OPTION&gt;Store&lt;/OPTION&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;OPTION&gt;Employee&lt;/OPTION&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;OPTION&gt;(Other)&lt;/OPTION&gt;
&#160;&#160;&#160;&#160;&lt;/SELECT&gt;&#160;
&#160;&#160;&#160;&#160;Other:&#160;
&#160;&#160;&#160;&#160;&lt;INPUT&#160;TYPE=&quot;text&quot;&#160;SIZE=&quot;26&quot;&#160;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;MAXLENGTH=&quot;256&quot;&#160;NAME=&quot;SubjectOther&quot;&gt;
&lt;/DD&gt;&lt;/DL&gt;

&lt;P&gt;&lt;STRONG&gt;
Enter&#160;your&#160;comments&#160;in&#160;the&#160;space&#160;provided&#160;below:
&lt;/STRONG&gt;&lt;/P&gt;

&lt;DL&gt;&lt;DD&gt;
&#160;&#160;&#160;&#160;&lt;TEXTAREA&#160;NAME=&quot;Comments&quot;&#160;ROWS=&quot;5&quot;&#160;COLS=&quot;42&quot;&gt;
&#160;&#160;&#160;&#160;&lt;/TEXTAREA&gt;
&lt;/DD&gt;&lt;/DL&gt;

&lt;P&gt;&lt;STRONG&gt;
Tell&#160;us&#160;how&#160;to&#160;get&#160;in&#160;touch&#160;with&#160;you:
&lt;/STRONG&gt;&lt;/P&gt;


&lt;DL&gt;&lt;DD&gt;&lt;PRE&gt;
Name&#160;&#160;&#160;&lt;INPUT&#160;TYPE=&quot;text&quot;&#160;SIZE=&quot;35&quot;&#160;MAXLENGTH=&quot;256&quot;&#160;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;NAME=&quot;UserName&quot;&gt;
E-mail&#160;&lt;INPUT&#160;TYPE=&quot;text&quot;&#160;SIZE=&quot;35&quot;&#160;MAXLENGTH=&quot;256&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;NAME=&quot;UserEmail&quot;&gt;
Tel&#160;&#160;&#160;&#160;&lt;INPUT&#160;TYPE=&quot;text&quot;&#160;SIZE=&quot;35&quot;&#160;MAXLENGTH=&quot;256&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;NAME=&quot;UserTel&quot;&gt;
FAX&#160;&#160;&#160;&#160;&lt;INPUT&#160;TYPE=&quot;text&quot;&#160;SIZE=&quot;35&quot;&#160;MAXLENGTH=&quot;256&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;NAME=&quot;UserFAX&quot;&gt;&#160;
&lt;/PRE&gt;&lt;/DD&gt;&lt;/DL&gt;

&lt;DL&gt;&lt;DD&gt;
&#160;&#160;&#160;&#160;&lt;INPUT&#160;TYPE=&quot;checkbox&quot;&#160;NAME=&quot;ContactRequested&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;VALUE=&quot;ContactRequested&quot;&gt;Please&#160;contact&#160;me&#160;as&#160;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;soon&#160;as&#160;possible&#160;regarding&#160;this&#160;matter.
&lt;/DD&gt;&lt;/DL&gt;

&lt;P&gt;
&#160;&#160;&#160;&#160;&lt;INPUT&#160;TYPE=&quot;submit&quot;&#160;VALUE=&quot;Submit&#160;Comments&quot;&gt;&#160;
&#160;&#160;&#160;&#160;&lt;INPUT&#160;TYPE=&quot;reset&quot;&#160;VALUE=&quot;Clear&#160;Form&quot;&gt;
&lt;/P&gt;

&lt;/FORM&gt;

&lt;HR&gt;
&lt;H5&gt;
New&#160;Technology&#160;Solutions,&#160;Incorporated&lt;BR&gt;
Copyright&#160;&#169;&#160;1997.&#160;All&#160;rights&#160;reserved.&lt;BR&gt;
&lt;/H5&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;
</PRE>



</blockquote><HR>
<P>Changing styles globally is useful for personalizing a site, but 
dynamic style changes on a smaller scale can be useful for achieving limited effects 
with very little code. Consider the code in Listing 
4-8, which displays text that 
changes color when the mouse passes over it. This 
example uses style classes to simplify the coding. The classes are defined 
independently of any particular tag by using a dot before the class name in an embedded 
style block. Defining generic classes in this way allows easy reuse of 
common functionality such as color change.


<P>
<B>Listing 4-8.</B>


<I>Dynamic styles with classes.</I>
<HR><BLOCKQUOTE>
<PRE WIDTH="0">
&lt;HTML&gt;
&lt;HEAD&gt;
&lt;META&#160;NAME=&quot;GENERATOR&quot;&#160;Content=&quot;Microsoft&#160;Developer&#160;Studio&quot;&gt;
&lt;META&#160;HTTP-EQUIV=&quot;Content-Type&quot;&#160;content=&quot;text/html;&#160;
&#160;&#160;&#160;&#160;charset=iso-8859-1&quot;&gt;
&lt;TITLE&gt;Embedded&#160;Styles&lt;/TITLE&gt;

&lt;STYLE&gt;
&lt;!--
&#160;&#160;&#160;&#160;.Red&#160;{color:red}
&#160;&#160;&#160;&#160;.Blue&#160;{color:blue}
--&gt;
&lt;/STYLE&gt;

&lt;/HEAD&gt;

&lt;BODY&gt;

&lt;SCRIPT&#160;LANGUAGE=&quot;VBScript&quot;&gt;
&lt;!--

&#160;&#160;&#160;&#160;Sub&#160;eleH2_OnMouseOver()
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Dim&#160;header
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Set&#160;header&#160;=&#160;Window.Event.SrcElement
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;header.ClassName&#160;=&#160;&quot;Red&quot;
&#160;&#160;&#160;&#160;End&#160;Sub
&#160;&#160;&#160;&#160;Sub&#160;eleH2_OnMouseOut()
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Dim&#160;header
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Set&#160;header&#160;=&#160;Window.Event.SrcElement
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;header.ClassName&#160;=&#160;&quot;Blue&quot;
&#160;&#160;&#160;&#160;End&#160;Sub

--&gt;
&lt;/SCRIPT&gt;

&lt;H2&#160;CLASS=&quot;Blue&quot;&#160;ID=&quot;eleH2&quot;&gt;
Visit&#160;the&#160;VB&#160;Bootcamp!
&lt;/H2&gt;

&lt;/BODY&gt;
&lt;/HTML&gt;
</PRE>



</blockquote><HR>
<H2>
<B>Dynamic Layouts</B>
</H2>
<P>Perhaps the most powerful use of style sheets in Internet Explorer 4.0 is 
the creation of dynamic layouts, a capability new in version 4.0. Style sheets 
implemented in IE 3.0 do not support layouts. In fact, in version 3.0, layouts are 
done without style sheets by using a special ActiveX control known as the 
HTML Layout control. The HTML Layout control is an invisible ActiveX control 
that sits on top of a Web page and acts as a container for other ActiveX 
controls. You actually position the other ActiveX controls inside the HTML 
Layout control. This technique is limiting, however, because it relies on the use 
of ActiveX controls for placement of elements and does not work directly with 
the HTML in the page. Consequently, the HTML Layout control does not 
blend well with the page's existing HTML. In order to create layouts, you often 
need to mimic regular HTML characteristics in ActiveX label controls, which 
requires more work to implement. Additionally, ActiveX controls must be 
downloaded to the client and can take significantly longer to render in the 
browser than does plain HTML.<P>
Dynamic layouts with cascading style sheets eliminate the problems 
presented by the HTML Layout control. Dynamic layouts allow complete 
integration with existing HTML and do not require the download of any 
ActiveX controls. Therefore, dynamic layouts are faster and easier to maintain 
than equivalent Web pages created with the HTML Layout control.<P>
Like dynamic styles, dynamic layouts are created through Style objects. 
The difference is that dynamic layouts take advantage of new additions to the 
cascading style sheet specification utilized by IE 4.0. These new style 
parameters&#151;top, left, height, width, and z-index&#151;allow complete control of the X, Y, 
Z placement of various elements on the page.<P>
Elements on the Web page can be positioned in one of three modes: 
static, relative, and absolute. Static positions are unaffected by the top and left 
style parameters; these elements are simply positioned by the browser as if 
no position style were assigned. Relative positions reflect top and left 
alignment relative to the existing static content on the page. Absolute positions use 
the top and left parameters for positioning by pixel, regardless of the 
existing content on the page. As the author of the Web page, you can specify any of 
these positioning schemes. The code in Listing 4-9 positions three images on a Web page: one image is positioned statically, one 
relatively, and one absolutely. Note that in the code each image is assigned the same 
top parameter for the style, but the results are decidedly different, as you can 
see in Figure 4-1, also on the following page.


<P>
<B>Listing 4-9.</B>


<I>Static, relative, and absolute positions.</i>
<HR><BLOCKQUOTE>
<PRE WIDTH="0">
&lt;HTML&gt;
&lt;HEAD&gt;
&lt;META&#160;NAME=&quot;GENERATOR&quot;&#160;Content=&quot;Microsoft&#160;Developer&#160;Studio&quot;&gt;
&lt;META&#160;HTTP-EQUIV=&quot;Content-Type&quot;&#160;content=&quot;text/html;&#160;
&#160;&#160;&#160;&#160;charset=iso-8859-1&quot;&gt;
&lt;TITLE&gt;Position&#160;Types&lt;/TITLE&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;

&lt;!--&#160;These&#160;images&#160;show&#160;how&#160;each&#160;position&#160;type
affects&#160;the&#160;display&#160;of&#160;HTML&#160;elements&#160;--&gt;
&lt;IMG&#160;SRC=&quot;STATIC.GIF&quot;&#160;&#160;&#160;
&#160;&#160;&#160;&#160;STYLE=&quot;position:static;&#160;top:100px&quot;&gt;&lt;P&gt;
&lt;IMG&#160;SRC=&quot;ABSOLUTE.GIF&quot;&#160;
&#160;&#160;&#160;&#160;STYLE=&quot;position:absolute;&#160;top:100px&quot;&gt;
&lt;IMG&#160;SRC=&quot;RELATIVE.GIF&quot;&#160;
&#160;&#160;&#160;&#160;STYLE=&quot;position:relative;&#160;top:100px&quot;&gt;

&lt;/BODY&gt;
&lt;/HTML&gt;
</PRE>


</blockquote><HR>
<img src="pictures/F04XF01.JPG" width=600 height=355 border=0><P>
<B>Figure 4-1.</B>


<I>Static, relative, and absolute positions.</I><P>
Using absolute positioning, you can easily create dynamic pages that 
are not limited to rigidly defined rectangular sections of the page. For 
example, Listing 4-10 creates an animated page with dynamic styles&#151;in this case, 
a simple home page for an online floral shop. The home page, shown in 
Figure&#160;4-2


, displays a butterfly and a flower. The butterfly, which 
flaps its wings, is actually an animated GIF file. This is another appealing feature 
of styles with &lt;IMG&gt; tags: you don't have to manage the animation frames if 
you use animated GIFs. Animating the butterfly is a matter of changing the 
STYLE attribute of the &lt;IMG&gt; tag governing the animated GIF. This is done 
through periodic calls to the Fly function. Fly tracks the current top and left 
parameters for the style and adjusts them accordingly. The animation is controlled 
through the SetTimeout method, which eliminates the need to download an 
ActiveX Timer control.<P>
As a background, the page uses a flower centered in the browser. 
Centering the image is accomplished by retrieving the browser's horizontal 
and vertical screen resolution, which is accessed through the Screen object. 
The following code repositions the flower image in the Window_OnLoad 
event handler:


<P>
<B>Listing 4-10.</B> <I>An animated home page.</I>
<HR><BLOCKQUOTE>
<PRE WIDTH="0">'&#160;Center&#160;the&#160;flower
imgFlower.Style.Top&#160;=&#160;_
&#160;&#160;&#160;&#160;Int((Window.Screen.Height&#160;-&#160;412)&#160;/&#160;2)
imgFlower.Style.Left&#160;=&#160;_
&#160;&#160;&#160;&#160;Int((Window.Screen.Width&#160;-&#160;384)&#160;/&#160;2)
&lt;HTML&gt;
&lt;HEAD&gt;
&lt;META&#160;NAME=&quot;GENERATOR&quot;&#160;Content=&quot;Microsoft&#160;Developer&#160;Studio&quot;&gt;
&lt;META&#160;HTTP-EQUIV=&quot;Content-Type&quot;&#160;content=&quot;text/html;&#160;
&#160;&#160;&#160;&#160;charset=iso-8859-1&quot;&gt;
&lt;TITLE&gt;Virtual&#160;Florist&lt;/TITLE&gt;

&lt;SCRIPT&#160;LANGUAGE=&quot;VBScript&quot;&gt;
&lt;!--

&#160;&#160;&#160;&#160;Public&#160;intTimeout
&#160;&#160;&#160;&#160;Public&#160;intX
&#160;&#160;&#160;&#160;Public&#160;intY


&#160;&#160;&#160;&#160;Sub&#160;Window_OnLoad()
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;'&#160;Center&#160;the&#160;flower
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;imgFlower.Style.Top&#160;=&#160;_
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Int((Window.Screen.Height&#160;-&#160;412)&#160;/&#160;2)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;imgFlower.Style.Left&#160;=&#160;_
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Int((Window.Screen.Width&#160;-&#160;384)&#160;/&#160;2)

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;'&#160;Position&#160;the&#160;butterfly
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;intY&#160;=&#160;Window.Screen.Height&#160;-&#160;77
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;intX&#160;=&#160;77
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;imgBFly.Style.Top&#160;=&#160;intY
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;imgBFly.Style.Left&#160;=&#160;intX

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;'&#160;Begin&#160;the&#160;animation
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;intTimeout&#160;=&#160;Window.SetTimeout(&quot;Fly&quot;,&#160;750)
&#160;&#160;&#160;&#160;End&#160;Sub

&#160;&#160;&#160;&#160;Sub&#160;Fly()
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;'&#160;Get&#160;new&#160;coordinates
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;intX&#160;=&#160;intX&#160;+&#160;37
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;intY&#160;=&#160;intY&#160;-&#160;37

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;If&#160;intX&#160;&gt;&#160;Window.Screen.Width&#160;-&#160;77&#160;Then&#160;intX&#160;=&#160;77
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;If&#160;intY&#160;&lt;&#160;0&#160;Then&#160;intY&#160;=&#160;Window.Screen.Height&#160;-&#160;77

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;'&#160;Position&#160;the&#160;image
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;imgBFly.Style.Left&#160;=&#160;intX
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;imgBFly.Style.Top&#160;=&#160;intY

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;'&#160;Reset&#160;the&#160;timeout
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;intTimeout&#160;=&#160;Window.SetTimeout(&quot;Fly&quot;,&#160;750)
&#160;&#160;&#160;&#160;End&#160;Sub
--&gt;
&lt;/SCRIPT&gt;

&lt;/HEAD&gt;
&lt;BODY&gt;

&lt;CENTER&gt;&lt;H1&#160;STYLE=&quot;font:arial&#160;bold&#160;20;&#160;color:blue&quot;&gt;
Welcome&#160;to&#160;the&#160;Virtual&#160;Florist!
&lt;/H1&gt;&lt;/CENTER&gt;


&lt;IMG&#160;ID=&quot;imgFlower&quot;&#160;SRC=&quot;FLOWER.GIF&quot;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;
&#160;&#160;&#160;&#160;STYLE=&quot;position:absolute;&#160;width:384px;&#160;height:412px&quot;&gt;
&lt;IMG&#160;ID=&quot;imgBFly&quot;&#160;&#160;&#160;SRC=&quot;ANIMATED_BFLY.GIF&quot;&#160;
&#160;&#160;&#160;&#160;STYLE=&quot;position:absolute;&#160;width:77px;&#160;height:77px&quot;&gt;

&lt;/BODY&gt;
&lt;/HTML&gt;
</PRE>



</blockquote><HR>
<P><img src="pictures/F04XF02.JPG" width=600 height=450 border=0><P>
<B>Figure 4-2.</B>


<I>The Virtual Florist.</I><P>
Dynamic layouts can be used to create not only animated pages but 
also sophisticated graphical user interfaces. Listing 4-11 produces a GUI with dynamic layout that simulates the Microsoft Outlook 
user interface. The result is pictured in Figure 4-3 on page 75.<P>
This Web page provides a tabbed toolbar that allows the user to click 
a tab to reveal a new toolbar, an effect that depends primarily on causing 
the images of the various toolbars to appear and disappear when the 
appropriate tab is clicked. The code element that allows an &lt;IMG&gt; tag to become 
visible or invisible is the Display argument of the STYLE attribute. The following 
code causes an &lt;IMG&gt; tag named MyGIF to appear or disappear:


<P>
<B>Listing 4-11.</B> <I>The Outlook toolbar page.</I>
<HR><BLOCKQUOTE>
<PRE WIDTH="0">MyGIF.Style.Display&#160;=&#160;&quot;none&quot;&#160;&#160;&#160;&#160;&#160;'&#160;Make&#160;GIF&#160;invisible
MyGIF.Style.Display&#160;=&#160;&quot;&quot;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;'&#160;Make&#160;GIF&#160;visible
&lt;HTML&gt;
&lt;HEAD&gt;
&lt;META&#160;NAME=&quot;GENERATOR&quot;&#160;Content=&quot;Microsoft&#160;Developer&#160;Studio&quot;&gt;
&lt;META&#160;HTTP-EQUIV=&quot;Content-Type&quot;&#160;content=&quot;text/html;&#160;
&#160;&#160;&#160;&#160;charset=iso-8859-1&quot;&gt;
&lt;TITLE&gt;Outlook&#160;Toolbar&lt;/TITLE&gt;

&lt;SCRIPT&#160;LANGUAGE=&quot;VBScript&quot;&gt;
&lt;!--

&#160;&#160;&#160;&#160;Sub&#160;RollBar(intIndex)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Call&#160;OutlookBarVisible(&quot;none&quot;)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Call&#160;MailBarVisible(&quot;none&quot;)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Call&#160;OtherBarVisible(&quot;none&quot;)

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Select&#160;Case&#160;intIndex
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Case&#160;1&#160;'&#160;Outlook
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cmdOutlook.Style.Top&#160;=&#160;&quot;0&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cmdMail.Style.Top&#160;=&#160;&quot;350&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cmdOther.Style.Top&#160;=&#160;&quot;375&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Call&#160;OutlookBarVisible(&quot;&quot;)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Case&#160;2&#160;'&#160;Mail
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;If&#160;cmdMail.Style.Top&#160;=&#160;&quot;25px&quot;&#160;Then
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cmdOutlook.Style.Top&#160;=&#160;&quot;0&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cmdMail.Style.Top&#160;=&#160;&quot;350&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cmdOther.Style.Top&#160;=&#160;&quot;375&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Call&#160;OutlookBarVisible(&quot;&quot;)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Else
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cmdOutlook.Style.Top&#160;=&#160;&quot;0&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cmdMail.Style.Top&#160;=&#160;&quot;25&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cmdOther.Style.Top&#160;=&#160;&quot;375&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Call&#160;MailBarVisible(&quot;&quot;)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;End&#160;If
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Case&#160;3&#160;'&#160;Other
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;If&#160;cmdOther.Style.Top&#160;=&#160;&quot;50px&quot;&#160;Then
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cmdOutlook.Style.Top&#160;=&#160;&quot;0&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cmdMail.Style.Top&#160;=&#160;&quot;25&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cmdOther.Style.Top&#160;=&#160;&quot;375&quot;

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Call&#160;MailBarVisible(&quot;&quot;)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Else
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cmdOutlook.Style.Top&#160;=&#160;&quot;0&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cmdMail.Style.Top&#160;=&#160;&quot;25&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cmdOther.Style.Top&#160;=&#160;&quot;50&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Call&#160;OtherBarVisible(&quot;&quot;)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;End&#160;If
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;End&#160;Select
&#160;&#160;&#160;&#160;End&#160;Sub

&#160;&#160;&#160;&#160;Sub&#160;OutlookBarVisible(strDisplay)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;imgOutlook1.Style.Display&#160;=&#160;strDisplay
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;imgOutlook2.Style.Display&#160;=&#160;strDisplay
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;imgOutlook3.Style.Display&#160;=&#160;strDisplay
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;imgOutlook4.Style.Display&#160;=&#160;strDisplay
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;imgOutlook5.Style.Display&#160;=&#160;strDisplay
&#160;&#160;&#160;&#160;End&#160;Sub

&#160;&#160;&#160;&#160;Sub&#160;MailBarVisible(strDisplay)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;imgMail1.Style.Display&#160;=&#160;strDisplay
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;imgMail2.Style.Display&#160;=&#160;strDisplay
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;imgMail3.Style.Display&#160;=&#160;strDisplay
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;imgMail4.Style.Display&#160;=&#160;strDisplay
&#160;&#160;&#160;&#160;End&#160;Sub

&#160;&#160;&#160;&#160;Sub&#160;OtherBarVisible(strDisplay)
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;imgOther1.Style.Display&#160;=&#160;strDisplay
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;imgOther2.Style.Display&#160;=&#160;strDisplay
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;imgOther3.Style.Display&#160;=&#160;strDisplay
&#160;&#160;&#160;&#160;End&#160;Sub

--&gt;
&lt;/SCRIPT&gt;

&lt;/HEAD&gt;

&lt;BODY&gt;
&lt;DIV&#160;STYLE=&quot;position:absolute;&#160;width:100;&#160;height:400;&quot;&gt;

&lt;!--&#160;Buttons&#160;--&gt;
&lt;INPUT&#160;STYLE=&quot;position:absolute;&#160;top:0;&#160;width:100;&quot;&#160;
&#160;&#160;&#160;&#160;TYPE=&quot;BUTTON&quot;&#160;NAME=&quot;cmdOutlook&quot;&#160;VALUE=&quot;Outlook&quot;&#160;
&#160;&#160;&#160;&#160;OnClick=&quot;Call&#160;RollBar(1)&quot;&gt;


&lt;INPUT&#160;STYLE=&quot;position:absolute;&#160;top:350;&#160;width:100;&quot;&#160;
&#160;&#160;&#160;&#160;TYPE=&quot;BUTTON&quot;&#160;NAME=&quot;cmdMail&quot;&#160;VALUE=&quot;Mail&quot;&#160;
&#160;&#160;&#160;&#160;OnClick=&quot;Call&#160;RollBar(2)&quot;&gt;

&lt;INPUT&#160;STYLE=&quot;position:absolute;&#160;top:375;&#160;width:100;&quot;&#160;
&#160;&#160;&#160;&#160;TYPE=&quot;BUTTON&quot;&#160;NAME=&quot;cmdOther&quot;&#160;VALUE=&quot;Other&quot;&#160;
&#160;&#160;&#160;&#160;OnClick=&quot;Call&#160;RollBar(3)&quot;&gt;

&lt;!--&#160;Outlook&#160;bar&#160;images&#160;--&gt;
&lt;IMG&#160;SRC=&quot;INBOX.GIF&quot;&#160;&#160;&#160;&#160;ID=&quot;imgOutlook1&quot;&#160;
&#160;&#160;&#160;&#160;STYLE=&quot;position:absolute;&#160;left:32;&#160;top:80&quot;&gt;
&lt;IMG&#160;SRC=&quot;CALENDAR.GIF&quot;&#160;ID=&quot;imgOutlook2&quot;&#160;
&#160;&#160;&#160;&#160;STYLE=&quot;position:absolute;&#160;left:32;&#160;top:125&quot;&gt;
&lt;IMG&#160;SRC=&quot;CONTACTS.GIF&quot;&#160;ID=&quot;imgOutlook3&quot;&#160;
&#160;&#160;&#160;&#160;STYLE=&quot;position:absolute;&#160;left:32;&#160;top:170&quot;&gt;
&lt;IMG&#160;SRC=&quot;TASKS.GIF&quot;&#160;&#160;&#160;&#160;ID=&quot;imgOutlook4&quot;&#160;
&#160;&#160;&#160;&#160;STYLE=&quot;position:absolute;&#160;left:32;&#160;top:215&quot;&gt;
&lt;IMG&#160;SRC=&quot;JOURNAL.GIF&quot;&#160;&#160;ID=&quot;imgOutlook5&quot;&#160;
&#160;&#160;&#160;&#160;STYLE=&quot;position:absolute;&#160;left:32;&#160;top:260&quot;&gt;

&lt;!--&#160;Mail&#160;bar&#160;images&#160;--&gt;
&lt;IMG&#160;SRC=&quot;INBOX.GIF&quot;&#160;&#160;&#160;&#160;ID=&quot;imgMail1&quot;&#160;
&#160;&#160;&#160;&#160;STYLE=&quot;position:absolute;&#160;left:32;&#160;top:80;&#160;display:none&quot;&gt;
&lt;IMG&#160;SRC=&quot;SENTITEMS.GIF&quot;ID=&quot;imgMail2&quot;&#160;
&#160;&#160;&#160;&#160;STYLE=&quot;position:absolute;&#160;left:32;&#160;top:125;&#160;display:none&quot;&gt;
&lt;IMG&#160;SRC=&quot;OUTBOX.GIF&quot;&#160;&#160;&#160;ID=&quot;imgMail3&quot;&#160;
&#160;&#160;&#160;&#160;STYLE=&quot;position:absolute;&#160;left:32;&#160;top:170;&#160;display:none&quot;&gt;
&lt;IMG&#160;SRC=&quot;DELETED.GIF&quot;&#160;&#160;ID=&quot;imgMail4&quot;&#160;
&#160;&#160;&#160;&#160;STYLE=&quot;position:absolute;&#160;left:32;&#160;top:215;&#160;display:none&quot;&gt;

&lt;!--&#160;Other&#160;bar&#160;images&#160;--&gt;
&lt;IMG&#160;SRC=&quot;MYCOMPUTER.GIF&quot;ID=&quot;imgOther1&quot;&#160;
&#160;&#160;&#160;&#160;STYLE=&quot;position:absolute;&#160;left:32;&#160;top:80;&#160;display:none&quot;&gt;
&lt;IMG&#160;SRC=&quot;FOLDER.GIF&quot;&#160;&#160;&#160;&#160;ID=&quot;imgOther2&quot;&#160;
&#160;&#160;&#160;&#160;STYLE=&quot;position:absolute;&#160;left:32;&#160;top:125;&#160;display:none&quot;&gt;
&lt;IMG&#160;SRC=&quot;NOTES.GIF&quot;&#160;&#160;&#160;&#160;&#160;ID=&quot;imgOther3&quot;&#160;
&#160;&#160;&#160;&#160;STYLE=&quot;position:absolute;&#160;left:32;&#160;top:170;&#160;display:none&quot;&gt;

&lt;/DIV&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;
</PRE>



</blockquote><HR>
<P><img src="pictures/F04XF03.JPG" width=600 height=485 border=0>
<P><B>Figure 4-3.</B>


<I>An Outlook-type interface.</I>







</BODY>
</HTML>

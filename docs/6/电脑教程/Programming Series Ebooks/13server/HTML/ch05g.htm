<HTML>
<HEAD>
<TITLE>Accessing the Registry Remotely</TITLE>
<link rel="STYLESHEET" type="text/css" href="prosrvwin.css">
<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR = "#ffffff">
<A HREF="ch05f.htm">[Previous]</A> <A HREF="ch05h.htm">[Next]</A><P>

<A NAME="85"><h1>Accessing the Registry Remotely</h1></A>
<p>Windows allows you to access the registry on a remote machine in much the same way you access the registry on the local machine. This greatly eases the task of developing software that can be configured from a remote location on the network.</p>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
To give remote registry access under Windows its fair consideration, I would need to delve into security. I'll defer a more in-depth discussion on security to <A HREF="ch10a.htm">Chapter 10</A>.
</blockquote></div>
</p>

<p>The designers of the Windows registry functions really simplified the task of remotely accessing the registry by allowing application developers to use the same functions they use to access the local registry. For example, you can use <i>RegOpenKeyEx</i> to open keys on remote machines and on the local machine. Likewise, <i>RegSetValueEx</i>, <i>RegQueryValueEx</i>, <i>RegEnumKey</i>, and so on can be used to manipulate the registry on a remote machine. The only difference is in obtaining a handle to one of the system's predefined registry keys on the remote machine. This is done via a call to <i>RegConnectRegistry</i>, which is prototyped as follows:</p>

<p>
<table cellpadding=5 width="95%"><tr><td><pre>
LONG RegConnectRegistry(
   PTSTR pszMachineName,
   HKEY  hkey,
   PHKEY phkResult);
</pre></td></tr></table>
</p>

<p>As you can see, <i>RegConnectRegistry</i> is fairly straightforward. You pass the name of the machine to which you want to connect in the <i>pszMachineName</i> parameter. You also pass one of the predefined registry keys (such as HKEY_LOCAL_MACHINE or HKEY_USERS) to indicate which portion of the remote machine's registry you wish to access. Finally, you provide <i>RegConnectRegistry</i> with a pointer to an HKEY variable in which the function will store an open handle to the remote registry's root key.</p>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
Your application can pass NULL as the <i>pszMachineName</i> parameter to indicate a connection to the local machine. This is a convenient mechanism for creating registry tools that work remotely and locally with minimal extra logic.
</blockquote></div>
</p>

<p>To retrieve values from a remote registry, you can use the <i>RegQueryMultipleValues</i> function. The <i>RegQueryMultipleValues</i> function is similar to <i>RegQueryValueEx</i>, but it can request multiple values. The <i>RegQueryMultipleValues</i> function allows your application to minimize network traffic by requesting multiple values in a single network operation. <i>RegQueryMultipleValues</i> is not exclusively available for remote registry manipulation, but it is in this capacity that it really shines. In an industry where network bandwidth is at a premium, each hit to the network comes at a cost. Here is the prototype for <i>RegQueryMultipleValues</i>:</p>

<p>
<table cellpadding=5 width="95%"><tr><td><pre>
LONG RegQueryMultipleValues(
   HKEY    hkey,
   PVALENT val_list,
   DWORD   num_vals,
   PTSTR   pszValueBuf,
   PDWORD  dwTotsize);
</pre></td></tr></table>
</p>

<p>Your application must pass an array of VALENT structures to the function via the <i>val_list</i> parameter. The system then uses this array to find the values to be retrieved, and populates the structure with the information for each value. The VALENT structure is declared as follows:</p>

<p>
<table cellpadding=5 width="95%"><tr><td><pre>
typedef struct value_ent {
   PTSTR ve_valuename;
   DWORD ve_valuelen;
   DWORD ve_valueptr;
   DWORD ve_type;
} VALENT;
</pre></td></tr></table>
</p>

<p>It is odd that the designers of the registry functions didn't also implement a function to set multiple values in the registry as a single operation. I assume that this was not done because the registry is typically read from much more often than it is written to. Of course, you could implement your own &quot;<i>RegSetMultipleValues</i>&quot; by making multiple calls to <i>RegSetValueEx</i>. Network traffic, however, would not be reduced by this implementation of the function.</p>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
The <i>RegQueryMultipleValues</i> function is limited to reading no more than 1 MB of data per call. The function will succeed only if it can return all of the requested values. It will fail if collectively more than 1 MB of data is requested.
</blockquote></div>
</p>

</BODY>
</HTML>





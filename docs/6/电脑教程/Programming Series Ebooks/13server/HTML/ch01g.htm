<HTML>
<HEAD>
<TITLE>Network Communication</TITLE>
<link rel="STYLESHEET" type="text/css" href="prosrvwin.css">
<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR = "#ffffff">
<A HREF="ch01f.htm">[Previous]</A> <A HREF="ch02a.htm">[Next]</A><P>

<A NAME="9"><h1>Network Communication</h1></A>

<p>Many services are stand-alone applications that sit on a single machine 
and monitor various actions. Here are some services that ship with Windows:</p>
<ul>
 

<p><li><b>Uninterruptible Power Supply</B>  Responds to notifications from 
a UPS device in the case of a power failure</li></p>
 

<p><li><b>Indexing Service</B>  Monitors changes to files on your hard disk 
so that it can update a master catalog, allowing for fast searches</li></p>
 

<p><li><b>Windows Installer</B>  Manages the installation, repair, and 
removal of software on the machine</li></p>
 

<p><li><b>RunAs Service</B>  Allows a user to run an application using a 
different security context</li></p>
 

<p><li><b>Task Scheduler</B>  Spawns applications at specific times</li></p>
</ul>


<p>None of the services just mentioned require any network 
communication, but many services do. Here are some examples of network-aware services 
that ship with Windows:</p>

<ul>

<p><li><b>Event Log</B>  Sends requested event log records to remote 
machines, allowing for remote administration</li></p>
 

<p><li><b>NetMeeting Remote Desktop Sharing</B>  Allows remote users to 
view and control your machine's desktop by using Microsoft NetMeeting</li></p>
 

<p><li><b>Server</B>  Allows remote users to access shared folders, printers, 
and named pipes</li></p>
 

<p><li><b>Workstation</B>  Allows your machine to remotely connect to 
another machine's shared folders, printers, and named pipes</li></p>
</ul>


<p>If your service requires network communication, you have many 
mechanisms available to you:</p>

<ul>

<p><li><b>Mailslot</B>  Allows one-way interprocess communication (IPC) 
of untyped data between machines running Windows</li></p>
 

<p><li><b>Named pipe</B>  Allows two-way interprocess communication 
of untyped data between machines running Windows</li></p>
 

<p><li><b>Socket</B>  Allows two-way interprocess communication of 
untyped data between machines running any operating system that 
supports sockets</li></p>
 

<p><li><b>Remote Procedure Call (RPC)</B>  Allows two-way interprocess 
communication of typed data between machines running any 
operating system that supports RPC</li></p>
 

<p><li><b>Component Object Model (COM)</B>  Allows two-way interprocess 
communication of typed data between machines running any 
operating system that supports COM</li></p>
</ul>


<p>All network communication mechanisms can be quite complex, each 
having its own nuances. In fact, whole books that discuss sockets, RPC, and 
COM are available. For this reason, I have decided not to address 
communication mechanisms directly in this book and instead encourage you to seek out 
other sources for information about them. Of all the mechanisms I mentioned in 
the preceding list, named pipes are the easiest to understand and use, and so 
most of the sample applications in this book that require network communication 
use named pipes.</p>


<p>
<div class="note"><blockquote><b>NOTE</B> <hr>
You can also use native network protocols 
(IPX/SPX/NetBIOS, NetBEUI, TCP/IP, AppleTalk, and so on) as your 
communication mechanism. However, Microsoft strongly discourages this because it 
ties your application to a specific protocol, whereas the other higher 
level mechanisms (mailslots, pipes, sockets, RPC, and COM) work over 
all the native protocols, allowing your application to run in more 
varied environments.
</blockquote></div>
</p>
</body>
</html>




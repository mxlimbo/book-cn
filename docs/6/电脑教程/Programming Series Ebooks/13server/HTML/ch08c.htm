<HTML>
<HEAD>
<TITLE>WMI Tools</TITLE>
<link rel="STYLESHEET" type="text/css" href="prosrvwin.css">
<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR = "#ffffff">
<A HREF="ch08b.htm">[Previous]</A> <A HREF="ch08d.htm">[Next]</A><P>

<A NAME="128"><h1>WMI Tools</h1></A>
<p>Various tools are available when you're working with WMI. The two tools you will probably use most often are CIM Studio and the MOF compiler. Later in this chapter in the section titled &quot;<A HREF="ch08g.htm#161">The TimeServiceProvider Sample WMI Provider</A>,&quot; we'll discuss another tool called the WMI Provider Code Generator Wizard.</p>

<A NAME="129"><h2>WMI CIM Studio</h2></A>
<p>WMI CIM Studio is a tool for viewing and editing the class and instance information for a CIM repository. Classes and instances are grouped into units called namespaces. WMI provides a namespace called root\CIMV2, which contains all the classes and instances that represent a system. To experiment with WMI, install the WMI SDK (specifically, WMI Tools, which is included as part of the Platform SDK on the companion CD). After you install the SDK, you can use the CIM Studio tool to look at the contents of the root\CIMV2 namespace. I will be using CIM Studio in this chapter to show you many of WMI's capabilities.</p>

<p>To open CIM Studio, select WMI CIM Studio from the Programs menu. It will be listed under the Microsoft Platform SDK group (or the WMI SDK group). To see a list of the services installed on your machine, navigate to the Win32_Service class by opening CIM_ManagedSystemElement, CIM_ LogicalElement, CIM_Service, Win32_BaseService, and Win32_Service. Click the Instances toolbar button above the right pane, and you should see the screen shown in Figure 8-2.</p>

<p>
<A HREF="javascript:fullSize('F08fj02x.htm')"> <img src="images/F08fj02.JPG" width=404 height=305 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 8-2.</b> <i>WMI CIM Studio showing installed services</i><!-- /caption -->
</p>

<A NAME="130"><h2>MOF Compiler</h2></A>
<p>A MOF compiler is provided as a part of WMI and can be used to introduce new classes and instances into the system. The following MOF example illustrates a number of features of WMI classes:</p>

<p>
<table cellpadding="5" width="95%"><tr><td><pre>
[static] class Msft_Joke {
   [key] string JokeName;
         string JokeText;
};

instance of Msft_Joke {
   JokeName = &quot;KnockKnock1&quot;;
   JokeText = &quot;Knock, knock. :Who's there? Dwayne: Dwayne, who?: &quot;
      &quot;Dwayne the bathtub, I'm dwowning!&quot;;
};
</pre></td></tr></table>
</p>

<p>Classes are identified by the keyword <i>class</i> and can be preceded by qualifiers in square brackets (<i>[</i> <i>]</i>). Qualifiers are used to supply information relevant to the handling of the class, such as how it's implemented or localization information. Class properties are defined as a type followed by a name and optionally preceded by qualifiers in brackets.</p>

<p>In the Msft_Joke example, the class is defined as <i>[static]</i>, meaning that the instances of the class are stored in the WMI repository. The JokeName property is of type string and is a key for the class, which means that every instance of the class must have a value for the property, and the value must be different from the value present in all other instances.</p>

</BODY>
</HTML>





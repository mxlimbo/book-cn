<HTML>
<HEAD>
<TITLE>Working with Registry Keys</TITLE>
<link rel="STYLESHEET" type="text/css" href="prosrvwin.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR = "#ffffff">
<A HREF="ch05c.htm">[Previous]</A> <A HREF="ch05e.htm">[Next]</A><P>

<A NAME="77"><h1>Working with Registry Keys</h1></A>
<p>This section describes functions implemented by the system that can be used to access the system registry. Before discussing specific functions, however, I would like to make a distinction between two sets of functions: the registry functions, and the shell registry functions.</p>

<A NAME="78"><h2>Registry and Shell Registry Functions</h2></A>
<p>Registry functions are a basic set of functions, implemented by the system, for accessing the system registry. These functions have existed since the creation of the Win32 programming interface and reside in a DLL named AdvAPI32.dll. Anything that can be done with the registry can be implemented using the registry functions. They are characterized by the three-character prefix <i>Reg</i>&#8212;for example, <i>RegOpenKeyEx.</i></p>

<p>Shell registry functions are built on these &quot;regular&quot; registry functions and provide extended or simplified functionality. Shell registry functions are intended to ease access to the registry, as well as to enforce a more uniform usage of the registry by applications. These functions are available only when Microsoft Internet Explorer 4.0 or later is installed on the system.</p>

<p>To use the shell functions, you have to include the ShlWAPI.h header file in your source code as well as the ShlWAPI.lib file with your linker options. The regular registry functions do not require any special inclusions.</p>

<p>The shell functions are characterized by simpler parameter lists as well as the two-character prefix <i>SH</i>&#8212;for example, <i>SHCopyKey</i>.</p>

<p>Because the regular registry functions provide the base interface to the registry, I will be focusing on them in this chapter. However, I will make occasional mention of shell functions where appropriate.</p>

<A NAME="79"><h2>Opening Registry Keys</h2></A>
<p>Before you can begin storing and retrieving information in registry values, you must obtain a handle to a registry key. You can obtain a handle to a registry key in two basic ways: open an existing key or create a new key. The <i>RegOpenKeyEx</i> function should be used to open existing registry keys. It is prototyped as follows:</p>

<p>
<table cellpadding=5 width="95%"><tr><td><pre>
LONG燫egOpenKeyEx(
牋燞KEY牋爃keyRoot,
牋燩CTSTR爌szSubKey,
牋燚WORD牋ulOptions,
牋燫EGSAM爏amDesired,
牋燩HKEY牋phkResult);
</pre></td></tr></table>
</p>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
The <i>RegOpenKey</i> function can also be used to obtain a handle to a registry key. However, you should always use the <i>Ex</i> version of a registry function, if it exists.
</blockquote></div>
</p>

<p>To open a subkey, you pass the handle of the root key for the <i>hkeyRoot</i> parameter. The handle should be either the parent of the subkey you want to open or some grandparent of the desired subkey. The system also allows you to pass any of the predefined root key values as listed in Table 5-1 to <i>hkeyRoot</i>. Typically, an application will have to make at least one call to <i>RegOpenKeyEx</i>, passing HKEY_LOCAL_MACHINE or HKEY_CURRENT_USER as the <i>hkeyRoot</i> parameter.</p>

<p>The <i>pszSubKey</i> parameter is the textual name of the key that you want to open. This name must include all keys between the desired key and the root, separated with backslash characters. For example, if you wanted to obtain a handle with read access to the HKEY_LOCAL_MACHINE\Software\Microsoft\Windows subkey, your call to <i>RegOpenKeyEx</i> would look something like the following:</p>

<p>
<table cellpadding=5 width="95%"><tr><td><pre>
HKEY爃keyWindows;
LONG爈Ret
<HTML>
<HEAD>
<TITLE>Changing Protection Attributes</TITLE>
<link rel="STYLESHEET" type="text/css" href="advwin4.css">
<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch15f.htm">[Previous]</A> <A HREF="ch15h.htm">[Next]</A><P>

<A NAME="199"><H1>Changing Protection Attributes</H1></A>

<p>Although the practice is rare, it is possible to change the
protection attributes associated with a page or pages of committed physical storage. For example, say you've developed code to manage a linked list, the nodes of which you are keeping in a reserved region. You could design the functions that process the linked list so that they change the protection attributes of the committed storage to PAGE_READWRITE at the start of each function and then back to PAGE_NOACCESS just before each function terminates.</p>
 
<p>By doing this, you protect your linked-list data from other bugs hiding in your program. If any other code in your process has a stray pointer that attempts to access your linked-list data, an access violation is raised. Taking advantage of protection attributes can be incredibly useful when you're trying to locate hard-to-find bugs in your application.</p>

<p>You can alter the protection rights of a page of memory by calling <i>VirtualProtect</i>:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<PRE>
BOOL燰irtualProtect(
牋燩VOID爌vAddress,
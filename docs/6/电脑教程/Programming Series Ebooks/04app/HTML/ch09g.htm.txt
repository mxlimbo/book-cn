<HTML>
<HEAD>
<TITLE>Mutex Kernel Objects</TITLE>
<link rel="STYLESHEET" type="text/css" href="advwin4.css">
<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch09f.htm">[Previous]</A> <A HREF="ch09h.htm">[Next]</A><P>

<A NAME="132"><H1>Mutex Kernel Objects</H1></A>

<p>Mutex kernel objects ensure that a thread has mutual exclusive
access to a single resource. In fact, this is how the mutex got its
name. A mutex object contains a usage count, a thread ID, and a
recursion counter. Mutexes behave identically to critical sections, but
mutexes are kernel objects, while critical sections are user-mode
objects. This means that mutexes are slower than critical sections. But
it also means that threads in different processes can access a single
mutex, and it means that a thread can specify a timeout value while
waiting to gain access to a resource.</p>

<p>The thread ID identifies which thread in the system currently owns the
mutex, and the recursion counter indicates the number of times that
this thread owns the mutex. Mutexes have many uses and are among the
most frequently used kernel objects. Typically, they are used to guard
a block of memory that is accessed by multiple threads. If multiple
threads were to access the memory block simultaneously, the data in the
block would be corrupted. Mutexes ensure that any thread accessing the
memory block has exclusive access to the block so that the integrity of
the data is maintained.</p>

<p>The rules for a mutex are as follows:</p>

<ul>

<p><li>If the thread ID is 0 (an invalid thread ID), the mutex is not
owned by any thread and is signaled.</li></p>

<p><li>If the thread ID is nonzero, a thread owns the mutex and the
mutex is nonsignaled.</li></p>

<p><li>Unlike all the other kernel objects, mutexes have special code in
the operating system that allows them to violate the normal rules.
(I'll explain this exception shortly.)</li></p>

</ul>

<p>To use a mutex, one process must first create the mutex by calling
<i>CreateMutex</i>:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<PRE>
HANDLE燙reateMutex(
牋燩SECURITY_ATTRIBUTES爌sa,
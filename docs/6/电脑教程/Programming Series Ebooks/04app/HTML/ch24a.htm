<html>
<head>
<title>Chapter 24 -- Exception Handlers and Software
Exceptions</title>
<link rel="STYLESHEET" type="text/css" href="advwin4.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<BODY bgcolor="#ffffff" text="#000000">
<A HREF="ch23b.htm">[Previous]</A> <A HREF="ch24b.htm">[Next]</A><P>

<font size="+3">Chapter 24</font> 

<A NAME="316"><H1>Exception Handlers and Software Exceptions</H1></A>

<p>An exception is an event you don't expect. In a well-written
application, you don't expect attempts to access an invalid memory
address or divide a value by 0. Nevertheless, such errors do occur. The
CPU is responsible for catching invalid memory accesses and divides by
0, and it will raise an exception in response to these errors. When the
CPU raises an exception, it's known as a <i>hardware exception.</i>
Later in this chapter, we'll see that the operating system and your
applications can raise their own exceptions, known as <i>software
exceptions.</i></p>

<p>When a hardware or software exception is raised, the operating
system offers your application the opportunity to see what type of
exception was raised and allows the application to handle the exception
itself. Here is the syntax for an exception handler:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<PRE>
_ _try {
   // Guarded body

   <img src="images/grayvellip.JPG" width=3 height=13 border="0">

}
_ _except (exception filter) {
   // Exception handler

   <img src="images/grayvellip.JPG" width=3 height=13 border="0">

}
</pre></td></tr></table></p>

<p>Notice the _ _<i>except</i> keyword. Whenever you create a <i>try</i>
block, it must be followed by either a <i>finally</i> block or an <i>
except</i> block. A <i>try</i> block can't have both a <i>
finally</i> block and an <i>except</i> block, and a <i>try</i> block
can't have multiple <i>finally</i> or <i>except</i> blocks.
However, it is possible to nest <i>try-finally</i> blocks inside <i>
try-except</i> blocks and vice versa.</p>

</BODY>
</HTML>







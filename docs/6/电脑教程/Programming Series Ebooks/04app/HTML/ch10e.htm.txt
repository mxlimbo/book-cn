<HTML>
<HEAD>
<TITLE>Implementing a WaitForMultipleExpressions Function</TITLE>
<link rel="STYLESHEET" type="text/css" href="advwin4.css">
<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch10d.htm">[Previous]</A> <A HREF="ch11a.htm">[Next]</A><P>

<A NAME="150"><h1>Implementing a <i>WaitForMultipleExpressions</i> Function</h1></A>
<p>A while ago, I was developing an application and I needed to solve a
complex thread synchronization problem. The <i>WaitForMultipleObjects</i> 
function, which allows a thread to wait for
a single object or for all objects, was insufficient for my needs. What
I wanted was a function that allowed me to express a richer waiting
criteria. I had three kernel objects: a process, a semaphore, and an
event. I needed a way to have my thread wait until the process and
semaphore were both signaled or until the process and event were both
signaled.</p>

<p>With a little creative use of the existing Windows functions, I created
exactly the function I needed: <i>WaitForMultipleExpressions</i>. It
has the following prototype:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<PRE>
DWORD燱INAPI燱aitForMultipleExpressions(
牋燚WORD爊ExpObjects,
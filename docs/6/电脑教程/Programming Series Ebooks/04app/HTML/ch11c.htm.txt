<HTML>
<HEAD>
<TITLE>Scenario 2: Call Functions at Timed Intervals</TITLE>
<link rel="STYLESHEET" type="text/css" href="advwin4.css">
<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch11b.htm">[Previous]</A> <A HREF="ch11d.htm">[Next]</A><P>

<A NAME="154"><H1>Scenario 2: Call Functions at Timed Intervals</H1></A>

<p>Sometimes applications need to perform certain tasks at certain
times. Windows offers a waitable timer kernel object that makes it easy
to get a time-based notification. Many programmers create a waitable
timer object for each time-based task that the application will
perform, but this is unnecessary and wastes system resources. Instead,
you can create a single waitable timer, set it to the next due time,
and then reset the timer for the next time, and so on. However, the
code to accomplish this is tricky to write. Fortunately, you can let
the new thread pool functions manage this for you.</p>

<p>To schedule a work item to be executed at a certain time, you first
create a timer queue by calling this function:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<PRE>
HANDLE燙reateTimerQueue();
</pre></td></tr></table></p>

<p>A timer queue organizes a set of timers. For example, imagine a
single executable file that hosts several services. Each service might
require timers to fire to help it maintain its state, such as when a
client is no longer responding, when to gather and update some
statistical information, and so on. It is inefficient to have a
waitable timer and dedicated thread for each service. Instead, each
service can have its own timer queue (a lightweight resource) and share
the timer component's thread and waitable timer object. When a
service terminates, it can simply delete its timer queue, which deletes
all the timers created within it.</p>

<p>Once you have a timer queue, you can create timers in it as
follows:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<PRE>
BOOL燙reateTimerQueueTimer(
牋燩HANDLE爌hNewTimer,
<HTML>
<HEAD>
<TITLE>Injecting Code with a Memory-Mapped File on Windows 98 </TITLE>
<link rel="STYLESHEET" type="text/css" href="advwin4.css">
<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch22g.htm">[Previous]</A> <A HREF="ch22i.htm">[Next]</A><P>

<A NAME="295"><H1>Injecting Code with a Memory-Mapped File on Windows 98 </H1></A>

<p>Injecting your own code on Windows 98 is actually trivial. All
32-bit Windows applications running on Windows 98 share the same top 2
GB of address space. If you allocate some storage up there, that
storage is available in every process's address space. To allocate
storage above 2 GB, you simply use memory-mapped files (discussed in
<A HREF="ch17a.htm">Chapter 17</A>). You create a memory-mapped file and then call <i>
MapViewOfFile</i> to make it visible. Then you populate that area of
your address space (which is the same area in all process's address
space). You probably have to resort to hand-coded machine language to
make this work, which makes the solution difficult to port to other CPU
platforms. But if you're doing this, you probably don't care
about different CPU platforms since Windows 98 only runs on <i>x</i>86
anyway.</p>
 
<p>What makes this technique difficult is that you still have to get a
thread in the other process to execute the code in the memory-mapped
file. To do this, you need some way to control the thread in the remote
process. <i>CreateRemoteThread</i> would work nicely, but Windows 98
doesn't support it. Unfortunately, I have no solution to offer you
here.</p>

</BODY>
</HTML>







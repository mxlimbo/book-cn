<html>
<head>
<title>Chapter 17 -- Memory-Mapped Files</title>
<link rel="STYLESHEET" type="text/css" href="advwin4.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<BODY bgcolor="#ffffff" text="#000000">
<A HREF="ch16a.htm">[Previous]</A> <A HREF="ch17b.htm">[Next]</A><P>

<p><font size="+3">Chapter 17</font></p>

<A NAME="208"><H1>Memory-Mapped Files</H1></A>

<p>Working with files is something almost every application must do,
and it's always a hassle. Should your application open the file,
read it, and close the file, or should it open the file and use a
buffering algorithm to read from and write to different portions of the
file? Microsoft Windows offers the best of both worlds: memory-mapped
files.</p>

<p>Like virtual memory, memory-mapped files allow you to reserve a
region of address space and commit physical storage to the region. The
difference is that the physical storage comes from a file that is
already on the disk instead of the system's paging file. Once the
file has been mapped, you can access it as if the whole file were
loaded in memory.</p>

<p>Memory-mapped files are used for three different purposes:</p>

<ul>
<p><li>The system uses memory-mapped files to load and execute .exe and
DLL files. This greatly conserves both paging file space and the time
required for an application to begin executing.</li></p>

<p><li>You can use memory-mapped files to access a data file on disk.
This shelters you from performing file I/O operations on the file and
from buffering the file's contents.</li></p>

<p><li>You can use memory-mapped files to allow multiple processes
running on the same machine to share data with each other. Windows does
offer other methods for communicating data among processes&#8212;but
these other methods are implemented using memory-mapped files, making
memory-mapped files the most efficient way for multiple processes on a
single machine to communicate with one another.</li></p>
</ul>

<p>In this chapter, we will examine each of these uses for
memory-mapped files.</p>

</BODY>
</HTML>







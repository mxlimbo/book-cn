<HTML>
<HEAD>
<TITLE>Address Windowing  Extensions (Windows 2000 only) </TITLE>
<link rel="STYLESHEET" type="text/css" href="advwin4.css">
<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch15h.htm">[Previous]</A> <A HREF="ch16a.htm">[Next]</A><P>

<A NAME="202"><H1>Address Windowing  Extensions (Windows 2000 only) </H1></A>

<p>As days go by, applications require more and more memory. This is especially true of server applications: As an increasing number of clients make requests of the server, the server's performance diminishes. To improve performance, the server application needs to keep more of its data in RAM and reduce disk paging. Other classes of applications&#8212;such as database, engineering, and scientific&#8212;also require the ability to manipulate large blocks of storage. For all these applications, a 32-bit address space is just not enough room.</p>
 
<p>To help these applications, Windows 2000 offers a new feature called Address Windowing Extensions (AWE). Microsoft had two goals when creating AWE:</p>

<ul>
<p><li> Allow applications to allocate RAM that is never swapped by the operating system to or from disk.</li></p>

<p><li> Allow an application to access more RAM than fits within the process's address space.</li></p>
</ul>

<p>Basically, AWE provides a way for an application to allocate one or more blocks of RAM. When allocated, these blocks are not visible in the process's address space. Then, the application reserves a region of address space (using <i>VirtualAlloc</i>), which becomes the address window. The application then calls a function that assigns one RAM block at a time to the address window. Assigning a RAM block to the address window is extremely fast (usually on the order of a few milliseconds).</p>
 
<p>Obviously only one RAM block at a time can be accessed via a single address window. This makes your code more difficult to implement since you must explicitly call functions within your code to assign different RAM blocks to the address window as you need them.</p>

<p>The code below shows how to use AWE:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<PRE>
//燜irst,爎eserve燼
<HTML>
<HEAD>
<TITLE>Understanding Exception Filters and Exception Handlers by Example</TITLE>
<link rel="STYLESHEET" type="text/css" href="advwin4.css">
<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch24a.htm">[Previous]</A> <A HREF="ch24c.htm">[Next]</A><P>

<A NAME="317"><H1>Understanding Exception Filters and Exception Handlers by Example</H1></A>

<p>Unlike termination handlers (discussed in the previous chapter),
exception filters and exception handlers are executed directly by the
operating system&#8212;the compiler has little to do with evaluating
exception filters or executing exception handlers. The next several
sections illustrate the normal execution of <i>try-except</i> blocks,
explain how and why the operating system evaluates exception filters,
and show the circumstances under which the operating system executes
the code inside an exception handler.</p>

<A NAME="318"><H2><i>Funcmeister1</i></H2></A>

<p>Here's a more concrete coding example of a <i>try-except</i>
block:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<PRE>
DWORD Funcmeister1() {
   DWORD dwTemp;

   // 1. Do any processing here.

   <img src="images/grayvellip.JPG" width=3 height=13 border="0">

   _ _try { 
      // 2. Perform some operation.
      dwTemp = 0;
   }
   _ _except (EXCEPTION_EXECUTE_HANDLER) {
      // Handle an exception; this never executes.

   <img src="images/grayvellip.JPG" width=3 height=13 border="0">

   }

   // 3. Continue processing.
   return(dwTemp);
}
</pre></td></tr></table></p>

<p>In the <i>Funcmeister1</i> <i>try</i> block, we simply move a 0 into
the <i>dwTemp</i> variable. This operation will never cause an
exception to be raised, so the code inside the <i>except</i> block will
never execute. Note this difference from <i>try-finally</i> behavior.
After <i>dwTemp</i> is set to 0, the next instruction to execute is the
<i>return</i> statement.</p> 

<p>Although <i>return</i>, <i>goto</i>, <i>continue</i>, and <i>break</i>
statements are strongly discouraged in the <i>try</i> block of a
termination handler, no speed or code-size penalty is associated with
using these statements inside the <i>try</i> block of an exception
handler. Such a statement in the <i>try</i> block associated with an
<i>except</i> block won't incur the overhead of a local unwind.</p>

<A NAME="319"><H2><i>Funcmeister2</i></H2></A>

<p>Let's modify the function and see what happens:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<PRE>
DWORD Funcmeister2() {
   DWORD dwTemp = 0;

   // 1. Do any processing here.

   <img src="images/grayvellip.JPG" width=3 height=13 border="0">

   _ _try { 
      // 2. Perform some operation(s).
      dwTemp = 5 / dwTemp;     // Generates an exception
      dwTemp += 10;            // Never executes
   }
   _ _except ( /* 3. Evaluate filter. */ EXCEPTION_EXECUTE_HANDLER) {
      // 4. Handle an exception.

      MessageBeep(0);

      <img src="images/grayvellip.JPG" width=3 height=13 border="0">

    }

   // 5. Continue processing.
   return(dwTemp);
}
</pre></td></tr></table></p>

<p>In <i>Funcmeister2</i>, an instruction inside the <i>try</i> block
calls for the attempt to divide 5 by 0. The CPU will catch this event
and raise a hardware exception. When this exception is raised, the
system will locate the beginning of the <i>except</i> block and
evaluate the exception filter expression, an expression that must
evaluate to one of the following three identifiers as defined in the
Windows' Excpt.h file.</p>
 
<p>
<table cellpadding="5" width="95%"> 
<tr>
<th>Identifier</th>
<th>Defined As</th>
</tr>
<tr> 
<td valign="top">EXCEPTION_EXECUTE_HANDLER</td>
<td valign="top"> 1</td>
</tr>
<tr>
<td valign="top">EXCEPTION_CONTINUE_SEARCH</td>
<td valign="top"> 0</td> 
</tr>
<tr>
<td valign="top">EXCEPTION_CONTINUE_EXECUTION</td>
<td valign="top">-1</td>
</tr>
</table>
</p>

<p>In the next few sections, we'll discuss how each of these
identifiers alters the thread's execution. While reading these
sections, you can refer to Figure 24-1, which summarizes how the system
processes an exception.</p>

<p>
<A HREF="javascript:fullSize('F24SI01x.htm')"> <img src="images/F24SI01.JPG" width=404 height=576 border=0 ALT="Click to view at full size."> </A>
</p><p>
<!-- CAPTION --><b>Figure 24-1.</b> <i>How the system processes an exception</i><!-- /CAPTION -->
</p>

</BODY>
</HTML>







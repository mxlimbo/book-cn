<HTML>
<HEAD>
<TITLE>How Windows Handle ANSI/Unicode Characters and Strings</TITLE>
<link rel="STYLESHEET" type="text/css" href="advwin4.css">
<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch26f.htm">[Previous]</A> <A HREF="ch27a.htm">[Next]</A><P>

<A NAME="358"><H1>How Windows Handle ANSI/Unicode Characters and Strings</H1></A>

<p><div class="note"><blockquote><b>Windows 98</b><hr>
Windows 98 only supports ANSI window classes and ANSI window procedures.
</blockquote></div></p>

<p>When you register a new window class, you must tell the system the address of
the window procedure responsible for processing messages for this class. For
certain messages (such as WM_SETTEXT), the <i>lParam</i> parameter for the
message is a pointer to a string. The system needs to know whether the window
procedure requires that the string be in ANSI or Unicode before dispatching
the message so that the message will be processed correctly.</p>

<p>You tell the system whether a window procedure expects ANSI strings or
Unicode strings depending on which function you use to register the window
class. If you construct the WNDCLASS structure and call <i>RegisterClassA</i>, the
system thinks that the window procedure expects all strings and characters to
be ANSI. Registering the window class with <i>RegisterClassW</i> causes the system
to dispatch only Unicode strings and characters to the window procedure. Of
course, the macro <i>RegisterClass</i> expands to either <i>RegisterClassA</i> or 
<i>RegisterClassW</i>, depending on whether UNICODE is defined when you compile the
source module.</p>

<p>If you have a handle to a window, you can determine what type of characters
and strings the window procedure expects by calling</p>

<p><table cellpadding=5><tr><td><PRE>
BOOL營sWindowUnicode(HWND爃wnd);
</pre></td></tr></table></p>

<p>If the window procedure for the specified window expects Unicode, the
function returns TRUE; otherwise, FALSE is returned.</p>

<p>If you create an ANSI string and send a WM_SETTEXT message to a
window whose window procedure expects Unicode strings, the system will
automatically convert the string for you before sending the message. You抣l rarely
need to call the <i>IsWindowUnicode</i> function.</p>

<p>The system will also perform automatic translations if you subclass a window
procedure. Let抯 say that the window procedure for an edit control expects
its characters and strings to be in Unicode. Then somewhere in your program
you create an edit control and subclass the window抯 procedure by calling</p>

<p><table cellpadding=5 width="95%"><tr><td><PRE>
LONG_PTR燬etWindowLongPtrA(
牋燞WND爃wnd,
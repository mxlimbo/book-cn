<HTML>
<HEAD>
<TITLE>Scenario 1: Call Functions Asynchronously</TITLE>
<link rel="STYLESHEET" type="text/css" href="advwin4.css">
<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch11a.htm">[Previous]</A> <A HREF="ch11c.htm">[Next]</A><P>

<A NAME="153"><H1>Scenario 1: Call Functions Asynchronously</H1></A>

<p>Let's say that you have a server process with a main thread that
waits for a client's request. When the main thread receives this
request, it spawns a separate thread for handling the request. This
allows your application's main thread to cycle and wait for another
client's request. This scenario is a typical implementation of a
client/server application. It's already straightforward enough to
implement, but you can also implement it using the new thread pool
functions.</p>

<p>When the server process's main thread receives the client's
request, it can call this function:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<PRE>
BOOL燪ueueUserWorkItem(
牋燩THREAD_START_ROUTINE爌fnCallback,
牋燩VOID爌vContext,
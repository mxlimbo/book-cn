<HTML>
<HEAD>
<TITLE>A Handy Thread Synchronization Object Chart</TITLE>
<link rel="STYLESHEET" type="text/css" href="advwin4.css">
<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch09g.htm">[Previous]</A> <A HREF="ch09i.htm">[Next]</A><P>

<A NAME="136"><H1>A Handy Thread Synchronization Object Chart</H1></A>

<p>The following chart summarizes how the various kernel objects behave
with respect to thread synchronization.</p>

<P>
	<TABLE CELLPADDING=5 WIDTH="95%">
		<TR>
			<TH>Object</TH>
			<TH>When Nonsignaled</TH>
			<TH>When Signaled</TH>
			<TH>Successful Wait Side Effect</TH>
		</TR>
		
		<TR>
			<TD VALIGN="TOP">Process</TD>
			<TD VALIGN="TOP">While process is still active</TD>
			<TD VALIGN="TOP">When process terminates (<i>ExitProcess</i>, 
<i>TerminateProcess</i>)</TD>
			<TD VALIGN="TOP">None</TD>		
		</TR>		
		
		<TR>
			<TD VALIGN="TOP">Thread</TD>
			<TD VALIGN="TOP">While thread is still active</TD>
			<TD VALIGN="TOP">When thread terminates (<i>ExitThread</i>, 
			<i>TerminateThread</i>)</TD>
			<TD VALIGN="TOP">None</TD>		
		</TR>		
		
		<TR>
			<TD VALIGN="TOP">Job</TD>
			<TD VALIGN="TOP">When job's time has not expired</TD>
			<TD VALIGN="TOP">When job time expires</TD>
			<TD VALIGN="TOP">None</TD>		
		</TR>		
		
		<TR>
			<TD VALIGN="TOP">File</TD>
			<TD VALIGN="TOP">When I/O request is pending</TD>
			<TD VALIGN="TOP">When I/O request completes</TD>
			<TD VALIGN="TOP">None</TD>		
		</TR>		
		
		<TR>
			<TD VALIGN="TOP">Console input</TD>
			<TD VALIGN="TOP">No input exists</TD>
			<TD VALIGN="TOP">When input is available</TD>
			<TD VALIGN="TOP">None</TD>		
		</TR>		
		
		<TR>
			<TD VALIGN="TOP">File change notifications</TD>
			<TD VALIGN="TOP">No files have changed</TD>
			<TD VALIGN="TOP">When file system detects changes</TD>
			<TD VALIGN="TOP">Resets notification</TD>		
		</TR>		
		
		<TR>
			<TD VALIGN="TOP">Auto-reset event</TD>
			<TD VALIGN="TOP"><i>ResetEvent</i>, <i>PulseEvent</i>, 
or successful wait</TD>
			<TD VALIGN="TOP">When <i>SetEvent/PulseEvent</i> is called</TD>
			<TD VALIGN="TOP">Resets event</TD>		
		</TR>		
		
		<TR>
			<TD VALIGN="TOP">Manual-reset event</TD>
			<TD VALIGN="TOP"> <i>ResetEvent</i> or <i>PulseEvent</i></TD>
			<TD VALIGN="TOP"> When <i>SetEvent/PulseEvent</i> is called</TD>
			<TD VALIGN="TOP">None</TD>		
		</TR>		
		
		<TR>
			<TD VALIGN="TOP">Auto-reset waitable timer</TD>
			<TD VALIGN="TOP"><i>CancelWaitableTimer</i> or successful wait</TD>
			<TD VALIGN="TOP">When time comes due (<i>SetWaitableTimer</i>)</TD>
			<TD VALIGN="TOP">Resets timer</TD>		
		</TR>		
		
		<TR>
			<TD VALIGN="TOP">Manual-reset waitable timer</TD>
			<TD VALIGN="TOP"><i>CancelWaitableTimer</i></TD>
			<TD VALIGN="TOP">When time comes due (<i>SetWaitableTimer</i>)</TD>
			<TD VALIGN="TOP">None</TD>
		</TR>		
		
		<TR>
			<TD VALIGN="TOP">Semaphore</TD>
			<TD VALIGN="TOP">Successful wait</TD>
			<TD VALIGN="TOP">When count &gt; 0 (<i>ReleaseSemaphore</i>)</TD>
			<TD VALIGN="TOP">Decrements count by 1</TD>
		</TR>		
		
		<TR>
			<TD VALIGN="TOP">Mutex</TD>
			<TD VALIGN="TOP">Successful wait</TD>
			<TD VALIGN="TOP">When unowned by a thread (<i>ReleaseMutex</i>)</TD>
			<TD VALIGN="TOP">Gives ownership to thread</TD>
		</TR>		
		
		<TR>
			<TD VALIGN="TOP">Critical section (user-mode)</TD>
			<TD VALIGN="TOP">Successful wait (<i>(Try)EnterCriticalSection</i>)</TD>
			<TD VALIGN="TOP">When unowned by a thread (<i>LeaveCriticalSection</i>)</TD>
			<TD VALIGN="TOP">Gives ownership to thread</TD>
		</TR>
		
	</TABLE>
</P>
   
<p>Interlocked (user-mode) functions never cause a thread to be
unschedulable; they alter a value and return immediately.</p>


</BODY>
</HTML>







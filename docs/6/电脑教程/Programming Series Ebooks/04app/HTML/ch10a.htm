<html>
<head>
<title>Chapter 10 -- Thread Synchronization Toolkit</title>
<link rel="STYLESHEET" type="text/css" href="advwin4.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<BODY bgcolor="#ffffff" text="#000000">
<A HREF="ch09i.htm">[Previous]</A> <A HREF="ch10b.htm">[Next]</A><P>


<font size="+3">Chapter 10</font>
<A NAME="143"><H1>Thread Synchronization Toolkit</H1></A>

<p>Over the years, I've done a lot of work with thread synchronization and have 
written some C++ classes and components that I'll share with you in this chapter. 
I hope you'll find this code useful and that it will save you a lot of development 
time. At the very least, I hope that you learn something from what I offer here.</p>

<p>I'll begin the chapter by showing you how to implement a critical section and 
add features to it. In particular, you'll learn how to use a critical section in 
multiple processes. Then you'll learn how to wrap your own datatypes in a C++ class so 
that the objects are thread-safe. Using these classes, I'll also present an object 
that behaves opposite of a semaphore.</p>

<p>Next, we'll look at how to solve a common programming problem&#8212;when you have 
multiple threads reading a resource and only one thread writing to a resource. Windows 
has no built-in primitive that makes this type of synchronization easy, so I wrote a 
C++ class to do this.</p>

<p>Finally, I'll show you how to implement my <i>WaitForMultipleExpressions</i> function, which lets you create complex expressions to indicate when a thread should wake. (It works much like the <i>WaitForMultipleObjects</i> function, which lets you wait for any single object to be signaled or for all objects to be signaled.)</p>

</BODY>
</HTML>







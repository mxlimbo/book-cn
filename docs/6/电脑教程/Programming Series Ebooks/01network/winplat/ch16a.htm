<html>
<head>
<title>Chapter 16 -- Remote Access Service Client</title>
<link rel="STYLESHEET" type="text/css" href="Library.css">


</head>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch16PartIIIa.htm" , "ch16b.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>




<font size="+3">Chapter 16</font>

<A NAME="483"><H1>Remote Access Service Client </H1></A>

<p>All Microsoft Windows platforms feature a Remote Access Service (RAS) client, which allows you to connect your computer from a remote location to another computer featuring a remote access server component. Typically, a RAS client will do this by using a modem that connects to a telephone line and calls the remote computer by dialing a telephone number. Because of this, the RAS client is sometimes referred to as a dial-up networking (DUN) client.</p>

<p>On the server side, you must have a service awaiting your DUN connection. A RAS client is capable of establishing a communication link with several types of remote access servers. RAS does this by using industry standard framing protocols, such as the following:</p>

<ul>
<p><li> <b>Point-to-Point Protocol (PPP)</b>  Can transmit the IP, IPX, and NetBEUI communication protocols</li></p>

<p><li> <b>Serial Line Internet Protocol (SLIP)</b>  Can transmit only the IP communication protocol</li></p>

<p><li> <b>Asynchronous NetBEUI (Microsoft Windows NT 3.1, Microsoft Windows for Workgroups 3.11)</b>  Can transmit only the NetBEUI communication protocol</li></p>
</ul>

<p>The framing protocols describe how data is transmitted over a RAS communication link and dictate which network communication protocols (such as TCP/IP or IPX) can communicate over the RAS link. If a RAS server supports one of the framing protocols defined in the previous list, a RAS client can establish a connection. Windows 95, Windows 98, Windows 2000, and Windows NT feature a RAS server component capable of supporting all the framing protocols listed.</p>

<p>Once a connection is established between a RAS client and server, network protocol stacks (depending on the framing protocol used) can communicate over the RAS connection to the remote computer as if the computers were connected over a LAN. Of course, the data communication rate of many modems today is significantly slower than a direct LAN connection.</p>

<p>When a RAS server accepts a dial-up connection, it first establishes communication with your client by negotiating one of the framing protocols in the previous list. Once the framing protocol is established, the RAS server attempts to authenticate the user that is making the connection. The RAS API functions described in this chapter allow a RAS client to specify a user name, a password, and domain logon credentials to the RAS server. When a Windows 2000 or a Windows NT RAS server receives this information, it validates these logon credentials using Windows NT domain security access control. Note that the RAS server does not log your client on to a Windows NT domain; instead, it uses the client credentials to verify that a user is allowed to make a RAS connection. The RAS connection process is not the same as the Windows NT domain logon process. After a RAS connection is successfully established, your computer can log on to a Windows NT domain. This chapter doesn't describe the process of logging on to a domain. On Windows 95 and Windows 98, RAS can automatically log a machine on to a domain after a RAS connection is authenticated through options available in a phonebook entry, as we will discuss later in this chapter.</p>

<p>RAS relies on the Telephony Application Programming Interface (TAPI) to set up and control telephone communication devices such as modems on your computer. TAPI controls the hardware settings of these dialing devices. When you set up a RAS connection using a modem, TAPI turns on the modem and sends dialing information from RAS to the modem. As a result, RAS views modems as simple TAPI modem ports that are capable of dialing and making a phone connection to a remote server. As you will see later in this chapter, some of the RAS API functions refer to TAPI modem ports when you set up RAS connection information.</p>

<p>This chapter will explain how you can programmatically use RAS to establish remote network communication. We will begin by describing the header and library files you need to build your application. Next we will describe the basics of dialing&#8212;how you actually establish a remote connection. We'll then describe how you can set up RAS phonebook entries to define detailed communication properties of a RAS connection. Once we've explained the basics of setting up communication, we'll show you how to manage established connections.</p>

</BODY>
</HTML>





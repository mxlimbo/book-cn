<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="Library.css" TYPE="text/css">
<TITLE>When Do You Really Need Multithreading?</TITLE>


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch07e.htm", "ch08a.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>
<A NAME="114"><H1>When Do You Really Need Multithreading?</H1></A>

<p>An experienced Visual Basic programmer who knows how COM apartments work can use certain techniques to reliably exploit multithreaded behavior. You can use multithreading safely and easily in many situations. In other scenarios, multithreading becomes more difficult and hazardous.

<p>Programmers have always been fascinated by things that are cool and complex. This has compromised their ability to distinguish between necessary features and overpriced luxuries. For inexperienced programmers, threads can fall into the latter category. Think of threads as you think of salt. We need a little bit of it to stay alive, but too much can be harmful. Always consider whether the value that threads add to your application is worth the risk and complexity.

<p>If the costs outweigh the benefits, avoid multithreading altogether. For example, you have seen that creating a secondary thread in a form-based application is extremely difficult. On the other hand, it can be extremely valuable because this technique allows you to run background tasks or execute remote methods without locking down the user interface. However, any programmer who's responsible for writing and maintaining this code has to know exactly how Visual Basic uses apartments. Programming at this level is well beyond the capabilities of all but the most experienced Visual Basic programmers.

<p>The most significant need for multithreading exists in a distributed application that runs as a server-side process. If a distributed application has many connected clients, proper threading support is required to achieve reasonable scalability. To scale up to accommodate hundreds of clients, an application must have very sophisticated threading code. The answer to this problem isn't an ActiveX EXE. Instead, Microsoft provides sophisticated thread management in the MTS run-time environment. You distribute your objects in apartment-threaded DLLs and let MTS manage the thread pooling for you. We'll resume our exploration of this important topic in <a href="ch09a.htm">Chapter 9</a>.

</BODY>
</HTML>








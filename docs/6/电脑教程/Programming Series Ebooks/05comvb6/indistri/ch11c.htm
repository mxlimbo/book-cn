<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="Library.css" TYPE="text/css">
<TITLE>The MSMQ Network</TITLE>


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch11b.htm", "ch11d.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>
<A NAME="163"><H1>The MSMQ Network</H1></A>

<P>Without going into the level of detail that an MSMQ administrator would require, I'll explain how to set up MSMQ in a network environment. You'll learn enough about how MSMQ works in a production environment to get started if you need to set up MSMQ on one or more development workstations. We'll begin with some high-level concepts and general MSMQ terminology.

<P>An <I>MSMQ enterprise</I> is a set of computers that send and receive messages to and from a common set of queues. While it's possible to pass messages across enterprises, this can cause unnecessary problems. So a company should typically configure all of its computers to run within a single MSMQ enterprise.

<P>An enterprise can be divided into <I>MSMQ sites</I>. A site is typically a set of computers in the same physical location. For example, a company with a single MSMQ enterprise can set up sites in London, Boston, and Los Angeles. The communication between computers in a site should be fast and inexpensive. Messages sent between sites must pass across <I>site links</I>. An MSMQ administrator can tune these links to optimize performance.

<P>MSMQ also lets you assign a set of computers to a <I>connected network </I>(CN), a collection of computers that run the same protocol and can therefore communicate directly with one another. When a message is sent between two computers that do not belong to the same CN, the message must be routed through other computers. A computer can be a member of more than one CN. A CN is usually set up to run within a single site, but this isn't a requirement. You can create a CN that spans multiple sites.

<P>The computers that are responsible for managing an MSMQ enterprise maintain administrative information in a distributed database known as the <I>MSMQ Information Store </I>(MQIS). The MQIS holds information such as a list of all the computers in the enterprise and a list of all the public queues. The MQIS is physically stored in one or more SQL Server databases. Complicated enterprises use the replication features of SQL Server to keep the information in each SQL Server database up-to-date.

<P>The first installation of MSMQ in any enterprise must be on a computer that will serve as the <I>primary enterprise controller</I> (PEC). This computer must run both Windows NT Server and SQL Server. It also acts as the controller for its site. When you create another site, you should configure a second computer to act as a <I>primary site controller</I> (PSC). Each PSC uses a SQL Server database to hold a copy of the MQIS. To improve fault tolerance and load balancing, you can configure additional computers to act as <I>backup site controllers </I>(BSCs). A BSC maintains a read-only copy of the MQIS.

<P>You can also configure a computer to run as an <I>MSMQ routing server</I>. A routing server can accept a message from one computer and forward it to its destination queue. You can thus pass messages between computers that aren't in the same CN. For example, if the sending computer is running only the IP protocol and the destination queue is on a computer running only the IPX protocol, the routing server can use its store-and-forward capabilities to get the message to its destination. A routing server also acts as a clearinghouse that stores messages until the computer with the destination queue comes back on line. Every PEC, PSC, and BSC acts as a routing server in addition to its other responsibilities. You can add more routing servers to the network to handle higher volumes of message traffic.

<P>The four types of MSMQ computers that I've described so far are all examples of MSMQ servers. You can also configure a computer running MSMQ to run as an independent client or a dependent client. An independent client, like a server, can manage its own local queues. This is a good choice for remote computers because a sender application can send messages to a local queue when the user isn't connected to the network. Later, when the remote computer establishes a connection to the network, MSMQ will automatically forward the messages to their destination queue.

<P>A dependent client can't maintain queues locally. It must be directly connected to an MSMQ server in order to send and receive messages. A computer that's always connected to MSMQ servers across a LAN is typically the only type of machine that you would run as a dependent client.

<P>Before installing MSMQ, you should consider which version you need. One version of MSMQ is part of the Windows NT Option Pack, and the other version is part of Windows NT Server Enterprise Edition. You can use the option pack version for developing MSMQ applications in a small production environment. The version included with Windows NT Server Enterprise Edition can accommodate many more users and offers more flexibility in terms of installation and intersite routing. Consult the MSMQ documentation for more details.

</BODY>
</HTML>







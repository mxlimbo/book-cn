<HTML>
<HEAD>
<TITLE>The DHTML Edit Control</TITLE>
<LINK REL=STYLESHEET HREF="Library.css" TYPE="text/css">


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch19f.htm", "ch20a.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>


<A NAME="981"><h1>The DHTML Edit Control</h1></A>

<p>
<img src="images/new.jpg" width=102 height=87 border="0">
</p>

<p>Relatively few Visual Basic programmers are aware that Microsoft has made 
publicly available part of the technology on which the DHTMLPage designer is based, in 
the form of a DHTML Edit control. This control can be freely downloaded from 
the Microsoft Web site at <I>http://www.microsoft.com/workshop/author/dhtml/edit
/download.asp</I>. (The site also contains a version that works with earlier versions 
of Internet Explorer.) The control includes all the functionality found in the 
rightmost pane of the DHTMLPage designer and so makes it possible for you to add a 
Dynamic HTML editor to your application.
</p>

<A NAME="982"><h2>Installation</h2></A>

<p>Run the EXE file you've downloaded and select a target installation directory. At 
the end of the unpacking process, you'll find several files, including the complete 
documentation and a few interesting samples. You'll find also some include files, but 
they're of no interest to Visual Basic programmers. (The package includes also a version 
for the C++ language)
</p>

<p>Run the Visual Basic IDE, press the Ctrl+T key to bring up the list of 
installed ActiveX controls, and select the new DHTML Edit Control component. This 
operation adds two new icons to the Toolbox window. Each icon corresponds to a 
different flavor of the control: One is the complete version, the other is marked as 
Safe For Scripting and Safe For Initialization and doesn't permit a few operations, 
for example, saving files. In general, you'll use the former version in your Visual 
Basic applications and the latter one in HTML pages or in DHTML applications that 
run inside a browser.
</p>

<p>To get a feeling of what this control gives you, drop an instance of it on a 
form and run the program. You can type any text in the control's window as if the 
window were a standard TextBox. Unlike a standard TextBox control, however, you 
can format the selected text with bold, italic, and underline attributes (using the 
Ctrl+B, Ctrl+I and Ctrl+U key combinations, respectively). The control supports many 
other operations through shortcut keys:  You can insert a hyperlink by pressing the 
Ctrl+L key combination, increase and decrease paragraph indentation by using the 
Ctrl+T and Ctrl+Shift+T key combinations, and display the Find dialog box by using the 
Ctrl+F key combination. The control supports also multilevel undo and redo features, 
by means of the Ctrl+Z and Ctrl+Y key combinations, and some sophisticated 
drag-and-drop capabilities for moving elements on the page.
</p>

<A NAME="983"><h2>Properties and Methods</h2></A>

<p>The rest of the DHTML Edit control's functionality, however, can be reached 
only through its methods and properties. For example, you can create a new 
document, load an existingHTM file, or save the contents of the control to a file using 
the <I>NewDocument</I>, <I>LoadDocument</I>, and 
<I>SaveDocument </I>methods, respectively. (The 
latter two methods can also display a common dialog box for file selection.). Or you 
can load an HTM file from a URL using the <I>LoadURL 
</I>method, as here:
</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>DHTMLEdit1.LoadURL = &quot;http://www.vb2themax.com/index.htm&quot;
</pre>
</td></tr>
</table></p>


<p>You can also load and save HTML source without using a file, by assigning 
a string to the <I>DocumentHTML </I>property. This property gives you an effective way 
to store and retrieve a formatted document stored in a database field or to build a 
sophisticated DHTML editor that lets you enter plain HTML source code, a feature 
that's missing even in the DHTMLPage designer. As an exercise, you might revise 
the DHTMLEd.vbp project on the companion CD to use the DHTML Edit control 
instead of the WebBrowser control. Just a warning: Using the 
<I>DocumentHTML </I>property raises an error if a document is being loaded, a condition that you can test using the 
<I>Busy </I>property.
</p>

<p>The DHTML Edit control can also work in preview mode, in which you see 
how the page you're building will appear inside a browser. You can switch to and 
from preview mode by setting the <I>BrowserMode 
</I>property to True or False, respectively.
</p>

<p>The DHTML Edit control supports formatting commands in an unusual 
way. Instead of exposing dozens of properties or methods, one for each available 
option, you issue commands through the all-in-one 
<I>ExecCommand </I>method, whose first argument is a constant that tells the method what to do. I counted over 50 
different commands, for changing text attributes, inserting or deleting table cells, 
performing cut-and-paste operations, changing the z-order or the alignment of an element, 
and so on. For example, see how you can change the font size of the current 
selected text:
</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>' The second argument suppresses the default dialog box.
' The third argument is the new font's size.
DHTMLEdit1.ExecCommand DECMD_SETFONTSIZE, OLECMDEXECOPT_DONTPROMPTUSER, fs
</pre>
</td></tr>
</table></p>


<p>The <I>DOM </I>property of the DHTML Edit control returns a reference to the 
Document object of the page hosted in the control. Thanks to this property, you can 
do virtually anything to the document being edited. For example, you can change 
the background color of the HTML page with this code:
</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>DHTMLEdit1.DOM.bgColor = &quot;red&quot;
</pre>
</td></tr>
</table></p>


<p>The DHTML Edit control also exposes several events that let you react to 
actions of the user who's editing the document. The most important event is 
<I>DisplayChange</I>, which fires any time the user selects a new element or simply moves the 
insertion point. You typically react to this event by updating a status bar and the state of 
the buttons on a toolbar. The <I>DocumentComplete 
</I>event fires when the page has been completely loaded and is ready for editing. The 
<I>ShowContextMenu </I>and the <I>ContextMenuAction 
</I>events let you decide what appears when users right-click on 
the control and what happens when they select a menu command.
</p>

<p>I was surprised by how many sample programs are provided with this 
control. VBEdit.vbp is a complete WYSIWYG editor for Dynamic HTML pages, and its 
source code provides a great occasion for you to see how you can exploit the features 
of the DHTML Edit control. (See Figure 19-21.) The VBDom.vbp project shows you 
how to access the Document Object Model of the document hosted in the control. 
Finally, in the Web subdirectory you'll find many examples of HTML pages that host 
the DHTML Edit control.
</p>

<p>
<A HREF="javascript:fullSize('F19ph21x.htm')"> <img src="images/F19ph21.JPG" width=404 height=272 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><B>Figure 19-21.</B> <I>The VBEdit.vbp sample application.</I><!--/caption-->
</p>

<p>This chapter has been a long one, but we had a lot of ground to cover. You've 
seen what HTML and Dynamic HTML are, how you can exploit the power of the 
new HTMLPage designer, and how you can take advantage of RDS and remote 
Automation over the Internet. You're now ready for the final leap: You can build Visual 
Basic applications that run inside a Web server. This topic is covered in the <a href="ch20a.htm">next chapter</a>.
</p>
</BODY>
</HTML>






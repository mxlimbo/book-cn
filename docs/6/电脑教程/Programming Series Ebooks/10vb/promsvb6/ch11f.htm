<HTML>
<HEAD>
<TITLE>The DateTimePicker Control</TITLE>
<LINK REL=STYLESHEET HREF="Library.css" TYPE="text/css">


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch11e.htm", "ch11g.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>


<A NAME="495"><h1>The DateTimePicker Control</h1></A>
<p>
<img src="images/new.jpg" width=102 height=87 border=0>
</p>

<p>The DateTimePicker control is a text box especially designed for Date or Time 
values. The text box is subdivided into subfields, one for each individual 
component (day, month, year, hour, minute, and second). This control supports all the usual 
date and time formats (including a custom format) and the ability to return a Null 
value (if the user doesn't want to select a particular date). You can even define your 
own custom subfields.</p>

<p>At run time, end users can advance through subfields using the Left and 
Right arrow keys and can increment and decrement their values using the Up and 
Down arrow keys. They can display a drop-down calendar (if the 
<I>UpDown</I> property is set to False) or modify the current value of the highlighted component using the 
companion spin buttons (if the value of <I>UpDown 
</I>is True).</p>

<A NAME="496"><h2>Setting Design-Time Properties</h2></A>
<p>By default, a Down arrow appears to the right of the control, much like a 
regular ComboBox control: A click on the arrow drops down a calendar, which lets 
users select a date without typing any keys. If you set the 
<I>UpDown </I>property to True, however, the Down arrow is replaced by a pair of spin buttons, which let users 
increment or decrement the value of individual subfields using only the mouse.</p>

<p>The <I>CheckBox </I>property, if True, displays a check box near the left border 
of the control: Users can deselect this check box if they don't intend to actually 
select any dates. (See Figure 11-7.)</p>

<p>The DateTimePicker control shares a few properties with the MonthView 
control. For example, it exposes a <I>Value </I>property, which returns the Date value 
entered by the end user, and the <I>MinDate </I>and 
<I>MaxDate </I>properties, which define the interval of valid dates.</p>

<p>The drop-down calendar is nothing but a MonthView control that can show 
only one month at a time. Thus, the DateTimePicker control also exposes all the 
color properties of the MonthView control, even though each now has a different 
name: <I>CalendarForeColor</I>, 
<I>CalendarBackColor</I>, 
<I>CalendarTitleForeColor</I>, 
<I>CalendarTitleBackColor</I>, and 
<I>CalendarTrailingForeColor</I>. Oddly, the control doesn't expose the 
standard <I>ForeColor </I>and <I>BackColor </I>properties, so while you can modify the 
appearance of the drop-down calendar, you can't programmatically change the default colors 
of the edit portion of the control!</p>

<p>The <I>Format </I>property affects what's displayed in the control and can be one 
of the following values: 0-dtpLongDate, 1-dtpShortDate, 2-dtpTime, or 3-dtpCustom. 
If you select a custom format, you can assign a suitable string to the 
<I>CustomFormat </I>property. This property accepts the same formatting strings that you would pass 
to a <I>Format </I>function that works with date or time values. You can use this string:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>
'Date is' dddd MMM d, yyy
</pre>
</td></tr>
</table></p>

<p>to display a value such as</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>
Date is Friday Nov 5, 1999
</pre>
</td></tr>
</table></p>

<p>As you see, you can include literal strings by enclosing them within 
single quotation marks. As I'll explain in a moment, the 
<I>CustomFormat </I>property can be used to create custom subfields too.</p>

<p>
<A HREF="javascript:fullSize('F11ph07x.htm')"> <img src="images/F11ph07.JPG" width=404 height=299 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><B>Figure 11-7.</B> <i>Different styles of the DateTimePicker control.</i><!--/caption-->
</p>

<p>The DateTimePicker control can be bound to a data source, so it 
exposes the usual <I>DataSource</I>, 
<I>DataMember</I>, <I>DataField</I>, and <I>DataFormat 
</I>properties. The <I>DataFormat</I> property isn't supported when the control is bound to a standard 
Data or RemoteData control, but in either case you can modify the format of the 
displayed value using the <I>Format </I>and <I>CustomFormat 
</I>properties.</p>

<A NAME="497"><h2>Run-Time Operations</h2></A>
<p>At run time, you set and retrieve the contents in the DateTimePicker control 
through the <I>Value </I>property or by means of the 
<I>Year</I>, <I>Month</I>, <I>Day</I>, 
<I>DayOfWeek</I>, <I>Hour</I>, <I>Minute</I>, and 
<I>Second </I>properties. For example, you can programmatically increment the 
month portion of a date displayed in a DateTimePicker control with the following statements:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>
DTPicker1.Month = (DTPicker1.Month Mod 12) + 1
If DTPicker1.Month = 1 Then DTPicker1.Year = DTPicker1.Year + 1
</pre>
</td></tr>
</table></p>

<p>If <I>CheckBox </I>is True and the user has deselected the check box, all 
date-related properties return Null.</p>

<p>The DateTimePicker control exposes many of the events supported by a 
standard TextBox control, including <I>Change</I>, 
<I>KeyDown</I>, <I>KeyPress</I>, <I>KeyUp</I>, 
<I>MouseDown</I>, <I>MouseMove</I>, <I>MouseUp</I>, 
<I>Click</I>, and <I>DblClick</I>. All keyboard and mouse events refer 
to the edit portion of the control and so don't fire when a calendar has been 
dropped down.</p>

<p>When the user clicks on the Down arrow, a <I>DropDown 
</I>event fires just before the drop-down calendar actually appears&#8212;that is, if the 
<I>UpDown</I> property is False (the default value). When the user selects a date in the drop-down calendar, a 
<I>CloseUp </I>event fires. These events aren't particularly useful, however, because you don't have 
much control over the calendar itself, apart from the colors it uses. When the user selects 
a date in the drop-down calendar, the <I>Change 
</I>event fires before the <I>CloseUp </I>event.</p>

<p><div class="caution"><blockquote>
<b>CAUTION</b><hr>
Because of a bug in the DateTimePicker control, you can't 
assign both the <I>MinDate </I>and <I>MaxDate </I>properties at run time. When you assign 
either one, the other is assigned the date 12/31/1999. The reason for this odd 
behavior and a possible workaround are explained in article Q198880 of 
Microsoft Knowledge Base.
</blockquote></div></p>

<A NAME="498"><h3>Managing callback fields</h3></A>
<p>The most intriguing feature of the DateTimePicker control is the capability to 
define custom subfields, also known as <I>callback 
fields</I>. To define a callback field, you use a string of one or more 
<I>X</I> characters in the value assigned to the 
<I>CustomFormat </I>property. You can define multiple callback fields by using strings with 
different numbers of <I>X</I>s. For example, the following format defines a date field with two 
callback fields:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>
DTPicker1.CustomFormat = &quot;MMM d, yyy '(week 'XX')' XXX&quot;
</pre>
</td></tr>
</table></p>

<p>In the code sample that follows, the <I>XX </I>field is defined as the number of 
weeks since January 1, and the <I>XXX </I>field is the name of the holiday, if any, that occurs 
on the displayed date.</p>

<p>When you define a callback field, you're in charge of defining its 
maximum length, its current value, and its behavior (that is, what happens if the user 
presses a key when the caret is on it). You establish the maximum size of a callback field 
in the <I>FormatSize </I>custom event, which fires once for each callback field. If you 
have multiple fields, you must prepare a <I>Select Case 
</I>structure, as in the following code:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>
Private Sub DTPicker1_FormatSize(ByVal CallbackField As String, _
    Size As Integer)
    Select Case CallbackField
        Case &quot;XX&quot;
            ' The number of weeks since January 1st (max 2 digits)
            Size = 2
        Case &quot;XXX&quot;
            ' The name of a holiday, if any
            Size = 16
    End Select
End Sub
</pre>
</td></tr>
</table></p>

<p>When the DateTimePicker control is about to display a date, it raises a 
<I>Format </I>event for each callback field. You return the value of the callback field in 
the <I>FormattedString </I>parameter:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>
Private Sub DTPicker1_Format(ByVal CallbackField As String, _
    FormattedString As String)
    Select Case CallbackField
        Case &quot;XX&quot;
            ' The number of weeks since January 1st (max 2 digits)
            FormattedString = DateDiff(&quot;ww&quot;, _
                DateSerial(DTPicker1.Year, 1, 1), DTPicker1.Value)
        Case &quot;XXX&quot;
            ' The name of a holiday, if any
            If DTPicker1.Month = 12 And DTPicker1.Day = 25 Then
                FormattedString = &quot;Christmas&quot;
            Else
                ' Deal here with other holidays.
            End If
    End Select
End Sub
</pre>
</td></tr>
</table></p>

<p>You can process all the keys pressed when the caret is on a callback field 
by writing code in the <I>CallbackKeyDown </I>event procedure. This event receives 
information about the key being pressed, the state of shift keys, and the name of the 
callback field. Typically, you process the key by assigning a new Date value to 
the <I>CallbackDate </I>parameter:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>
Private Sub DTPicker1_CallbackKeyDown(ByVal KeyCode As Integer, _
    ByVal Shift As Integer, ByVal CallbackField As String, _
    CallbackDate As Date)
    If CallbackField = &quot;XX&quot; Then
        ' Move to the previous/next week when the Up/Down key is pressed.
        If KeyCode = vbKeyUp Then
            CallbackDate = DTPicker1.Value + 7
        ElseIf KeyCode = vbKeyDown Then
            CallbackDate = DTPicker1.Value - 7
        End If
    Else
        ' No keyboard support for the Holiday field
    End If
End Sub
</pre>
</td></tr>
</table></p>

</BODY>
</HTML>






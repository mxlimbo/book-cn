<HTML>
<HEAD>
<TITLE>The UpDown Control</TITLE>
<LINK REL=STYLESHEET HREF="Library.css" TYPE="text/css">


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch11b.htm", "ch11d.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>


<A NAME="483"><h1>The UpDown Control</h1></A>
<p>The UpDown control offers a simple but effective way to create those spin 
buttons that many Windows applications display to the right of numeric fields and that 
let users increment or decrement a field's value using mouse clicks. While it's a 
trivial matter to create such spin buttons yourself&#8212;using a tiny VScrollBar control, for 
example, or using two smaller buttons with <I>Style 
</I>= 1-Graphical&#8212;the UpDown control offers many advantages and is far easier to set up and use than any other solution.</p>

<p>The most intriguing characteristic of the UpDown control is that you can 
link it to another control&#8212;its <I>buddy 
control&#8212;</I>at design time, and you can even 
select which particular property of the buddy control is affected by the UpDown 
control. Add to this the ability to set the scrolling range and the increment, and you see 
that in most cases you don't even need to write code to make everything work as expected.</p>

<A NAME="484"><h2>Setting Design-Time Properties</h2></A>
<p>In the General tab of an UpDown control, you typically set the 
<I>Alignment </I>property, which determines where the UpDown control has to align with respect 
to its buddy control. (The values are 0-cc2AlignmentLeft and 
1-cc2AlignmentRight.) In this tab, you also set the 
<I>Orientation</I> property (0-cc2OrientationVertical 
or 1cc2OrientationHorizontal). The 
<I>Orientation</I> property can be set only at design 
time and is read-only at run time.</p>

<p>You select the buddy control in the Buddy tab of the Property Pages dialog 
box. (See Figure 11-2.) You can either type the control's name 
in the first field or tick the <I>AutoBuddy </I>check box. In the latter case, the UpDown 
control automatically selects the previous control in the TabIndex sequence as its 
buddy control. After you've selected a buddy control, two other fields on the Property 
Pages dialog box become available. In the BuddyProperty combo box, you 
select which property of the buddy control is affected by the UpDown control. (If you don't 
select any, the buddy control's default property is 
used.) You can set the <I>SyncBuddy </I>property to True, which causes the UpDown control to automatically modify 
the selected property in its buddy control.</p>

<p>You usually select a TextBox control as the buddy control of an UpDown 
control and <I>Text </I>as the buddy property. But nothing prevents you from connecting 
an UpDown control to other properties (for example, 
<I>Left </I>or <I>Width</I>) exposed by other 
types of controls. You can't use lightweight windowless controls as buddy controls, however.</p>

<p>
<A HREF="javascript:fullSize('F11ph02x.htm')"> <img src="images/F11ph02.JPG" width=404 height=293 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><B>Figure 11-2.</B> <i>The Buddy tab of the Property Pages dialog box of an UpDown control lets you select the buddy control and the buddy property.</i><!--/caption-->
</p>

<p>Finally, in the Scrolling tab of the Property Pages dialog box, you select 
the UpDown control's <I>Min </I>and <I>Max </I>properties, which identify the valid range for 
the <I>Value </I>property. The <I>Increment </I>property is the value that's added to or subtracted 
from the <I>Value </I>property when the user clicks on the UpDown control's spin buttons. 
If the <I>Wrap </I>property is set to True, the 
<I>Value </I>property wraps when it reaches the 
<I>Min </I>or <I>Max </I>value.</p>

<A NAME="485"><h2>Run-Time Operations</h2></A>
<p>If the UpDown control's <I>SyncBuddy </I>property is set to True, you don't need to 
write any code to manually change the property in the buddy control. There are 
cases, however, when you can't rely on this simple mechanism. For example, the 
UpDown control might have no buddy controls or perhaps it's supposed to affect 
multiple controls or multiple properties of the same control. (For example, you might 
need to enlarge or shrink another control by affecting its 
<I>Width </I>and <I>Height </I>properties at the same time.) In such cases, all you have to do is write code inside the 
<I>Change </I>event procedure, as you would do for a scroll bar control.</p>

<p>The UpDown control exposes two custom events that give you even more 
flexibility: The <I>DownClick </I>and <I>UpClick 
</I>events, which fire when the mouse is released 
(that is, after the <I>Change </I>event) on either one of the buttons that make up the 
UpDown control. These events fire even if the <I>Value 
</I>property has already reached its <I>Min </I>or 
<I>Max</I>, which makes <I>DownClick </I>and 
<I>UpClick</I> events useful<I> </I>when you don't want 
to enforce a limit to the range of valid values:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>
' Move all controls on the form pixel by pixel.
Private Sub UpDown1_DownClick()
    Dim ctrl As Control
    For Each ctrl In Controls
        ctrl.Top = ctrl.Top + ScaleY(1, vbPixels, vbTwips)
    Next
End Sub
Private Sub UpDown1_UpClick()
    Dim ctrl As Control
    For Each ctrl In Controls
        ctrl.Top = ctrl.Top - ScaleY(1, vbPixels, vbTwips)
    Next
End Sub
</pre>
</td></tr>
</table></p>

<p>All the properties that you set at design time can also be modified at run 
time through code, with the exception of the <I>Orientation 
</I>property. For example, you can change the buddy control and the buddy property using this code:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>
Set UpDown1.BuddyControl = Text2
UpDown1.BuddyProperty = &quot;Text&quot;
</pre>
</td></tr>
</table></p>

<p>The <I>BuddyControl </I>property can also be assigned the name of the buddy 
control, for example:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>
UpDown1.BuddyControl = &quot;Text2&quot;
' This syntax even works with items of control arrays.
UpDown1.BuddyControl = &quot;Text3(0)&quot;
</pre>
</td></tr>
</table></p>

<p>When you change the buddy control at run time, the UpDown control 
automatically moves to a position beside its buddy control, which shrinks to make 
room for the UpDown control.</p>

</BODY>
</HTML>






<html>
<head>
<title>看雪学苑</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<style type="text/css">
<!--
.p8 {  font-size: 8pt}
.p9 {  font-size: 9pt}
a:hover {  color: #00FF00}
a {  text-decoration: none}
.p12 {  font-size: 12pt; font-weight: bold; color: #FF3333}
-->
</style>
</head>

<body bgcolor="#FFFFFF">
<span class="p9"><font color=blue>标 题:</font>攻擂: Unlock (1千字)<br>
<font color=blue>发信人:</font>冰毒<br>
<font color=blue>时 间:</font>2000-3-7 6:05:26 <br>
<font color=blue>详细信息:</font><br>
</span>
<blockquote><span class="p9"> 尚未成功. 但似乎程序并不在乎输入的是什么,而是所输字串的长度. 下面的这段代码是关键. <br>
  <br>
  * Reference To: MSVBVM50.__vbaLenBstr, Ord:0000h <br>
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | <br>
  :0041333E E8A1DEFEFF&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Call 004011E4 
  <br>
  :00413343 69C04D010000&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; imul eax, 0000014D 
  &lt;-字串的长度乘以333 <br>
  :00413349 898560FFFFFF&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; mov dword ptr 
  [ebp+FFFFFF60], eax <br>
  :0041334F DB8560FFFFFF&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fild dword ptr 
  [ebp+FFFFFF60]&lt;-这里 <br>
  用WF打开浮点寄存器窗,好象TRW2000不行 <br>
  :00413355 DC3560104000&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fdiv qword ptr 
  [00401060] <br>
  :0041335B DC3568104000&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fdiv qword ptr 
  [00401068] <br>
  :00413361 DC2570104000&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fsub qword ptr 
  [00401070] <br>
  :00413367 DC2578104000&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fsub qword ptr 
  [00401078] <br>
  :0041336D DC2590104000&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fsub qword ptr 
  [00401090] <br>
  :00413373 DD1D4C404100&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fstp qword ptr 
  [0041404C] <br>
  :00413379 DD0544404100&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fld qword ptr 
  [00414044] <br>
  :0041337F DC1D98104000&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fcomp qword 
  ptr [00401098]&lt;-比较 <br>
  :00413385 DFE0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  &nbsp; fstsw ax <br>
  :00413387 9E&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  &nbsp; sahf <br>
  :00413388 7528&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  &nbsp; jne 004133B2 &lt;-这里如果不跳,且eax=0即可 <br>
  :0041338A 833DAC44410000&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmp dword ptr [004144AC], 
  00000000 <br>
  :00413391 750F&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  &nbsp; jne 004133A2 </span></blockquote>
<hr>
<p><span class="p9"><font color=blue>标 题:</font>终于把序列号的计算关系式找出来了,只是不知正误,希望哪个帮我编个小程序算一下序列号,验证一下. 
  (6千字)<br>
  <font color=blue>发信人:</font>看雪<br>
  <font color=blue>时 间:</font>2000-3-7 22:15:50 <br>
  <font color=blue>详细信息:</font><br>
  </span></p>
<blockquote><span class="p9"> 这里是冰毒大侠抓取的一段代码，我换算了一下，假定我们的数字长度是在 <br>
  :0041337F DC1D98104000&nbsp; &nbsp; fcomp qword ptr [00401098]处比较 <br>
  但不能计算出整数长度数字，结果为102.5，此时输入102位和103位数字都不能成功，难到该CrackMe没有序列号？好吧让我们仔细分析这段代码。 <br>
  <br>
  第一段： <br>
  <br>
  * Reference To: MSVBVM50.__vbaLenBstr, Ord:0000h <br>
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | <br>
  :0041333E E8A1DEFEFF&nbsp; &nbsp; &nbsp; Call 004011E4 <br>
  :00413343 69C04D010000&nbsp; &nbsp; imul eax, 0000014D &lt;-字串的长度乘以333 <br>
  :00413349 898560FFFFFF&nbsp; &nbsp; mov dword ptr [ebp+FFFFFF60], eax <br>
  &lt;-这里用WF打开浮点寄存器窗,好象TRW2000不行 <br>
  :0041334F DB8560FFFFFF&nbsp; &nbsp; fild dword ptr [ebp+FFFFFF60]&lt;--将结果放入浮点寄存器 
  <br>
  :00413355 DC3560104000&nbsp; &nbsp; fdiv qword ptr [00401060] &lt;--除以（401060内的值，用dl看）这里除8 
  <br>
  :0041335B DC3568104000&nbsp; &nbsp; fdiv qword ptr [00401068] &lt;--除以60 <br>
  :00413361 DC2570104000&nbsp; &nbsp; fsub qword ptr [00401070] &lt;--加2（实际是-(-2)） 
  <br>
  :00413367 DC2578104000&nbsp; &nbsp; fsub qword ptr [00401078] &lt;--减0.375 <br>
  :0041336D DC2590104000&nbsp; &nbsp; fsub qword ptr [00401090] &lt;--减0.8375 
  <br>
  :00413373 DD1D4C404100&nbsp; &nbsp; fstp qword ptr [0041404C] 储存结果于41404c <br>
  :00413379 DD0544404100&nbsp; &nbsp; fld qword ptr [00414044] <br>
  :0041337F DC1D98104000&nbsp; &nbsp; fcomp qword ptr [00401098]&lt;-这里[00401098]为72,结果却不是和[0041404C]刚才计算的数据比较，因此刚才是白算一场了。而是和它的上一行处的[00414044] 
  比较，此时你令e 00414044 72即可注册成功。[00414044]并不在上面一段程序计算的，在你来到:00413343处，它的结果早已计算好。 
  <br>
  因此我们要找到[00414044]的值何处计算处！向上看看，你会发现如下代码： <br>
  <br>
  <br>
  第二段 <br>
  ———————————————————————————————————————————— <br>
  <br>
  * Referenced by a (U)nconditional or (C)onditional Jump at Address: <br>
  |:0041326F(C) <br>
  | <br>
  :004132E2 DD45E0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  fld qword ptr [ebp-20]&lt;--第三段传来的S放入浮点寄存器 <br>
  :004132E5 DC3558104000&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fdiv qword ptr 
  [00401058]&nbsp; &nbsp; &nbsp; &nbsp; <br>
  :004132EB FF75E8&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  push [ebp-18] <br>
  :004132EE DD5DE0&nbsp; &nbsp; &nbsp; &nbsp; fstp qword ptr [ebp-20]--这里的值和本段下面的ebp-20（1处）值相同&nbsp; 
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 你们观察一下会发现S的最后的零没有了，就成了上面的ebp-18的值，即：此处＝S/10 
  <br>
  <br>
  * Reference To: MSVBVM50.__vbaLenBstr, Ord:0000h <br>
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | <br>
  :004132F1 E8EEDEFEFF&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Call 004011E4 
  <br>
  :004132F6 69C09A020000&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; imul eax, 0000029A 
  <br>
  :004132FC 898564FFFFFF&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; mov dword ptr 
  [ebp+FFFFFF64], eax <br>
  :00413302 FF75E8&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  push [ebp-18] <br>
  :00413305 DB8564FFFFFF&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fild dword ptr 
  [ebp+FFFFFF64] <br>
  :0041330B DC3560104000&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fdiv qword ptr 
  [00401060] <br>
  :00413311 DC3568104000&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fdiv qword ptr 
  [00401068] <br>
  :00413317 DC2570104000&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fsub qword ptr 
  [00401070] <br>
  :0041331D DC2578104000&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fsub qword ptr 
  [00401078] <br>
  :00413323 DD1D3C404100&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fstp qword ptr 
  [0041403C] <br>
  :00413329 DD45E0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  fld qword ptr [ebp-20]&nbsp; &lt;--装入ebp-20的值计算&nbsp; &nbsp; &lt;--1 <br>
  :0041332C DC3580104000&nbsp; &nbsp; fdiv qword ptr [00401080]&lt;--除以 [00401080]的值，其定值：6780496716 
  <br>
  :00413332 DC0D88104000&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fmul qword ptr 
  [00401088]&lt;--乘以 [00401088]的值，其定值：3 <br>
  :00413338 DD1D44404100&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fstp qword ptr 
  [00414044]将结果放入[00414044]！！！！ <br>
  经过多试几次，发现只有[ebp-20] 的值和我们输入的序列号有关，因此我们将注意力放在何处使[ebp-20] 的值变化。 <br>
  <br>
  <br>
  <br>
  第三段 <br>
  —————————————————————————————————————————— <br>
  在W32dsm89里向上看看，就会看到下面的计算序列号核心处： <br>
  <br>
  :0041326B 663B7580&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmp 
  si, word ptr [ebp-80]&lt;--si是你的序列号的个数n <br>
  :0041326F 7F71 jg 004132E2 &lt;--有几个就循环几次，计算完就跳出，此时ebp-20=1627319211840就成功 <br>
  :00413271 8D45E8&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  lea eax, dword ptr [ebp-18] <br>
  <br>
  * Possible Reference to String Resource ID=00001: "Thank you for registering" 
  <br>
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | <br>
  :00413274 C745CC01000000&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; mov [ebp-34], 00000001 
  <br>
  :0041327B 8945AC&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  mov dword ptr [ebp-54], eax <br>
  :0041327E 8D45C4&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  lea eax, dword ptr [ebp-3C] <br>
  :00413281 50&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  &nbsp; push eax <br>
  :00413282 897DC4&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  mov dword ptr [ebp-3C], edi <br>
  :00413285 0FBFC6&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  movsx eax, si <br>
  :00413288 50&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  &nbsp; push eax <br>
  :00413289 8D45A4&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  lea eax, dword ptr [ebp-5C] <br>
  :0041328C 50&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  &nbsp; push eax <br>
  :0041328D 8D45B4&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  lea eax, dword ptr [ebp-4C] <br>
  :00413290 50&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  &nbsp; push eax <br>
  :00413291 C745A408400000&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; mov [ebp-5C], 00004008 
  <br>
  <br>
  * Reference To: MSVBVM50.rtcMidCharVar, Ord:0278h <br>
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | <br>
  :00413298 E835DFFEFF&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Call 004011D2 
  <br>
  :0041329D 8D45B4&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  lea eax, dword ptr [ebp-4C] <br>
  :004132A0 50&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  &nbsp; push eax <br>
  :004132A1 8D45D8&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  lea eax, dword ptr [ebp-28] <br>
  :004132A4 50&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  &nbsp; push eax <br>
  <br>
  * Reference To: MSVBVM50.__vbaStrVarVal, Ord:0000h <br>
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | <br>
  :004132A5 E82EDFFEFF&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Call 004011D8 
  <br>
  :004132AA 50&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  &nbsp; push eax <br>
  <br>
  * Reference To: MSVBVM50.rtcAnsiValueBstr, Ord:0204h <br>
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | <br>
  :004132AB E82EDFFEFF&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Call 004011DE 
  <br>
  :004132B0 0FBFC0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  movsx eax, ax&nbsp; &lt;--&nbsp; 此处循环依次取你的序列号 <br>
  :004132B3 898568FFFFFF&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; mov dword ptr 
  [ebp+FFFFFF68], eax <br>
  :004132B9 8D4DD8&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  lea ecx, dword ptr [ebp-28] <br>
  :004132BC DB8568FFFFFF&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fild dword ptr 
  [ebp+FFFFFF68]&lt;--依次将你的各个序列号的值放入 <br>
  :004132C2 DC4DE0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fmul qword 
  ptr [ebp-20]&lt; --[ebp-20]的初值为定值2,依次乘以 <br>
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 你的第n个序列号的ascii码的十进制。 <br>
  :004132C5 DD5DE0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  fstp qword ptr [ebp-20] <br>
  <br>
  * Reference To: MSVBVM50.__vbaFreeStr, Ord:0000h <br>
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | <br>
  :004132C8 E8FFDEFEFF&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Call 004011CC 
  <br>
  :004132CD 8D45B4&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  lea eax, dword ptr [ebp-4C] <br>
  :004132D0 50&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  &nbsp; push eax <br>
  :004132D1 8D45C4&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  lea eax, dword ptr [ebp-3C] <br>
  :004132D4 50&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  &nbsp; push eax <br>
  :004132D5 57&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  &nbsp; push edi <br>
  <br>
  * Reference To: MSVBVM50.__vbaFreeVarList, Ord:0000h <br>
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | <br>
  :004132D6 E8EBDEFEFF&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Call 004011C6 
  <br>
  :004132DB 83C40C&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  add esp, 0000000C <br>
  :004132DE 03F3&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  &nbsp; add esi, ebx <br>
  :004132E0 EB89&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  &nbsp; jmp 0041326B <br>
  <br>
  <br>
  假设我们的序列号为4位，如：a1 a2 a3 a4则：上述计算式为： <br>
  a1*2*a3*a4=s&nbsp; ：其中：a1,a2...都是Ascii码的十进制。 <br>
  计算完后，由:0041326F&nbsp; jg 004132E2&nbsp; 处跳出，把S放入ebp-20送入:004132E2处进行计算。 <br>
  <br>
  在第二段00413329 处，计算为： <br>
  [(S/10)/(6780496716)]＊3=72 <br>
  <br>
  经过计算：s= 1627319211840 <br>
  ************************************************************************* <br>
  a1*a2*a3*a4*....*a(n)=s/2=813659605920&nbsp; 其中：a1,a2...都是Ascii码的十进制。 <br>
  这是该程序的序列号计算式. <br>
  ************************************************************************* <br>
  打个比方：假如序列号是1234； <br>
  则：49*50*51*52...=s/2后，程序就注册成功。 <br>
  <br>
  要反推出序列号还真不容易，我试了一下没推算出来，看来得编个程序看看有没有这样的数字满足这种关系，感兴趣的朋友可编个小程序计算一下序列号。（序列号不限于数字，只要是可见的ascii就可） 
  </span></blockquote>
<hr>
</body>
</html>

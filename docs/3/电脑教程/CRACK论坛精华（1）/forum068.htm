<html>
<head>
<title>看雪学苑</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<style type="text/css">
<!--
.p8 {  font-size: 8pt}
.p9 {  font-size: 9pt}
a:hover {  color: #00FF00}
a {  text-decoration: none}
.p12 {  font-size: 12pt; font-weight: bold; color: #FF3333}
-->
</style>
</head>

<body bgcolor="#FFFFFF">
<p><span class="p9"><span class="p9">标 题:到ddxia那里下载的ACiD_BuRN2的crackme不知在那入手？。 
  (空)<br>
  发信人:庐之小得味<br>
  时 间:2000-5-27 15:25:31<br>
  </span></span></p>
<p><span class="p9"><font color="#3366FF">回复：</font></span></p>
<p><span class="p9"><span class="p9"><font color=blue>标 题:</font>部分解决 (2千字)<br>
  <font color=blue>发信人:</font>冰毒<br>
  <font color=blue>时 间:</font>2000-5-28 1:48:39 <br>
  <font color=blue>详细信息:</font><br>
  </span></span></p>
<blockquote><span class="p9"><span class="p9"> 运行程序,Nag显示几秒消失. 主界面出现. 输入Name,First 
  name,Company项,面对注册码输入窗. 注册码分三段,随便填入几个数字,但是register的按钮是灰的. Hmm? 程序对输入的注册做实时比较. 
  只有注册码正确时,按钮才会生效. <br>
  <br>
  问题是如何设断点. 试了好几个,找到一个好用的: bpx __vbar8str. 设断,F5. 马上弹回softice. 跟过一阵子,还是没有头绪. 不过,见到一些浮点运算操作指令. 
  于是试着下WF指令,打开浮点寄存器窗. 于是'演出开始了'. <br>
  <br>
  不断地按F5,每次拦住时F12返回VB5的DLL,你就会在寄存器窗里见到一些数字, 其中有输入的注册码. 试着改变姓,名,公司名和注册码, 在softice下跟踪比较,发现有些数字是固定的: 
  '444','777','111','27','5'. 而且数字的显示非常有规律. 先显示输入的注册码,然后一个两位数,再就是444或777或111,再就是27,接着清空. 
  再开始下一轮, 循环往复. 耐心分析一番以后,解决了. 不过, 去除Nag不成功,有些象WinRAM-Booster 2000的Nag. 不知哪位可以搞定. 
  另外作者提到的anti-smartcheck function因没装Smartcheck不能测试. 谁有兴趣,可以一试,并贴出结果. <br>
  <br>
  以下是大致过程: <br>
  1. 输入 name: Break firstname: Ice company: China, Password:123 456 789 <br>
  2. 切进softice, bpx __vbar8str 并下指令WF <br>
  3. F5, softice马上中断, F12, 此时ST0=123 <br>
  4. F5, F12, 此时ST0=66 (name第一个字母的ASCII码值,10进制), ST1=123 <br>
  5. F5, F12, 此时ST0=444 (Magic number), ST1=66, ST2=123 <br>
  6. F5, 先不按F12, ST0=29304 <br>
  7. F12, ST0=27 (今天是27号), ST1=29304, ST2=123 <br>
  8. F10向下 <br>
  &lt;pre> <br>
  014F:0F0FDFCB&nbsp; FMULP&nbsp; &nbsp; ST(1),ST &lt;- ST0*ST1=791208 <br>
  014F:0F0FDFCD&nbsp; XOR&nbsp; &nbsp; &nbsp; EAX,EAX <br>
  014F:0F0FDFCF&nbsp; MOV&nbsp; &nbsp; &nbsp; AL,[ESI] <br>
  014F:0F0FDFD1&nbsp; INC&nbsp; &nbsp; &nbsp; ESI <br>
  014F:0F0FDFD2&nbsp; JMP&nbsp; &nbsp; &nbsp; NEAR [EAX*4+0F0FED94] <br>
  再向下 <br>
  014F:0F0FD73B&nbsp; CALL&nbsp; &nbsp; `MSVBVM50!__vbaI4Str` <br>
  014F:0F0FD740&nbsp; PUSH&nbsp; &nbsp; EAX &lt;- 5 (本月月份) <br>
  014F:0F0FD741&nbsp; XOR&nbsp; &nbsp; &nbsp; EAX,EAX <br>
  014F:0F0FD743&nbsp; MOV&nbsp; &nbsp; &nbsp; AL,[ESI] <br>
  014F:0F0FD745&nbsp; INC&nbsp; &nbsp; &nbsp; ESI <br>
  <br>
  9. 继续F10 <br>
  <br>
  014F:0F0FE001&nbsp; POP&nbsp; &nbsp; &nbsp; ECX &lt;- 5 (月份) <br>
  014F:0F0FE002&nbsp; POP&nbsp; &nbsp; &nbsp; EAX &lt;- C12A8h=791208 (乘积) <br>
  014F:0F0FE003&nbsp; CDQ&nbsp; &nbsp; <br>
  014F:0F0FE004&nbsp; IDIV&nbsp; &nbsp; ECX &lt;- EAX/ECX <br>
  014F:0F0FE006&nbsp; PUSH&nbsp; &nbsp; EAX &lt;- 158241 <br>
  014F:0F0FE007&nbsp; XOR&nbsp; &nbsp; &nbsp; EAX,EAX <br>
  014F:0F0FE009&nbsp; MOV&nbsp; &nbsp; &nbsp; AL,[ESI] <br>
  014F:0F0FE00B&nbsp; INC&nbsp; &nbsp; &nbsp; ESI <br>
  . <br>
  . <br>
  014F:0F1065F1&nbsp; CALL&nbsp; &nbsp; 0F0FEC1E &lt;- F8进 <br>
  014F:0F1065F6&nbsp; JMP&nbsp; &nbsp; &nbsp; 0F0FEA9D <br>
  看到 <br>
  014F:0F0FEC1E&nbsp; FXCH&nbsp; &nbsp; &lt;- 交换ST0和ST1的值 <br>
  014F:0F0FEC20&nbsp; FCOMPP&nbsp; &lt;- 比较 <br>
  014F:0F0FEC22&nbsp; FNSTSW&nbsp; AX <br>
  014F:0F0FEC24&nbsp; TEST&nbsp; &nbsp; AL,0D <br>
  &lt;/pre> <br>
  10. Password的第2,3两部分算法一样, 只是Magic number分别为777和111. <br>
  <br>
  重新输入: 158241 306293 40159 现在按钮可按了,Congratulation! <br>
  <br>
  冰毒写于2000年5月27日 </span></span></blockquote>
<hr>
<p>&nbsp; </p>
</body>
</html>

<html>
<head>
<title>看雪学苑</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<style type="text/css">
<!--
.p8 {  font-size: 8pt}
.p9 {  font-size: 9pt}
a:hover {  color: #00FF00}
a {  text-decoration: none}
.p12 {  font-size: 12pt; font-weight: bold; color: #FF3333}
-->
</style>
</head>

<body bgcolor="#FFFFFF">
<span class="p9"><font color=blue>标 题:</font>Professional Quest脱壳实例(vbox4.10)，可能很容易，难的我也不会:( 
(2千字)<br>
<font color=blue>发信人:</font>shizg<br>
<font color=blue>时 间:</font>2000-6-24 8:43:08 <br>
<font color=blue>详细信息:</font><br>
</span>
<blockquote><span class="p9"> 发信人: shizg (刀客☆永远的痛), 信区: Hacker <br>
  标&nbsp; 题: Professional Quest脱壳实例(vbox4.10) <br>
  发信站: BBS 水木清华站 (Fri Jun 23 10:10:12 2000) <br>
  &nbsp; <br>
  这个东东以前就装了，是一个做问卷调查的软件。最近要用，所以拿出来一看， <br>
  哇塞，不能用了。然后加载S-Ice，再运行看，出来一个框，是什么vbox警告框， <br>
  意思是说我有debug，呵呵。知道是vbox保护了。 <br>
  下面就是脱壳过程，想练手的可以照着做(找不到可以问我要)，好像上一次 <br>
  有人问那个codevizor也是用vbox4.10保护的： <br>
  &nbsp; <br>
  1。打S-Ice补丁，就是backdoor keeper，这样就不怕vbox不能脱壳弹出上面那个 <br>
  框框了。如果用trw更爽，直接faults off命令，就可以了。 <br>
  &nbsp; <br>
  2。S-Ice加载执行程序quest.exe <br>
  &nbsp; <br>
  3。中断在B53000： <br>
  015F:00B53000&nbsp; PUSH&nbsp; &nbsp; &nbsp; DWORD PTR [ESP+0C] <br>
  015F:00B53004&nbsp; PUSH&nbsp; &nbsp; &nbsp; DWORD PTR [ESP+0C] <br>
  015F:00B53008&nbsp; PUSH&nbsp; &nbsp; &nbsp; DWORD PTR [ESP+0C] <br>
  015F:00B5300C&nbsp; PUSH&nbsp; &nbsp; &nbsp; 2B08AEB1 <br>
  015F:00B53011&nbsp; PUSH&nbsp; &nbsp; &nbsp; 2BBD9A3E <br>
  015F:00B53016&nbsp; PUSH&nbsp; &nbsp; &nbsp; 2B08AAE1 <br>
  015F:00B5301B&nbsp; PUSH&nbsp; &nbsp; &nbsp; 2B08AA1B <br>
  015F:00B53020&nbsp; CALL&nbsp; &nbsp; &nbsp; [00B531F0] <br>
  015F:00B53026&nbsp; PUSH&nbsp; &nbsp; &nbsp; FFFFFFFF <br>
  015F:00B5302B&nbsp; CALL&nbsp; &nbsp; &nbsp; EAX <br>
  015F:00B5302D&nbsp; RET&nbsp; &nbsp; &nbsp; 000C <br>
  &nbsp; <br>
  4。单步执行到B5302B，此时eax=00B4E000，F8跟进，如下： <br>
  015F:00B4E000&nbsp; PUSH&nbsp; &nbsp; &nbsp; DWORD PTR [ESP+0C] <br>
  015F:00B4E004&nbsp; PUSH&nbsp; &nbsp; &nbsp; DWORD PTR [ESP+0C] <br>
  015F:00B4E008&nbsp; PUSH&nbsp; &nbsp; &nbsp; DWORD PTR [ESP+0C] <br>
  015F:00B4E00C&nbsp; PUSH&nbsp; &nbsp; &nbsp; 0209AF7E <br>
  015F:00B4E011&nbsp; PUSH&nbsp; &nbsp; &nbsp; FEF61153 <br>
  015F:00B4E016&nbsp; PUSH&nbsp; &nbsp; &nbsp; A509A770 <br>
  015F:00B4E01B&nbsp; PUSH&nbsp; &nbsp; &nbsp; DEFA1690 <br>
  015F:00B4E020&nbsp; CALL&nbsp; &nbsp; &nbsp; [00B4E1D4] <br>
  015F:00B4E026&nbsp; PUSH&nbsp; &nbsp; &nbsp; FFFFFFFF <br>
  015F:00B4E02B&nbsp; CALL&nbsp; &nbsp; &nbsp; EAX <br>
  015F:00B4E02D&nbsp; RET&nbsp; &nbsp; &nbsp; 000C <br>
  &nbsp; <br>
  5。注意B4E020就是vbox用来判断是否过期、有debug的代码，如正常则解码，并 <br>
  返回程序正确地址于Eax，此时eax=00913F34 <br>
  &nbsp; <br>
  6。到B4E02B跟进去，如下： <br>
  015F:00913F34&nbsp; MOV&nbsp; &nbsp; &nbsp; [009E1F4C],ESP <br>
  015F:00913F3A&nbsp; XOR&nbsp; &nbsp; &nbsp; EBP,EBP <br>
  015F:00913F3C&nbsp; PUSH&nbsp; &nbsp; &nbsp; EBP <br>
  015F:00913F3D&nbsp; MOV&nbsp; &nbsp; &nbsp; EBP,ESP <br>
  015F:00913F3F&nbsp; CALL&nbsp; &nbsp; &nbsp; KERNEL32!GetVersion <br>
  015F:00913F44&nbsp; MOV&nbsp; &nbsp; &nbsp; EDX,EAX <br>
  015F:00913F46&nbsp; AND&nbsp; &nbsp; &nbsp; EDX,000000FF <br>
  015F:00913F4C&nbsp; MOV&nbsp; &nbsp; &nbsp; [009E1F40],EDX <br>
  015F:00913F52&nbsp; MOV&nbsp; &nbsp; &nbsp; EDX,EAX <br>
  015F:00913F54&nbsp; SHR&nbsp; &nbsp; &nbsp; EDX,08 <br>
  015F:00913F57&nbsp; AND&nbsp; &nbsp; &nbsp; EDX,000000FF <br>
  015F:00913F5D&nbsp; MOV&nbsp; &nbsp; &nbsp; [009E1F44],EAX <br>
  。。。 <br>
  这就是解码后的程序啊。只需要将内存dump出来就可以。 <br>
  dump方法比较多，我就用procdump来dump，选择full dump，并且在选项里面选择 <br>
  rebuild新的import表，否则程序是不能运行的，因为找不到dll入口嘛，还执行 <br>
  什么，呵呵。如果用trw2000，可以用makepe命令 <br>
  7。最后一步，dump出一个文件，比如quest1.exe，必须修改程序入口地址，可以 <br>
  用peedit，procdump，将入口地址改为前面跟得的地址，但要注意，该地址应是 <br>
  00913F34-image的基址（00400000)＝00513F34 <br>
  8。这就是一个脱过壳的执行文件了，运行不需要vbox库，当然过期什么都没有了， <br>
  <br>
  那个干扰画面也没有了。 <br>
  &nbsp; <br>
  愿意的话，还可以写一个procdump的script，以后解vboxb410.dll的壳就不用这么 <br>
  麻烦了。 </span></blockquote>
<hr>
</body>
</html>

<html>
<head>
<title>看雪学苑</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<style type="text/css">
<!--
.p8 {  font-size: 8pt}
.p9 {  font-size: 9pt}
a:hover {  color: #00FF00}
a {  text-decoration: none}
.p12 {  font-size: 12pt; font-weight: bold; color: #FF3333}
-->
</style>
</head>

<body bgcolor="#FFFFFF">
<span class="p9"><font color=blue>标 题:</font>拼音加加2.0注册机，适用于2.01 (1千字)<br>
<font color=blue>发信人:</font>guest<br>
<font color=blue>时 间:</font>2000-6-4 21:58:56 <br>
<font color=blue>详细信息:</font><br>
</span>
<blockquote><span class="p9"> #include &lt;windows.h> <br>
  #include &lt;stdio.h> <br>
  <br>
  const char REG_KEY_NAME[]= "Software\\Rovasoft"; <br>
  const char REG_VALUE_NAME1[]= "BookID"; <br>
  const char REG_VALUE_NAME2[]= "Key"; <br>
  <br>
  #define FAIL 0xFFFFFFFFL <br>
  <br>
  #define MAX_LEN&nbsp; 32 <br>
  <br>
  void main(void) <br>
  { <br>
  &nbsp; &nbsp;&nbsp;HANDLE handle; <br>
  &nbsp; &nbsp;&nbsp;HKEY hKey; <br>
  &nbsp; &nbsp;&nbsp;long BookID, BookIDSize; <br>
  &nbsp; &nbsp;&nbsp;char Key[MAX_LEN]; <br>
  &nbsp; &nbsp;&nbsp;char buf[MAX_LEN]; <br>
  &nbsp; &nbsp;&nbsp;int k; <br>
  &nbsp; &nbsp;&nbsp;long ValueType; <br>
  &nbsp; &nbsp;&nbsp;char subtractor[16] = <br>
  &nbsp; &nbsp;&nbsp;{&nbsp; &nbsp;&nbsp;0x2F, <br>
  &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;0x2E, <br>
  &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;0x2C, <br>
  &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;0x2D, <br>
  &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;0x2F,&nbsp; &nbsp; //not sure <br>
  &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;0x2D, <br>
  &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;0x2F,&nbsp; &nbsp; //not sure <br>
  &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;0x2F, <br>
  &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;0x2C, <br>
  &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;0x2E, <br>
  &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;0x2F,&nbsp; &nbsp; //not sure <br>
  &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;0x2F,&nbsp; &nbsp; //not sure <br>
  &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;0x2F,&nbsp; &nbsp; //not sure <br>
  &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;0x2F,&nbsp; &nbsp; //not sure <br>
  &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;0x2F,&nbsp; &nbsp; //not sure <br>
  &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;0x2F&nbsp; &nbsp; //not sure&nbsp; &nbsp;&nbsp;&nbsp; 
  &nbsp;&nbsp; <br>
  &nbsp; &nbsp;&nbsp;}; <br>
  &nbsp; &nbsp;&nbsp; <br>
  &nbsp; &nbsp;&nbsp;if (RegCreateKeyEx(HKEY_LOCAL_MACHINE, REG_KEY_NAME, NULL, 
  NULL, NULL, KEY_ALL_ACCESS, <br>
  &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
  &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;NULL, &amp;hKey, NULL) != ERROR_SUCCESS) <br>
  &nbsp; &nbsp;&nbsp;{ <br>
  &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;printf("Error opening registry key \"%s\".\n", 
  REG_KEY_NAME); <br>
  &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;return; <br>
  &nbsp; &nbsp;&nbsp;} <br>
  <br>
  &nbsp; &nbsp;&nbsp;BookIDSize = sizeof(BookID); <br>
  &nbsp; &nbsp;&nbsp;if (RegQueryValueEx(hKey, REG_VALUE_NAME1, NULL, (unsigned 
  long *)&amp;ValueType, (LPBYTE)&amp;BookID, <br>
  &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
  &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;(LPDWORD)&amp;BookIDSize) != ERROR_SUCCESS) <br>
  &nbsp; &nbsp;&nbsp;{ <br>
  &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;printf("Error reading registry value \"%s\\%s\".\n", 
  REG_KEY_NAME, REG_VALUE_NAME1); <br>
  &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;RegCloseKey(hKey); <br>
  &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;return; <br>
  &nbsp; &nbsp;&nbsp;} <br>
  <br>
  &nbsp; &nbsp;&nbsp;if (BookID &lt; 1000000000L) <br>
  &nbsp; &nbsp;&nbsp;{ <br>
  &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;BookID += 1000000000L; <br>
  &nbsp; &nbsp;&nbsp;} <br>
  <br>
  &nbsp; &nbsp;&nbsp;sprintf(buf, "%010u", BookID); <br>
  &nbsp; &nbsp;&nbsp;lstrcat(buf, "000000"); <br>
  <br>
  &nbsp; &nbsp;&nbsp;for (k = 0; k &lt; 16; k++) <br>
  &nbsp; &nbsp;&nbsp;{ <br>
  &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;Key[k] = ((buf[k] - subtractor[k]) % 10) 
  + '0'; <br>
  &nbsp; &nbsp;&nbsp;} <br>
  &nbsp; &nbsp;&nbsp; <br>
  &nbsp; &nbsp;&nbsp;Key[16] = '\0'; <br>
  &nbsp; &nbsp;&nbsp; <br>
  &nbsp; &nbsp;&nbsp;if (RegSetValueEx(hKey, REG_VALUE_NAME2, NULL, REG_SZ , (CONST 
  BYTE *)(&amp;Key[0]), <br>
  &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 
  &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;lstrlen(Key) + 1) != ERROR_SUCCESS) <br>
  &nbsp; &nbsp;&nbsp;{ <br>
  &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;printf("Error writing registry value \"%s\\%s\".\n", 
  REG_KEY_NAME, REG_VALUE_NAME2); <br>
  &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;RegCloseKey(hKey); <br>
  &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;return; <br>
  &nbsp; &nbsp;&nbsp;} <br>
  <br>
  &nbsp; &nbsp;&nbsp;RegCloseKey(hKey); <br>
  <br>
  &nbsp; &nbsp;&nbsp;printf("Successfully registered.\n"); <br>
  } </span></blockquote>
<hr>
</body>
</html>

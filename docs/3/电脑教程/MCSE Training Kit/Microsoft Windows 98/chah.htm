<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="basicIE4.css" TYPE="text/css">
<TITLE>Appendix H -- Introduction to NDIS 5.0</TITLE>
<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>


<font size="+3">Appendix H</font>
<p>
<h1>Introduction to NDIS 5.0</h1>
This appendix provides an overview of the Network Driver Interface Specification (NDIS) 5.0. Because NDIS 5.0 extends previous versions of NDIS, the basic services, terminology, and architecture of these earlier versions also apply to NDIS 5.0. By using NDIS 5 drivers, Windows&#160;98 can support a wide range of network media, including Ethernet, fiber distributed data interface (FDDI), token-ring, ArcNet, asynchronous transfer mode (ATM), and WAN technology.<P>
Additional information about the miniport driver model is included in the current version of the NDIS DDK, which is provided in the Microsoft Developer Network (MSDN) Professional CD.<P>
<H1>Overview</H1>
<P>NDIS 5.0 extends previous versions of NDIS, so the basic requirements, services, terminology, and architecture of these earlier versions also apply to NDIS 5.0. The new NDIS architecture implemented in Windows&#160;98 will be included in future releases of Windows&#160;NT operating systems as well.<P>
NDIS 4.0 added the following new features to NDIS 3.1:<P>
<UL>
<LI>Out-of-band data support (required for Broadcast PC) <P>
<LI>WirelessWAN Media Extension <P>
<LI>High-speed packet send and receive (significant performance win) <P>
<LI>Fast IrDA Media Extension <P>
<LI>Media Sense (required for the &quot;Designed for Windows&quot; logo in <I>PC 97 Hardware Design Guide</I>) <P>
<LI>&quot;All local&quot; packet filter (prevents Network Monitor from monopolizing CPU) <P>
<LI>Numerous new NDIS system functions (required for miniport binary compatibility across Windows&#160;98 and Windows&#160;NT).<P>
</UL>
NDIS 5.0 consists of all functionality defined in NDIS 4.0, plus the following extensions:<P>
<UL>
<LI>NDIS power management (required for network power management and network wake-up) <P>
<LI>Plug and Play. Windows&#160;98 NDIS already has Plug and Play support, so this change is only applicable to Windows&#160;NT 5.0 network drivers. <P>
<LI>Support for Windows Management Interface (WMI) for Web-Based Enterprise Management (WBEM) management of NDIS miniports and their associated adapters. <P>
<LI>Support for single INF format across Windows operating systems. The new INF format is based on the Windows&#160;98 INF format. <P>
<LI>Deserialized miniport for improved performance. <P>
<LI>Task offload mechanisms for tasks such as TCP/IP checksum, and Fast Packet Forwarding. <P>
<LI>Broadcast Media Extension (needed for Broadcast PC). <P>
<LI>Connection-oriented NDIS (required for ATM, ADSL, and WDM-CSA Network Streaming over all connection-oriented media). <P>
<LI>Support for Quality Of Service (QOS). <P>
<LI>Intermediate Driver Support (required for Broadcast PC, Virtual LANs, Packet Scheduling for QOS, and for NDIS support of IEEE 1394 network devices).<P>
</UL>
<P>
<HR><BLOCKQUOTE>
<B>Note</B><P>
Most of the new features in NDIS 5.0 are accessible only by using the miniport driver model and are not supported for full Media Access Control (MAC) drivers or the older miniport drivers.
</BLOCKQUOTE><HR>

<H1>Features of NDIS 5.0</H1>
<P>The goals for these new features include the following:<P>
<UL>
<LI>Increasing ease of use and reducing Total Cost of Ownership (TCO) <P>
<LI>Improving performance <P>
<LI>Enabling new media types, services and applications <P>
<LI>Improving flexibility in the driver architecture<P>
</UL>
<P>
NDIS describes the interface that network adapter drivers use to communicate with underlying hardware, with overlying protocol drivers, and with the operating system. Windows&#160;98 provides NDIS&#160;5.0, an extension of NDIS&#160;4.0 that supports NDIS versions 2.x, 3.1, 4.0, and 5.0 protocol and adapter drivers. It also provides a replacement for version 3.0 drivers, which are incompatible with Windows&#160;98.<P>
<H2>NDIS Power Management</H2>
<P>NDIS power management is required for network power management and network wakeup. The implementation of NDIS power management is based on the Network Device Class Power Management Reference Specification. The specification, which is available from <A HREF="http://www.microsoft.com/hwdev/onnow.htm">http://www.microsoft.com/hwdev/onnow.htm</A>, defines the behavior of network devices as it relates to power management and, specifically, to the four device power states defined for the OnNow Architecture. <P>
NDIS power management and the Network Device Class Power Management Reference Specification currently apply specifically to Ethernet and token ring adapters. Other types of adapters, such as ATM and ISDN adapters, are not supported. It is intended that network device vendors and system makers will be able to design consistent power-manageable products, and that operating system vendors will be able to implement an appropriate network-device power management policy based on the contents of this specification.<P>
Currently the PC&#160;97 specification requires the devices to support the D0 (running) and D3 (off) states; other states are optional. Wakeup is not required in PC&#160;97, except for modems; for other devices it is optional. However, wakeup will be required for network adapters in PC&#160;98.<P>
For devices on PCI, USB, IEEE 1394 and PC Card buses, if the device supports the standard hardware interfaces (as specified for each bus) for setting the Dx states and enabling wakeup, then the driver will not have to do anything. For the devices in ISA and other buses, there are no standard interfaces so the driver must support the D0 and D3 (and optional wakeup) states.<P>
NDIS can power down network adapters when the system requests power level change. The request can be initiated by the user or the system. For example, the user might want to put the system in sleep mode, or the system might request this based on the keyboard/mouse inactivity. A power down request can also be caused by disconnecting the network cable if supported by the network adapter. In this case, the system would wait a configurable time period before powering down the NETWORK ADAPTER as the disconnect might be the result of temporary wiring changes on the net and not necessarily the disconnection of a cable from the network device itself. NDIS power management policy is &quot;No Net Activity&quot; based. This means all overlying network components must agree to the request before the NETWORK ADAPTER can be powered down. If there are any active sessions or open files over the network, the power down request can be refused by any or all of the components involved.<P>
The system is also capable of being awakened from a lower power state based on network events. A wakeup signal can be caused by:<P>
<UL>
<LI>Detection of a change in the network link state (for example, cable reconnect). <P>
<LI>Receipt of a network wakeup frame. <P>
<LI>Receipt of a Magic Packet packet.<P>

A Magic Packet awakens a computer on a network by sending a specific packet of information, called a Magic Packet frame, to a node on the network. When the computer is in a low power state, it will enable the Magic Packet mode in the LAN controller, and when the LAN controller receives a Magic Packet frame, it will alert the system to wake up. 
</UL>
<P>
<P>
At driver initialization, NDIS queries the capabilities of the miniport such as support for Magic Packet, pattern match or link change wakeups. and what the lowest required power states are for each wakeup method. The network protocols then query the miniport capabilities. At runtime, the protocol sets the wake-up policy using OIDs (Object ID). These are, for example<I>, Enable Wakeup, Set Packet Pattern, </I>and<I> Remove Packet Pattern</I>. Currently, Microsoft TCP/IP is the only Microsoft protocol stack that supports network power management. It registers the following packet patterns at miniport initialization:<P>
<UL>
<LI>Directed IP packet <P>
<LI>Address Resolution Protocol (ARP) broadcast for station IP address <P>
<LI>NetBIOS over TCP/IP broadcast for station's assigned &quot;computername&quot; <P>
</UL>
<P>
During the operation, the system calls NDIS for Power Down Queries and Power Down Sets for each network adapter. NDIS then calls the miniport drivers and the overlying network components to complete the requests but before doing so, it checks with miniport drivers to ensure that power levels for wakeups are correct and that the network cards can be powered down. When a wakeup occurs (for example, the network adapter initiates power-up when a wakeup packet arrives or the cable is reconnected), the system calls NDIS for each network adapter. NDIS forwards the power-up request to each miniport driver and the overlying network components.<P>
<H2>NDIS Plug and Play</H2>
<P>Windows&#160;98 can automatically determine the adapters to which each protocol should bind. Additionally, if you are using a PCMCIA or CardBus adapter, and a Plug and Play event occurs, such as the removal of an adapter from a portable computer, the NDIS protocols and network adapters can detect the event and remove themselves from memory automatically.<P>
<H2>WMI Support for WBEM Management</H2>
<P>Figure H.1 illustrates the Windows Management Interface (WMI), which allows applications to:<P>
<UL>
<LI>Enumerate device classes (for example, network adapter), devices per class, and properties per device. <P>
<LI>Query and set properties per device.<P>
<LI>Register for event notification on applicable properties (WMI properties translate to NDIS OIDs).<P>
</UL>
<P>

<P>
<A HREF="javascript:fullSize('FHXX01x.htm')"> <IMG SRC="fhxx01.jpg" WIDTH=360 HEIGHT=224 BORDER="0" ALT = "Click to view at full size."> </A>
<P>
<caption>
<B>Figure H.1</B> <I>The Windows Management Interface</I>
</caption><P>
At initialization, NDIS queries miniports for device specific properties (legacy miniport drivers will fail the query, thus indicating no device-specific properties). NDIS registers properties with WMI. The properties include the standard properties for all miniport drivers defined as NDIS DDK &quot;mandatory&quot; OIDs, and device-specific properties if provided by the miniport driver.<P>
<H2>NDIS Miniport Driver Model</H2>
<P>In releases of NDIS before 3.1, adapter drivers implemented not only the media access functionality that was specific to the network adapter, but also the media access functionality that is common to all NDIS drivers.<P>
For NDIS 3.1 and later adapter miniport drivers, the Windows&#160;98 wrapper implements the half of the media access functionality that is common to all NDIS drivers. Thus, the miniport driver provided by the adapter manufacturer must implement only the half of the media access layer that is specific to the network adapter. These include specific details such as establishing communications with the adapter, turning on and off electrical isolation for Plug and Play, providing media detection, and enabling any value-added features the adapter might contain.<P>
The Windows&#160;98 miniport drivers are binary-compatible with Windows&#160;NT&#160;3.5 and later miniport drivers, which means they can be used on either operating system without being recompiled. (You can distinguish a miniport driver from other drivers by its SYS file name extension; most other drivers have VXD extensions.)<P>
<H2>Task Offload Mechanisms for Improved Performance</H2>
<P>By using query OIDs, the protocols can request the miniport &quot;task offload capabilities mask.&quot; This means the task that can be offloaded must be predefined in NDIS. The protocol specifies the tasks it wants to offload to the miniport. Additional task-specific OIDs might be required for task parameter negotiation. At runtime, the protocol delegates task processing to the miniport driver and the network adapter.<P>
TCP/IP queries and sets the miniport capabilities. These calls include Add (Send) and Verify (Receive) for TCP, UDP, and IP checksum calculation. When sending, TCP/IP passes packets to the miniport with a flag bit requesting the checksum calculation. On receive, the miniport passes the packet with a flag bit set if checksum failed.<P>
Fast Packet Forwarding (or Fast Forward Path) refers to functionality where similar single-port network adapters (see Figure H.2) or multiport network adapters (see Figure H.3) &#151; 802.3, DIX, TR, FastEthernet, FDDI, and so on &#151;  can be used in conjunction with Windows&#160;NT Routing code to do packet forwarding from one port to another port on the same or similar network adapter without passing the packet to the host processor.<P>
At initialization time, the routing protocols query and set the miniport capability for Fast Packet Forwarding. During runtime, the network adapters monitor and record which ports are used for which routes. If the route is known on packet receipt, the netcard directly forwards the packet to the other port. If the route changes, the miniport is told by the routing protocols (using an OID) to &quot;flush&quot; known routes.<P>
<P>
<A HREF="javascript:fullSize('FHXX02x.htm')"> <IMG SRC="FHXX02.JPG" WIDTH=360 HEIGHT=220 BORDER=0 ALT = "Click to view at full size."> </A>
<P>
<caption>
<B>Figure H.2</B> <I>Fast Packet Forwarding path: single port</I>
</caption>
<P>
<A HREF="javascript:fullSize('FHXX03x.htm')"> <IMG SRC="fhxx03.jpg" WIDTH=360 HEIGHT=304 BORDER="0" ALT = "Click to view at full size."> </A>
<P>
<caption>
<B>Figure H.3</B> <I>Fast Packet Forwarding path: multiple ports</I>
</caption>
<H2>Broadcast Media Extension</H2>
<P>Broadcast Media Extension is the NDIS extension to support high-speed unidirectional broadcast media such as services provided by Direct TV, PrimeStar or Intercast. The extensions include new OIDs and definitions for receiver tuning, multiple media stream negotiation and fast (zero copy) data streaming to user mode, and support for UDP/IP multicast packets via Microsoft-provided LAN Emulation driver. The Broadcast Media Extension accommodates the Broadcast Services for Windows, a.k.a. Broadcast PC.<P>
<H2>Connection-oriented NDIS and Support for QOS</H2>
<P>Previously, NDIS has primarily supported network interface card driver development and deployment of connectionless local area and wireless network media such as Ethernet, Token Ring, ArcNet, Fiber Distributed Data Interface (FDDI), Wireless WAN, and IrDA. NDIS 5.0 extends this interface to provide efficient support for local and wide area network connection-oriented media such as the Asynchronous Transfer Mode (ATM) or ISDN, with support for QOS and isochronous data transfer for media that supports QOS (see Figure H.4).<P>
<P>
<A HREF="javascript:fullSize('FHXX04x.htm')"> <IMG SRC="FHXX04.JPG" WIDTH=360 HEIGHT=220 BORDER=0 ALT = "Click to view at full size."> </A>
<P>

<caption>
<B>Figure H.4</B> <I>Windows ATM Services</I>
</caption>
<P>The new architecture also enables support for streaming of multimedia data such as audio and video over the media types supported in the new NDIS architecture (see Figure H.5).<P>
<P>
<A HREF="javascript:fullSize('FHXX05x.htm')"> <IMG SRC="fhxx05.jpg" WIDTH=360 HEIGHT=218 BORDER="0" ALT = "Click to view at full size."> </A>
<P>
<caption>
<B>Figure H.5.</B> <I>An example of stream handlers in NDIS 5.0 architecture</I>
</caption>
<P>Support for the new extensions and features requires additional software-based support components and changes to NDIS interfaces beyond the simple hardware driver required for LAN or WAN media. These changes include the following and are only supported under the miniport paradigm:<P>
<UL>
<LI>A Call Manager for connection (or call) setup <P>
<LI>LAN emulation for transparent support of legacy protocols and other mechanisms for more efficient resolution to their native address formats of specific legacy protocol addresses such as IP addresses <P>
<LI>Mechanisms to provide direct access to the media for Kernel-mode streaming.<P>
</UL>
<H2>Other NDIS Extensions</H2>
<P>NDIS 5.0 also includes the following extensions:<P>
<UL>
<LI>Intermediate Driver Support (required for Broadcast PC, Virtual LANs, Packet Scheduling for QOS, and for NDIS support of IEEE 1394 network devices, for example) <P>
<LI>Protocol rebind when the network interface card media type changes. <P>
<LI>Packet scheduling, full duplex, and so on.<P>
</UL>
<HR><BLOCKQUOTE>
<B>Note</B><P>
Most of the new features in NDIS 5.0 are accessible only using the miniport driver model and are not supported for full MAC drivers or the older miniport drivers.
</BLOCKQUOTE><HR>
<P>
<HR><BLOCKQUOTE>
<B>Important</B><P>
This text will appear on screen, but will not print on a PostScript printer.
</BLOCKQUOTE><HR>
<P>
</BODY>
</HTML>
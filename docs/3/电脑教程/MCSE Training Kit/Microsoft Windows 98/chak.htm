<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="basicIE4.css" TYPE="text/css">
<TITLE>Appendix K -- How to Interpret the Ppplog.txt File</TITLE>
<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>



<FONT SIZE="+3">Appendix K</FONT>
<P>
<H1>How to Interpret the Ppplog.txt File</H1>
This appendix describes how to interpret the Ppplog.txt file. It also provides information about background concepts used in the development of the Point-to-Point protocol (PPP) and its peripheral components.<P>
Because PPP is the predominant connection type used today, this article focuses primarily on interpreting the Ppplog.txt file when a PPP connection is used. Information not related to troubleshooting, but instrumental in understanding the framework of PPP, is also provided.<P>

<HR><BLOCKQUOTE>
<B>Note</B><P>
Excerpts from Ppplog.txt files in this article have been edited for readability. Specifically, the date stamp has been removed and the time stamp has been reduced to the format [seconds.tenths-of-a-second]. Comments are at the bottom of each listing. For the sake of brevity, unnecessary lines may have been removed. Where this has been done, ellipses have been placed between the line numbers. <P>
The term &quot;peer(s)&quot; is used in this article to describe either or both computers involved in a connection.
</BLOCKQUOTE><HR>

<H2>Enabling Ppplog.txt File Generation</H2>
The Ppplog.txt file is generated by Pppmac.vxd, also known as the Dial-Up Adapter. The file is appended each time the Dial-Up Adapter is used. If you want to enable the generation of a Ppplog.txt file, perform the following procedure:<P>
<OL>
<LI>	In <B>Control Panel</B>, double-click <B>Network</B>. <P>
<LI>	On the <B>Configuration</B> tab, double-click the <B>Dial-Up Adapter</B>. <P>
<LI>	Click the <B>Advanced</B> tab. <P>
<LI>	In the <B>Property</B> box, click <B>Record A Log File</B>. <P>
<LI>	In the <B>Value</B> box, click <B>Yes</B>. <P>
<LI>	Click <B>OK</B> or <B>Close</B> until you return to <B>Control Panel</B>. When you are prompted to restart your computer, do so.<P>
</OL>

The next time you use the Dial-Up Adapter, the Ppplog.txt file is created in the Windows folder.<P>

<H2>Frame and Packet Structure</H2>
The structures are listed in Open Systems Interconnection (OSI) model order, from the data-link layer up. Individual protocol structures are not included; that level of complexity exceeds the scope and purpose of this article. A complete High-Level Data Link Control (HDLC)-framed PPP packet has the following structure: <P>
<BLOCKQUOTE>[-Flag-|-Address-|-Control-|-Protocol-|-Information-|-Padding-|-FCS-|-Flag-]</BLOCKQUOTE>
This structure can be broken into the following two logical parts: <P>
<H3>HDLC Framing of PPP Data</H3>
<BLOCKQUOTE>[-Flag-|-Address-|-Control-|-PPP Encapsulation-|-FCS-|-Flag-]</BLOCKQUOTE>

<P>The PPP frame's beginning and end is marked by a Flag sequence. In a data stream, the end of one frame and the beginning of the next is not noted by the presence of consecutive Flags; only one is needed. The field's length is one octet, and its value is always 01111110 (0x7e). <P>
Because PPP deals with point-to-point connections, the majority of implementations do not support individual addressing of PPP frames. The address that is used and must be supported by all implementations of PPP is the All-Stations broadcast address: 11111111 (0xff). <P>
The Control field is a single octet in length and, unless negotiated otherwise, has the value 00000011 (0x03). <P>
The Frame Check Sequence (FCS) is the checksum for the frame. It can be two or four octets (16- or 32-bit value) in length. The FCS defaults to the 16-bit value. It is calculated using the Address, Control, Protocol, Information, and Padding fields. Excluded are bits or octets inserted at the physical layer for transmission (synchronous or asynchronous) framing purposes, the FCS and Flag fields, and any bits that are flagged for transparent transmission in the Asynchronous Control Character Map (the ACCM is described later in this appendix).<P>
<H3>PPP Encapsulation</H3>
<BLOCKQUOTE>[-Protocol-|-Information-|-Padding-]</BLOCKQUOTE>

<P>The Protocol field can be either one or two octets in length, depending on whether protocol field compression is being used. It indicates the protocol contained within the PPP frame. With PPP, protocol identification numbers are based on the ISO 3309 extension mechanism for address fields. This states that if address field identifiers comply with the format stated in ISO 3309, implementations of PPP can reliably compress a 16-bit (2-octet) field down to an 8-bit (single octet) field while retaining all necessary information. <P>
The Information field consists of zero or more octets, which, including padding octets, does not exceed the Maximum Receivable Unit (MRU) length negotiated for the connection. <P>
The Padding field is optional, and any data used as padding must be easily discernible as such by the peers. If padding data is included, and exceeds the MRU, it is discarded silently. <P>
<H2>Control Mechanisms</H2>
<P>In order to properly interpret the Ppplog.txt file, read the following section to familiarize yourself with PPP's underlying control mechanisms and the phases the connection passes through. <P>
<H2>Finite-State Automaton (FSA)</H2>
<P>The FSA processes status messages from different layers, and then, after evaluating the message, tells other layers what they should do next. In general, the FSA relates information from layer to layer, without actually interacting in the exchange of data. For example, if the physical layer (modem-to-modem connection) is interrupted, the FSA notifies the network layer that it can no longer function, and must shut down. The automaton is said to exist in &quot;states.&quot; The progress of the connection is dependent on the current state of the automaton. <P>
<H2>Link Control Protocol (LCP)</H2>
<P>The link control protocol's job is to manage the data-link layer. It sets up, configures, and tests the connection. There are three classes of LCP packets: <P>
<UL>
<LI>Link Configuration packets establish and configure the link. <P>
<LI>Link Termination packets terminate the link. <P>
<LI>Link Maintenance packets manage and test the link. <P>
</UL>

Knowing the three classes of packets is important because a malfunctioning implementation of PPP can be indicated by the presence of a certain class of packet appearing at an inappropriate time. You may also see this behavior if the connection between the two peers is poor or the modems are misconfigured or malfunctioning. More information about the specific packets within each class and their relevance to the Ppplog.txt file is contained in the &quot;Parsing the Ppplog.txt File&quot; section of this appendix. <P>
<H2>Network Control Protocol (NCP)</H2>
<P>An NCP is a &quot;protocol manager.&quot; Each protocol that is used in the connection has an NCP. They work with the LCP to get the protocols up and ready to be used. When an NCP has opened, it is possible for network-layer traffic to be carried by the protocol that the NCP configured. NCPs are not defined in the same Request for Comment (RFC) document as the Point-to-Point protocol. They are defined separately, and as such are not covered in detail in this appendix. <P>
<H2>Phase Breakdown</H2>
<P>A PPP session consists of five distinct phases. Ppplog.txt file entries are more readily understood based on what happens during these phases. When common failures in a phase in Windows&#160;98 are referenced, any existing Microsoft Knowledge Base articles about that failure are referred to. <P>
<H2>Link-Dead</H2>
<P>Every PPP connection starts in the Link-Dead condition. In this condition, the physical layer is said to be &quot;Down,&quot; and the FSA &quot;Closed.&quot; In a switched circuit such as a modem connection over a telephone line, this condition exists when the modems are not connected. In a continuous connection, such as a leased line, there is usually some mechanism in place that enables the hardware to signal PPP that the link is available. When a carrier has been negotiated or the connection established, the hardware-handling routines signal the FSA that they can carry traffic, and PPP moves on to the Link Establishment phase. <P>
<H2>Link Establishment</H2>
<P>In the Link Establishment phase, the LCP configures and establishes the data-link layer. Its aim is to provide a solid foundation on top of which the network layer can operate. This process primarily involves the exchange of Class 1 LCP packets, and starts when one peer receives a Configure-Request packet from another. When all configuration options have been negotiated, a Configure-Ack packet is returned to the peer that initiated negotiation. At this point, the layer is up and PPP can proceed to the next phase. <P>
The following example illustrates a hypothetical conversation between two peers, Peer1 and Peer2. Each line represents a packet being transmitted. The peer sending the packet is listed in parentheses, and the packet type is listed in brackets. When the peer sending the packet is noted as &quot;(PeerNa,b,c),&quot; a possible response to a request is being noted, not sequential packets from the same peer. <P>
Synopsis:
<BLOCKQUOTE>
(Peer1)-[Configure-Request]: Contains information about all configuration options to be negotiated. All options are negotiated simultaneously.<P>

(Peer2a)-[Configure-Ack]: If the peer receiving the Configure-Request accepts all configuration options, it returns a Configure-Ack. Receipt of a Configure- Ack signals the end of LCP configuration. <P>

(Peer2b)-[Configure-Nak]: If the peer receiving the Configure-Request accepts all of the configuration option fields but not all the values of the fields, it must send a Configure-Nak. The Configure-Nak packet
specifies which option field values were not acceptable and suggests changes to the peer.<P>

(Peer2c)-[Configure-Reject]: Indicates to the peer that some of the option fields requested for negotiation are unrecognizable or unacceptable. The peer must send a new Configure-Request, omitting the rejected option fields.<P>

(Peer1)-[Configure-Request]<BR>
.<BR>
.<BR>
.<BR>
(Peer2)-[Configure-Ack]<P>

(Link configuration complete)<P>
</BLOCKQUOTE>
<P>It is important to note that because the majority of Windows&#160;98 PPP connections are asynchronous, according to RFC 1662 the following configuration options will always be negotiated: <P>
<BLOCKQUOTE>Asynchronous Control Character Map<BR>
Magic Number<BR>
Address and Control Field Compression<BR>
Protocol Field Compression<BR>
</BLOCKQUOTE>
<P>These options may not necessarily be negotiated in the order shown. <P>
<H2>Authentication</H2>
<P>When the link has been configured, the FSA changes state to &quot;Opened.&quot; The next step for the PPP connection is the Authentication phase. If a client fails to successfully authenticate itself, or if the host cannot authenticate the client for some reason, the connection is terminated. <P>
Usually, failure at this stage is due to an incorrect user name, password, logon domain, or preferred server entry. If this is the case, a User Logon dialog box is displayed, prompting for the correct information.<P>
Depending on the protocol used for authentication, the client may be given an infinite number of logon attempts, although usually the limit is three. These protocols are described later in this appendix. <P>
<H2>Network Layer Configuration</H2>
<P>After successful authentication, the last step is to configure and open all network protocols that have been selected on each peer. The NCP for a given network-layer protocol takes care of any configuration options that need to be negotiated. When option negotiation is finished, the protocol is opened and can begin carrying network-layer traffic. If one peer is not configured to use a protocol that the other peer is attempting to use, it returns the packet in a Protocol-Reject. A Protocol-Reject is a Class 3 LCP packet. The message shown in the Ppplog.txt file when a Protocol- Reject is sent or received is covered in the &quot;Parsing the Ppplog.txt File&quot; section of this article. Upon receipt of a Protocol-Reject packet, the peer must stop using the protocol contained within the packet. In Windows&#160;98, if both sides reject all protocols, a dialog box is displayed indicating that this situation has occurred.<P>
The following example uses the same conventions as the previous example for LPC option negotiation. <P>
Synopsis: <P>
<BLOCKQUOTE>
(Peer1)-[8021 NCP packet]: Peer1 transmits a packet over the link containing the Internet Protocol Control Protocol (PPP ID# 8021).<P>

(Peer2)-&lt;receives packet&gt;: Peer2 receives the packet, and upon inspection of the protocol identifier field, does not recognize the protocol being used. In Windows&#160;98, this translates into one of the following three scenarios: the protocol is disabled in the connectoid, the protocol is not bound to the Dial-Up Adapter, or the protocol is not loaded on the computer. The message generated in the Ppplog.txt file is covered later.<P>

(Peer2)-[Protocol-Reject]: Peer2 encapsulates a stripped-down version of the unsupported packet inside a Protocol-Reject packet, and returns it to Peer1.<P>

(Peer1)-[Protocol-Reject]: Peer1 receives the Protocol-Reject, and upon inspection of the protocol identifier field, immediately shuts down the protocol.<P>

(Protocol-Reject complete)<P>
</BLOCKQUOTE>

<HR><BLOCKQUOTE>
<B>Note</B><P>
A connectoid is an icon representing a dial-up networking connection that will also execute a script for logging onto the network dialed.<P>
</BLOCKQUOTE><HR>

<H2>Link Termination</H2>
<P>Link Termination can be caused by a number of events. These events include, but are not limited to: link failure (loss of carrier), authentication failure, and failure to negotiate at least one network protocol. Link Termination is affected by the exchange of Class 2 LCP packets. When the link begins the process of closing down, the network layer is notified that physical transport services are about to become nonexistent. Any non-LCP packets received during this time are discarded. When both sides have disconnected, PPP returns to the Link-Dead phase. <P>
Synopsis: <P>
<BLOCKQUOTE>
(Peer1)-[Terminate-Request]: When one peer wants to close the connection it can send a Terminate-Request.<P>

(Peer2)-[Terminate-Ack]: Upon reception of a Terminate-Request, a peer must respond with a Terminate-Ack.<P>

(Connection closed)<P>
</BLOCKQUOTE>

<H2>Parsing the Ppplog.txt File</H2>
<P>The following sections are divided into loosely categorized groupings of messages. They are not necessarily listed in order of appearance, and a message listed here may not appear in every Ppplog.txt file. <P>
<H2>State Transition Messages</H2>
<P>Messages that indicate a layer's transition from one state to another appear frequently, and occur in several forms: Started, Up, Down, and Finished. The message can be prefixed and suffixed with information detailing its origin and what particular part of the session it is reporting about. <P>
The status messages described below use the following conventions for describing variables that may change in different instances of the message: <P>
<UL>
<LI>&quot;aaa&quot; is an abbreviation or acronym referring to the source of the message. <P>
<LI>CHAP: acronym for Challenge-Handshake Authentication Protocol <P>
<LI>PAP: acronym for Password Authentication Protocol <P>
<LI>ND: acronym for No Description, this is the Shiva-PAP (SPAP) <P>
</UL>
<H3>aaa: Layer Started</H3>
This message, when prefixed with: <P>
<UL>
<LI>LCP: Indicates the beginning of configuration option negotiation. <P>
<LI>CHAP, PAP, or ND: Indicates the beginning of user authentication. <P>
<LI>NCP: Indicates that the NCP for a particular network-layer protocol has begun configuration negotiation. <P>
</UL>
<H3>aaa: Layer Up</H3>
This message, when prefixed with: <P>
<UL>
<LI>LCP: Indicates the completion of configuration option negotiation. <P>
<LI>CHAP, PAP, or ND: Indicates that the user logged on successfully. <P>
<LI>NCP: Indicates that the protocol's negotiation options were successfully negotiated with the peer.<P>
</UL>
<H3>aaa: Layer Down</H3>
This message, when prefixed with: <P>
<UL>
<LI>LCP: Indicates that a Terminate-Request packet has been received and acknowledged. <P>
<LI>CHAP, PAP, or ND: Is displayed as a formality, all protocols are closed when the link is being terminated. <P>
<LI>NCP: Indicates that the network-layer activity of this protocol has been stopped, usually due to link termination. <P>
</UL>
<H3>aaa: Layer Finished</H3>
This message, when prefixed with: <P>
<UL>
<LI>LCP: Indicates that the link has proceeded to the Link-Dead phase. <P>
<LI>NCP: Indicates that the NCP has completely ceased operation. <P>
</UL>

<H2>Static Status Messages</H2>
<P>Static messages appear in every Ppplog.txt file, at the beginning of each new addition to the log file. They serve little purpose other than to provide a familiar point of reference when you are trying to distinguish where one session starts and another ends. <P>
The status messages described below may use the following conventions for describing variables that may change in different instances of the message: <P>
<UL>
<LI>&quot;aaaa&quot; is an acronym for the server type. <P>
<LI>&quot;bbbb&quot; is a friendly name for the server type. <P>
</UL>
<H3>Remote Access Driver Log Opened</H3>
This line is the first line in the Ppplog.txt file. It is written when the file is opened, and control of the connection is handed to Pppmac.vxd from TAPI. <P>
<H3>No Installable CP VxDs Are Loaded</H3>
The architecture of Pppmac.vxd allows for installable Control Protocols to be added in the form of a virtual device driver (VxD). Windows&#160;98 includes only one: Spap.vxd. In addition, the following registry key contains the list of installable VxDs currently in use on the computer: <P>
<BLOCKQUOTE>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\VxD\PPP\CPList</BLOCKQUOTE>

<P>The entries listed in this key are string values consisting of a description of the protocol for the value name, and the actual VxD file name for the value data. <P>
<H3>Installable CP VxD SPAP Is Loaded</H3>
This line indicates that the Shiva Password Authentication Protocol has been loaded. <P>
<H3>Server Type Is aaaa (bbbb)</H3>
This message displays the type of connection being attempted. Note that although all of the following server types listed are supported by the Windows&#160;98 Dial-Up Networking client, Dial-Up Networking Server accepts only RAS and PPP connections: <P>
<UL>
<LI>RAS: Remote Access Server <P>
<LI>PPP: Point-to-Point protocol <P>
<LI>NRN: NetWare Connect (version 1.0 or 1.1) <P>
<LI>SLIP: Serial Line Internet protocol <P>
<LI>CSLIP: Compressed SLIP (uses Van Jacobson IP header compression) <P>
</UL>
<H2>Dynamic Status Messages (FSA)</H2>
<P>Messages prefixed with &quot;FSA :&quot; report information about the status of the connection. <P>
The status messages described below use the following conventions for describing variables that may change in different instances of the message: <P>
<UL>
<LI>&quot;xx&quot; is an 8-bit hexadecimal value.<P>
<LI>&quot;xxyy&quot; is a 16-bit hexadecimal value that identifies a protocol.<P>
<LI>&quot;nnnn&quot; is an abbreviated name for protocol xxyy.<P>
</UL>
<H3>Adding Control Protocol xxyy (nnnn) to Control Protocol Chain</H3>
This message indicates that an NCP that is supported by the implementation of PPP has been selected in the connectoid for this connection. <P>
<H3>Protocol Disabled by User - Skipping Control Protocol xxyy (nnnn)</H3>
This message indicates that a protocol that is supported by the implementation of PPP has been disabled by the user.<P>
<H3>Protocol Not Bound - Skipping Control Protocol xxyy (nnnn)</H3>
This message indicates that a protocol that is supported by the implementation of PPP is not bound to the Dial-Up Adapter in the Network tool in Control Panel. <P>
<H3>Encrypted Password Required</H3>
This message indicates that both peers have the ability to exchange an encrypted password, and the option is enabled at both ends of the connection. <P>
<H3>Sending Protocol Reject for Control Protocol xxyy</H3>
This message is direction-specific. It indicates that the computer on which the Ppplog.txt file is currently being examined has sent a Protocol-Reject packet for a specific network-layer protocol that the implementation does not support. The packet contains, among other things, a field that contains the 16-bit protocol identifier and a field that contains as much information from the rejected packet as possible up to the session's Maximum-Receivable Unit (MRU) length. <P>
<H3>Received Protocol Reject for Control Protocol xxyy</H3>
This message is direction-specific. It indicates that the computer on which the Ppplog.txt file is currently being examined has received a Protocol-Reject for an NCP whose use it is attempting to negotiate with a peer. <P>
<H3>Remote PPP Software Sent Unrecognized Packet of Type xx to CP xxyy</H3>
This message follows immediately after the message &quot;Received unknown code nn&quot; described later in this article. It indicates the packet type identifier of an unrecognized packet and the control protocol named in the protocol type field. This usually indicates a faulty physical connection such as a misconfigured modem, not a malfunctioning implementation of PPP. <P>
<H3>Last Control Protocol Is Up</H3>
This message indicates that the last control protocol loaded by PPP has changed to the &quot;Up&quot; state. This does not necessarily mean that the connection will be successful.<P>
<H3>Last Control Protocol Failed</H3>
This message indicates that the last control protocol selected for use with the PPP session has failed to change to the &quot;Up&quot; state. This does not necessarily mean that the connection will fail.<P>
<H3>No Network Protocols Were Successfully Negotiated</H3>
This message usually follows the one above. The &quot;Dial-Up Networking could not negotiate a compatible set of network protocols...&quot; error message displayed by Dial-Up Networking is generated when this condition exists. Stepping backward from this message through the Ppplog.txt file will show you which computer rejected which protocol, and can aid in determining which computer has a problem.<P>

<H2>Dynamic Status Messages (LCP)</H2>
<P>Messages prefixed with &quot;LCP :&quot; report LCP event information. These events usually consist of option negotiation status messages or layer transition notifications. <P>
The status messages described below use the following conventions for describing variables that may change in different instances of the message: <P>
<UL>
<LI>&quot;nn&quot; is a decimal number. <P>
<LI>&quot;xxxx&quot; is a decimal number indicating a quantity in bytes. <P>
<LI>&quot;xxyy&quot; is a 16-bit hexadecimal value that identifies a protocol. <P>
<LI>&quot;nnnn&quot; is a semi-friendly abbreviated name for the same protocol. <P>
</UL>
<H3>Received and Accepted ACCM of yyyyy</H3>
This message indicates that the peers have agreed on an ACCM of yyyyy. The ACCM is the Asynchronous Control Character Map. It can range in length from one to four octets. Its function is to provide a method for making control characters, which could be misinterpreted as actual data, transparent in the data stream. <P>
<H3>Received and Accepted Authentication Protocol xxyy (nnnn)</H3>
This message indicates that the configuration option for the authentication protocol to be used was accepted by both peers. The Windows&#160;98 implementation of PPP can use one of three authentication methods: Password Authentication Protocol (PAP), Challenge-Handshake Authentication Protocol (CHAP), or the Shiva Password Authentication Protocol (SPAP). <P>
PAP is the least secure of the three authentication types. It uses a clear-text transmission of the password from the client to the host. Such a transmission can be easily intercepted. <P>
CHAP uses a secure challenge-response authentication method that allows the peer to be authenticated by an &quot;authenticator&quot; without transmitting the password in the clear as PAP does. The host sends a &quot;challenge&quot; to the client that consists of a randomly generated octet stream. Upon receiving the challenge, the peer concatenates the CHAP session ID, challenge value, and the user's password and then hashes it. This hash value and the user name of the peer being authenticated is then sent to the authenticator in a response. The authenticator maintains a database that correlates user names to passwords. When it receives the response from the peer, it looks up the user's password, performs the same concatenation and hashing, and compares the hash value it generates to the one from the peer. If the values match, the peer is authentic. <P>
Hashing is a mathematical operation performed on a given value using a known algorithm to ensure that it is computationally unfeasible to reverse-engineer intelligible data from hashed data. The hashing algorithm most commonly used by CHAP is known as Message-Digest 5 (MD5).<P>
SPAP is used exclusively with the Shiva LAN Rover remote access unit and when you are dialing into a Windows&#160;98-based computer that is performing pass-through validation with a Novell NetWare server. It is more secure than PAP in that it provides encryption of PAP-transmitted passwords and access attempts to Novell NetWare binderies. <P>
<H3>Received and Accepted Magic Number aabbxxyy</H3>
A magic number is a hexadecimal value between two and four octets in length. It is a unique number generated from a random seed value that is determined from some external source, such as the intervals between the operator's keystrokes or the Nth decimal measurement of the system clock. Each peer generates a magic number during LCP negotiation. It is used to ensure that the PPP session actually involves two peers, in order to prevent looped-back connections. In Windows&#160;98, if a peer receives a magic number equal to its own, or one of value 0, it is rejected, and the peers must re-exchange magic numbers. All diagnostic packets use the magic number to identify the sender of the packet. <P>
<H3>Naking Possibly Loopback Magic Number</H3>
When an invalid value for the magic number is received, that configuration option is returned to the offending peer in a Configure-Nak, prompting the exchange of a new and hopefully valid magic number. If the condition cannot be resolved, the link terminates immediately. This error is extremely rare. If it is received, try the following steps: <P>
<OL>
<LI>	In the <B>Dial-Up Networking</B> connectoid, in <B>TCP/IP Settings</B>, set all options to &quot;Server Assigned.&quot;<P>
<LI>	In the <B>Network</B> tool in <B>Control Panel</B>, configure the instance of TCP/IP bound to the <B>Dial-Up Adapter</B> with the user's TCP/IP information; specifically the DNS servers and IP addressing information. <P>
<LI>	Reboot and try the connection again. <P>
</OL>

If this, coupled with standard troubleshooting procedures, fails to resolve the issue, have the user contact his or her Internet service provider or system administrator. <P>
<H3>Received and Accepted Protocol Field Compression Option</H3>
This message indicates that both peers have agreed to compress the information contained in the PPP frame's protocol field. This reduces the size of that field from two octets to one. This configuration option was designed into PPP with slow or low-bandwidth links in mind. <P>
<H3>Received and Accepted Address+Control Field Compression Option</H3>
This message indicates that both peers have agreed to compress link-layer address and control fields within the PPP frame. This option is easily implemented, as the values of these fields are constants in a Point-to- Point connection. Like the protocol field compression option, this option was included to improve performance on slow or low-bandwidth links. <P>
<H3>Received Configure Reject for Callback Control Protocol Option</H3>
This message is direction-specific. It indicates that the computer on which the Ppplog.txt file is currently being examined has rejected the use of the callback control protocol. This computer is usually a Dial-Up Networking server that does not support the callback control protocol. It is included in the Dial-Up Networking client for use with Microsoft Windows NT. With Windows&#160;98, this rejection message is a non-catastrophic event. Other implementations of PPP, for security reasons, may use a callback feature to augment user authentication and require that the peer be called back.<P>
<H3>Rejecting Callback Protocol Negotiation Request</H3>
This message is direction-specific. It indicates that the computer on which the Ppplog.txt file is currently being examined has rejected an attempt by the peer to negotiate the use of the callback control protocol.<P>
<H3>Received Unknown Code nn</H3>
This message indicates that the computer on which the Ppplog.txt file is currently being examined has received an LCP packet that contains an LCP packet identifier that the implementation does not support. These packets are discarded.<P>

<H2>Callback Control Protocol (CallbackCP)</H2>
<P>The CallbackCP is seldom seen in the Ppplog.txt file. The messages shown in the Ppplog.txt file are described below, and a log example is provided later in this appendix.<P>
<H3>CallbackCP : Layer Started</H3>
This message is shown when the CallbackCP has not been rejected by either peer, and peer authentication was successful. One of the next three messages listed will follow this message.<P>
<H3>Callback : Skipping Callback and Continuing with Current Connection</H3>
This message indicates that the server supports the CallbackCP, and that the use of the peer callback has been disabled. This is commonly seen when dialing into a Windows NT RAS server.<P>
<H3>Callback : Telling Server to Callback at User Specified Number</H3>
When callback is enabled on the server, it can be configured to let the user supply the phone number to be called back with. When this is the case, the user will see a dialog box that prompts him or her to enter the phone number.<P>
<H3>Callback : Telling Server to Callback at Administrator Specified Number</H3>
When callback is enabled on the server, it can be configured with a preset number for each user. This is typically used in high-security environments to guard against the possibility that a user's logon information has been compromised. The user must be at a prearranged telephone number known to the server. When this is the case, the user will see a dialog box that prompts him or her to accept the &quot;&lt;Administrator&gt;&quot; password, at which point the callback procedure either terminates or continues depending on the user's selection of OK or Cancel.<P>
<H3>CallbackCP : Layer Finished</H3>
When the user has either supplied the necessary information or canceled the connection, this message is displayed. If the connection is going to be reestablished through a callback, PPP shuts down and enters a wait-for- call mode. When the server calls back, PPP answers the phone, final link negotiation takes place, and the connection is established.<P>
<H3>CallbackCP : Layer Up</H3>
When the peers skip the callback procedure, this message is shown. When the connection is terminated, the CallbackCP is closed just like any other protocol. The actual skipping of callback is not considered a catastrophic event, and as such, the protocol is not closed at that point.<P>

<H2>Values for xxyy and nnnn</H2>
<P>Values for xxyy in the [0xxx-3xxx] range represent the network-layer protocols of specific datagrams. Values in the [8xxx-bxxx] range identify NCP datagrams for the associated protocol, if it has one. Values in the [cxxx-exxx] range identify datagrams as Control Protocols. Not all of the protocol identifiers listed below are present in the Windows&#160;98 implementation of PPP.<P>
Listings with an asterisk (*) are supported in Windows&#160;98. <P>
<BLOCKQUOTE>
0021 Internet protocol *<BR>
0023 OSI network layer<BR>
002b Novell IPX *<BR>
002d Van Jacobson compressed TCP/IP<BR>
002f Van Jacobson uncompressed TCP/IP<BR>
003d Multi-link<BR>
003f NETBIOS framing *<BR>
0049 Serial Data Transport protocol (PPP-SDTP)<BR>
007d Reserved (Control Escape) [RFC 1661]<BR>
007f Reserved (compression inefficient) [RFC 1662]<BR>
00cf Reserved (PPP Network Layer Protocol Identifier (NLPID))<BR>
00fb Compression on single link in multi-link group<BR>
00fd First choice compression *<BR>
<BR>
8001-801f Not used - reserved [RFC 1661]<BR>
8021 Internet Protocol Control protocol *<BR>
8023 OSI Network Layer Control protocol<BR>
802b Novell IPX Control protocol *<BR>
803d Multi-Link Control protocol<BR>
803f NETBIOS Framing Control protocol *<BR>
8049 Serial Data Control protocol (PPP-SDCP)<BR>
807d Not used - reserved [RFC 1661]<BR>
80cf Not used - reserved [RFC 1661]<BR>
80fb Compression on single link in multi-link group control<BR>
80fd Compression Control protocol *<BR>
80ff Not used - reserved [RFC 1661]<BR>
c021 Link Control protocol *<BR>
c023 Password Authentication protocol *<BR>
c025 Link quality report<BR>
c027 Shiva Password Authentication protocol *<BR>
c029 CallBack Control protocol (CBCP) *<BR>
c081 Container Control protocol <BR>
c223 Challenge Handshake Authentication protocol *<BR>
c281 Proprietary Authentication protocol *<BR>
</BLOCKQUOTE>

<H2>Sample Ppplog.txt Files</H2>
<P>This section contains examples of Ppplog.txt files generated during different types of PPP connections, both successful and unsuccessful. These examples have been interpreted and commented to show the value of each part of the Ppplog.txt file as applied during troubleshooting sessions.<P>

<H3>Example 1 - Windows&#160;98/Windows&#160;98 [NetBEUI]</H3>
<BLOCKQUOTE>
01) 35.15 - Remote access driver log opened.<BR>
02) 35.15 - Installable CP VxD SPAP is loaded. <BR>
03) 35.15 - Server type is PPP (Point-to-Point Protocol).<BR>
04) 35.15 - FSA : Adding Control Protocol 80fd (CCP) to control protocol chain.<BR>
05) 35.15 - FSA : Adding Control Protocol 803f (NBFCP) to control protocol chain.<BR>
06) 35.15 - FSA : Protocol disabled by user - skipping control protocol 8021 (IPCP).<BR>
07) 35.15 - FSA : Protocol disabled by user - skipping control protocol 802b (IPXCP).<BR>
08) 35.15 - FSA : Adding Control Protocol c029 (CallbackCP) to control protocol...<BR>
09) 35.15 - FSA : Adding Control Protocol c027 (no desc.) to control protocol chain.<BR>
10) 35.15 - FSA : Adding Control Protocol c023 (PAP) to control protocol chain.<BR>
11) 35.15 - FSA : Adding Control Protocol c223 (CHAP) to control protocol chain.<BR>
12) 35.15 - FSA : Adding Control Protocol c021 (LCP) to control protocol chain.<BR>
13) 35.15 - LCP : Callback negotiation enabled.<BR>
14) 35.15 - LCP : Layer started.<BR>
15) 35.36 - LCP : Received configure reject for callback control protocol option.<BR>
16) 37.96 - LCP : Received and accepted ACCM of a0000.<BR>
17) 37.96 - LCP : Received and accepted authentication protocol c223 (CHAP).<BR>
18) 37.96 - LCP : Received and accepted magic number 995dc00.<BR>
19) 37.96 - LCP : Received and accepted protocol field compression option.<BR>
20) 37.96 - LCP : Received and accepted address+control field compression option.<BR>
21) 37.96 - LCP : Layer up.<BR>
22) 37.96 - CHAP : Layer started.<BR>
23) 38.37 - CHAP : Login was successful.<BR>
24) 38.37 - CHAP : Layer up.<BR>
25) 38.37 - NBFCP : Layer started.<BR>
26) 38.37 - CCP : Layer started.<BR>
27) 38.38 - FSA : Sending protocol reject for control protocol 8021.<BR>
28) 41.39 - CCP : Received and accepted compression value 1.<BR>
29) 41.40 - NBFCP : Layer up.<BR>
30) 44.37 - CCP : Received and accepted compression value 1.<BR>
31) 44.37 - CP : Layer up.<BR>
32) 44.37 - FSA : Last control protocol is up.<BR>
33) 04.90 - Remote access driver is shutting down.<BR>
34) 04.90 - CRC Errors 0.<BR>
35) 04.90 - Timeout Errors 0.<BR>
36) 04.90 - Alignment Errors 0.<BR>
37) 04.90 - Overrun Errors 0.<BR>
38) 04.90 - Framing Errors 0.<BR>
39) 04.90 - Buffer Overrun Errors 0.<BR>
40) 04.90 - Incomplete Packets 0.<BR>
41) 04.90 - Bytes Received 62373.<BR>
42) 04.90 - Bytes Transmitted 9403.<BR>
43) 04.90 - Frames Received 323.<BR>
44) 04.90 - Frames Transmitted 330.<BR>
45) 04.90 - LCP : Layer down.<BR>
46) 04.90 - CHAP : Layer down.<BR>
47) 04.90 - NBFCP : Layer down.<BR>
48) 04.90 - CCP : Layer down.<BR>
49) 05.03 - LCP : Received terminate acknowledgment.<BR>
50) 05.03 - LCP : Layer finished.<BR>
51) 05.03 - Remote access driver log closed.<BR>
</BLOCKQUOTE>

<P>Lines 1-12 outline the computer's current configuration: which protocols are bound and enabled, what the server type is, and so on. In a PPP phase diagram, this section would most closely correspond to the Link-Dead phase. Lines 5-7 are important as they describe the status of the network protocols installed. At least one of the three protocols should say &quot;Adding Control Protocol...&quot; or the connection will fail. In this example, IP and IPX are disabled in the connectoid used to make the connection; only NetBEUI will be used. <P>
However, if lines 5-7 looked like the following example, the connection would fail with a &quot;Dial-Up Networking could not negotiate...&quot; error message:<P>
<BLOCKQUOTE>
Protocol not bound - skipping control protocol 803f (NBFCP).<BR>
Protocol disabled by user - skipping control protocol 8021 (IPCP).<BR>
Protocol disabled by user - skipping control protocol 802b (IPXCP).<BR>
</BLOCKQUOTE>
<P>If this is the problem, determine which protocol is common to both computers, then make sure that it is loaded and bound to the Dial-Up Adapter on both computers.<P>
Lines 13-21 show the Link Control Protocol (LCP) negotiating the operational parameters for link-layer control of the connection, illustrating the Link Establishment phase.<P>
In this example, the process is completed the first time through. Depending on peer configuration, option negotiation can be repeated several times, until both sides agree on the options and their values. This process must finish. If it does not, the connection is terminated immediately.<P>
When there is a hardware problem related to the modem or serial cable, or if the phone line is unreliable, it is common for this portion of the Ppplog.txt file to resemble the following:<P>
<BLOCKQUOTE>
Callback negotiation enabled.<BR>
Layer started.<BR>
Layer finished.<BR>
</BLOCKQUOTE>
<P>This is significant because the Ppplog.txt file does not list what Pppmac.vxd cannot make sense of. If one peer sends a frame that contains a valid Configure-Request packet, and it is damaged in transit, the receiving peer cannot identify it and it will be discarded. If, within a certain amount of time, LCP configuration does not finish, the Finite State Automaton (FSA) will time out. As a consequence, the connection will be terminated. Typically, between 5-10 seconds elapse during a high-speed connection after carrier negotiation finishes before the connection is terminated due to LCP option negotiation failure. If you see this message sequence in a Ppplog.txt file, consider the following items: <P>

<UL>
<LI>The modem, cable, or serial port is bad. <P>
<LI>Enable the Post-Dial Terminal Screen to verify that there are no menus to navigate or additional information required from the user after connection to start the PPP connection. <P>
<LI>You may be using the wrong line protocol type (PPP instead of SLIP, and so on).<P>
</UL>
<P>

<img src="arrow.gif" width=9 height=14 border=0><B>To enable the Post-Dial Terminal Screen</B><P>
<OL>
<LI>From <B>My Computer</B>, double-click on <B>Dial-Up Networking</B>.<P>
<LI>Select the connection object, then open its <B>Properties</B>.<P>
<LI>On the <B>General</B> tab, in <B>Connect Using</B>, select the appropriate modem then click the <B>Configure</B> button.<P>
<LI>On the modem's properties sheet, click the <B>Options</B> tab, then in <B>Connection Control</B>, select <B>Bring Up Terminal Window After Dialing</B>.<P>
</OL>
</UL>
Lines 22-24 log the actions taken during the Authentication phase of the PPP connection. If peer authentication fails, the connection must terminate immediately. Lines 22-24 document this process. Normally, this portion of the Ppplog.txt will be only three lines long. However, depending on the type of authentication taking place, this section can be much longer. When PAP is used for peer authentication, the number of password retries can be infinite, unless there is a mechanism in place to limit the number of tries.<P>
If user authentication finishes, the next step is to configure the negotiated network protocols for use. This is the Network Layer Configuration phase, and it continues until the operational parameters for all protocols common to both peers have been negotiated. If this is successful, the following message will be displayed:<P>
<BLOCKQUOTE>FSA : Last control protocol is up.</BLOCKQUOTE>
<P>
<P>If network layer configuration is unsuccessful, the following message will be displayed:<P>
<BLOCKQUOTE>FSA : No network protocols were successfully negotiated.</BLOCKQUOTE>
<P>
<P>This will be accompanied by the &quot;Dial-Up Networking could not negotiate...&quot; error message in the user interface, and the connection will be terminated.<P>
When either peer, whether by user or administrative (automaton) action, decides to end the PPP session, the connection transitions to the Link Termination phase. This is initiated when one peer transmits a Terminate-Request packet. When all upper-level protocols have been closed, the peer transmits a Terminate-Ack and the connection then closes completely.<P>
For the most part, lines 33-51 list the session statistics, such as frames transmitted, CRC errors, and so on. This information can be useful when troubleshooting. For example, if you are being spontaneously disconnected, and you have an unusually high number of CRC errors (with a good modem, 1-2 are allowable), you might want to have your telephone lines checked for excessive noise. The telephone line is not the world's friendliest transmission medium, and while the quality of telephone connections is generally excellent, in some areas, and during certain weather conditions, the line quality can be very poor. When the modems cannot maintain a reliable connection, they disconnect. With external modems, a poorly made serial cable can also be a problem. A high-quality, well-shielded cable is desirable for the best performance with an external modem. <P>
<H3>Example 2 - Windows&#160;98/Internet Service Provider (ISP) [TCP/IP]</H3>
<BLOCKQUOTE>01) 26.07 - Remote access driver log opened. ...<BR>
02) 27.59 - IPCP : Layer started.<BR>
03) 27.59 - IPCP : IP address is 0.<BR>
04) 27.76 - IPCP : Received and accepted compression protocol request f0.<BR>
05) 27.76 - IPCP : Received and accepted IP address of 95aed753.<BR>
06) 28.83 - IPCP : Changing IP address from 0 to c7aef648.<BR>
07) 28.83 - IPCP : Accepting primary DNS 95aed305.<BR>
08) 29.35 - IPCP : Layer up.<BR>
09) 29.35 - FSA : Last control protocol is up.<BR>
10) 10.39 - Remote access driver is shutting down. ... <BR>
11) 10.39 - LCP : Layer down.<BR>
12) 10.39 - IPCP : Layer down.<BR>
13) 10.92 - Remote access driver log closed.<BR>
</BLOCKQUOTE>
<P>Lines 2-8 document the procedure by which the client is assigned an IP address by the ISP. Initially, the client's IP address is 0, as shown by line 3. IP addresses are assigned to the client by the host. The host can also assign the client primary and secondary nameserver (DNS and WINS) addresses. To determine if your ISP will assign DNS addresses in the event that you do not specify them, you can do one of two things: <P>
<OL>
<LI>	Call your IPS and ask. <P>
<LI>	Set your connectoid to &quot;Server assigned name server addresses&quot; and use Winipcfg.exe to see if the server has assigned DNS addresses.<P>
</OL>

In line 6, the client changes its IP address from 0 to C7-AE-F6-48. If the IP addresses look strange, it is because in the Ppplog.txt file, IP addresses are shown in hexadecimal format. The decimal equivalents of IP addresses are used when configuring network connections that use TCP/IP because they are easy to handle. The actual information is transmitted in binary, which would be difficult to remember because the addresses total 32 binary digits. For example: <P>
<BLOCKQUOTE>
Binary:  11000111 10101110 11110110 01001000<BR>
Hex:     C7-AE-F6-48<BR>
Decimal: 199.174.246.72<BR>
</BLOCKQUOTE>
<P>With line 9, the connection has stabilized and interaction with the Internet is possible. Line 10 indicates that an administrative action (the user or the host) has caused the connection to begin closing. The remaining lines chronicle the status transitions of the LCP and IPCP modules. With line 13, the connection has been completely terminated, and all parameters negotiated during the connection have been flushed from the TCP/IP stack.<P>
<H3>Example 3 - Windows&#160;98/Windows NT 3.51 RAS [NetBEUI, IPX/SPX, TCP/IP]</H3>
<BLOCKQUOTE>
01) 13.94 - Remote access driver log opened. ...<BR>
02) 13.95 - LCP : Callback negotiation enabled.<BR>
03) 13.95 - LCP : Layer started.<BR>
04) 17.31 - LCP : Received and accepted ACCM of 0.<BR>
05) 17.31 - LCP : Received and accepted authentication protocol c223 (CHAP).<BR>
06) 17.31 - LCP : Received and accepted magic number 5b88.<BR>
07) 17.31 - LCP : Received and accepted protocol field compression option.<BR>
08) 17.31 - LCP : Received and accepted address+control field compression option.<BR>
09) 17.36 - LCP : Layer up. <BR>
10) 17.36 - CHAP : Layer started.<BR>
11) 19.25 - CHAP : Login was successful.<BR>
12) 19.25 - CHAP : Layer up.<BR>
13) 19.25 - CallbackCP : Layer started.<BR>
14) 19.26 - Callback : Skipping callback and continuing with current connection.<BR>
15) 19.46 - CallbackCP : Layer up.<BR>
16) 19.46 - IPXCP : Layer started.<BR>
17) 19.46 - IPCP : Layer started.<BR>
18) 19.46 - IPCP : IP address is 0.<BR>
19) 19.46 - NBFCP : Layer started.<BR>
20) 19.46 - CCP : Layer started.<BR>
21) 19.50 - CCP : Received and accepted compression value 1.<BR>
22) 19.57 - IPXCP : Changed net number from 0 to ed420f01.<BR>
23) 19.57 - IPXCP : Received and accepted peer node number 0 0 0 0 0 1.<BR>
24) 20.10 - IPXCP : Layer up.<BR>
25) 20.18 - IPCP : Changing IP address from 0 to 9d3a29bb.<BR>
26) 20.18 - IPCP : Accepting primary WINS 9d361099.<BR>
27) 20.18 - IPCP : Accepting backup WINS 9d36109b.<BR>
28) 23.15 - CCP : Layer up.<BR>
29) 23.33 - NBFCP : NAK received - Projection failed.<BR>
30) 23.33 - NBFCP : Layer down.<BR>
31) 23.48 - NBFCP : Layer finished.<BR>
32) 23.80 - IPCP : Received and accepted compression protocol request f1.<BR>
33) 23.80 - IPCP : Received and accepted IP address of 9d3a2b98.<BR>
34) 23.80 - IPCP : Layer up.<BR>
35) 23.80 - FSA : Last control protocol is up.<BR>
36) 34.88 - Remote access driver is shutting down. ...<BR>
37) 34.88 - LCP : Layer down.<BR>
38) 34.88 - CHAP : Layer down.<BR>
39) 34.88 - CallbackCP : Layer down. <BR>
40) 34.88 - IPXCP : Layer down. <BR>
41) 34.88 - IPCP : Layer down. <BR>
42) 34.88 - CCP : Layer down. <BR>
43) 35.07 - LCP : Received terminate acknowledgment. <BR>
44) 35.07 - LCP : Layer finished. 45) 35.07 - Remote access driver log closed.<BR>
</BLOCKQUOTE>
<P>Lines 3-9 show the LCP configuration. An ACCM of 0 was negotiated, indicating that no characters are flagged for transparent transmission. <P>
In lines 10-12, the Windows&#160;98 DUN client logs into the Windows&#160;NT RAS server. If the user has specified in the properties for the Client for Microsoft Networks that he or she wants to log into the Windows&#160;NT domain, that takes place after the user has logged into the RAS server. In this example, the client logged into a Windows&#160;NT domain. There is nothing in the Ppplog.txt file that indicates this difference. <P>
Line 13-15 illustrate something common to Windows&#160;NT RAS servers: the use of the Callback Control Protocol (CallbackCP or CBCP). Most of the time, the server has this option disabled, and as such, the sequence shown above takes place. This is normal. <P>
Lines 16, 17, and 19 show the NCPs for the installed protocols starting. All were selected in the connectoid, so PPP will attempt to configure and open them. <P>
Line 18 is a status message from IPCP indicating the initial IP address of the client, 0. This is normal and is expected. <P>
Lines 20, 21, and 28 show the Compression Control Protocol (CCP) as it starts, negotiates the compression options for the connection, and then transitions to the Up (operating) state. <P>
Lines 22-24 show the IPX Control Protocol (IPXCP) receiving and setting its IPX network and node numbers, then opening. At this point, IPX/SPX is configured and functioning. <P>
Lines 25-27 and 32-34 show the configuration of the TCP/IP protocol, handled by the Internet Protocol Control protocol (IPCP). The RAS server used for this example supports DHCP, which handles the assignment of WINS and node IP addresses. With line 34, TCP/IP is configured and functioning. <P>
Lines 29-31 document the failure of the NetBIOS Frames Control protocol to be properly configured. Line 29 lists the actual cause for failure: <P>
<BLOCKQUOTE>NBFCP : NAK received - Projection failed.</BLOCKQUOTE>
<P>
<P>This means that the client broadcast a packet to the remote network in an attempt to see if its network name was unique, and a computer responded as having the same name. Because NetBIOS is completely dependent on its NetBIOS name, a duplicate name on the same network cannot be tolerated. Therefore, the protocol closes immediately. Line 35 indicates that all NCP activity has completed and the link is ready to pass network-layer traffic. <P>
Line 36 indicates that the connection has been terminated, and from this point on, all the NCPs shut down, ending with the LCP entering the Finished state at line 44. PPP has come full-circle to the Link-Dead phase.<P>

<HR><BLOCKQUOTE>
<B>Note</B><P>
Between lines 36 and 37, the link statistics are usually displayed. They have been removed for this example.
</BLOCKQUOTE><HR>

<H3>Example 4 - Windows&#160;98/Windows NT [CallbackCP Example]</H3>
Nearly all messages have been removed from the example below. This example is provided to illustrate the flow of a Windows&#160;98 DUN connection to a server that supports the CallbackCP option. In this particular connection, the user was allowed to specify the phone number. <P>
<BLOCKQUOTE>
01) 12.93 - Remote access driver log opened. ... <BR>
02) 12.93 - LCP : Callback negotiation enabled. <BR>
03) 12.93 - LCP : Layer started. ... <BR>
04) 13.17 - LCP : Layer up. <BR>
05) 13.17 - CHAP : Layer started. ...<BR>
06) 13.52 - CHAP : Layer up. <BR>
07) 13.52 - CallbackCP : Layer started. <BR>
08) 16.28 - Callback : Telling server to callback at user specified number.<BR>
09) 17.11 - Callback : Telling server to callback at user specified number.<BR>
10) 17.25 - CallbackCP : Layer finished. <BR>
11) 17.25 - FSA : Preparing for callback from server. <BR>
12) 17.25 - LCP : Layer down. ... <BR>
13) 17.36 - LCP : Layer finished. <BR>
14) 17.37 - Remote access driver is shutting down. ... <BR>
15) 17.37 - Remote access driver log closed.<BR>
&lt;server calls back at this point&gt;<BR>
16) 51.41 - Remote access driver log opened. <BR>
17) 51.42 - LCP : Layer started. ... <BR>
18) 53.40 - LCP : Layer up. <BR>
19) 53.40 - CHAP : Layer started. ... <BR>
20) 53.79 - CHAP : Layer up. <BR>
21) 53.79 - NBFCP : Layer started. ... <BR>
22) 58.41 - NBFCP : Layer up. <BR>
23) 58.41 - FSA : Last control protocol is up. <BR>
24) 40.66 - Remote access driver is shutting down. ... <BR>
25) 40.66 - LCP : Layer down. ... <BR>
26) 40.77 - LCP : Layer finished. <BR>
27) 40.77 - Remote access driver log closed.<BR>
</BLOCKQUOTE>
<P>Lines 7-11 are the most critical part of the connection. If there are any errors here, the callback will fail. There are currently no examples of this failing due to an error in the implementation of PPP.<P>
The most common cause for failure is a modem that is physically set using DIP switches or jumpers to the S0=0 condition (auto-answer disabled). In some cases, the switch setting will override any command issued to set the modem to answer after 'n' number of rings (ATS0=n). The next most common cause for failure is PCMCIA modems connected to a telephone network (either the PSTN or a PBX-type environment) that is not supplying enough ring voltage to trip the modem's ring-detect circuit. Unfortunately, in this case, there is nothing that can be done.<P>
Either way, the best way to test this condition is to use a terminal program such as HyperTerminal to issue the ATS0=2 command to the modem, and dial the line the modem is connected to. If the modem does not answer the line, the modem has a hardware-related problem as described above. If it does answer the line, you may want to add the S0 command to the modem's initialization string.<P>
Line 15 is the point where DUN enters the wait-for-call state. When the server calls back, the log is opened again.<P>
The one thing to remember is that network-layer protocols do not go through option negotiation until the callback has finished. Just because the peers agree to the callback does not mean that the protocol configuration is correct. If the callback works, and protocol negotiation fails, continue to troubleshoot the issue normally.<P>


</BODY>
</HTML>
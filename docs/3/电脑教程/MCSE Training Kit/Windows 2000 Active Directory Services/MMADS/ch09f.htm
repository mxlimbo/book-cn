<html>
<head>
<title>Lesson 5: Troubleshooting Permissions Problems</title>
<link rel="STYLESHEET" type="text/css" href="mmads.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch09e.htm", "ch09g.htm", "images/unit_p_a1.gif", "images/unit_p_a2.gif", "images/unit_p_b1.gif", "images/unit_p_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#aa22aa", "2");
//--></SCRIPT><P>

<A NAME="453"><h1>Lesson 5: Troubleshooting Permissions Problems</h1></A>
<p>When you assign or modify NTFS permissions to files and folders, problems might arise. Troubleshooting these problems is important to keep resources available to users. This lesson describes common permission-related problems and their solutions.</p>

<p>
<div class="sidebar"><blockquote>
<b>After this lesson, you will be able to</b>

<ul>
<p><li> Recognize common reasons why users cannot gain access to resources</li></p>

<p><li> Solve common permission-related problems</li></p>
</ul>

<p><b>Estimated lesson time: 5 minutes</b></p>
</blockquote></div>
</p>

<A NAME="454"><h2>Troubleshooting Permissions Problems</h2></A>
<p>Table 9.12 describes some common permissions problems that you might 
encounter and provides solutions that you can try to resolve these problems.</p>

<p><b>Table 9.12</b> <i>Permissions Problems and Solutions</i></p>

<p><table cellpadding=5 width="95%">
<tr><th>Problem</th>
<th>Solution</th></tr>

<tr><td valign="top">A user cannot gain access to a file or folder.</td>
<td valign="top">If the file or folder was copied, or if it was moved to another NTFS volume, the permissions might have changed. Check the permissions that are  assigned to the user account and to groups of  which the user is a member. The user might not  have permission or might be denied access either  individually or as a member of a group.</td></tr>

<tr><td valign="top">You add a user account to a group to give that user access to a file or folder, but the user still cannot gain access.</td>
<td valign="top">For access permissions to be updated to include the new group to which you have added the user account, the user must either log off and then log on again or close all network connections to the computer on which the file or folder resides  and then make new connections.</td></tr>

<tr><td valign="top">A user with Full Control permission to a folder deletes a file in the folder although that user does not have permission to delete the file itself. You want to stop the user from being able to delete more files.</td>
<td valign="top">Clear the special permission Delete Subfolders And Files check check box on the folder to prevent users with Full Control of the folder from being able to delete files in the folder.</td></tr></table></p>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
Windows 2000 supports Portable Operating System Interface for UNIX (POSIX) applications that are designed to run on UNIX. On UNIX systems, Full Control permission allows you to delete files in a folder. In Windows 2000, the Full Control permission includes the Delete Subfolders and Files special permission, allowing you the same ability to delete files in that folder regardless of the permissions that you have for the files in the folder.</blockquote></div>
</p>

<A NAME="455"><h2>Avoiding Permissions Problems</h2></A>
<p>The following list provides best practices for implementing NTFS permissions. These guidelines will help you avoid permission problems.</p>

<ul>
<p><li> Assign the most restrictive NTFS permissions that still enable users and groups to accomplish necessary tasks.</li></p>

<p><li> Assign all permissions at the folder level, not at the file level. Group files in a separate folder for which you want to restrict user access, and then assign that folder restricted access.</li></p>

<p><li> For all application executable files, assign Read &amp; Execute and Change Permissions to the Administrators group, and assign Read &amp; Execute to the Users group. Damage to application files is usually a result of accidents and viruses. By assigning Read &amp; Execute to Users and Read &amp; Execute and Change Permissions to Administrators, you can prevent users or viruses from modifying or deleting executable files. To update files, members of the Administrators group can assign Full Control to their user account to make changes and then reassign Read &amp; Execute and Change Permissions to their user account.</li></p>

<p><li> Assign Full Control to CREATOR OWNER for public data folders so that users can delete and modify files and folders that they create. Doing so gives the user who creates the file or folder (CREATOR OWNER) full access to only the files or folders that he or she creates in the public data folder.</li></p>

<p><li> For public folders, assign Full Control to CREATOR OWNER and Read and Write to the Everyone group. This gives users full access to the files that they create, but members of the Everyone group can only read files in the folder and add files to the folder.</li></p>

<p><li> Use long, descriptive names if the resource will be accessed only at the computer. If a folder will eventually be shared, use folder and file names that are accessible by all client computers.</li></p>

<p><li> Allow permissions rather than deny permissions. If you do not want a user or group to gain access to a particular folder or file, do not assign permissions. Denying permissions should be an exception, not a common practice.</li></p>
</ul>

<p>
<img src="images/practic.JPG" width=92 height=74 border="0">
</p>

<A NAME="456"><h2>Practice: Deleting a File with All Permissions Denied</h2></A>
<p>In this exercise you simulate the third problem described in Table 9.12. You grant a user Full Control permission to a folder, but deny all permissions to a file in the folder. You then observe what happens when the user attempts to delete that file.</p>

<p><li><b>To assign the Full Control permission for a folder</b></li></p>

<ol>
<p><li> Log on to your domain as Administrator, then start Windows Explorer.</li></p>

<p><li> Expand C:\ (where C:\ is the name of your system drive), then create a folder named Fullaccess.</li></p>

<p><li> Verify that the Everyone group has the Full Control permission for the C:\Fullaccess folder.</li></p>
</ol>

<p><li><b>To create a file and deny access to it</b></li></p>

<ol>
<p><li> In C:\Fullaccess, create a text file named NOACCESS.TXT.</li></p>

<p><li> Clear the Allow Inheritable Permissions From Parent To Propagate To This Object check box. Deny the Everyone group the Full Control permission for the NOACCESS.TXT, then click OK.</li></p>

<p>Windows 2000 displays the Security dialog box with the following message:</p>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
You have denied everyone access to noaccess.txt. No one will be able
to access noaccess.txt and only the owner will be able to change
permissions.

Do you wish to continue?
</pre>
</td></tr>
</table>
</p>

<p><li> Click Yes to apply your changes and close the Security dialog box.</li></p>
</ol>

<p><li><b>To view the result of denying the Full Control permission for a folder</b></li></p>

<ol>
<p><li> In Windows Explorer, double-click NOACCESS.TXT in C:\Fullaccess to open the file.</li></p>

<p>Were you successful? Why or why not?</p>

<p><li> Click Start, point to Programs, point to Accessories, then click Command Prompt.</li></p>

<p><li> Type <b>cd fullaccess</b> to change the directory to C:\Fullaccess.</li></p>

<p><li> Delete NOACCESS.TXT by typing <b>del noaccess.txt</b>.</li></p>

<p>Were you successful? Why or why not?</p>

<p>How would you prevent users with Full Control permission for a folder from deleting a file in that folder for which they have been denied the Full Control permission?</p>
</ol>

<p><a href="chaaa.htm#1094">Answers</a></p>

<A NAME="457"><h2>Lesson Summary</h2></A>
<p>When you assign or modify NTFS permissions for files and folders, problems might arise. Troubleshooting these problems is important to keep resources 
available to users. In this lesson you learned about some common permissions problems and some possible solutions to resolve these problems.</p>

<p>In the practice portion of this lesson you observed how users can delete a file with all permissions denied.</p>

</BODY>
</HTML>








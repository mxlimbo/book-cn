<HTML>
<HEAD>
<TITLE>Lesson 2: Deploying Software</TITLE>
<link rel="STYLESHEET" type="text/css" href="upwin2k.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch07b.htm", "ch07d.htm", "images/unit_p_a1.gif", "images/unit_p_a2.gif", "images/unit_p_b1.gif", "images/unit_p_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#aa22aa", "2");
//--></SCRIPT><P>

<A NAME="344"><H1>Lesson 2: Deploying Software</H1></A>

<p>In the past, deploying software required considerable time and
effort. A technician had to visit each computer and perform the
installation. Whenever the organization changed its software policy or
the job responsibilities for a user, a technician had to provide the
user with a revised set of applications. If a user did something to
render a program inoperable, a technician had to visit the computer to
make repairs.</p>

<p>The Software Installation and Maintenance technology helps to solve
these problems by enabling software to be deployed and managed remotely. This
is achieved by using the Software Installation node, which is an
extension to Group Policy.</p>

<p>
<div class="sidebar"><blockquote>
<p><b>After this lesson, you will be able to</b></p>

<ul>
<p><li>Explain how to deploy software using Software Installation
group policies.</li></p>
</ul>


<p><b>Estimated lesson time: 30 minutes</b></p>
</blockquote></div>
</p>

<A NAME="345"><H2>Deploying New Applications</H2></A>

<p>Deploying a new application involves a number of steps. These steps
include acquiring the Windows Installer package file and placing the package
and any related installation files in a shared folder on your network.
The package file will be the .MSI file used by the Windows Installer.
The related installation files are the application files that will be
installed on the local hard disk. Once you have set up a shared folder
on your network that contains the package and the required installation
files, use the Active Directory Users and Computers tool to specify
deployment options in one or more GPOs. To deploy a new application,
you would do the following:</p>

<ol>
<p><li>In Active Directory Users And Computers, right-click the OU and
then click Properties.</li></p>

<p><li>In the OU's Properties dialog box, click the Group Policy
tab, select a policy, and then click Edit.</li></p>

<p><li>In the new Group Policy window, double-click either Computer
Configuration (if you want to deploy the application to a computer) or
User Configuration (if you want to deploy the application to a
user).</li></p>

<p><li>Double-click Software Settings.</li></p>

<p><li>Right-click Software Installation (see Figure 7.1), point to
New, and then click Package.</li></p>


<p>The Open dialog box appears.</p>


<p><li>Locate the package file, and then click Open.</li></p>


<p>The Deploy Software dialog box appears.</p>


<p><li>Select a deployment method and then click OK.</li></p>
</ol>

<p>
<A HREF="javascript:fullSize('F07UP01x.htm')"> <img src="images/F07UP01.JPG" width=404 height=285 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 7.1</b> <i>Displaying and selecting the Software Installation node in Group Policy</i><!--/caption-->
</p>


<p>
<div class="note"><blockquote><b>NOTE</b><hr>
You can assign, publish, or disable an
application using Software Installation defaults. Or you can select
Configure Package Properties to bring up the package file's
Properties dialog box, which allows you to set additional options for
deployment.
</blockquote></div>
</p>

<A NAME="346"><H2>Using Gradual Deployment</H2></A>

<p>As with any new software installation, it is a good idea to start
off slowly and do some testing before you deploy the software to the
entire organization. To reduce the risk of deploying package files that
do not work or do not meet your organization's needs, it is a good
idea to deploy them gradually. It is best to ensure that a package file
will install properly before releasing an application to the entire
organization. Because application deployments are GPOs, you can use
Group Policy to limit your deployment to particular groups.</p>

<p>When you create an application deployment GPO, there are several
things you should do:</p>

<ol>
<p><li>Remove the Apply Group Policy permission for the Authenticated
User group; be sure to remove the permission, but do not deny
permission. If you do not remove this permission, the GPO will
automatically be applied to all authenticated users in the Active
Directory container.</li></p>

<p><li>Create a security group, for example Pilot Test1, and give this
group the Read and Apply Group Policy permissions.</li></p>

<p><li>Apply the group policy, and make sure the Pilot Test1 group can
install the software without any problem.</li></p>

<p><li>If they can, you can then reinstate the Apply Group Policy
permission for the Authenticated User group. This will enable
installation for all members of the Active Directory container.</li></p>
</ol>

<A NAME="347"><H2>Assigning Software Packages</H2></A>

<p>Software is usually assigned when an application is required for a
user to do his or her job. For example, you might assign Excel to the
accounting group because accountants need this program to do their
work. By assigning a software package to a user or group of users, you
ensure that</p>

<ul>
<p><li>The application will always be available to the user, even
if he or she logs on from a different computer. If the user logs on to
a computer that does not have Excel, Excel will be installed when the
user activates the program.</li></p>

<p><li>The application will be resilient. If the software is
deleted for any reason, it will be reinstalled the next time the user
logs on and activates the program.</li></p>
</ul>


<A NAME="348"><H3>Assigning Software to Users</H3></A>

<p>When you assign an application to a user, the program is advertised
when the user logs on, but installation does not take place until the
first time the user starts the application. The user can start the
application and start the installation of the application by selecting
it from the Start menu or by double-clicking an icon or a file type
associated with the application (document invocation). If the user does
not activate the program using one of these methods, the application
will not be installed, which saves hard disk space and administrative
load.</p>

<p>By initially only advertising applications, you can minimize the
impact on the local hard disk while keeping applications available to
the user at all times. For example, if a user logs on to another
computer to briefly check her e-mail, you probably don't want all
of the applications associated with her account to be installed on the computer that she is using just to check her e-mail.
To assign an application to users, you would do the following:</p>

<ol>
<p><li>Log on as Administrator and start the Active Directory Users and
Computers tool.</li></p>

<p><li>Expand the domain containing the users to whom you want to
assign an application.</li></p>

<p><li>If no GPO exists, right-click the OU containing the users; click
Properties; and on the Group Policy tab, click the New button, type the
name for the GPO, and then press Enter.</li></p>


<p>The new GPO will appear in the list of Group Policy Object
Links.</p>


<p><li>Select the appropriate GPO, and then click the Edit button.</li></p>

<p><li>Expand User Configuration, expand the Software Settings node,
and then click the Software Installation node.</li></p>

<p><li>Right-click the Software Installation node, point to New, and
then click Package.</li></p>

<p><li>In the File Name box, type the appropriate path to the package,
and then click Open.</li></p>

<p><li>In the Deploy Software dialog box, click Assigned, and then
click OK.</li></p>

<p>The deployed application will appear in the list of deployed
applications.</p>
</ol>

<A NAME="349"><H3>Assigning Software to Computers</H3></A>

<p>By assigning a software package to a computer, you ensure that
certain applications will be available on that computer regardless of
who is using it. For example, a classroom used for Microsoft Office 2000 training would
require Office 2000 installations on all of the computers. In cases like this,
you would create the GPO under Computer Configuration rather than User
Configuration.</p>

<p>When you assign an application to a computer, the software is
installed automatically; typically software installation occurs when
the computer is turned on.</p>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
When in doubt as to whether to assign an
application to users or to computers, assign it to users. For example,
sometimes you are hesitant about installing an application because you
don't know if the user will actually use the program. In this case,
it would be best to assign the application to the user. The application
is advertised, but no files are copied and hard disk space is not
wasted. If the user never starts the program, the adaptive menus in Windows 2000 will
eventually hide the Start menu shortcuts, helping to reduce Start menu
clutter and complexity.
</blockquote></div>
</p>

<p>The steps for assigning an application to computers is almost
identical to the steps for assigning an application to users. To assign
an application to computers, perform the steps for assigning an
application to users and in step 5 expand Computer Configuration
instead of expanding User Configuration.</p>

<A NAME="350"><H2>Publishing Software Packages</H2></A>

<p>When an application is published to a user, it is not installed. The
advertisement is stored in Active Directory directory services, so the
software is readily available. A user can install the application in
one of two ways: by using Add/Remove Programs or by using document
invocation.</p>

<A NAME="351"><H3>Using Add/Remove Programs</H3></A>

<p>As in previous versions of Windows, you start Control Panel and
double-click the Add/Remove Programs icon. When you click Add New Programs, the set
of programs available to you is displayed. You can then select the
desired program and install the software. Many organizations set up
shared folders, place the Setup files there, and allow users to connect
to the network to install software themselves.</p>

<p>The new version of Add/Remove Programs includes the following
improvements:</p>

<ul>
<p><li><b>Provides friendly names for installation.</b> Users see
names like <i>Microsoft Office 97</i> rather than names like <i>
\\Server1\Msofc97\Setup.exe</i>.</li></p>

<p><li><b>Centralizes distribution.</b> Users can install all of
their software using Add/Remove Programs without having to know the
network locations for each Setup file.</li></p>

<p><li><b>Uses Windows Installer package files.</b> Windows
Installer allows setup to be done with minimal user intervention.</li></p>

<p><li><b>Respects the access permissions placed on a package
file.</b> If a user has permission to install Word and Excel, but not
Microsoft PowerPoint, then only Word and Excel will appear in
Add/Remove Programs.</li></p>
</ul>


<A NAME="352"><H3>Using Document Invocation</H3></A>

<p>In Windows 2000, if a user double-clicks an unknown file type, the
following steps take place:</p>

<ol>
<p><li>The computer sends a query to Active Directory directory
services to see if there are any applications associated with the file
extension.</li></p>

<p><li>If Active Directory directory services contain such an
application, the computer then checks to see if this application has either been
published or assigned to the user.</li></p>

<p><li>If the application has been published or assigned to the user,
the computer then checks to see if the application is set for
Auto-Install This Application By File Extension Activation (which
allows it to be installed automatically through document
invocation).</li></p>

<p><li>If the administrator has set the application to Auto-Install,
the application is installed.</li></p>
</ol>

<A NAME="353"><H3>Publishing Applications vs. Assigning Applications</H3></A>

<p>In order to use Software Installation properly, it is important to
understand the differences between publishing and assigning an
application. The differences between published and assigned applications are as follows:</p>

<ul>
<p><li><b>Published applications are not advertised.</b> There is
no obvious way of knowing that a published application is available
without starting Add/Remove Programs or double-clicking an unknown file type.</li></p>

<p><li><b>Published applications are not resilient.</b> If a
published application is deleted, it will not automatically reinstall itself the next time a
user logs on.</li></p>

<p><li><b>Applications can only be published to users, not
computers.</b></li></p>
</ul>


<A NAME="354"><H2>Using .ZAP Files</H2></A>

<p>Software Installation normally works only with Windows Installer
package files. However, you can get around this requirement by creating
a text file, known as a .ZAP file, that provides instructions for
deploying the application. You should only use .ZAP files to publish
applications when it is not feasible to use repackaging software to
repackage an application and when a Windows Installer package file from a software vendor is unavailable.</p>

<p>A .ZAP file is a text file that can be parsed and executed by
Software Installation. These files allow you to publish non-Windows
Installer applications with the following limitations:</p>

<ul>
<p><li>The applications cannot be assigned to either users or
computers. They can only be published.</li></p>

<p><li>The applications do not automatically repair themselves when
key files have been deleted or become corrupted. Instead, the
application will invoke and rerun its setup program any time it is
unable to start.</li></p>

<p><li>The applications are rarely able to install without user
intervention. These applications run the software's original setup program, and few
of these programs support an unattended installation.</li></p>

<p><li>The applications do not have the ability to install with
elevated privileges. If you intend to deploy .ZAP files, users must
have permission to install software on their local computers. Native
package files install using the privileges assigned to the Windows
Installer. This allows package files to be installed on computers
regardless of the user's privileges. In other words, security is
based on the GPO that deployed the application rather than on the
individual user's security rights.</li></p>
</ul>


<p>A .ZAP file can be created with Notepad or any other text editor.
The file itself has two primary sections: the Application section
[Application] and the File Extensions section [Ext].</p>

<A NAME="355"><H3>Application Section</H3></A>

<p>The Application section includes information on how to install the
program in addition to information that will be displayed to users in
Software Installation and in Add/Remove Programs. Your .ZAP file must
include the FriendlyName and SetupCommand tags. All other tags within
this section are optional. Optional tags add information about the
program to Software Installation and Add/ Remove Programs. The tags in the following example are explained in
Table 7.1.</p>


<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>[Application]
FriendlyName = Microsoft Office 97
SetupCommand = setup.exe /unattend
DisplayVersion = 8.0
Publisher = Microsoft
URL = http://www.microsoft.com/office
</PRE>
</TD></TR></TABLE>
</P>

<p><b>Table 7.1</b> <i>Application Section Tags</i></p>

<P>
<table cellpadding=5 width="95%">
<tr> 
<th>Tag  </th>
<th>Comment  </th></tr>
<tr>
<td valign="top">FriendlyName</td>
<td valign="top">The name that will be used in Software Installation and
in Add/Remove Programs. Friendly names should be in the format of  <i>Microsoft Office 97,</i> not executable file names like <i>Setup.exe</i>.  </td></tr>
<tr>
<td valign="top">SetupCommand</td>
<td valign="top">The command used to install the application. The path should be  relative to the .ZAP file. If the setup command is in the same  folder as the .ZAP file, you only need to list the setup executable  file name (for example, Setup.exe).  </td></tr>
<tr>
<td valign="top">DisplayVersion</td>
<td valign="top">The version number of the program, as shown in Software Installation and in Add/Remove Programs.</td></tr>
<tr>
<td valign="top">Publisher</td>
<td valign="top">The publisher of the application, as shown in Software Installation  and in Add/Remove Programs.</td></tr>
<tr>
<td valign="top">URL</td>
<td valign="top">The URL shown in Software Installation and in Add/Remove  Programs. This should be a Web page that contains additional  information about the application.  </td></tr>
</table></p>


<A NAME="356"><H3>File Extension Section</H3></A>

<p>The File Extensions section is optional. Include this section to
associate the application with the file extensions saved in Active Directory
directory services. To add this section, type the <b>[Ext]</b> heading,
followed by a list of file extensions associated with the application
(you do not have to type the period before the extension):</p>


<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>     [Ext]
     DOC=
     DOT=</PRE>
</TD></TR></TABLE>
</P>


<p>When an application is deployed with the .ZAP file, the contents of
the .ZAP file will be parsed, and the application and its associated
file extensions will be added to Active Directory directory
services.</p>

<A NAME="357"><H2>Performing Software Modifications</H2></A>

<p>The various departments in your organization will use applications
in different ways, and they might need customizations or options
available when the application is deployed. For example, an
international organization would like to deploy Word 2000 but there are
large segments of the organization that require localized dictionaries.
Rather than requiring local administrators to manually configure their
users' computers with the local dictionary, you can use software
modifications, or .MST files, to simultaneously deploy several
different configurations of one application.</p>

<p>You create a separate GPO for each OU needing a different
modification of the application. For example, you would create a
Software Installation GPO in the Paris OU and apply a modification to
it that installs the French dictionary. You would also create a GPO in
the Bonn OU and apply the .MST file that installs the German
dictionary.</p>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
You can add and remove modifications only during
deployment of a package, not after the deployment has
occurred.
</blockquote></div>
</p>

<p>To add modifications to an application package, you would do the
following:</p>

<ol>
<p><li>While you are adding a new package to a GPO or before the
package has been deployed, click the Modifications tab in the
application package's Properties dialog box.</li></p>

<p><li>On the Modifications tab, click Add and in the Open dialog box,
select the path and filename of the modification file (.MST).</li></p>

<p><li>To complete the process, click Open, and then click OK.</li></p>
</ol>

<p>You can add multiple modifications. The modifications are applied
according to the order you specify in the Modifications list. You can
arrange the order of the modifications in the list by selecting a
modification from the list and using the Move Up button or the Move
Down button.</p>

<A NAME="358"><H2>Lesson Summary</H2></A>

<p>The Software Installation and Maintenance technology helps reduce
your total cost of ownership (TCO) by enabling software to be deployed
and managed remotely. This is achieved by using Software Installation, which is an
extension to Group Policy. To deploy a new application you must acquire
the Windows Installer package file, and place the package and any related
installation files in a shared folder on your network. The package file
will be the .MSI file used by the Windows Installer. After you set up a
shared folder containing the package and the required installation
files, you use the Active Directory Users and Computers tool to specify
deployment options in one or more GPOs.</p>

<p>When you deploy an application, you can assign it or publish it.
Software is usually assigned when an application is required for a user to do his
or her job. By assigning a software package to a user or group of
users, you ensure that the application will always be available to the
user, even if he or she logs on from a different computer. The
application will also be resilient, so that if the software is deleted
for any reason, it will be reinstalled the next time the user logs on
and activates the program.</p>

<p>When you assign an application to a user, the program is advertised
when the user logs on, but installation does not take place until the
first time the user starts the application. The user can start the
application from the Start menu or by double-clicking an icon or a file
type associated with the application (document invocation). If the user
does not activate the program using one of these methods, the
application will not be installed, which saves hard disk space and
administrative load. By assigning a software package to a computer, you
ensure that certain applications will be available on that computer
regardless of who is using it. When you assign an application to a
computer, no advertising takes place. Instead, when the computer is turned on, the software is installed
automatically.</p>

<p>Software Installation normally works only with Windows Installer
package files. However, you can create a text file (known as a .ZAP
file) that provides instructions for deploying the application. You
should only use .ZAP files to publish applications when it is not feasible to use repackaging software to
repackage an application and when a Windows Installer package file from
a software vendor is unavailable. A .ZAP file cannot be assigned to
either users or computers. A .ZAP file can only be published.</p>

</BODY>
</HTML>




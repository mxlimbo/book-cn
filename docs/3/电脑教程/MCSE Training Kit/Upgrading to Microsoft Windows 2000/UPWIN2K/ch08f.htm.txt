<HTML>
<HEAD>
<TITLE>Lesson 5: Increasing Security with EFS</TITLE>
<link rel="STYLESHEET" type="text/css" href="upwin2k.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch08e.htm", "ch08g.htm", "images/unit_p_a1.gif", "images/unit_p_a2.gif", "images/unit_p_b1.gif", "images/unit_p_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#aa22aa", "2");
//--></SCRIPT><P>

<A NAME="412"><H1>Lesson 5: Increasing Security with EFS</H1></A>

<p>The Microsoft Encrypting File System (EFS) provides encryption for
data in NTFS files stored on disk. EFS encryption is public key-based
and runs as an integrated-system service, making it easy to manage,
difficult to attack, and transparent to the file owner. If a user who
attempts to access an encrypted NTFS file has the private key to that
file, the file can be decrypted so that the user can open the file and
work with it transparently as a normal document. A user without the
private key is denied access.</p>

<p>Windows 2000 also includes the Cipher command-line utility, which
provides the ability to encrypt and decrypt files and folders from a command
prompt. Windows 2000 also provides a recovery agent. In the event that the
owner loses the private key, the recovery agent can still recover the
encrypted file.</p>

<p>
<div class="sidebar"><blockquote>
<p><b>After this lesson, you will be able to</b></p>

<ul>
<p><li>Encrypt folders and files.</li></p>

<p><li>Decrypt folders and files.</li></p>
</ul>

<p><b>Estimated lesson time: 40 minutes</b></p>
</blockquote></div>
</p>

<A NAME="413"><H2>Understanding EFS</H2></A>

<p>EFS allows users to encrypt NTFS files by using a strong public
key-based cryptographic scheme that encrypts all files in a folder.
Users with roaming profiles can use the same key with trusted remote
systems. No administrative effort is needed to begin, and most
operations are transparent. Backups and copies of encrypted files are also encrypted if they are in NTFS volumes. Files remain encrypted if you move or rename them, and encryption is not defeated by
temporary files created during editing and left unencrypted in the
paging file or in a temporary file.</p>

<p>Enterprises can set policies to recover EFS-encrypted data when
necessary. The recovery policy is integrated with overall Windows 2000
security policy. Control of this policy can be delegated to individuals
with recovery authority, and different recovery policies can be
configured for different parts of the enterprise. Data recovery
discloses only the recovered data, not the key that was used to encrypt
the file. Several protections are in place to ensure that data recovery
is possible and that no data is lost in the case of total system
failure.</p>

<p>EFS is implemented either from Windows Explorer or from the command
line. It can be enabled or disabled for a computer, domain, or
organizational unit (OU) by resetting recovery policy in the Group
Policy console in MMC.</p>

<p>You can use EFS to encrypt and decrypt files on remote file servers
but not to encrypt data that is transferred over the network.
Windows
<HTML>
<HEAD>
<TITLE>Lesson 2: Active Directory Structure and Site Replication</TITLE>
<link rel="STYLESHEET" type="text/css" href="upwin2k.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch04b.htm", "ch04d.htm", "images/unit_p_a1.gif", "images/unit_p_a2.gif", "images/unit_p_b1.gif", "images/unit_p_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#aa22aa", "2");
//--></SCRIPT><P>

<A NAME="177"><H1>Lesson 2: Active Directory Structure and Site Replication</H1></A>

<p>Active Directory directory services provide a method for designing a
directory structure that meets the needs of your organization. As a
result, before installing Active Directory directory services, you
should examine your organization's business structure and
operations.</p>

<p>Many companies have a centralized structure. Typically, these
companies have strong information technology (IT) departments that
define and implement the network structure down to the smallest detail.
Other organizations, especially large enterprises, are very
decentralized. These companies have multiple businesses, each of which
is very focused. They need decentralized approaches to managing their
business relationships and networks.</p>

<p>With the flexibility of Active Directory directory services, you can
create the network structure that best fits your company's needs.
Active Directory directory services completely separate the logical
structure of the domain hierarchy from the physical structure.</p>

<p>
<div class="sidebar"><blockquote>
<p><b>After this lesson, you will be able to</b></p>

<ul>
<p><li>Explain Active Directory directory services' structure
and replication.</li></p>
</ul>


<p><b>Estimated lesson time: 15 minutes</b></p>
</blockquote></div>
</p>

<A NAME="178"><H2>Logical Structure</H2></A>

<p>In Active Directory directory services, you organize resources in a
logical structure. Grouping resources logically enables you to find a
resource by its name rather than by its physical location. Since you
group resources logically, Active Directory directory services make the
network's physical structure transparent to users. The logical
structure is composed of objects, organizational units, domains, trees, and forests.</p>

<A NAME="179"><H3>Object</H3></A>

<p>An <i>object</i> is a distinct, named set of attributes that
represents a network resource. Object <i>attributes</i> are
characteristics of objects in the directory. For example, the
attributes of a user account might include the user's first and
last names, department, and e-mail address (see Figure 4.1).</p>

<p>
<A HREF="javascript:fullSize('f04up01x.htm')"> <img src="images/f04up01.JPG" width=404 height=210 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 4.1</b> <i>Active Directory directory services objects and attributes</i><!--/caption-->
</p>


<p>In Active Directory directory services, you can organize objects in
<i>classes</i>, which are logical groupings of objects. For example, an object class
might be user accounts, groups, computers, domains, or organizational
units.</p>

<A NAME="180"><H3>Organizational Units</H3></A>

<p>An <i>organizational unit (OU)</i> is a container that you use to
organize objects within a domain into logical administrative groups. An
OU can contain objects such as user accounts, groups, computers,
printers, applications, file shares, and other OUs (see Figure
4.2).</p>

<ul>
<p><li>Use OUs to structure Active Directory directory services
based on a company's</li></p>
<ul>
<p><li>Organizational structure</li></p>

<p><li>Network administrative model</li></p>
</ul>
<p><li>Assign permissions to OUs to delegate administrative
control</li></p>
</ul>


<p>The OU hierarchy within a domain is independent of the OU hierarchy
structure of other domains&#8212;each domain can implement its own OU
hierarchy. There are no restrictions on the depth of the OU hierarchy.
However, a shallow hierarchy performs better than a deep one, so you
should not create an OU hierarchy any deeper than necessary.</p>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
You can delegate administrative tasks by
assigning permissions to OUs.
</blockquote></div>
</p>

<p>
<A HREF="javascript:fullSize('f04up02x.htm')"> <img src="images/f04up02.JPG" width=404 height=208 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 4.2</b> <i>Resources organized in a logical hierarchical structure</i><!--/caption-->
</p>


<A NAME="181"><H3>Domain</H3></A>

<p>The core unit of logical structure in Active Directory directory
services is the domain (see Figure 4.3). Grouping objects into one or more domains
allows your network to reflect your company's organization.</p>

<p>
<A HREF="javascript:fullSize('f04up03x.htm')"> <img src="images/f04up03.JPG" width=404 height=311 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 4.3</b> <i>A domain is the core unit of logical structure.</i><!--/caption-->
</p>


<p>All network objects exist within a domain, and each domain stores
information about only the objects that it contains. Theoretically, a
domain directory can contain up to 10 million objects, but 1 million
objects per domain is more practical.</p>

<p>A domain is a security boundary. Access to domain objects is
controlled by access control lists (ACLs). ACLs contain the permissions associated
with objects that control which users can gain access to an object and what
type of access users can gain to the objects. In Windows 2000, objects include
files, folders, shares, printers, and Active Directory directory services
objects. All security polices and settings&#8212;such as administrative rights,
security policies, and ACLs&#8212;do not cross from one domain to another. The domain
administrator has absolute rights to set policies only within that
domain.</p>

<A NAME="182"><H3>Tree and Forest</H3></A>

<p>A <i>tree</i> is a grouping or hierarchical arrangement of one or
more Windows 2000 domains. A <i>forest</i> is a grouping or
hierarchical arrangement of one or more trees (See Figure 4.4).</p>

<p>
<A HREF="javascript:fullSize('f04up04x.htm')"> <img src="images/f04up04.JPG" width=404 height=296 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 4.4</b> <i>Structure of a tree and a forest</i><!--/caption-->
</p>


<p>Both a tree and a forest are namespaces. Since a namespace is any
bounded area in which a name can be resolved, using a common namespace
allows you to unify and manage multiple hardware and software
environments in your network. There are two types of namespaces:</p>

<ul>
<p><li><b>Contiguous namespace.</b> The name of the child object in
an object hierarchy always contains the name of the parent domain. A
tree is a contiguous namespace because the name of any child object in
a tree always contains the name of the parent tree.</li></p>

<p><li><b>Disjointed namespace.</b> The names of a parent object
and of a child of the same parent object are not directly related to
one another. A forest is a disjointed namespace because all trees in a
forest do not share a common naming structure.</li></p>
</ul>


<p>Since all trees in a forest do not share a common naming structure,
you could use a forest to group the various divisions of a company that
do not use the same naming scheme and that operate independently, but
that need to communicate with an entire organization.</p>

<A NAME="183"><H2>Sites and Replication Within a Site</H2></A>

<p>A <i>site</i> is a combination of one or more Internet Protocol (IP)
subnets, which should be connected by a high-speed link. Typically, a
site has the same boundaries as a local area network (LAN). When you
group subnets on your network, you should combine only those subnets
that have fast, cheap, and reliable network connections with one
another. &quot;Fast&quot; network connections are at least 512 kilobits
per second (Kbps). An available bandwidth of 128 Kbps and higher is
sufficient. Defining sites as a set of subnets allows you to configure
the Active Directory directory services access and replication topology
to take advantage of the physical network.</p>

<p>You create sites for two primary reasons:</p>

<ul>
<p><li>To optimize replication traffic</li></p>

<p><li>To enable users to connect to a domain controller by using a
reliable, high-speed connection</li></p>
</ul>


<p>With Active Directory directory services, sites are not part of the
namespace. When you browse the logical namespace, you see computers and
users grouped into domains and OUs, not sites. Sites contain only
computer objects and connection objects used to configure replication
between sites.</p>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
A single domain can span multiple geographical
sites, and a single site can include user accounts and computers
belonging to multiple domains.
</blockquote></div>
</p>

<p>Active Directory directory services also include a replication
feature. Replication ensures that changes to a domain controller are
reflected in all domain controllers within a domain (see Figure
4.5).</p>

<p>
<A HREF="javascript:fullSize('f04up05x.htm')"> <img src="images/f04up05.JPG" width=404 height=206 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 4.5</b> <i>Replication within a site</i><!--/caption-->
</p>


<p>To understand replication, you must understand domain controllers. A
domain controller is a computer running Windows 2000 Server, Windows
2000 Advanced Server, or Windows 2000 Datacenter that stores a replica
of the domain directory. A domain can contain one or more domain
controllers. The following list describes the functions of domain controllers:</p>

<ul>
<p><li>Each domain controller stores a complete copy of all Active
Directory directory services information for that domain, manages
changes to that information, and replicates those changes to other
domain controllers in the same domain.</li></p>

<p><li>Domain controllers in a domain automatically replicate all
objects in the domain to each other. When you perform an action that causes an
update to Active Directory directory services, you are actually making
the change at one of the domain controllers. The domain controller then
replicates the change to all other domain controllers within the
domain. You can control replication of traffic between domain controllers in the network by specifying how often replication occurs and the amount of data that Windows 2000 replicates at one time.</li></p>

<p><li>Domain controllers immediately replicate certain important
updates, such as a user account being disabled.</li></p>

<p><li>Active Directory directory services use multimaster
replication, in which no one domain controller is the master domain
controller. Instead, all domain controllers within a domain are peers,
and each domain controller contains a copy of the directory database
that can be written to. Domain controllers might hold different
information for short periods of time until all domain controllers have
synchronized changes to Active Directory directory services.</li></p>

<p><li>Having more than one domain controller in a domain provides
fault tolerance. If one domain controller is offline, another domain
controller can provide all required functions, such as recording
changes to Active Directory directory services.</li></p>

<p><li>Domain controllers manage all aspects of user domain
interaction, such as locating Active Directory objects and validating
user logon attempts.</li></p>
</ul>


<p>Within a site, Active Directory directory services automatically
generate a ring topology for replication among domain controllers in the same domain.
The topology defines the path for directory updates to flow from one
domain controller (DC) to another until all domain controllers receive
the directory updates (see Figure 4.6).</p>

<p>
<A HREF="javascript:fullSize('f04up06x.htm')"> <img src="images/f04up06.JPG" width=404 height=273 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 4.6</b> <i>Replication topology</i><!--/caption-->
</p>


<p>The ring structure ensures that there are at least two replication
paths from one domain controller to another; if one domain controller
is down temporarily, replication still continues to all other domain
controllers.</p>

<p>Active Directory directory services periodically analyze the
replication topology within a site to ensure that it is still
efficient. If you add or remove a domain controller from the network or
a site, Active Directory directory services reconfigure the topology to
reflect the change.</p>

<A NAME="184"><H2>Lesson Summary</H2></A>

<p>Active Directory directory services provide a method to design a
directory structure to meet the needs of your organization's
business structure and operations. Active Directory directory services
completely separate the logical structure of the domain hierarchy from
the physical structure. In Active Directory directory services,
grouping resources logically enables you to find a resource by its name
rather than by its physical location. Since you group resources
logically, Active Directory directory services make the network's
physical structure transparent to users.</p>

<p>The core unit of logical structure in Active Directory directory
services is the domain. All network objects exist within a domain, and each domain
stores information only about the objects that it contains. An
organizational unit (OU) is a container that you use to organize
objects within a domain into logical administrative groups, and an OU
can contain objects such as user accounts, groups, computers, printers,
applications, file shares, and other OUs. A tree is a grouping or
hierarchical arrangement of one or more Windows 2000 domains that share
a contiguous namespace, and a forest is a grouping or hierarchical
arrangement of one or more trees that form a disjointed namespace.</p>

<p>The physical structure of Active Directory directory services is
based on sites. A site is a combination of one or more Internet
Protocol (IP) subnets, connected by a high-speed link. Active Directory
directory services also include replication to ensure that changes to a
domain controller are reflected in all domain controllers within a
domain. Within a site, Active Directory directory services
automatically generate a ring topology for replication among domain
controllers in the same domain. The ring structure ensures that there
are at least two replication paths from one domain controller to
another; if one domain controller is down temporarily, replication
still continues to all other domain controllers. If you add or remove a domain controller from the network or a site, Active Directory
directory services reconfigure the topology to reflect the change.</p>

</BODY>
</HTML>




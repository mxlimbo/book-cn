<HTML>
<HEAD>
<TITLE>Lesson 2: Administering Shared Folders by Using Dfs</TITLE>
<link rel="STYLESHEET" type="text/css" href="upwin2k.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch08b.htm", "ch08d.htm", "images/unit_p_a1.gif", "images/unit_p_a2.gif", "images/unit_p_b1.gif", "images/unit_p_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#aa22aa", "2");
//--></SCRIPT><P>

<A NAME="385"><H1>Lesson 2: Administering Shared Folders by Using Dfs</H1></A>

<p>The distributed file system (Dfs) allows for the creation of a
single logical directory tree from a variety of physical systems.
Although this technology was available in Microsoft Windows NT 4.0, the
administrative tool for configuring the Dfs tree has been enhanced in
Windows 2000. An understanding of how to use the Distributed File
System console can help ensure an effective Dfs structure.</p>

<p>
<div class="sidebar"><blockquote>
<p><b>After this lesson, you will be able to</b></p>

<ul>
<p><li>Create, configure, and test a Microsoft distributed file
system for Windows 2000 Server.</li></p>
</ul>

<p><b>Estimated lesson time: 35 minutes</b></p>
</blockquote></div>
</p>

<A NAME="386"><H2>Understanding Dfs</H2></A>

<p>Dfs is a single hierarchical file system whose contents are
distributed across the enterprise network. Dfs provides a logical tree
structure for file system resources that can be anywhere on the
network. Because the Dfs tree is a single point of reference, users can
easily gain access to network resources regardless of the actual location of the resources. Dfs also facilitates administering multiple shared folders from a single location.</p>

<p>A Dfs share uses a tree structure that contains a root node and
child nodes. To create a Dfs share, you must first create a Dfs root.
Each Dfs root can have multiple child nodes beneath it, each of which
points to a shared folder. The child nodes of the Dfs root represent
shared folders that can be physically located on different file
servers.</p>

<p>You can configure two types of distributed file systems:</p>

<ul>
<p><li><b>Stand-alone Dfs.</b> Stores the Dfs topology on a single
computer. This type of Dfs provides no fault tolerance if the computer
that stores the Dfs topology or any of the shared folders that Dfs uses
fail.</li></p>

<p><li><b>Fault-tolerant Dfs.</b> Stores the Dfs topology in Active
Directory directory services. This type of Dfs allows child nodes to
point to multiple identical shared folders for fault tolerance. In
addition, it supports Domain Name System (DNS), multiple levels of
child volumes, and file replication.</li></p>
</ul>

<p>Navigating a Dfs-managed shared folder is easy because the user does
not need to know the name of the server on which the folder is shared.
This simplifies network access because users no longer need to locate
the server where a specific resource is located on the network. After
connecting to a Dfs root, users can browse and gain access to all
resources below the root, regardless of the location of the server on
which the resource is located.</p>

<p>Dfs also simplifies network administration. If a server fails, you
can move a child node from one server to another without users being
aware of the change. All that is required to move a child node is to
modify the Dfs folder to refer to the new server location of the shared
folders. Users continue to use the same Dfs path for the child node.
Users can gain access to a shared folder through Dfs as long as they
have the required permission to gain access to the shared folder.</p>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
Only client computers with Dfs client software can gain
access to Dfs resources. Windows NT 4.0, Windows
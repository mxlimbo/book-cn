<HTML>
<HEAD>
<TITLE>Lesson 2: Active Directory Structure and Site Replication</TITLE>
<link rel="STYLESHEET" type="text/css" href="upwin2k.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch04b.htm", "ch04d.htm", "images/unit_p_a1.gif", "images/unit_p_a2.gif", "images/unit_p_b1.gif", "images/unit_p_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#aa22aa", "2");
//--></SCRIPT><P>

<A NAME="177"><H1>Lesson 2: Active Directory Structure and Site Replication</H1></A>

<p>Active Directory directory services provide a method for designing a
directory structure that meets the needs of your organization. As a
result, before installing Active Directory directory services, you
should examine your organization's business structure and
operations.</p>

<p>Many companies have a centralized structure. Typically, these
companies have strong information technology (IT) departments that
define and implement the network structure down to the smallest detail.
Other organizations, especially large enterprises, are very
decentralized. These companies have multiple businesses, each of which
is very focused. They need decentralized approaches to managing their
business relationships and networks.</p>

<p>With the flexibility of Active Directory directory services, you can
create the network structure that best fits your company's needs.
Active Directory directory services completely separate the logical
structure of the domain hierarchy from the physical structure.</p>

<p>
<div class="sidebar"><blockquote>
<p><b>After this lesson, you will be able to</b></p>

<ul>
<p><li>Explain Active Directory directory services' structure
and replication.</li></p>
</ul>


<p><b>Estimated lesson time: 15 minutes</b></p>
</blockquote></div>
</p>

<A NAME="178"><H2>Logical Structure</H2></A>

<p>In Active Directory directory services, you organize resources in a
logical structure. Grouping resources logically enables you to find a
resource by its name rather than by its physical location. Since you
group resources logically, Active Directory directory services make the
network's physical structure transparent to users. The logical
structure is composed of objects, organizational units, domains, trees, and forests.</p>

<A NAME="179"><H3>Object</H3></A>

<p>An <i>object</i> is a distinct, named set of attributes that
represents a network resource. Object <i>attributes</i> are
characteristics of objects in the directory. For example, the
attributes of a user account might include the user's first and
last names, department, and e-mail address (see Figure 4.1).</p>

<p>
<A HREF="javascript:fullSize('f04up01x.htm')"> <img src="images/f04up01.JPG" width=404 height=210 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 4.1</b> <i>Active Directory directory services objects and attributes</i><!--/caption-->
</p>


<p>In Active Directory directory services, you can organize objects in
<i>classes</i>, which are logical groupings of objects. For example, an object class
might be user accounts, groups, computers, domains, or organizational
units.</p>

<A NAME="180"><H3>Organizational Units</H3></A>

<p>An <i>organizational unit (OU)</i> is a container that you use to
organize objects within a domain into logical administrative groups. An
OU can contain objects such as user accounts, groups, computers,
printers, applications, file shares, and other OUs (see Figure
4.2).</p>

<ul>
<p><li>Use OUs to structure Active Directory directory services
based on a company's</li></p>
<ul>
<p><li>Organizational structure</li></p>

<p><li>Network administrative model</li></p>
</ul>
<p><li>Assign permissions to OUs to delegate administrative
control</li></p>
</ul>


<p>The OU hierarchy within a domain is independent of the OU hierarchy
structure of other domains&#8212;each domain can implement its own OU
hierarchy. There are no restrictions on the depth of the OU hierarchy.
However, a shallow hierarchy performs better than a deep one, so you
should not create an OU hierarchy any deeper than necessary.</p>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
You can delegate administrative tasks by
assigning permissions to OUs.
</blockquote></div>
</p>

<p>
<A HREF="javascript:fullSize('f04up02x.htm')"> <img src="images/f04up02.JPG" width=404 height=208 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 4.2</b> <i>Resources organized in a logical hierarchical structure</i><!--/caption-->
</p>


<A NAME="181"><H3>Domain</H3></A>

<p>The core unit of logical structure in Active Directory directory
services is the domain (see Figure 4.3). Grouping objects into one or more domains
allows your network to reflect your company's organization.</p>

<p>
<A HREF="javascript:fullSize('f04up03x.htm')"> <img src="images/f04up03.JPG" width=404 height=311 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 4.3</b> <i>A domain is the core unit of logical structure.</i><!--/caption-->
</p>


<p>All network objects exist within a domain, and each domain stores
information about only the objects that it contains. Theoretically, a
domain directory can contain up to 10 million objects, but 1 million
objects per domain is more practical.</p>

<p>A domain is a security boundary. Access to domain objects is
controlled by access control lists (ACLs). ACLs contain the permissions associated
with objects that control which users can gain access to an object and what
type of access users can gain to the objects. In Windows 2000, objects include
files, folders, shares, printers, and Active Directory directory services
objects. All security polices and settings&#8212;such as administrative rights,
security policies, and ACLs&#8212;do not cross from one domain to another. The domain
administrator has absolute rights to set policies only within that
domain.</p>

<A NAME="182"><H3>Tree and Forest</H3></A>

<p>A <i>tree</i> is a grouping or hierarchical arrangement of one or
more Windows
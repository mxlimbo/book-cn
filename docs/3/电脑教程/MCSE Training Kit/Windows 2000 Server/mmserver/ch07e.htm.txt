<HTML>
<HEAD>
<TITLE>Lesson 4: Administering Group Policies</TITLE>
<link rel="STYLESHEET" type="text/css" href="mmserver.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch07d.htm", "ch07f.htm", "images/unit_p_a1.gif", "images/unit_p_a2.gif", "images/unit_p_b1.gif", "images/unit_p_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#aa22aa", "2");
//--></SCRIPT><P>

<A NAME="343"><h1>Lesson 4: Administering Group Policies</h1></A>
<p>Group policies provide a facility for further refining and centralizing management of a user's desktop environment. Group policies can be used to control the programs that are available to users, the programs that appear on a user's desktop, and the Start menu options.</p>

<p>Typically, you will not set group policies; rather group policy administrators configure and administer them. Group policies are typically set for the entire domain or network and are used to enforce corporate policies. However, even if you do not administer group policies, they affect the user accounts, groups, computers, and OUs that you administer. You should be aware of what group policies are and be familiar with the different types of group policies.</p>

<p>
<div class="sidebar"><blockquote>
<b>After this lesson, you will be able to</b> 

<ul>
<p><li>Explain the structure of group policies, including group policy objects, containers, and templates</li></p>

<p><li>Explain the hierarchy of applying group policies, including the rule of inheritance and methods for modifying inheritance of policies</li></p>

<p><li>Use the Active Directory Users And Computers snap-in to create a group policy object and modify the settings in that object</li></p>

<p><li>Use the Group Policy snap-in to specify group policy settings for computers and users</li></p>
</ul>

<b>Estimated lesson time: 90 minutes</b> 
</blockquote></div>
</p>

<A NAME="344"><h2>Introduction to Group Policies</h2></A>
<p>Group policies are a set of configuration settings that a group policy administrator applies to one or more objects in the Active Directory store. A group policy administrator uses group policies to control the work environments for users in a domain. Group policies can also control the work environment of users with accounts that are located in a specific OU. In addition, group policies can be set at the site level, using the Active Directory Sites And Services snap-in.</p>

<p>A group policy consists of settings that govern how an object and its child objects behave. Group policies allow a group policy administrator to provide users with a fully populated desktop environment. This environment can include a customized Start menu, applications that are automatically set up, and restricted access to files, folders, and Microsoft Windows 2000 system settings. Group policies can also affect rights that are granted to user accounts and groups.</p>

<p>Conflicts can exist between group policies and local needs, such as when a policy restricts a user's ability to gain access to a resource that the user needs to perform his or her job. When this occurs, you must work with the group policy administrator to resolve the conflict. For example, if a group policy that is applied at the domain level prevents users in your network from gaining access to an application that they need to perform their jobs, contact the group policy administrator to correct the situation.</p>

<p>There is an exception to always having to contact the group policy administrator; you can unlock a user account that a group policy locked out. However, be aware that you should not perform tasks that a group policy overrides if the group policy overrides profile settings.</p>

<A NAME="345"><h3>Benefits of Group Policy</h3></A>
<p>Total cost of ownership (TCO) is the cost involved in administering distributed personal computer networks. Recent studies on TCO cite lost user productivity as one of the major costs to corporations. Lost productivity is often due to user error, such as modifying system configuration files and thereby rendering the computer unusable, or it is attributed to the confusing array of unessential applications and features available to the user.</p>

<p>You can lower your network's TCO by using group policies to create a managed desktop environment tailored to the user's job responsibilities and experience level.</p>

<p><b>Securing a User's Environment</b></p>

<p>As an administrator in a high-security network, you might want to create a locked down environment on a computer. By implementing appropriate group policy settings for specific users, combined with NTFS permissions, mandatory profiles, and other Windows 2000 security features, you can prevent users from installing software and accessing unauthorized programs or data. You can also prevent users from deleting files that are important to the proper functioning of their applications or operating system.</p>

<p><b>Enhancing a User's Environment</b></p>

<p>You can use group policy to enhance a user's environment by doing the following:</p>

<ul>
<p><li>Automatically delivering applications to a user's Start menu</li></p>

<p><li>Enabling application distribution so that users can easily find applications on the network and install them</li></p>

<p><li>Delivering files or shortcuts to useful places on the network or to a specific folder on a user's computer</li></p>

<p><li>Automating the execution of tasks or programs when a user logs on or off and when a computer starts or shuts down</li></p>

<p><li>Redirect folders to network locations to increase data reliability</li></p>
</ul>

<p>
<img src="images/cd.JPG" border="0">
</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
For more information about group policies, see the Supplemental Course Materials CD-ROM (\chapt07\articles\Outline for Group Policy Design Readiness White Paper 3.doc and \chapt07\articles\
GroupPolicyWhitePaperBeta3.doc) that accompanies this book.</blockquote></div>
</p>

<A NAME="346"><h3>Types of Group Policies</h3></A>
<p>Group policies influence a variety of network components and Active Directory objects. The following table describes the types of group policies:</p>


<p>
<table cellpadding=5 width="95%">
<tr> 
<th>Type of group policy  </th>
<th>Description  </th></tr>
<tr>
<td valign="top">Software Settings  </td>
<td valign="top">Affects the applications to which users can gain access. These policies make application installations automatic in two ways: <p><b>Application assignment</b> The group policy installs or upgrades applications automatically on the client computers or provides the user with a connection to an application, which she or he cannot delete.</p> <p><b>Application publication</b> The group policy administrator publishes applications via Active Directory services. The applications then appear in the list of components that a user can install by using Add/Remove Programs in Control Panel. Users can uninstall these applications.</p></td></tr>
<tr>
<td valign="top">Scripts  </td>
<td valign="top">Allows group policy administrators to specify scripts and batch files to run at specified times, such as during system startup or system shutdown, or when a user logs on or logs off. Scripts automate repetitive tasks, such as mapping network drives.  </td></tr>
<tr>
<td valign="top">Security Settings  </td>
<td valign="top">Allows group policy administrators to restrict user access
to files and folders, configure account restrictions (such as how many incorrect passwords a user can enter before Windows 2000 locks out the user account), set local policy (such as user rights and auditing), control service operation, restrict registry and Event Log access, set public key access, and configure IP security (IPSec) policy.  </td></tr>
<tr>
<td valign="top">Administrative Templates </td>
<td valign="top"> Includes registry-based group policies, which you use to  mandate registry settings that govern the behavior and appearance of the desktop, including the operating system components and applications.  </td></tr>
<tr>
<td valign="top">Remote Installation Services (RIS) </td>
<td valign="top">Controls RIS installation options presented to the user  when running the Client Installation wizard.  </td></tr>
<tr>
<td valign="top">Folder Redirection  </td>
<td valign="top"> Allows you to redirect Windows 2000 special folders from their default user profile location to an alternate location on the network, where they can be centrally managed. </td></tr>
</table></p>


<A NAME="347"><h2>Group Policy Structure</h2></A>
<p><i>Group policies</i> are collections of configuration settings that can be applied to one or more objects in the Active Directory store. These settings are contained within a group policy object (GPO). <i>Group policy objects</i> store group policy information in two locations: containers and templates.</p>

<A NAME="348"><h3>Group Policy Objects</h3></A>
<p>A GPO contains group policy settings for sites, domains, and OUs. Group policy objects contain properties that are written to the Active Directory store in an object called the <i>group policy container</i> (GPC). In addition, GPOs store group policy information in a folder structure called the <i>group policy template</i> (GPT). The underlying structure of the GPO is, for the most part, hidden from the administrator.</p>

<p>One or more GPOs can be applied to a site, domain, or OU. Multiple containers in the Active Directory store can be associated with the same GPO, and a single container can have more than one GPO associated with it. Filtering the scope of the GPO is accomplished through membership in security groups.</p>

<p>Group policy data that is small in size and changes infrequently is stored
in GPCs. Group policy data that is large and can change frequently is stored in the GPT.</p>

<p><b>Local Group Policy Objects</b></p>

<p>A local GPO exists on every Windows 2000 computer and, by default, only security settings are configured. The local GPO is stored in the %systemroot%\System32\GroupPolicy folder, and it has the following ACL permissions:</p>

<ul>
<p><li>Administrators: Full Control</li></p>

<p><li>SYSTEM: Full Control</li></p>

<p><li>Authenticated Users: Read &amp; Execute, List Folder Contents, and Read</li></p>
</ul>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
SYSTEM and Authenticated Users are system groups.</blockquote></div>
</p>

<A NAME="349"><h3>Group Policy Containers</h3></A>
<p>A GPC is an Active Directory object that stores GPO properties and includes subcontainers for computer and user group policy information. The GPC contains version information to ensure that the information contained within the GPC is synchronized with the GPT information. The GPC also contains status information that indicates whether the GPO is enabled or disabled.</p>

<p>The GPC stores the Windows 2000 class store information for application deployment. The <i>class store</i> is a server-based repository for all applications, interfaces, and APIs that provide application publishing and assigning functions.</p>

<A NAME="350"><h3>Group Policy Templates</h3></A>
<p>The GPT is a folder structure in the %systemroot%\SYSVOL\sysvol\
&lt;<i>domain_name</i>&gt;\Policies folder of domain controllers. The GPT is the container where policy settings for administrative templates, security settings, script files, and software settings are stored.</p>

<p><b>GPT Structure</b></p>

<p>When a GPO is created, the corresponding GPT folder structure is created. The folder name given to the GPT is the GUID of the GPO that was created. For example, if a GPO is created that is associated with a domain called microsoft.com, the resulting GPT folder would be named as follows:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>%systemroot%\SYSVOL\sysvol\microsoft.com\Policies\
{45265FA6-554F-4F74-97CC-61B4663DAE61}</pre>
</td></tr></table>
</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
The above GUID is an example.</blockquote></div>
</p>

<p><b>GPT Contents</b></p>

<p>Typically the default contents of the GPT are the User and Machine subfolders and a Gpt.ini file. As you create and modify policies, additional folders are created. The specific folder structure depends on the group policies that you set. The following table describes some of the subfolders that are often contained in the GPT structure:</p>

<p>
<table cellpadding=5 width="95%">
<tr> 
<th>Subfolder  </th>
<th>Contents  </th></tr>
<tr>
<td valign="top">\Adm  </td>
<td valign="top">The .adm template files that are associated with a specific GPT. The .adm files are text files that are processed by Windows 2000 to apply changes to the registry.  </td></tr>
<tr>
<td valign="top">\User  </td>
<td valign="top">A Registry.pol file with the registry settings to apply to users.  </td></tr>
<tr>
<td valign="top">\User\Applications  </td>
<td valign="top">The advertisement files (.aas files) used by the Microsoft Windows Installer for software packages published to users.  </td></tr>
<tr>
<td valign="top">\User\Documents &amp; Settings </td>
<td valign="top">Any files to deploy to the user's desktop as part of this GPT.  </td></tr>
<tr>
<td valign="top">\User\Scripts   </td>
<td valign="top">The Logon and Logoff subfolders.  </td></tr>
<tr>
<td valign="top">\User\Scripts\Logon  </td>
<td valign="top">The scripts and related files for logon scripting.  </td></tr>
<tr>
<td valign="top">\User\Scripts\Logoff  </td>
<td valign="top">The scripts and related files for logoff scripting.  </td></tr>
<tr>
<td valign="top">\Machine  </td>
<td valign="top">A Registry.pol file with the registry setting to apply to computers.  </td></tr>
<tr>
<td valign="top">\Machine\Applications  </td>
<td valign="top">The advertisement files (.aas files) used by the Windows  Installer for packages published to computers.  </td></tr>
<tr>
<td valign="top">\Machine\Documents &amp; Settings  </td>
<td valign="top">Any files to deploy to all desktops for all users who log on  to this computer as part of this GPT.  </td></tr>
<tr>
<td valign="top">\Machine\Microsoft\WindowsNT\SecEdit   </td>
<td valign="top">The GptTmpl.ini Security Editor file.  </td></tr>
<tr>
<td valign="top">\Machine\Scripts </td>
<td valign="top">The Startup and Shutdown subfolders.  </td></tr>
<tr>
<td valign="top">\Machine\Scripts\Startup  </td>
<td valign="top">The scripts and related files for startup scripting.  </td></tr>
<tr>
<td valign="top">\Machine\Scripts\Shutdown  </td>
<td valign="top">The scripts and related files for shutdown scripting.  </td></tr>
</table></p>

<p><b>Gpt.ini File</b></p>

<p>The root folder of each GPT contains a file called Gpt.ini. The following entries can be included in this file:</p>

<ul>
<p><li><b>Version=<i>x</i></b> Where <i>x</i> represents the version number of the GPO. The version number begins at 0 when you first create the GPO and then is automatically incremented by 1 each time you modify the GPO.</li></p>

<p><li><b>Disabled=<i>y</i></b> Where <i>y</i> is either 0 or 1 and refers only to the local GPO. This switch indicates whether the local GPO is enabled or disabled. The Gpt.ini file defines whether the local GPO is disabled or enabled; for all other GPOs, this information is stored in the GPC contained in the Active Directory store.</li></p>
</ul>

<p><b>Registry.pol File</b></p>

<p>The Registry.pol file in the User subfolder is downloaded and applied to the HKEY_CURRENT_USER section of the registry when the user logs on. The Registry.pol file in the Machine subfolder is downloaded and applied to the HKEY_LOCAL_MACHINE section of the registry during the boot process of the computer.</p>

<p>The format of the Registry.pol files differs from those created by using the System Policy Editor for Windows 95, Windows 98, or Windows燦T 4.0. Files created by using the earlier version of the System Policy Editor cannot be applied to Windows 2000 computers, and files created with the Windows 2000 Group Policy snap-in cannot be applied to Windows 95, Windows 98, or Windows NT 4.0 computers.</p>

<A NAME="351"><h2>Applying Group Policies</h2></A>
<p>Before you can create group policies, you must create the group policy objects. From there you can edit group policies, manage permissions, and manage inheritance.</p>

<A NAME="352"><h3>Creating a GPO</h3></A>
<p>The first step in creating a group policy is to create or open a GPO. You can create a group policy object for a domain or an OU by using the Active Directory Users And Computers snap-in. You can create a group policy object for a site by using the Active Directory Sites And Services snap-in. In both cases, the process is the same.</p>

<p>To create a group policy object, open the properties for the site, domain, or OU object. In the Properties dialog box, select the Group Policy tab. Click New and enter a name for the object. Figure 7.12 shows how to create a GPO.</p>

<p>
<A HREF="javascript:fullSize('f07xx12x.htm')"> <img src="images/f07xx12.jpg" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 7.12</b> <i>Creating a Group Policy Object for a Site named Building1</i><!--/caption-->
</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
You can also add an existing GPO by clicking Add and selecting GPOs from sites, domains, and OUs.</blockquote></div>
</p>

<A NAME="353"><h3>Using the Group Policy Snap-In</h3></A>
<p>The Group Policy snap-in is the administrator's primary tool for defining and controlling how programs, network resources, and the operating system behave for users and computers in an organization. In an Active Directory services environment, group policies are applied to users or computers on the basis of their membership in sites, domains, or OUs.</p>

<p>Once you have created a GPO, you can use the Group Policy snap-in to specify group policy settings for computers and user accounts. Figure 7.13 shows the Group Policy snap-in.</p>

<p>
<A HREF="javascript:fullSize('f07xx13x.htm')"> <img src="images/f07xx13.jpg" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 7.13</b> <i>The Group Policy snap-in that appears by clicking the Edit button as shown in Figure 7.12</i><!--/caption-->
</p>

<p><b>Group Policy Snap-In Interface</b></p>

<p>The Group Policy snap-in includes the Computer Configuration node and the User Configuration node. Each node displays the following extensions:</p>

<ul>
<p><li>Software Settings</li></p>

<p><li>Windows Settings</li></p>

<p><li>Administrative Templates</li></p>
</ul>

<p><b>Computer Configuration</b></p>

<p>The Computer Configuration node's folders contain settings you can use to customize the user's environment or enforce lockdown policies for computers on the network. Computer Configuration policies apply when the operating system initializes. If you assign user policies to computers, the user policies apply to every user who logs on to the computer, regardless of the OU to which the user belongs.</p>

<p><b>User Configuration</b></p>

<p>The User Configuration node's folders contain settings that you can use to customize the user's environment or enforce lockdown policies for users on the network. These settings include all user-specific policies, such as desktop appearance, application settings, logon and logoff scripts, and assigned and published applications. User Configuration policies apply when the user logs on to the computer.</p>

<p><b>Using the Group Policy Snap-In</b></p>

<p>Each instance of the Group Policy snap-in is specific to a GPO. You can add a GPO-specific Group Policy snap-in to an MMC console to use as a stand-alone tool. This allows you to add a snap-in for each GPO that you want to administer. You can also open the Group Policy snap-in for a particular GPO through the site, domain, or OU where the GPO is located. Finally, you can edit the local GPO by using Gpedit.msc.</p>

<p><b>Creating an MMC Console</b></p>

<p>By using an MMC console, you can create a tool that contains a Group Policy snap-in for each GPO you want to administer. After you open the MMC interface, add Group Policy as a stand-alone snap-in. When you add the snap-in, you must select the GPO associated with that snap-in. You can add the local GPO, which is the default setting, or you can browse for GPOs that are in sites, domains, or OUs (Figure 7.14). You can also browse for the local GPO on any computers in your domain. Once you've added a Group Policy snap-in for each GPO you are going to administer, save the MMC console as an .mmc file. You can then open the file at any time to administer the GPOs you added to the console. You can also add or delete GPOs as necessary.</p>

<p>
<A HREF="javascript:fullSize('f07xx14x.htm')"> <img src="images/f07xx14.jpg" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 7.14</b> <i>Browsing for all group policies created in the microsoft.com domain</i><!--/caption-->
</p>

<p><b>Editing a GPO in Sites, Domains, and OUs</b></p>

<p>To create and edit a GPO, open the Group Policy snap-in for a specific GPO from a site, domain, or OU. For sites, use the Active Directory Sites And Services snap-in. For domains and OUs, use the Active Directory Users And Computers snap-in. Open the Properties dialog box for the site, domain, or OU, and select the Group Policy tab. Select the GPO you want to administer, and click Edit. This launches the Group Policy snap-in for that specific object. This navigation is shown in Figures 7.12 and 7.13. At this point, you can edit the GPO as necessary.</p>

<p><b>Using Gpedit.msc</b></p>

<p>You can edit the local GPO by using Gpedit.msc. From the Run command, type <b>gpedit.msc</b> and click OK. This launches the Group Policy snap-in for the GPO on the local computer. From there, you can edit the GPO as necessary.</p>

<p>You can perform remote group policy administration by using the gpcomputer: &lt;<i>computername</i>&gt; parameter or the gpobject parameter with Gpedit.msc. The <i>computername</i> variable used with gpcomputer can be either a NetBIOS name or a DNS name. To view and configure the domain GPO for Server01 in the microsoft.com domain, you can type:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>gpedit.msc /gpcomputer:&quot;server01&quot;</pre>
</td></tr></table>
</p>

<p>or</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>gpedit.msc /gpcomputer:&quot;server01.microsoft.com&quot;</pre>
</td></tr></table>
</p>

<p>The gpcomputer parameter is designed to display the domain GPO. The gpobject parameter requires an ADSI path and can open any GPO created in the Active Directory store. For example, to open a GPO with a GUID of 45265FA6-554F-4F74-97CC-61B4663DAE61 in the microsoft.com domain, you can type:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>gpedit.msc /gpobject:&quot;LDAP://CN={45265FA6-554F-4F74-97CC-
61B4663DAE61},CN=Policies,CN=System,DC=microsoft,DC=com&quot;</pre>
</td></tr></table>
</p>

<A NAME="354"><h3>GPO Permissions</h3></A>
<p>When you create a GPO, a set of groups is added to the object and each of those groups is configured with a set of properties. By default, Domain Admins, Enterprise Admins, and System groups are granted Read, Write, Create All Child Objects, and Delete All Child Objects permissions to the GPO. The Creator Owner system group is also assigned special permissions to manage child objects within the GPO. The Authenticated Users system group is given Read And Apply Group Policy access. Note that by default, only the Authenticated Users group is granted the Apply Group Policy attribute. Except for the Authenticated Users group, members of the other groups can edit the GPO. The policy settings contained in the GPO do not apply to members of a group that has been denied the Apply Group Policy permission (Deny).</p>

<p>Administrators can specify which groups of users and computers have Apply Group Policy access to the object. Groups that have Apply Group Policy and Read access to the GPO receive the configured group policy settings contained in the object.</p>

<p>The following table lists a GPO's default groups and their properties:</p>

<p>
<table cellpadding=5 width="95%">
<tr> 
<th>Security group  </th>
<th>Default settings  </th></tr>
<tr>
<td valign="top">Authenticated Users  </td>
<td valign="top">Read, Apply Group Policy (AGP)  </td></tr>
<tr>
<td valign="top">Creator Owner  </td>
<td valign="top">Special oObject and Attribute permissions assigned to child objects and properties within the GPO  </td></tr>
<tr>
<td valign="top">Domain Admins  </td>
<td valign="top">Read, Write, Create All Child Objects, Delete All Child Objects  </td></tr>
<tr>
<td valign="top">Enterprise Admins  </td>
<td valign="top">Read, Write, Create All Child Objects, Delete All Child Objects  </td></tr>
<tr>
<td valign="top">System   </td>
<td valign="top">Read, Write, Create All Child Objects, Delete All Child Objects  </td></tr>
</table></p>


<p>Administrators are also authenticated users, which means that they have the Apply Group Policy attribute set. If this is not desired, administrators have two choices:</p>

<ul>
<p><li>Remove Authenticated Users from the list, and add another security group with the Apply Group Policy attribute set to Allow. This new group should contain all the users that the GPO is intended to affect.</li></p>

<p><li>Set the Apply Group Policy attribute to Deny for the Domain Admins and Enterprise Admins groups and possibly the Creator Owner group. This will prevent the GPO from being applied to members of those groups. Remember that a permission set to Deny always takes precedence over Allow. Therefore, even if a user is a member of another group that has been granted the Apply Group Policy permission, the user will still be denied.</li></p>
</ul>

<p>To edit a GPO, the user must have both Read and Write access to the object. A GPO cannot be opened in Read-Only mode. In other words, if you can open the Group Policy snap-in, you can edit the Group Policy object that appears in the namespace. Moreover, the changes occur during the edit; there is no Save or Activate step. An administrator might want to unlink a GPO from any site, domain, or OU during the edit, or he or she might want to leave it linked, but disable both the User and Computer nodes.</p>

<p>You cannot use security groups to apply (or prevent from applying) only some of the settings in a Group Policy object&#8212;except in the cases of Folder Redirection and Software Installation, which have additional ACLs set at the GPO level to further refine behavior based on security group membership.</p>

<p>To edit a GPO, the user must be one of the following:</p>

<ul>
<p><li>An administrator</li></p>

<p><li>A Creator Owner</li></p>

<p><li>A user with delegated access to the Group Policy object</li></p>
</ul>

<p>You can modify the permissions on a GPO by opening the Properties dialog box for the site, domain, or OU that contains the GPO and then selecting the Group Policy tab. Select the GPO, click Properties, and select the Security tab, as shown in Figure 7.15.</p>

<p>
<A HREF="javascript:fullSize('f07xx15x.htm')"> <img src="images/f07xx15.jpg" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 7.15</b> <i>Accessing the security settings of the microsoft.com Default Domain Policy GPO</i><!--/caption-->
</p>

<p>From there, you can modify the basic permissions or click the Advanced button to modify advanced permissions.</p>

<p><b>Order of Inheritance</b></p>

<p>In general, a group policy is passed down from parent to child containers. If you have assigned a specific group policy to a high-level parent container, that group policy applies to all containers beneath the parent container, including the user and computer objects in each container. However, if you explicitly specify a group policy setting for a child container, the child container's group policy setting overrides the parent container's setting.</p>

<p>If a parent OU has policy settings that are not configured, the child OU doesn't inherit them. Policy settings that are disabled are inherited as disabled. Also, if a policy is configured for a parent OU and the same policy is not configured for a child OU, the child inherits the parent's policy setting.</p>

<p>If a parent policy and a child policy are compatible, the child inherits the parent policy and the child's setting is also applied. Policies are inherited as long as they are compatible. For example, if the parent's policy causes a certain folder to be placed on the desktop and the child's setting calls for an additional folder, the user sees both folders.</p>

<p>If a policy configured for a parent OU is incompatible with the same policy configured for a child OU, the child does not inherit the policy setting from the parent. The setting in the child is applied.</p>

<p>You can use the Active Directory Users And Computers snap-in to configure inheritance for domains and OUs. Open the Properties dialog box for the domain or OU, and select the Group Policy tab. In addition, you can configure inheritance for sites by using the Active Directory Sites And Services snap-in. Open the Properties dialog box for the specific site, and select the Group Policy tab. There are two options you can use to configure inheritance: the Block Policy Inheritance check box and the No Override check box.</p>

<p><b>Block Policy Inheritance</b></p>

<p>You can block inheritance of policies at the domain or OU levels by using the Block Policy Inheritance check box. This check box is located on the first tab of each GPO's Properties dialog box. Block policy inheritance is not available to a site policy since a site is at the top of the GPO hierarchy. If this option is selected for a child-level group policy object, the child does not inherit any policies from a parent-level group policy object.</p>

<p><b>No Override</b></p>

<p>The No Override check box forces all child policy containers to inherit the parent's policies even if those policies conflict with the child's policies, and even if Block Inheritance has been set for the child. This check box and the check box described next are located by clicking the Options button on the GPO's Properties dialog box.</p>

<p><b>Disabled</b></p>

<p>The Disabled check box turns off the GPO so that it is removed from operation. However, it is still associated with the container where it is specified. This option is commonly used to change settings in a policy without affecting users. When the modifications are complete, clearing this check box applies the GPO to all users who are assigned the Apply Group Policy permission.</p>

<p><b>Deleting the Default Domain Policy</b></p>

<p>By default, the Default Domain Policy GPO cannot be deleted by any administrator. This is to prevent the accidental deletion of this GPO, which contains important and required settings for the domain. If the Default Domain Policy should not be applied, for example, because the policies have been set in other GPOs, select the Disable Computer Configuration settings, and the Disable User Configuration settings check boxes in the properties of the Default Domain Policy. You can also select the Block Policy Inheritance check box for a GPO lower in the hierarchy so that the Default Domain Policy does not apply. This will work as long as the parent GPO is not configured for the No Override link option.</p>

<A NAME="355"><h3>Support for Windows 95, Windows 98, and Windows燦T 4.0</h3></A>
<p>The Group Policy snap-in does not provide client support for Windows
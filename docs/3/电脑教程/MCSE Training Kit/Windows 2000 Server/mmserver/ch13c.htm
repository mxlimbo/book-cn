<HTML>
<HEAD>
<TITLE>Lesson 2: Simple Network Management Protocol Service</TITLE>
<link rel="STYLESHEET" type="text/css" href="mmserver.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch13b.htm", "ch13d.htm", "images/unit_p_a1.gif", "images/unit_p_a2.gif", "images/unit_p_b1.gif", "images/unit_p_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#aa22aa", "2");
//--></SCRIPT><P>

<A NAME="754"><h1>Lesson 2: Simple Network Management Protocol Service</h1></A>
<p>To meet the challenges of designing an effective network management platform for heterogeneous TCP/IP-based networks, the Simple Network Management Protocol (SNMP) was defined in 1988 and approved as an Internet standard in 1990 by the Internet Activities Board (IAB). SNMP allows you to monitor and communicate status information from SNMP agents to a network management station (NMS). This lesson provides the background and conceptual material necessary to understand and implement SNMP within the context of Windows 2000.</p>

<p>
<div class="sidebar"><blockquote>
<b>After this lesson, you will be able to</b> 
<ul>
<p><li>Understand the purpose and function of the SNMP service</li></p>
</ul>
<b>Estimated lesson time: 35 minutes</b> 
</blockquote></div>
</p>

<A NAME="755"><h2>Overview of SNMP</h2></A>
<p>SNMP is a network management standard widely used with TCP/IP networks and, more recently, with Internetwork Packet Exchange (IPX) networks. SNMP provides a method of managing network nodes (servers, workstations, routers, bridges, and hubs) from a centrally located NMS.</p>

<p>To perform its management services, SNMP uses a distributed architecture of management systems and agents, as shown in Figure 13.5. The centrally located host, which is running network management software, is referred to as an NMS, or an SNMP manager. Managed network nodes are referred to as SNMP agents.</p>

<p>
<A HREF="javascript:fullSize('f13xx05gx.htm')"> <img src="images/f13xx05g.JPG" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 13.5</b> <i>Distributed architecture used by SNMP</i><!--/caption-->
</p>

<p>The agent reports hardware status and configuration information to a database called a Management Information Base (MIB). The MIB defines the hardware and software information in the host that should be collected by the SNMP agent. The SNMP agent communicates with the NMS to provide device-monitoring functions.</p>

<p>Network management is critical for resource management and auditing. SNMP can be used in several ways:</p>

<ul>
<p><li><b>To configure remote devices</b> You can configure information so that it can be sent to each networked host from the NMS.</li></p>

<p><li><b>To monitor network performance</b> You can track the speed of processing and network throughput and collect information about the success of data transmissions.</li></p>

<p><li><b>To detect network faults or inappropriate access</b> You can configure trigger alarms on network devices that alert you to the occurrence of specific events. When an alarm is triggered, the device forwards an event message via a trap to the NMS. The following are common types of events for which an alarm can be configured:</li></p>
<ul>
<p><li>The shutdown or restart of a device</li></p>

<p><li>The detection of a link failure on a router</li></p>

<p><li>The inappropriate access to a network mode</li></p>
</ul>
<p><li><b>To audit network usage</b> You can monitor overall network usage to identify user or group access or types of usage for network devices or services. This information can be used to generate direct billing of individual or group accounts or to justify current network costs or planned expenditures.</li></p>
</ul>

<p>The Windows 2000 implementation of the SNMP agent is a 32-bit service
that supports computers running TCP/IP and IPX protocols. Windows 2000 implements SNMP versions 1 and 2C. These versions are based on industry standards that define how network management information is structured, stored, and communicated between agents and management systems for
TCP/IP-based networks.</p>

<p>To use the information that the Windows 2000 SNMP service provides, you must have at least one NMS. The Windows 2000 SNMP service provides only the SNMP agent; it does not include SNMP management software. You can use a third-party SNMP management software application on the host to act as the management system.</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
A number of software manufacturers design network management systems to run on UNIX or Windows NT/2000 operating systems.</blockquote></div>
</p>

<A NAME="756"><h3>Management Systems and Agents</h3></A>
<p>The NMS does not have to run on the same computer as the SNMP agents. The NMS can request the following information from SNMP agents:</p>

<ul>
<p><li>Network protocol identification and statistics</li></p>

<p><li>Dynamic identification of devices attached to the network (a process referred to as discovery)</li></p>

<p><li>Hardware and software configuration data</li></p>

<p><li>Device performance and usage statistics</li></p>

<p><li>Device error and event messages</li></p>

<p><li>Program and application usage statistics</li></p>
</ul>

<p>The management system can also send a configuration request to the agent that requests the agent to change a local parameter; however, this is a rare occurrence because most client parameters have read-only access.</p>

<p>SNMP agents provide SNMP managers with information about activities that occur at the Internet Protocol (IP) network layer and respond to management system requests for information. Any computer running SNMP agent software, such as the Windows 2000 SNMP service, is an SNMP agent. The agent service can be configured to determine what statistics are to be tracked and what management systems are authorized to request information.</p>

<p>In general, agents do not originate messages; they only respond to messages. The exception is an alarm message triggered by a specific event. An alarm message is known as a <i>trap message</i>. A <i>trap</i> is an alarm-triggering event on an agent computer, such as a system reboot or illegal access. Traps and trap messages provide a rudimentary form of security by notifying the management system whenever such an event occurs.</p>

<A NAME="757"><h3>Management Information Base</h3></A>
<p>A <i>Management Information Base (MIB)</i> is a container of objects, each of which represents a particular type of information. This collection of objects contains information required by a management system. For example, one MIB object can represent the number of active sessions on an agent; another can represent the amount of available hard drive space on the agent. All the information a management system might request from an agent is stored in various MIBs.</p>

<p>A MIB defines the following values for each object it contains:</p>

<ul>
<p><li>Name and identifier.</li></p>

<p><li>Defined data type.</li></p>

<p><li>A textual description of the object.</li></p>

<p><li>An index method used for complex data-type objects (usually described as a multidimensional array or as tabular data). Complex data refers to such items as the list of network interfaces configured into the system, the routing table, or the Address Resolution Protocol (ARP) table.</li></p>

<p><li>Read/write permissions.</li></p>
</ul>

<p>Each object in a MIB has a unique identifier that contains the following information:</p>

<ul>
<p><li>Type (counter, string, gauge, or address)</li></p>

<p><li>Access level (read or read/write)</li></p>

<p><li>Size restriction</li></p>

<p><li>Range information</li></p>
</ul>

<p>The Windows 2000 SNMP service supports the Internet MIB II; LAN Manager MIB II; Host Resources MIB; and Microsoft proprietary MIBs, such as the WINS, DHCP, and IIS MIBs.</p>

<A NAME="758"><h3>SNMP Messages</h3></A>
<p>Both agents and management systems use SNMP messages to inspect and communicate information about managed objects. SNMP messages are sent via the User Datagram Protocol (UDP). IP is used to route messages between the management system and host. By default, UDP port 161 is used to listen for SNMP messages and port 162 is used to listen for SNMP traps.</p>

<p>When an NMS sends requests to a network device, the agent program on the device receives the requests and retrieves the requested information from the MIBs. The agent sends the requested information back to the initiating NMS. An SNMP agent sends information when a trap event occurs or when it responds to a request for information from a management system.</p>

<p>The management system and agent programs use the following types of messages:</p>

<ul>
<p><li><b>GET</b> The basic SNMP request message. Sent by an NMS, it requests information about a single MIB entry on an agent&#8212;for example, the amount of free disk space.</li></p>

<p><li><b>GET-NEXT</b> An extended type of request message that can be used to browse the entire hierarchy of management objects. When it processes a GET-NEXT request for a particular object, the agent returns the identity and value of the object that logically follows the previous information that was sent. The GET-NEXT request is useful mostly for dynamic tables, such as an internal IP route table.</li></p>

<p><li><b>SET</b> A message that can be used to send and assign an updated MIB value to the agent when write access is permitted.</li></p>

<p><li><b>GET-BULK</b> A request that the data transferred by the agent be as large as possible within the given restraints of message size. This minimizes the number of protocol exchanges required to retrieve a large amount of management information.</li></p>

<p><li><b>NOTIFY</b> An unsolicited message sent by an agent to a management system when the agent detects a certain type of event; also called a trap message. For example, a trap message might be sent when a system restart occurs. The NMS that receives the trap message is referred to as the trap destination.</li></p>
</ul>

<p>Figure 13.6 is an example of how management systems and agents communicate information.</p>

<p>
<A HREF="javascript:fullSize('f13xx06gx.htm')"> <img src="images/f13xx06g.JPG" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 13.6</b> <i>SNMP manager and agent interaction</i><!--/caption-->
</p>

<p>The communication process is as follows:</p>

<ol>
<p><li>A management system forms an SNMP message that contains an information request (GET), the name of the community to which the management system belongs, and the destination of the message&#8212;the agent's IP address (131.107.3.24).</li></p>

<p><li>The SNMP message is sent to the agent.</li></p>

<p><li>The agent receives the packet and decodes it. The community name (Public) is verified as acceptable.</li></p>

<p><li>The SNMP service calls the appropriate subagent to retrieve the session information requested from the MIB.</li></p>

<p><li>The SNMP takes the session information from the subagent and forms a return SNMP message that contains the number of active sessions and the destination&#8212;the management system's IP address (131.107.7.29).</li></p>

<p><li>The SNMP message is sent to the management system.</li></p>
</ol>

<A NAME="759"><h2>Defining SNMP Communities</h2></A>
<p>You can assign groups of hosts to SNMP communities for limited security checking of agents and management systems or for administration. Communities are identified by community names that you assign. A host can belong to multiple communities at the same time, but an agent does not accept a request from a management system outside its list of acceptable community names.</p>

<p>You can define communities logically to take advantage of the basic authentication service provided by SNMP. Figure 13.7 shows an example of two communities, Public and Public 2:</p>

<ul>
<p><li>Agent 1 can send traps and other messages to Manager 2 because they are both members of the Public 2 community.</li></p>

<p><li>Agent 2, Agent 3, and Agent 4 can send traps and messages to Manager 1 because they are all members, by default, of the Public community.</li></p>
</ul>

<p>
<A HREF="javascript:fullSize('f13xx07gx.htm')"> <img src="images/f13xx07g.JPG" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 13.7</b> <i>Example of two communities: Public and Public 2</i><!--/caption-->
</p>

<p>Community names are managed by configuring SNMP security properties, which are described later in this lesson.</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
There is no relationship between community names and domain or workgroup names. Community names represent a shared password for groups of network hosts, and they should be selected and changed as you would change any password. Deciding which hosts belong to the same community is generally determined by physical proximity.</blockquote></div>
</p>

<A NAME="760"><h2>Installing and Configuring the SNMP Service</h2></A>
<p>The SNMP agent is not installed by default on Windows 2000 Server. It is installed from the Control Panel Add/Remove Windows Programs application. From the Add/Remove Programs window, choose Add/Remove Windows Components, and from the Windows Components wizard that appears, choose Management And Monitoring Tools. The Management And Monitoring Tools item contains Simple Network Management Protocol, which is the SNMP agent. This agent is listed as SNMP Service after it is installed.</p>

<p>Once the SNMP service is installed, you can configure the SNMP services through the Services node of the Computer Management snap-in or through the Services snap-in in the Administrative Tools program group. In the Services node, select SNMP Service from the details pane, and then select Properties from the Action menu. The SNMP Service Properties dialog box appears, as shown in Figure 13.8.</p>

<p>
<A HREF="javascript:fullSize('f13xx08x.htm')"> <img src="images/f13xx08.jpg" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 13.8</b> <i>SNMP Service Properties dialog box</i><!--/caption-->
</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
The SNMP Trap Service is also installed when SNMP is installed. The trap service passes traps from a local or remote computer to a trap destination, typically an NMS, running on the local computer.</blockquote></div>
</p>

<A NAME="761"><h3>SNMP Service Properties</h3></A>
<p>You can use the General, Log On, and Recovery tabs in the SNMP Service Properties dialog box to configure how the SNMP service starts, logs on to the system, and recovers from an abnormal program termination of the service or operating system. Other services listed in the Computer Management snap-in contain these four tabs for service configuration. The General tab allows you to start or stop the service. You can also specify a display name, description, startup type, and start parameters. Another tab called the Dependencies tab provides a list of those services (if any) that depend on the SNMP service and those that the SNMP service depends on. By default, the SNMP service depends on Event Log.</p>

<A NAME="762"><h3>Windows 2000 SNMP Agent Properties</h3></A>
<p>The SNMP agent provides the related management system with information on activities that occur at the IP network layer. The SNMP service sends agent information in response to an SNMP request or in an SNMP trap message.</p>

<p>You can configure the agent properties on the Agent tab of the SNMP Service Properties dialog box. The Agent tab lists the services you can select. These services are described in the following table.</p>

<table cellpadding=5 width="95%">
<tr><th valign="top">Agent Service</th> 
<th valign="top">Conditions for selecting this service</th></tr>

<tr><td valign="top">Physical</td> <td valign="top">The computer manages physical devices, such as a hard disk partition.</td></tr>

<tr><td valign="top">Applications</td> 
<td valign="top">The computer uses any applications that send data via TCP/IP. This service should always be enabled.</td></tr>
<tr>
<td valign="top">Datalink and subnetwork</td> 
<td valign="top">The computer manages a bridge.</td>
</tr>
<tr>
<td valign="top">Internet</td> 
<td valign="top">The computer is an IP gateway (router).</td>
</tr>
<tr>
<td valign="top">End-to-end</td> 
<td valign="top">The computer is an IP host. This service should always be enabled.</td>
</tr>
</table>

<p>The Agent tab also allows you to configure the name of the person to contact, such as the network administrator, and the location of the contact person. An NMS might require this information when communicating with the SNMP agent.</p>

<A NAME="763"><h3>Trap Properties</h3></A>
<p>SNMP traps can be used for limited security checking. When configured for an agent, the SNMP service generates trap messages any time specific events occur. These messages are sent to a trap destination, typically an NMS. For example, an agent can be configured to initiate an authentication trap if a request for information is sent by an unrecognized management system. Trap messages can also be generated for events such as host system startup or shutdown.</p>

<p>You can configure trap destinations on the Traps tab of SNMP Service Properties dialog box. Trap destinations consist of the computer name or the IP or IPX address of the management system. The trap destination must be a network-enabled host running SNMP management software. Trap destinations can be configured by a user, but the events (such as a system reboot) that generate a trap message are internally defined by the SNMP agent.</p>

<A NAME="764"><h3>Security Properties</h3></A>
<p>You can configure SNMP security on the Security tab of the SNMP Service Properties dialog box. The following list describes the options you can configure on the Security tab.</p>

<ul>
<p><li><b>Send authentication traps</b> When an SNMP agent receives a request that does not contain a valid community name or the host sending the message is not on the list of acceptable hosts, the agent can send an authentication trap message to one or more trap destinations (management systems). The trap message indicates that the SNMP request failed authentication. This is a default setting.</li></p>

<p><li><b>Accepted community names</b> The SNMP service requires the configuration of at least one default community name. The name Public is generally used as the community name because it is universally accepted in all SNMP implementations. You can delete or change the default community name or add multiple community names. The Public SNMP community name is not secure because it is so widely used. Therefore, consider removing this name. If the SNMP agent receives a request from a community that is not on this list, it generates an authentication trap. If no community names are defined, the SNMP agent denies all incoming SNMP requests.</li></p>

<p><li><b>Community Rights</b> You can select permission levels that determine how an agent processes SNMP requests from the various communities. For example, you can configure the permissions level to block the SNMP agent from processing any request from a specific community.</li></p>

<p><li><b>Accept SNMP packets from any host</b> In this context, the source host and list of acceptable hosts refer to the source SNMP management system and the list of other acceptable management systems. When this option is enabled, no SNMP packets are rejected on the basis of the name or address of the source host or on the basis of the list of acceptable hosts. This option is enabled by default.</li></p>

<p><li><b>Only accept SNMP packets from these hosts</b> This option provides limited security. When the option is enabled, only SNMP packets received from the hosts on a list of allowed hosts are accepted. The SNMP agent rejects messages from other hosts and sends an authentication trap. Limiting access only to hosts on a list provides a higher level of security than limiting access to specific communities, because a community name can encompass a large group of hosts.</li></p>
</ul>

<A NAME="765"><h2>Troubleshooting SNMP</h2></A>
<p>This section contains methods for determining the cause of SNMP-related communication problems. Run normal workloads during your testing to gain realistic feedback.</p>

<A NAME="766"><h3>Event Viewer</h3></A>
<p>SNMP error handling has been improved in Windows 2000. Manual configuration of SNMP error-logging parameters has been replaced with improved error handling that is integrated with Event Viewer. Use Event Viewer if you suspect a problem with the SNMP service.</p>

<A NAME="767"><h3>WINS Service</h3></A>
<p>When querying WINS server MIBs, you might need to increase the SNMP time-out period on the SNMP management system. If some WINS queries work and others time out, increase the time-out period.</p>

<A NAME="768"><h3>IPX Addresses</h3></A>
<p>If you enter an IPX address as a trap destination when installing SNMP service, you might receive an Error 3 error message when you restart your computer. This occurs when the IPX address has been entered incorrectly&#8212;by using a comma or hyphen to separate a network number from a Media Access Control (MAC) address. For example, SNMP management software might normally accept an address like 00008022,0002C0-F7AABD. However, the Windows 2000 SNMP service does not recognize an address with a comma or hyphen between the network number and MAC address.</p>

<p>The address used for an IPX trap destination must follow the IETF
defined 8.12 format for the network number and MAC address: xxxxxxxx.yyyyyyyyyyyy, where xxxxxxxx is the network number
and yyyyyyyyyyyy is the MAC address.</p>

<A NAME="769"><h3>SNMP Service Files</h3></A>
<p>For your convenience and assistance in troubleshooting, the following table contains a list of the SNMP-associated files provided as part of the Microsoft Windows 2000 SNMP service.</p>

<table cellpadding=5 width="95%">
<tr><th valign="top">File</th> <th valign="top">Description</th></tr>
<tr>
<td valign="top">Wsnmp32.dll, Mgmtapi.dll</td> 
<td valign="top">Windows 2000-based SNMP manager APIs. These APIs listen for manager requests and send the requests to SNMP agents and receive responses from them.</td>
</tr>
<tr>
<td valign="top">*.dll</td> 
<td valign="top">Extension agent DLLs such as Inetmib1.dll for IIS, and Dhcpmib.dll for DHCP. These extension agents support the proprietary MIBs for these products.</td>
</tr>
<tr>
<td valign="top">Mib.bin</td> 
<td valign="top">Installed with the SNMP service and used by the Management API (Mgmtapi.dll). The file maps text-based object names to numerical OIDobject identifiers.</td>
</tr>
<tr>
<td valign="top">Snmp.exe</td> 
<td valign="top">SNMP agent service; a master (proxy) agent. This program accepts manager program requests and forwards the requests to the appropriate extension-subagent DLL for processing.</td>
</tr>
<tr><td valign="top">Snmptrap.exe </td>
<td valign="top">A background process. The program receives SNMP traps from the SNMP agent and forwards them to the SNMP Management API on the management console. The program starts only when the SNMP manager API receives a manager request for traps.</td></tr>
</table>

<p>Figure 13.9 shows how the various SNMP files work together to communicate to and from an NMS.</p>

<p>
<A HREF="javascript:fullSize('f13xx09gx.htm')"> <img src="images/f13xx09g.JPG" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 13.9</b> <i>Communication to and from the SNMP service</i><!--/caption-->
</p>

<A NAME="770"><h2>Lesson Summary</h2></A>
<p>SNMP is a network management standard that provides a method of managing network devices such as servers, workstations, routers, bridges, and hubs from a centrally located host. To perform its management services, SNMP uses a distributed architecture of management systems and agents. The SNMP management system, commonly knows as an NMS, can request the information from managed computers (SNMP agents). SNMP agents provide the NMS with information about activities that occur at the IP network layer and respond to management system requests for information. SNMP uses a MIB as a container for objects; each container represents a particular type of information. Both agents and NMS use SNMP messages to inspect and communicate information about managed objects. You can assign groups of hosts to SNMP communities for limited security checking of agents and NMS or for administration. Communities are identified by community names that you assign. For additional security, you can specify the IP address or host name of network management system(s) in which the SNMP agent should communicate. You can configure the SNMP service through the Services node of the Computer Management snap-in or through the Services snap-in in the Administrative Tools program group. The SNMP Service Properties dialog box allows you to configure the various properties of the SNMP service.</p>

</BODY>
</HTML>




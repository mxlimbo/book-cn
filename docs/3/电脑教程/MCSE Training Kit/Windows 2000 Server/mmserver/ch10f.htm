<HTML>
<HEAD>
<TITLE>Lesson 5: RRAS Tools</TITLE>
<link rel="STYLESHEET" type="text/css" href="mmserver.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch10e.htm", "ch10g.htm", "images/unit_p_a1.gif", "images/unit_p_a2.gif", "images/unit_p_b1.gif", "images/unit_p_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#aa22aa", "2");
//--></SCRIPT><P>

<A NAME="579"><h1>Lesson 5: RRAS Tools</h1></A>
<p>Windows 2000 includes a set of tools that you can use to manage and troubleshoot RRAS. These tools include the Routing And Remote Access snap-in, the netsh command-line utility, authentication and accounting logging, event logging, and tracing.</p>

<p>
<div class="sidebar"><blockquote>
<b>After this lesson, you will be able to</b> 

<ul>
<p><li>Use the Windows 2000 tools that are provided to administer and troubleshoot RRAS</li></p>
</ul>

<b>Estimated lesson time: 30 minutes</b> 
</blockquote></div>
</p>

<A NAME="580"><h2>Routing And Remote Access Snap-In</h2></A>
<p>The Routing And Remote Access snap-in allows you to perform a variety of management tasks, such as enabling RRAS, managing routing interfaces, configuring IPX routing, creating a static IP address pool, configuring remote access policies, and so on. For more information about the Routing And Remote Access snap-in, open the snap-in and then click the Help button (Figure 10.16).</p>

<p>
<A HREF="javascript:fullSize('f10xx16x.htm')"> <img src="images/f10xx16.jpg" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 10.16</b> <i>Routing And Remote Access snap-in</i><!--/caption-->
</p>

<p>The Routing And Remote Access snap-in is available from the Administrative Tools folder and is the primary management utility for configuring Windows 2000 local and remote access servers and routers.</p>

<A NAME="581"><h2>Net Shell Command-Line Utility</h2></A>
<p>Net Shell is a command-line and scripting utility for Windows 2000 networking components for local or remote computers. The Net Shell utility is named Netsh.exe and is installed in %systemroot%\system32 when Windows 2000 is installed. Netsh also allows you to save a configuration script in a text file for archival purposes or for configuring other servers.</p>

<p>Netsh can support multiple Windows 2000 components through the addition of netsh helper DLLs. A netsh helper DLL extends its functionality by providing additional commands to monitor or configure a specific Windows 2000 networking component. For example, Ippromon.dll is a helper for using the dhcp, dnsproxy, igmp, nat, ospf, dhcp relay, and rip commands. Each netsh helper DLL provides a context (a group of commands for a specific networking component). Within each context, subcontexts can exist. For example, within the routing context, the subcontexts ip and ipx exist to group IP routing and IPX routing commands together.</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
All command-line options beginning with a minus sign are run outside of the Shell mode. Once in Shell mode, commands are carried out without specifying netsh or a command starting with a minus sign.</blockquote></div>
</p>

<p>Netsh command-line options include the following:</p>

<ul>
<p><li><b>&#8211;a &lt;<i>AliasFile&gt;</i></b> Specifies that an alias file can be used. An alias file contains a list of netsh commands and an aliased version so that the aliased command line can be used in place of the netsh command. Alias files can be used to map commands to the appropriate netsh command that might be more familiar in other platforms.</li></p>

<p><li><b>&#8211;c &lt;<i>Context&gt;</i></b> Specifies the context of the command corresponding to an installed helper DLL. For example:</li></p>


<p><table cellpadding=5 width="95%"><tr><td>
<pre>netsh -c routing</pre>
</td></tr></table>
</p>

<p>places you in the context of the routing helper.</p>


<p><li><b>Command</b> Specifies which Netsh command to carry out. Commands can be run both inside and outside of Shell mode. For example:</li></p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>netsh show helper</pre>
</td></tr></table>
</p>

<p>shows the helpers installed at the root of the shell. After entering the shell by typing <b>netsh</b>, the command for showing helper DLLs at the root of netsh is:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>show helper</pre>
</td></tr></table>
</p>

<p><li><b>&#8211;f &lt;<i>ScriptFile</i></b>&gt; Specifies that all of the netsh commands in the script file be run. For example:</li></p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>netsh -f config.txt</pre>
</td></tr></table>
</p>

<p>runs all commands in a file named config.txt.</p>

<p><li><b>&#8211;r &lt;<i>RemoteComputerName or IP_address&gt;</i></b> Specifies that netsh commands are run on the remote computer specified by its name or IP address. For example:</li></p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>netsh -r RRAS2</pre>
</td></tr></table>
</p>

<p>places Net Shell in command mode for a RRAS server named RRAS2. The command prompt is changed to:</p>

<p><table cellpadding=5 width="95%"><tr><td>
<pre>[RRAS2] netsh&gt;</pre>
</td></tr></table>
</p>
</ul>

<p>Commands can be abbreviated to the shortest unambiguous string. For example, while in the command shell, typing the command <b>ro ip sh int</b> is equivalent to typing <b>routing ip show interface</b>. Netsh commands can be either global or context specific. Global commands can be issued in any context and are used for general netsh functions. Context-specific commands vary according to context.</p>

<p>The following table lists the netsh global commands.</p>

<p>
<table cellpadding=5 width="95%">
<tr> 
<th>Command  </th>
<th>Description  </th></tr>
<tr>
<td valign="top">..   </td>
<td valign="top">Moves up one context level.  </td></tr>
<tr>
<td valign="top">? or help  </td>
<td valign="top">Displays command-line Help.  </td></tr>
<tr>
<td valign="top">add helper  </td>
<td valign="top">Adds a netsh helper DLL.  </td></tr>
<tr>
<td valign="top">delete helper  </td>
<td valign="top">Removes a netsh helper DLL.  </td></tr>
<tr>
<td valign="top">show helper  </td>
<td valign="top">Displays the installed netsh helper DLLs.  </td></tr>
<tr>
<td valign="top">online  </td>
<td valign="top">Sets the current mode to online.  </td></tr>
<tr>
<td valign="top">offline  </td>
<td valign="top">Sets the current mode to offline.  </td></tr>
<tr>
<td valign="top">set mode  </td>
<td valign="top">Sets the current mode to online or offline.  </td></tr>
<tr>
<td valign="top">show mode   </td>
<td valign="top">Displays the current mode.  </td></tr>
<tr>
<td valign="top">flush  </td>
<td valign="top">Discards any changes in Offline mode.  </td></tr>
<tr>
<td valign="top">commit  </td>
<td valign="top">Commits changes made in Offline mode.  </td></tr>
<tr>
<td valign="top">set machine  </td>
<td valign="top">Configures the computer on which the netsh commands are carried out.  </td></tr>
<tr>
<td valign="top">show machine  </td>
<td valign="top">Displays the computer on which the netsh commands are carried out.  </td></tr>
<tr>
<td valign="top">Exec  </td>
<td valign="top">Executes a script file containing netsh commands.  </td></tr>
<tr>
<td valign="top">quit or bye or exit  </td>
<td valign="top">Exits netsh.  </td></tr>
<tr>
<td valign="top">add alias   </td>
<td valign="top">Adds an alias to an existing command.  </td></tr>
<tr>
<td valign="top">delete alias  </td>
<td valign="top">Deletes an alias from an existing command.  </td></tr>
<tr>
<td valign="top">show alias  </td>
<td valign="top">Displays all defined aliases.  </td></tr>
<tr>
<td valign="top">dump  </td>
<td valign="top">Dumps or appends configuration to a text file.  </td></tr>
<tr>
<td valign="top">popd  </td>
<td valign="top">A scripting command that pops a context from the stack.  </td></tr>
<tr>
<td valign="top">pushd  </td>
<td valign="top">A scripting command that pushes the current context on the stack.  </td></tr>
</table></p>


<p>Netsh has the following command modes:</p>

<ul>
<p><li><b>Online</b> In Online mode, commands issued at a netsh command prompt are carried out immediately.</li></p>

<p><li><b>Offline</b> In Offline mode, commands issued at a netsh command prompt are accumulated and carried out as a batch by issuing the commit global command. Accumulated commands can be discarded by issuing the flush global command.</li></p>
</ul>

<p>You can also run a script (a text file with a list of netsh commands) by using either the -f command-line option or by typing the exec global command while in the netsh shell.</p>

<p>To create a script of the current configuration, type the global dump command. The dump command generates the current running configuration in terms of netsh commands. You can then use the script created by this command that you configure a new server or to reconfigure the existing server. If you are making extensive changes to the configuration of a component, it is recommended to begin the configuration session with the dump command, in case you need to restore the configuration before you make changes.</p>

<p>For RRAS, netsh has the following contexts:</p>

<ul>
<p><li><b>ras</b> Use commands in the ras context to configure remote access configuration.</li></p>


<p><li><b>aaaa</b> Use commands in the aaaa context to configure the AAAA component used by both Routing and Remote Access and Internet Authentication Service. AAAA stores the configuration setting of the IAS server.</li></p>

<p><li><b>routing</b> Use commands in the routing context to configure IP and IPX routing.</li></p>


<p><li><b>interface</b> Use commands in the interface context to configure demand-dial interfaces.</li></p>
</ul>

<p>For more information about context-specific commands, see Windows 2000 Server Help and the help provided by the netsh command.</p>

<A NAME="582"><h2>Authentication and Accounting Logging</h2></A>
<p>RRAS supports the logging of authentication and accounting information for PPP-based connection attempts when Windows authentication or accounting is enabled. This logging is separate from the events recorded in the system event log. You can use the information that is logged to track remote access usage and authentication attempts. Authentication and accounting logging is especially useful for troubleshooting remote access policy issues. For each authentication attempt, the name of the remote access policy that either accepted or rejected the connection attempt is recorded.</p>

<p>The authentication and accounting information is stored in a configurable log file or files stored in the %systemroot%\System32\LogFiles folder. Log files are saved in IAS 1.0 or database format, meaning that any database program can read the log file directly for analysis.</p>

<p>You can configure the type of activity to log (accounting or authentication activity) and log file settings, including an alternate storage location, from the properties of the Remote Access Logging folder in either the Routing And Remote Access snap-in or the Internet Authentication Service snap-in. The logging location is based on the settings configured for the authentication and logging provider used by RRAS.</p>

<A NAME="583"><h2>Event Logging</h2></A>
<p>The Windows 2000 Router performs extensive error logging in the system event log. You can use information in the event logs to troubleshoot routing or remote access processes.</p>

<p>The following four levels of logging are available</p>

<ul>
<p><li>Log errors only</li></p>

<p><li>Log errors and warnings</li></p>

<p><li>Log the maximum amount of information</li></p>

<p><li>Disable event logging</li></p>
</ul>

<p>For example, if an Open Shortest Path First (OSPF) router is unable to establish an adjacency on an interface, you can take the following steps:</p>

<ol>
<p><li>Disable OSPF on the interface.</li></p>

<p><li>Change the level of logging for OSPF to log the maximum amount of information.</li></p>

<p><li>Enable OSPF on the interface.</li></p>

<p><li>Examine the system event log for information about the OSPF adjacency process.</li></p>

<p><li>Change the level of logging for OSPF to log errors only.</li></p>
</ol>

<p>You can then troubleshoot the adjacency problem by analyzing the OSPF entries in the system event log.</p>

<p>The level of event logging can be set from various places within the Routing And Remote Access snap-in. For example, logging can be set for a specific computer on the Event Logging tab of that computer's properties. You can also set logging in the General Properties dialog box for IP Routing (on the General tab).</p>

<p>Logging consumes system resources and should be used sparingly to help identify network problems. After the event has been logged or the problem is identified, you should immediately reset logging to log errors only.</p>

<p>When logging the maximum amount of information, the logging information can be complex and very detailed. Some of this information is useful only to Microsoft Product Support Services engineers or to network administrators who are very experienced with Windows 2000 routing.</p>

<A NAME="584"><h2>Tracing</h2></A>
<p>Windows 2000 RRAS has an extensive tracing capability that you can use to troubleshoot complex network problems. Tracing records internal component variables, function calls, and interactions. Separate routing and remote access components can be independently enabled to log tracing information to files (file tracing). You must enable the tracing function by changing settings in the Windows 2000 registry.</p>

<p>
<div class="caution"><blockquote><b>CAUTION</b><hr>
Do not use a registry editor to edit the registry directly unless you have no alternative. Registry editors bypass the standard safeguards provided by administrative tools. These safeguards prevent you from entering conflicting settings or settings that are likely to degrade performance or damage your system. Editing the registry directly can have serious, unexpected consequences that can prevent the system from starting and require that you reinstall Windows 2000. To configure or customize Windows 2000, use the programs in Control Panel or snap-ins whenever possible.</blockquote></div>
</p>

<p>You can enable tracing for each routing protocol by setting the registry values described later in this section. You can also enable and disable tracing for routing protocols while the router is running. Each installed routing protocol or component is capable of tracing and appears as a key (such as OSPF and RIPV2).</p>

<p>Tracing consumes system resources and should be used sparingly to help identify network problems. After the trace is captured or the problem is identified, you should immediately disable tracing. Do not leave tracing enabled on multiprocessor computers.</p>

<p>Tracing information can be complex and very detailed. Most of the time this information is useful only to Microsoft support engineers or to network administrators who are very experienced with Windows 2000 routing.</p>

<A NAME="585"><h3>File Tracing</h3></A>
<p>To enable file tracing for each component (represented as Component
below), you must set the value of the EnableFileTracing registry entry in HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Tracing\Component
to 1. The default value is 0.</p>

<p>To set the location of the trace file for each component, you must set the value of the FileDirectory registry entry. The location of the log file is entered as a path. The file name for the log file is the name of the component for which tracing is enabled. By default, log files are placed in the %systemroot%\
Tracing folder.</p>

<p>To set the level of file tracing for each component, you must set the value of the FileTracingMask registry entry. The tracing level can be from 0 to 0xffff0000. By default, the level of file tracing is set to 0xffff0000, the maximum level of tracing.</p>

<p>To set the maximum size of a log file, you must set the value of the MaxFileSize registry entry. You can change the size of the log file by setting different values for MaxFileSize. The default value is 10000 (64 KB).</p>

<A NAME="586"><h2>Lesson Summary</h2></A>
<p>Windows 2000 includes a set of tools that allows you to manage and troubleshoot RRAS. The Routing And Remote Access snap-in allows you to perform a variety of management tasks, such as enabling RRAS, managing routing interfaces, configuring IPX routing, creating a static IP address pool, configuring remote access policies, and so on. Netsh is a command-line and scripting utility for Windows 2000 networking components for local or remote computers. RRAS also supports the logging of authentication and accounting information for PPP-based connection attempts when Windows authentication or accounting is enabled. In addition, the Windows 2000 Router performs extensive error logging in the system event log. You can use information in the event logs to troubleshoot routing or remote access processes. Windows 2000 RRAS also has an extensive tracing capability that you can use to troubleshoot complex network problems.</p>

</BODY>
</HTML>




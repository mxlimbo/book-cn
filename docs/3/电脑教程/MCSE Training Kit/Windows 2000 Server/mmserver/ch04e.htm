<HTML>
<HEAD>
<TITLE>Lesson 4: File System Security</TITLE>
<link rel="STYLESHEET" type="text/css" href="mmserver.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch04d.htm", "ch04f.htm", "images/unit_p_a1.gif", "images/unit_p_a2.gif", "images/unit_p_b1.gif", "images/unit_p_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#aa22aa", "2");
//--></SCRIPT><P>

<A NAME="185"><h1>Lesson 4: File System Security</h1></A>
<p>Sharing folders is the only way to make folders and their contents available over the network. Shared folders provide a way to secure file resources; they can be used on FAT16 and FAT32 partitions, as well as on NTFS partitions. But NTFS supports more than just shared folders. NTFS permissions can be used to specify which users and groups can gain access to files and folders and what they can do with their content. However, NTFS permissions are not available on volumes that are formatted with FAT.</p>

<p>
<div class="sidebar"><blockquote>
<b>After this lesson, you will be able to</b> 

<ul>
<p><li>Share folders and assign permissions to those shares</li></p>

<p><li>Assign NTFS permissions to files and folders</li></p>
</ul>

<b>Estimated lesson time: 35 minutes</b> 
</blockquote></div>
</p>

<A NAME="186"><h2>Shared Folders</h2></A>
<p><i>Shared folders</i> are used to provide network users with access to file resources. When a folder is shared, users can connect to the folder over the network and gain access to the files it contains. However, to gain access to the files, users must have permissions to access the shared folders.</p>

<A NAME="187"><h3>Shared Folder Permissions</h3></A>
<p>A shared folder can contain applications, data, or users' personal data (called home folders). Each type of data can require different shared folder permissions.</p>

<p>Shared folder permissions have the following characteristics in common:</p>

<ul>
<p><li>Shared folder permissions apply to folders, not individual files. Since you can apply shared folder permissions only to the entire shared folder and not to individual files or subfolders in the shared folder, shared folder permissions provide less detailed security than NTFS permissions.</li></p>

<p><li>Shared folder permissions do not restrict access to users who gain access to the folder at the computer where the folder is stored. They apply only to users who connect to the folder over the network.</li></p>

<p><li>Shared folder permissions are the only way to secure network resources on a FAT volume. NTFS permissions are not available on FAT volumes.</li></p>

<p><li>The default shared folder permission is Full Control, and it is assigned to the Everyone group when you share the folder.</li></p>
</ul>

<p>A shared folder appears in Microsoft Windows Explorer as an icon of a hand holding the shared folder (Figure 4.9).</p>

<p>
<img src="images/f04xx09.jpg" border="0">
</p><p>
<!--caption--><b>Figure 4.9</b> <i>Shared folders in Windows Explorer</i><!--/caption-->
</p>

<p>To control how users gain access to a shared folder, you must assign shared folder permissions. The following table explains what each of the shared folder permissions allows a user to do. The permissions are presented from most restrictive to least restrictive.</p>

<p>
	<table valign="top" cellpadding="5" width="95%">
	
		<tr>
			<th>Permission</th>
			<th>Description</th>
		</tr>

		<tr>
			<td valign="top">Read</td>
			<td valign="top">Users can display folder names, filenames, file data and attributes; run program files; and change folders within the shared folder.</td>
		</tr>

		<tr>
			<td valign="top">Change</td>
			<td valign="top">Users can create folders, add files to folders, change data in files, append data to files, change file attributes, delete folders and files, and perform actions permitted by the Read permission.</td>
		</tr>

		<tr>
			<td valign="top">Full Control</td>
			<td valign="top">Users can change file permissions, take ownership of files, and perform all tasks permitted by the Change permission.</td>
		</tr>
		
	</table>
</p>

<p>You can allow or deny shared folder permissions to individual users or to user groups. Generally, it is best to assign permissions to a group rather than to individual users. You should deny permissions only when it is necessary to override permissions that are otherwise applied. For example, it might be necessary to deny permissions to a specific user who belongs to a group that has been granted permissions. If you deny a shared folder permission to a user, the user will not have that permission.</p>

<A NAME="188"><h3>Applying Shared Folder Permissions</h3></A>
<p>Applying shared permissions to user accounts and groups affects access to a shared folder. Denying permission takes precedence over the permissions that you allow.</p>

<p><b>Multiple Permissions</b></p>

<p>A user can be a member of multiple groups, each with different permissions that provide different levels of access to a shared folder. When you assign a permission to a user for a shared folder and that user is a member of a group to which you assigned a different permission, the user's effective permissions are the combination of the user and group permissions. For example, if a user has Read permission and is a member of a group with Change permission, the user's effective permission is Change, which includes Read.</p>

<p><b>Deny Overrides Other Permissions</b></p>

<p>Denied permissions take precedence over any permissions that you otherwise allow for user accounts and groups. If you deny a shared folder permission to a user, the user will not have that permission, even if you allow the permission for a group of which the user is a member.</p>

<p><b>NTFS Permissions</b></p>

<p>Shared folder permissions are sufficient to gain access to files and folders on a FAT volume but are not the best solution for NTFS partition. On a FAT partition, users can gain access to a shared folder in which they have permissions, as well as to all of the folder's contents. When users gain access to a shared folder on an NTFS partition, you should use either share rights or NTFS permissions but not both. NTFS permissions are preferred since permissions can be set on both files and folders. If share rights are configured for a folder and NTFS permissions are configured for folder or files within a folder, the most restrictive rights will become the user's effective rights to the resource. This significantly increases the complexity of resolving access permissions for network resources.</p>

<p><b>Copying or Moving Shared Folders</b></p>

<p>When you copy a shared folder, the original shared folder is still shared, but the copy is not shared. When you move a shared folder, it is no longer shared.</p>

<A NAME="189"><h3>Guidelines for Shared Folder Permissions</h3></A>
<p>The following list provides some general guidelines for managing your shared folders and assigning shared folder permissions:</p>

<ul>
<p><li>Determine which groups need access to each resource and the level of access they require. Document the groups and their permissions for each resource.</li></p>

<p><li>Assign permissions to groups instead of user accounts to simplify access administration.</li></p>

<p><li>Assign to a resource the most restrictive permissions that still allow users to perform required tasks. For example, if users need only to read information in a folder, and they will never delete or create files, assign the Read permission.</li></p>

<p><li>Organize resources so that folders with the same security requirements are located within a folder. For example, if users require Read permission for several application folders, store the application folders within the same folder. Then share this folder instead of sharing each individual application folder.</li></p>

<p><li>Use intuitive share names so that users can easily recognize and locate resources, and use share names that all client operating systems can use.</li></p>
</ul>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
MS-DOS, Windows 3.<i>x</i>, and WFW clients read up to 8.3 format share names; consequently, longer share names are not advisable in mixed environments.
</blockquote></div>
</p>

<p>Microsoft Windows 2000 provides 8.3-character equivalent names, but the resulting names might not be intuitive to users. For example, a Windows 2000 folder named Accountants Database would appear as Account~1 on client computers running MS-DOS, Windows 3.<i>x</i>, and Windows for Workgroups.</p>

<A NAME="190"><h2>Sharing Folders</h2></A>
<p>You can share resources with others by sharing folders containing those resources. To share a folder, you must be a member of one of several privileged groups, depending on the role of the computer where the shared folder resides. When you share a folder you can control access to the folder by limiting the number of users who can simultaneously gain access to it. You can also control access to the folder and its contents by assigning permissions to selected users and groups. Once you have shared a folder, users must connect to the shared folder and must have the appropriate permissions to gain access to it. After you have shared a folder, you may want to modify it. You can stop sharing it, change its share name, and change user and group permissions to gain access to it.</p>

<A NAME="191"><h3>Requirements for Sharing Folders</h3></A>
<p>In Windows 2000, members of the built-in Administrators, Server Operators, and Power Users groups are able to share folders. Which groups can share folders on which machines depends on whether the computers belong to workgroups or domains and on the type of computers on which the shared folders reside:</p>

<ul>
<p><li>In a Windows 2000 domain, the Administrators group and Server Operators group can share folders residing on any machines in the domain. The Power Users group is a local group and can only share folders residing on the stand-alone server or on the computer running Windows 2000 Professional where the group is located.</li></p>

<p><li>In a Windows 2000 workgroup, the Administrators group and Power Users group can share folders on the Windows 2000 Server stand-alone server or the computer running Windows 2000 Professional on which the group exists.</li></p>

<p><li>Users that are granted the Create Permanent Shared Objects user right can also create shares on the computer where this right is assigned.</li></p>
</ul>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
If the folder to be shared resides on an NTFS volume, users must also have at least the Read permission for that folder.
</blockquote></div>
</p>

<A NAME="192"><h3>Administrative Shared Folders</h3></A>
<p>Windows 2000 automatically shares folders for administrative purposes. These shares are appended with a dollar sign ($). The $ hides the shared folder from users who browse the computer. The root of each volume, the system root folder, and the location of the printer drivers are all hidden shared folders that you can gain access to across the network.</p>

<p>The following table describes the purpose of the administrative shared folders that Windows 2000 automatically generates:</p>

<p>
	<table valign="top" cellpadding="5" width="95%">
	
		<tr>
			<th>Share</th>
			<th>Purpose</th>
		</tr>

		<tr>
			<td valign="top">C$, D$, E$, and so on</td>
			<td valign="top">The root of each volume on a fixed disk is automatically shared, and the share name is the drive letter appended with a dollar sign ($). When you connect to this folder, you have access to the entire volume. You use the administrative shares to connect remotely to the computer to perform administrative tasks. Windows 2000 assigns the Full Control permission to the Administrators group. Removable drives like CD-ROM drives are not assigned the hidden share drive letter.</td>
		</tr>

		<tr>
			<td valign="top">Admin$</td>
			<td valign="top">The system root folder, which is C:\Winnt by default, is shared as Admin$. Administrators can gain access to this shared folder to administer Windows 2000 without knowing which folder it is installed in. Only members of Administrators have access to this share. Windows 2000 assigns the Full Control permission to the Administrators group.</td>
		</tr>

		<tr>
			<td valign="top">Print$</td>
			<td valign="top">When you install the first shared printer, the %systemroot%\System32\Spool\Drivers folder is shared as Print$. This folder provides access to printer driver files for clients. Only members of Administrators, Server Operators, and Print Operators have the Full Control permission. The Everyone group has the Read permission.</td>
		</tr>
		
	</table>
</p>

<p>Hidden shared folders are not limited to those that the system automatically creates. You can share additional folders and append a $ to the share name. Only users who know the folder name can gain access to it, if they have also been granted the proper permissions.</p>

<A NAME="193"><h3>Sharing a Folder</h3></A>
<p>When you share a folder, you can give it a share name, provide comments to describe the folder and its content, limit the number of users who have access to the folder, assign permissions, and share the same folder multiple times. To share a folder, right-click the folder you want to share and then click Properties. The share properties are set on the Sharing tab of the Properties dialog box (Figure 4.10).</p>

<p>
<img src="images/f04xx10.jpg" border="0">
</p><p>
<!--caption--><b>Figure 4.10</b> <i>Sharing tab of a folder's Properties dialog box</i><!--/caption-->
</p>

<p>The following table provides a description of the options on the Sharing tab:</p>

<p>
	<table valign="top" cellpadding="5" width="95%">
	
		<tr>
			<th>Option</th>
			<th>Description</th>
		</tr>

		<tr>
			<td valign="top">Do Not Share This Folder</td>
			<td valign="top">The option you should select if you do not want to share this folder. When this option is selected, all other options are grayed out.</td>
		</tr>

		<tr>
			<td valign="top">Share This Folder</td>
			<td valign="top">The option you should select if you want to share this folder. When this option is selected, all other options are active.</td>
		</tr>

		<tr>
			<td valign="top">Share Name</td>
			<td valign="top">The name that users from remote locations use to make a connection to the shared folder. You must enter a share name.</td>
		</tr>

		<tr>
			<td valign="top">Comment</td>
			<td valign="top">An optional description for the share name. The comment appears in addition to the share name when users at client computers browse the server for shared folders. This comment can be used to identify contents of the shared folder.</td>
		</tr>

		<tr>
			<td valign="top">User Limit</td>
			<td valign="top">The number of users who can concurrently connect to the shared folder. The Maximum Allowed option allows Windows 2000 Server to support an unlimited number of connections. However, the number of Client Access Licenses (CALs) that you purchased limits the connections.</td>
		</tr>
		
		<tr>
			<td valign="top">Permissions</td>
			<td valign="top">The shared folder permissions that apply only when the folder is accessed over the network. By default, the Everyone group is assigned Full Control for all new shared folders.</td>
		</tr>

		<tr>
			<td valign="top">Caching</td>
			<td valign="top">The settings to configure if and how files within the shared folder are cached locally when accessed by others.</td>
		</tr>

		<tr>
			<td valign="top">New Share</td>
			<td valign="top">The option that allows you to create a new share.</td>
		</tr>

		<tr>
			<td valign="top">Remove Share</td>
			<td valign="top">The option that allows you to remove a share. This option appears only after the folder has been shared more than once.</td>
		</tr>
		
	</table>
</p>

<p>After you share a folder, the next step is to specify which users have access to the shared folder. This is done by assigning shared folder permissions to selected user accounts and groups. You can assign permissions by clicking the Permission button on the Sharing tab of the shared folder's Properties dialog box. From there, you can select the user accounts and groups to which you want to assign permissions.</p>

<A NAME="194"><h3>Modifying Shared Folders</h3></A>
<p>You can modify the properties of a shared folder. For example, you can stop sharing a folder, modify the share name, or modify shared folder permissions. To modify a shared folder, open the Properties dialog box for that folder. The following table provides the steps you should take to perform specific modifications:</p>

<p>
	<table valign="top" cellpadding="5" width="95%">
	
		<tr>
			<th>Modification</th>
			<th>Action</th>
		</tr>

		<tr>
			<td valign="top">Stop sharing a folder</td>
			<td valign="top">Click the option Do Not Share This Folder.</td>
		</tr>

		<tr>
			<td valign="top">Modify the share name</td>
			<td valign="top">First, stop sharing the folder by clicking the option Do Not Share This Folder. Click the Apply button to apply the change, and then click the option Share This Folder. Enter the new share name in the Share Name text box.</td>
		</tr>

		<tr>
			<td valign="top">Modify shared folder permissions</td>
			<td valign="top">Click the Permissions button. In the Permissions dialog box, click Add or Remove. To add a group or user account, select that group or use in the Select Users, Computers, Or Groups dialog box, which opens when you click Add.</td>
		</tr>

		<tr>
			<td valign="top">Share folder multiple times</td>
			<td valign="top">Click the New Share button to share a folder with an additional shared folder name. Do so to consolidate multiple shared folders into one while allowing users to continue to use the same shared folder name that they used before you consolidated the folders.</td>
		</tr>

		<tr>
			<td valign="top">Remove a share name</td>
			<td valign="top">Click the Remove Share button. This option appears only after the folder has been shared more than once.</td>
		</tr>
		
	</table>
</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
If you stop sharing a folder while a user has a file open, the user might lose data. If you click the Do Not Share This Folder option and a user has a connection to the shared folder, Windows 2000 displays a dialog box notifying you that a user has a connection to the shared folder.
</blockquote></div>
</p>

<A NAME="195"><h2>NTFS Permissions</h2></A>
<p>NTFS permissions are a set of standard permissions that allow or deny access for each user or group. They provide security for resources by allowing administrators and users to control who can gain access to individual files and folders and to specify the kind of access users can gain. NTFS security is effective whether a file or folder is accessed interactively at a computer or over a network.</p>

<p>Windows NT provides the following standard NTFS permissions:</p>

<ul>
<p><li><b>NTFS folder permissions</b> Use these permissions to secure access to individual folders on NTFS formatted volumes.</li></p>

<p><li><b>NTFS file permissions</b> Use these permissions to secure access to individual files on NTFS formatted volumes.</li></p>
</ul>

<A NAME="196"><h3>Assigning NTFS Permissions</h3></A>
<p>When new files and folders are created, rules and priorities are associated with the ways permissions are assigned, combined, and inherited.</p>

<p><b>NTFS Full Control Permission</b></p>

<p>The Full Control permission grants all permissions to access a resource. It is assigned as follows by default:</p>

<ul>
<p><li>When a user creates a file or folder, he or she becomes the Creator Owner and is assigned the Full Control permission.</li></p>

<p><li>When a volume is formatted with NTFS, Full Control is assigned to the Everyone group at the root of the drive.</li></p>

<p><li>When a FAT16 or FAT32 partition is converted to NTFS, Full Control is assigned to the Everyone group on all resources on that volume.</li></p>
</ul>

<p><b>Multiple NTFS Permissions</b></p>

<p>Permissions to files and folders can be assigned to users and groups. It is possible for users to have multiple permissions assigned to them: those assigned to his or her user account and those assigned to groups the user is a member of. A user's effective permissions are the combination of NTFS permissions assigned to the individual user and the NTFS permissions assigned to all the groups the user belongs to. For example, if a user has Write permission to a folder and is also a member of a group with Read permission to the same folder, the user has both Read and Write permission for that folder.</p>

<p>NTFS file permissions take priority over NTFS folder permissions. For example, if a user is assigned the Write permission to a folder and the Modify permission to a file in that folder, the user can both write to and modify the file. This is also true when a user has not been assigned access to a folder. A user can always gain access to the files for which he or she has permissions by using the full universal naming convention (UNC) or path to open the file from its application. For example, a user has no permissions for a folder that contains a file for which the user has Change permission. The user can open the file from the file's appropriate application by typing the full UNC or path to the file.</p>

<p>Denying a permission for a user or group blocks that permission from the user, even if the permission has been granted to a group the user belongs to. For example, the Everyone group is assigned Full Control permission for a file for which a user has been denied Delete permission. The user will be able to read and modify the file, but will not be able to delete it.</p>

<p><b>Permission Inheritance</b></p>

<p>There are rules associated with the priority of file and folder permissions as you move down a directory tree from the parent folder to the subfolder and files. By default, permissions assigned to the parent folder are inherited and propagate to subfolders and files contained within the parent folder. However, inheritance can be prevented. When NTFS permissions are assigned or changed for a folder, permissions are assigned for the folder itself, for any existing files and subfolders, as well as for any new files and subfolders that might be created in the folder. A file or folder can be prevented from inheriting permissions from the parent folder, and permissions can be assigned explicitly to the file or folder. Also, permissions that have been inherited can be changed or removed.</p>

<A NAME="197"><h3>Guidelines for Assigning NTFS Permissions</h3></A>
<p>Administrators and the owner of a file or folder control which users and groups have permissions to the file or folder and what the permissions are. Use the following guidelines when assigning NTFS permissions:</p>

<ul>
<p><li>To simplify administration, group resources into application, data, and home folders. Doing so provides three benefits:</li></p>

<ul>
<p><li>Permissions are assigned only to folders, not to individual files.</li></p>

<p><li>Backup is less complex because it is typically a lower priority to backup application files.</li></p>

<p><li>All home folders are in one location.</li></p>
</ul>

<p><li>Use NTFS permissions to control access to files and folders. Assign the minimum level of permission required. This reduces the possibility of users accidentally modifying or deleting important documents and application files.</li></p>

<p><li>Whenever possible, assign permissions to groups rather than individual user accounts. Create groups according to the access they require for resources, and then assign the appropriate permissions to the group. Only when necessary, assign permissions to individual user accounts.</li></p>

<p><li>When assigning permissions to home folders, centralize home folders on a network volume separate from applications and the operating system to streamline backing up data and administration.</li></p>

<p><li>When assigning permissions to working data or application folders, remove the default Full Control permission from the Everyone group. Assign Read &amp; Execute permission to the Users and Administrators groups. This prevents application files from being accidentally deleted or damaged by users or viruses. Administrators and users responsible for upgrading troubleshooting application software can be assigned Full Control permission, can complete their tasks, and then be assigned Read &amp; Execute again.</li></p>

<p><li>When assigning permission to public data folders, assign Add and Read &amp; Execute to the Users group, and Full Control to Creator Owner. This gives users the ability to delete and modify only the files and folders they create, as well as the ability to read documents created by other users.</li></p>

<p><li>In general, it is better not to assign permissions than to deny permissions. Deny permissions only when it is essential to deny specific access to a specific user account or group.</li></p>

<p><li>Encourage and educate users to assign permissions to the files and folders they create and own. Provide them with guidelines for assigning appropriate permissions to the resources they control.</li></p>
</ul>

<A NAME="198"><h3>Configuring NTFS Permissions</h3></A>
<p>The owners of files and folders can assign permissions to user accounts and groups. Administrators can also assign permissions to these resources.</p>

<p>To assign or modify NTFS permissions for a file or folder, open the Properties dialog box for that file or folder. NTFS permissions are configured on the Security tab of the Properties dialog box. The following table provides a description of the options on the Security tab:</p>

<p>
	<table valign="top" cellpadding="5" width="95%">
	
		<tr>
			<th>Option</th>
			<th>Description</th>
		</tr>

		<tr>
			<td valign="top">Name</td>
			<td valign="top">Lists the user accounts and groups with permissions for the file or folder. Click the user account or group to assign or change permissions, or to remove from the list.</td>
		</tr>

		<tr>
			<td valign="top">Permissions</td>
			<td valign="top">The permissions that you can allow or deny for the user account or group: Select the Allow check box to allow permission. Select the Deny check box to deny permission.</td>
		</tr>

		<tr>
			<td valign="top">Add</td>
			<td valign="top">Click this button to open the Select Users, Groups, or Computers dialog box where you can select user accounts and groups to add to the Name list.</td>
		</tr>

		<tr>
			<td valign="top">Remove</td>
			<td valign="top">Click this button to remove the selected user account or group and the associated permissions from the file or folder.</td>
		</tr>

		<tr>
			<td valign="top">Allow Inheritable Permissions From Parent To Propagate To This Object</td>
			<td valign="top">By default, this option is not selected for folders, which means subfolders do not inherit permissions assigned to their parent folder. Files are assigned this option, which means that files within a folder automatically receive the permissions assigned to their parent folder.</td>
		</tr>

		<tr>
			<td valign="top">Advanced</td>
			<td valign="top">Opens the Access Control Settings dialog box. From here you can configure special access permissions, auditing capability, and ownership control for files and folders.</td>
		</tr>
		
	</table>
</p>

<p><b>Assigning Special Access Permissions</b></p>

<p>In general, the standard NTFS permissions provide all the permissions necessary to secure data. However, there are instances where the standard permissions do not provide the special access that might be needed. To create special access, use special NTFS permissions. Like standard permissions, special access permissions are either allowed or denied.</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
When special access permissions are assigned to a user or group, the permissions are indicated as Special on the Access Control Settings dialog box.
</blockquote></div>
</p>

<p>Special access permissions provide a finer degree of control for assigning access to resources. There are 13 special access permissions that, when combined, constitute the standard NTFS permissions, such as Read &amp; Execute, Modify, and Full Control. For example, the standard NTFS Read permission includes the Read data, Read attributes, and Read extended attributes permissions.</p>

<p>Assigning special access permissions to folders and files requires three tasks:</p>

<ul>
<p><li>Configuring more granular permissions</li></p>

<p><li>Transferring ownership</li></p>

<p><li>Auditing access</li></p>
</ul>

<p><b>Changing Permissions</b></p>

<p>File and folder owners and other users with Full Control permissions can assign or change permissions. You can grant network administrators the ability to change permissions on a file or folder without giving them Full Control over the file or folder. In this way, the administrator can assign permissions but not have permission to delete a file or folder or write to it. To give network administrators the ability to change permissions, grant the Change Permissions special access permission on the file or folder to the network administrators' group account.</p>

<p>If a member of the Administrators group takes ownership, the Administrators group becomes the owner and any member can access and change the permissions for the file or folder.</p>

<p><b>Transferring Ownership</b></p>

<p>In addition to changing permissions, ownership can be transferred. There are several way to transfer ownership:</p>

<ul>
<p><li>The current owner can assign the Full Control standard permission or the Take Ownership special access permission to other users, allowing those users to take ownership.</li></p>

<p><li>An administrator can take ownership of any folder or file under his or her administrative control. For example, if an employee leaves the company, an administrator can take ownership of the employee's files and change the permissions so that others can access the files or folders.</li></p>

<p><li>When assigned to a volume or folder, special access permissions are initially applied only where specified in the Apply Onto drop-down menu, which is discussed in more detail later in this lesson.</li></p>
</ul>

<p>To transfer or take ownership of a file or folder, click the Owner tab in the Access Control Settings dialog box. The current owner of the file or folder is shown in the Current Owner Of This Item text box. You can select a new owner from the Change Owner To list. You can also select the Replace Owner On Subdirectories And Objects check box to change ownership for all subfolders and files contained within the folder.</p>

<p><b>Setting Special Access Permissions</b></p>

<p>To set special access permissions, access the Properties dialog box for a file or folder and click Advanced on the Security tab. In the Access Control Settings dialog box, click the Permissions tab, and then click Add to add a new user or group and modify the special access rights. Click View/Edit to modify the special access rights of an existing user or group. From here you can configure the options that allow you to set special access permissions. These options are described in the following table:</p>

<p>
	<table valign="top" cellpadding="5" width="95%">
	
		<tr>
			<th>Option</th>
			<th>Description</th>
		</tr>

		<tr>
			<td valign="top">Name</td>
			<td valign="top">The user account or group name. To select a different user account or group, click Change.</td>
		</tr>

		<tr>
			<td valign="top">Apply Onto</td>
			<td valign="top">The level of the folder hierarchy at which the special NTFS permissions are inherited. The default is This Folder, Subfolders, and Files.</td>
		</tr>

		<tr>
			<td valign="top">Permissions</td>
			<td valign="top">The individual special access permissions. To allow or deny an individual NTFS permission, select the Allow or Deny check box, respectively.</td>
		</tr>

		<tr>
			<td valign="top">Apply These Permissions To Objects And/Or Containers Within This Container Only</td>
			<td valign="top">This check box is available to folders and subfolders. 
<p>Folders that are lower in the folder hierarchy can inherit the modified individual NTFS permissions from this folder. This option does not apply to files.</p>
<p>Click to clear this check box to prevent permissions inheritance.</p>
<p>Select this check box to propagate the modified individual NTFS permissions down the folder hierarchy.</p></td>
		</tr>

		<tr>
			<td valign="top">Reset Permission On All Child Objects And Enable Propagation Of Inheritable permissions</td>
			<td valign="top">This check box is only available to the partition.
<p>From a partition, permissions on all folders, subfolders, and files can be reset.</p>
<p>Select this check box to reset all permissions for folders and files located on the partition to the settings designated for the partition. This option also enables the Apply These Permissions To Objects And/or Containers Within This Container Only check box. This check box is described in the previous row.</p></td>
		</tr>

		<tr>
			<td valign="top">Clear all</td>
			<td valign="top">Clear all selected permissions and the level of folder hierarchy selected to inherit permissions.</td>
		</tr>
		
	</table>
</p>

<p>The following table provides an overview of the options available in the Apply Onto drop-down menu:</p>

<p>
	<table valign="top" cellpadding="5" width="95%">
	
		<tr>
			<th>Option</th>
			<th>Objects that permissions apply to</th>
		</tr>

		<tr>
			<td valign="top">This Folder Only</td>
			<td valign="top">Only to the folder.</td>
		</tr>

		<tr>
			<td valign="top">This Folder, Subfolders, And Files</td>
			<td valign="top">The folder, subfolder, and files. New files and folders created in this folder will inherit the permissions.</td>
		</tr>

		<tr>
			<td valign="top">This Folder And Subfolders</td>
			<td valign="top">The folder and subfolders. New files and folders created in this folder and subfolder will inherit the permissions.</td>
		</tr>

		<tr>
			<td valign="top">This Folder And Files</td>
			<td valign="top">The folder and files. New files and folders created in this folder will inherit the permissions.</td>
		</tr>

		<tr>
			<td valign="top">Subfolders And Files Only</td>
			<td valign="top">The subfolders and files. New files and folders created in the subfolder will inherit the permissions.</td>
		</tr>
		
		<tr>
			<td valign="top">Subfolders Only</td>
			<td valign="top">The subfolders. New folders created in the subfolder will inherit the permissions.</td>
		</tr>

		<tr>
			<td valign="top">Files Only</td>
			<td valign="top">Only to the files.</td>
		</tr>
		
	</table>
</p>

<A NAME="199"><h3>Copying and Moving Files and Folders</h3></A>
<p>NTFS allows you to copy and move files and folders.</p>

<p><b>Copying Files and Folders</b></p>

<p>To copy files and folders within or between NTFS volumes, a user must have been granted Add permission for the destination folder. The user who performs the copy will become the owner of the new file or folder.</p>

<p>When files or folders are copied, permissions will be inherited or lost, depending on where the file or folder is copied to:</p>

<ul>
<p><li>When a folder or file is moved within an NTFS partition, the folder or file retains its permissions.</li></p>

<p><li>When a folder or file is copied within or between NTFS partitions, or moved to another partition, the folder or file inherits the permissions of the destination folder.</li></p>

<p><li>When folders or files are copied to FAT16 or FAT32 volumes, the folders and files lose their NTFS permissions because FAT16 and FAT32 volumes do not support NTFS permissions.</li></p>
</ul>

<p><b>Moving Files and Folders</b></p>

<p>To move files and folders between NTFS partitions requires the Add permission for the destination folder or file and the Delete permission for the source folder or file. The Delete permission is required to move a folder or file because the folder or file is deleted from the source folder after it is moved to the destination folder. When a folder or file is moved to another partition, the user who performed the move will become Creator Owner.</p>

<p>Moving folders or files within and between NTFS volumes can affect the original permissions. The following table describes the results of what can occur when moving a file or folder:</p>

<p>
	<table valign="top" cellpadding="5" width="95%">
	
		<tr>
			<th>Action</th>
			<th>Result</th>
		</tr>

		<tr>
			<td valign="top">Intra-volume move (within the same volume)</td>
			<td valign="top">The folder or file retains the original permissions that are set for folder or file.</td>
		</tr>

		<tr>
			<td valign="top">Inter-volume move (across different volumes)</td>
			<td valign="top">The folder or file inherits the permissions that are set for the destination folder.</td>
		</tr>
		
	</table>
</p>

<p>When folders or files are moved to FAT16 or FAT32 volumes, the folders and files lose their NTFS permissions because FAT16 and FAT32 volumes do not support NTFS permissions.</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
After you learn how to create users and groups in a later chapter, you will apply share rights and NTFS permissions to the users and groups you created.
</blockquote></div>
</p>

<A NAME="200"><h3>Troubleshooting NTFS Permissions</h3></A>
<p>The following table describes common permission problems and provides solutions:</p>

<p>
	<table valign="top" cellpadding="5" width="95%">
	
		<tr>
			<th>Problem</th>
			<th>Solution</th>
		</tr>

		<tr>
			<td valign="top">A user cannot gain access to a file or folder.</td>
			<td valign="top">Check the permissions assigned to the user account and to groups the user is a member of. If the user or a group that the user is a member of has been denied access to the file or folder, the user has no access to the resource. If the file or folder was copied within an NTFS partition, or copied or moved to another NTFS partition, the permissions may have changed by inheriting new permissions from the destination folder. If both share rights and NTFS permissions are configured for a folder, the most restrictive rights apply. Therefore, set the share rights to Everyone Full Control and control access exclusively through NTFS permissions.</td>
		</tr>

		<tr>
			<td valign="top">A user account is added to a group to give that user access to a file or folder, but the user still cannot gain access to the file or folder.</td>
			<td valign="top">An access token is created every time a user logs on and is authenticated by a computer running Windows NT or Windows 2000. The access token contains information about the groups the user belongs to. For the access token to be updated to include the new group, the user must log off and then log on again, or close all connections to the computer and then make new connections.</td>
		</tr>

		<tr>
			<td valign="top">A user deletes a file, although that user does not have permission to delete the file.</td>
			<td valign="top">Assign all permissions at the folder level, not at the file level. To deny users access, group files in a separate folder and then assign that folder restricted access. If this problem is unavoidable, do not assign Full Control permission for a folder. Instead, assign all the permissions, that is, Modify, Read &amp; Execute, List Folder Contents, Read, and Write. This assigns all the abilities for the Full Control permission for the folder and its contents, except that users cannot delete files in the folder.</td>
		</tr>
		
	</table>
</p>

<A NAME="201"><h2>Lesson Summary</h2></A>
<p>Folders can be shared so that users can connect to a folder over the network and gain access to the files it contains. However, to gain access to the files, users must have permissions to access the shared folders. Shared folder permissions apply to folders, not individual files. When you share a folder, you can give it a share name, provide comments to describe the folder and its content, limit the number of users who have access to the folder, assign permissions, and share the same folder multiple times. Shared folder permissions are the only way to secure network resources on a FAT partition. NTFS permissions are not available on FAT volumes. NTFS permissions are a set of standard permissions that allow or deny access for each user or group. By default, permissions assigned to the partition and parent folder are not inherited and do not propagate to subfolders and files contained within the parent folder. The owner of a file or folder and administrators control which users and groups have permissions to the file or folder and what the permissions are. The owners of files and folders can assign permissions to user accounts and groups. Administrators can also assign permissions to these resources.</p>

</BODY>
</HTML>




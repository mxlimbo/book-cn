<HTML>
<HEAD>
<TITLE>Lesson 1: Exploring Microsoft Internet Information Services 5.0 Features</TITLE>
<link rel="STYLESHEET" type="text/css" href="mmserver.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch14a.htm", "ch14c.htm", "images/unit_p_a1.gif", "images/unit_p_a2.gif", "images/unit_p_b1.gif", "images/unit_p_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#aa22aa", "2");
//--></SCRIPT><P>

<A NAME="799"><h1>Lesson 1: Exploring Microsoft Internet Information Services 5.0 Features</h1></A>
<p>Windows 2000 Server includes an updated version of IIS (version 5.0). IIS runs as an enterprise service within Windows 2000 and uses other services provided by Windows 2000, such as security and Active Directory services. IIS 5.0 improves the Web server's reliability, performance, management, security, and application services. Many of these improvements result from the way IIS 5.0 incorporates new operating system features in Windows 2000. This lesson provides an overview of IIS 5.0 and explains how to install IIS and configure a Web environment.</p>

<p>
<div class="sidebar"><blockquote>
<b>After this lesson, you will be able to</b> 

<ul>
<p><li>Install IIS 5.0 and configure a Web environment</li></p>
</ul>

<b>Estimated lesson time: 40 minutes</b> 
</blockquote></div>
</p>

<A NAME="800"><h2>Introduction to Microsoft IIS 5.0</h2></A>
<p>While IIS 4.0 focused on security, administration, programmability, and support for Internet standards, IIS 5.0 builds on these capabilities to deliver the type of Web sites required in an increasingly intranet- and Internet-centric business environment. In particular, IIS 5.0 has been improved in the following four areas: reliability and performance, management, security, and application environment.</p>

<A NAME="801"><h3>Reliability and Performance</h3></A>
<p>IIS 5.0 performs better and is more reliable than previous versions of the product for a number of reasons. Internally, the speed of the IIS 5.0 engine has been increased through coding refinements. The new Reliable Restart feature lets system administrators quickly restart the server. Beyond these inherent capabilities, this version introduces features you can use to improve the speed and reliability of Web sites.</p>

<p>One of the more significant improvements in IIS 5.0 is the addition of application protection through support for pooled, out-of-process applications. To better control resource consumption, new throttling features (based on the new job object feature of Windows 2000) make it easier for administrators to allocate the amount of CPU bandwidth available to processes, as well as the amount of network bandwidth available to sites. In addition, the new Socket Pooling feature allows multiple sites sharing a port also to share a set of sockets.</p>

<p><b>Application Protection</b></p>

<p>Most operating systems view a process as a unit of work in a system. Services and applications are processes that run in memory areas allocated by the operating system to each process. In IIS 5.0, application protection refers to the way in which the operating system guards each application process from other processes in memory. In earlier versions of IIS, all Internet Server API (ISAPI) applications (including ASP technology) shared the resources and memory of the IIS server process. Although this provided fast performance, unstable components could cause the IIS server to hang or crash, which made it more difficult to develop and debug new components. In addition, in-process components could not be unloaded unless the server was restarted&#8212;which meant that modifying existing components would affect all sites that shared the same IIS server, whether they were directly affected by the upgrade or not.</p>

<p>As a first step toward addressing these issues, IIS 4.0 allowed applications to run either in the same IIS server process (Inetinfo.exe) or out-of-process, that is in a process separate from the IIS server process. The DLLHost.exe acts as a surrogate application to the IIS server process to manage each out-of-process application. Out-of-process applications are run separately from one another which is memory intensive and less efficient than running in-process. In IIS 5.0, there is a third option: applications can be run in a pooled process separate from the IIS server process. This approach allows related applications to be run together without adversely affecting the IIS server process. These three options provide varying levels of protection, each of which impacts performance. Greater isolation comes at the cost of slower performance.</p>

<p><b>Reliable Restart</b></p>

<p>In the event of a system failure, it's clearly important to be able to get IIS back to an operational state as quickly as possible. In the past, rebooting was an acceptable, although not optimal, way to restart IIS. To reliably restart IIS, an administrator needed to start up four separate services after every stoppage, and was required to have specialized knowledge, such as which services to start and in what order. To avoid this, Windows 2000 includes IIS Reliable Restart, which is a faster, easier, more flexible one-step restart process.</p>

<p><b>Socket Pooling</b></p>

<p>IIS 5.0 increases performance by adding the ability to optimize access to your Web site. A socket is a protocol identifier for a particular node on a network. The socket consists of a node address and a port number, which identifies the service. For example, port 80 on an Internet node represents the World Wide Web HTTP service on a Web server.</p>

<p>In IIS 4.0, each Web site is bound to a different IP address, which means that each site has its own socket that is not shared with sites bound to other IP addresses. Each sockets is created when the site starts, and consumes significant non-paged memory (RAM). This memory consumption limits the number of sites bound to IP addresses that can be created on a single machine.</p>

<p>For IIS 5.0, this process has been modified so that sites bound to different IP addresses but sharing the same port number can now share the same set of sockets. The end result is that more sites can be bound to an IP address on the same machine than in IIS 4.0. In IIS 5.0, these shared sockets are used flexibly among all of the started sites, thus reducing resource consumption.</p>

<p><b>Multisite Hosting</b></p>

<p>To improve the scalability of IIS, Windows 2000 Server supports the ability to host multiple Web sites on a single server. This can save the time and money required within a company that wants to host different sites for different departments, or for an ISP hosting multiple sites for different customers.</p>

<p>The key to hosting multiple sites on a single server is the ability to distinguish between them. This can be done in several ways, each using the Web site's identification. Each Web site has a unique, three-part identity it uses to receive and to respond to requests: a port number, an IP address, and a host header name. With IIS 5.0, companies can host multiple Web sites on a single server by using one of three techniques: assigning different ports, assigning different IP addresses, or assigning different host header names. Each Web site can share two out of three unique characteristics and still be identified as a unique site.</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
IIS 4.0 also allows you to host multiple Web sites on a single server.
</blockquote></div>
</p>

<p><b>Process Throttling</b></p>

<p>If you run multiple Web sites that primarily use HTML pages on one computer, or if you have other applications running on the same computer as your Web server, you can limit how much processor time a Web site's applications are permitted to use. This can help ensure that processor time is available to other Web sites or applications unrelated to IIS.</p>

<p><b>Bandwidth Throttling</b></p>

<p>If the network or Internet connection used by your Web server is also used by other services such as e-mail or news, you may want to limit the bandwidth used by your Web server in order to free up bandwidth for other services. Bandwidth Throttling is an improved feature in IIS 5.0 that allows administrators to regulate the amount of server bandwidth each site uses by throttling the available bandwidth for the net card. For example, this allows an ISP to guarantee a predetermined amount of bandwidth to each site.</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
IIS 4.0 allows you to throttle bandwidth on a per-Web site basis.
</blockquote></div>
</p>

<A NAME="802"><h3>Management</h3></A>
<p>While IIS 4.0 introduced a significant number of new technologies, a core design goal for IIS 5.0 was to make the Web server easier for managers to use. For example, some administrators found IIS 4.0 difficult to install. With IIS 5.0, the installation process is built right into Windows 2000 Server Setup. In addition, to make it easier to configure security settings, there are three new security wizards. This release also includes improved command-line administration scripts as well as additional built-in management scripts.</p>

<p><b>Setup and Upgrade Integration</b></p>

<p>The setup process for IIS 5.0 is integrated with Windows 2000 Server setup, and IIS 5.0 installs by default as a windows component of Windows 2000 Server. In the Windows Components wizard, it is listed as Internet Information Services (IIS). During operating system setup, a wizard helps you either to install a new copy of IIS 5.0 or to upgrade an older version.</p>

<p>IIS creates a default Web site, an Administration Web site, and a Default SMTP Virtual Server when you install Windows 2000 Server. You can add or remove IIS or select additional components, such as the Network News Transfer Protocol (NNTP) Service, by using the Add/Remove Programs application in Control Panel. Then from Add/Remove Programs, start the Windows Components wizard, and click the Details button of the Internet Information Services (IIS) component.</p>

<p><b>Centralized Administration</b></p>

<p>IIS 5.0 is managed by using the Internet Information Services snap-in (Figure 14.1), which is integrated with other administrative functions of Windows 2000. (In previous releases this tool was called Internet Service Manager.) You can access the Internet Information Services snap-in through the Internet Information Services snap-in, which is located in the Administrative Tools program group. The Internet Information Services snap-in is also located in the Computer Management snap-in under Services and Applications.</p>

<p>
<A HREF="javascript:fullSize('f14xx01x.htm')"> <img src="images/f14xx01.jpg" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 14.1</b> <i>Internet Information Services snap-in</i><!--/caption-->
</p>

<p>The browser-based administration tool, Internet Services Manager (HTML), is no longer available in the Administrative Tools program group, but it is still available to let you remotely administer IIS over an HTTP or HTTPS connection, depending on how you have the Administration Web site configured for security. You can run Internet Services Manager (HTML) by selecting the Administration Web Site node in the console tree of the Internet Information Services snap-in and then clicking Browse from the Action menu. Or you can access it directly by specifying the server name, the TCP port number assigned to the site, and the administration Web site address as shown in the Address field in Figure 14.2.</p>

<p>
<img src="images/f14xx02.jpg" border="0">
</p><p>
<!--caption--><b>Figure 14.2</b> <i>Administering IIS on Server01 from a remote computer</i><!--/caption-->
</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
The TCP port number assigned to the administration site is randomly selected and is between 2,000 and 9,999. View the Administration Web site Properties dialog box under the Web Site tab to determine or change the port number assigned to the site.
</blockquote></div>
</p>

<p>Browsers other than Microsoft Internet Explorer can be used to access the administration Web site, but basic authentication must be enabled if the browser does not support NTLM authentication and you don't want to enable anonymous access. In addition, you can use Terminal Services to remotely administer IIS by using the Internet Information Services snap-in.</p>

<p><b>Delegated Administration</b></p>

<p>To help distribute the workload of administrative tasks, administrators can add administration accounts to the Operators group. Members of the Operators group have limited administration privileges on Web sites. For example, an ISP that hosts sites for a number of different companies can assign delegates from each company as the operators for each company's Web site. Operators can administer properties that affect only their respective sites. They do not have access to properties that affect IIS, the Windows server computer hosting IIS, or the network. This lets an IT or ISP administrator who hosts multiple Web sites on a single server delegate the day-to-day management of the Web site without giving up total administrative control.</p>

<p><b>Process Accounting</b></p>

<p><i>Process Accounting</i> (sometimes referred to as CPU Usage Logging, CPU Accounting, or Job Object Accounting) is a new feature in IIS 5.0 that lets administrators monitor and log how Web sites use CPU resources on the server. Processes Accounting adds fields to the W3C Extended log file to record information about how Web sites use CPU resources on the server. ISPs can use this information to determine which sites are using disproportionately high CPU resources or that may have malfunctioning scripts or Common Gateway Interface (CGI) processes. IT managers can use this information to charge back the cost of hosting a Web site or application to the appropriate division within a company or to determine how to adjust process throttling to control resource utilization.</p>

<p>To enable process accounting on a site using the Internet Information Services snap-in, open the site's property page and from the properties of the W3C Extended Log File Format, choose the Extended Properties tab. In the Internet Service Manager (HTML), follow the same navigation and then choose the Extended Properties link. Figure 14.3 shows the Extended Logging Properties dialog box and the Extended Logging Options Web page.</p>

<p>
<img src="images/f14xx03a.jpg" border="0">
</p>
<p>
<A HREF="javascript:fullSize('f14xx03bx.htm')"> <img src="images/f14xx03b.jpg" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 14.3</b> <i>Enabling process accounting through the Extended Logging Properties dialog box or through the Extended Logging Options Web page</i><!--/caption-->
</p>

<p><b>Improved Command-Line Administration Scripts</b></p>

<p>IIS 5.0 ships with scripts that can be executed from the command line to automate the management of common Web server tasks. These scripts are located in the \Inetpub\Scripts folder. Administration scripts automate some of the most common administrative tasks. You can use them to create and control Web sites, applications, directories, and more. Administrators can also create custom scripts that automate the management of IIS. Windows Script Host (WSH) is used to run the .vbs administration scripts included in IIS 5.0.</p>

<p><b>Backing Up and Restoring IIS</b></p>

<p>The Internet Information Services snap-in includes options that allow you to back up and restore your IIS configuration so that you can save the IIS 5.0 metabase settings to make it easy to return to a safe, known state. By using this method, you can back up and restore your Web server configuration, but not your content files or those settings that remain in the registry.</p>

<p>To back up and restore your Web server configuration, select the IIS computer in Internet Information Services snap-in, and then select the Backup/Restore Configuration option from the Action menu. The Configuration Backup/Restore dialog box appears (Figure 14.4), which allows you to create a backup, restore a backup, or delete a backup that has already been created.</p>

<p>
<A HREF="javascript:fullSize('f14xx04x.htm')"> <img src="images/f14xx04.jpg" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 14.4</b> <i>Accessing the Configuration Backup/Restore dialog box for Server01</i><!--/caption-->
</p>

<p><b>Custom Error Messages</b></p>

<p>When a user attempts to connect to a Web site and an HTTP error occurs, a generic message is sent back to the client browser with a brief description of what happened during the attempt to establish a connection. As with IIS 4.0, with IIS 5.0 you can send more informative error messages to clients that encounter an ASP or HTML error on your site. You can use the custom error messages that IIS 5.0 provides or create you own.</p>

<p>In IIS 5.0, the custom error messages are stored in %systemroot%\Help\iisHelp\common folder. In IIS 4.0 custom error messages are stored in the %systemroot%\Help\common folder. The prefix of the custom error message file is the name of the error, and the extension is .htm. If the error message contains a period, such as error 403.3, the corresponding custom message file name contains a hyphen, e.g., 403-3.htm.</p>

<p><b>Support for FrontPage Server Extensions</b></p>

<p>Windows 2000 Server allows administrators to use FrontPage Web authoring and management features to deploy and manage Web sites. With FrontPage Server Extensions, administrators can view and manage a Web site in a graphical interface. In addition, authors can create, edit, and post Web pages to IIS remotely. The FrontPage Server Extensions snap-in allows you to administer the FrontPage Server Extensions and FrontPage-extended Web sites.</p>

<p>Unlike previous versions of IIS, FrontPage Web is enabled by default. You can access the FrontPage Extensions snap-in from the Server Extensions Administrator MMC or from the Internet Information Services snap-in. The following two setup features in the FrontPage Server Extensions snap-in are important for initially configuring and checking the extensions:</p>

<ul>
<p><li><b>Configuring an existing Web server to use the server extensions</b>  once a web site is configured to use server extensions, web applications that depend on server extensions, like frontpage, can operate against the Web site.</li></p>


<p><li><b>Checking server extension security</b> This feature allows you to check the security of any Web site or a single Web site running Server Extensions.</li></p>
</ul>

<p>In the Internet Information Services snap-in, configuring an existing Web server for server extensions is accomplished by selecting a Web site and then, from the Action menu, pointing to New and clicking the Server Extensions Web option. To check server extension security of all Web sites, choose Internet Information Services in the console tree and then from the Action menu, point to All Tasks and click Check Server Extensions. To check server extensions on a single site, select the site from the console tree, and follow the same navigation procedure as you did to check all sites.</p>

<p><b>Web Distributed Authoring and Versioning</b></p>

<p>The Web is a great medium for publishing documents, but until now it hasn't been easy for organizations to use the Internet to let users collaborate on documents. That's because while it is easy to read documents stored on a Web site, it has not been easy for users to make changes to those documents. To address this need, IIS 5.0 has added full support for Web Distributed Authoring and Versioning (WebDAV).</p>

<p>By setting up a WebDAV directory on your Web server, you can let users share documents over the Internet or an intranet. WebDAV in IIS 5.0 takes advantage of the security and file access features provided by Windows 2000, so you can lock and unlock resources to let multiple people read a file, while only one person at a time can modify the file. WebDAV is discussed in more detail in Lesson 2, &quot;<A HREF="ch14c.htm#811">Administering A Web Environment</A>.&quot;</p>

<p><b>Distributed File System</b></p>

<p>IIS 5.0 makes use of the Windows 2000 <i>distributed file system</i> (Dfs). Dfs is a means for uniting files on different computers into a single namespace. Dfs lets system administrators build a single, hierarchical view of multiple file servers and file server shares on the network, making it easier for users to access and manage files that are physically distributed across a network. With Dfs, you can make files that are distributed across multiple servers appear to users as if they reside in one place on the network. Users no longer need to know and specify the actual physical location of files in order to access them.</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
For more information on Dfs, see <a href="ch05a.htm">Chapter 5</a>, Lesson 1.
</blockquote></div>
</p>

<p><b>HTTP Compression</b></p>

<p>HTTP compression allows faster transmission of pages between a Web server and compression-enabled clients. This is useful in situations where bandwidth is limited. Depending on the content you're hosting, your storage space, and the connection speed of your typical Web site visitor, HTTP compression can provide faster transmission of pages between your Web server and compression-enabled browsers.</p>

<p>In the Internet Information Services snap-in, HTTP Compression is enabled from the master properties of the Internet Information Services node. On the Internet Information Services Properties dialog box, click the Edit button for the WWW Service and then choose the Service tab (Figure 14.5).</p>

<p>
<A HREF="javascript:fullSize('f14xx05x.htm')"> <img src="images/f14xx05.jpg" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 14.5</b> <i>WWW Service Master Properties for Server01 as seen from the Internet Information Services snap-in</i><!--/caption-->
</p>

<p>From the Internet Information Service (HTML) home page, click the Service option under Master Properties. View the service properties and configure compression (Figure 14.6).</p>

<p>
<A HREF="javascript:fullSize('f14xx06x.htm')"> <img src="images/f14xx06.jpg" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 14.6</b> <i>WWW Service Master Properties for Server01 as seen from Internet Services Manager (HTML) page</i><!--/caption-->
</p>

<p><b>FTP and FTP Restart</b></p>

<p>The FTP service, an industry standard protocol used to publish information to a Web server, is integrated into Windows 2000 Server. In IIS 5.0, the FTP Restart protocol is also supported by Windows 2000 Server. It provides a faster and smoother way to download information from the Internet. If an interruption occurs during data transfer from an FTP site, the download can continue where it left off, without having to download the entire file again.</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
This feature is available only to FTP clients that support the FTP restart function. The FTP client initiates the REST command to connect and continue a failed download.
</blockquote></div>
</p>

<A NAME="803"><h3>Security</h3></A>
<p>Security features, which are an important area of improvement in IIS 5.0, take advantage of the Internet-standard security features that are fully integrated with Windows 2000.</p>

<p><b>Security Standards</b></p>

<p>The security protocols supported in IIS 5.0 are described in the following table.</p>

<p>
	<table valign="top" cellpadding="5" width="95%">
	
		<tr>
			<th>Security</th>
			<th>Protocol description</th>
		</tr>

		<tr>
			<td valign="top">Fortezza</td>
			<td valign="top">Support for the U.S. government security standard called Fortezza is new in IIS 5.0. Fortezza satisfies the Defense Message System security architecture with a cryptographic mechanism that provides message confidentiality, integrity, authentication, non-repudiation, and access control to messages, components, and systems. These features are implemented both with server and browser software and with PCMCIA card hardware.</td>
		</tr>

		<tr>
			<td valign="top">Secure Sockets Layer (SSL) 3.0</td>
			<td valign="top">SSL security protocols are used widely by Internet browsers and servers for authentication, message integrity, and confidentiality. You can configure your Web server's SSL security features to verify the integrity of your content, verify the identity of users, and encrypt network transmissions. SSL relies upon certificates. Microsoft Certificate Services can be used to issue certificates. See Chapter 11, Lesson 1 &quot;<A HREF="ch11b.htm#591">Public Key Infrastructure</A>&quot; for additional information on certificates and Certificate Services.</td>
		</tr>

		<tr>
			<td valign="top">Transport Layer Security (TLS)</td>
			<td valign="top">TLS is based on SSL. It provides for cryptographic user authentication and provides a way for independent programmers to write TLS-enabled code that can exchange cryptographic information with another process without a programmer needing to be familiar with another programmer's code. In addition, TLS is intended to provide a framework that can be used by new public key and bulk encryption methods as they emerge. TLS also focuses on improving performance by reducing network traffic and providing an optional session caching scheme that can reduce the number of connections that need to be established from scratch.</td>
		</tr>

		<tr>
			<td valign="top">PKCS #7</td>
			<td valign="top">This protocol describes the format of encrypted data such as digital signatures or digital envelopes. Both of these are involved in the certificate features of IIS.</td>
		</tr>

		<tr>
			<td valign="top">PKCS #10</td>
			<td valign="top">This protocol describes the format of requests for certificates that are submitted to certification authorities.</td>
		</tr>
		
		<tr>
			<td valign="top">Basic authentication</td>
			<td valign="top">Basic Authentication is a part of the HTTP 1.0 specification. It sends passwords over networks in Base64-encoded format. The Basic Authentication method is a widely used, industry-standard method for collecting user name and password information. The advantage of Basic Authentication is that it is part of the HTTP specification, and is supported by most browsers. The disadvantage is that Web browsers using Basic Authentication transmit passwords in an unencrypted form. By monitoring communications on your network, someone could easily intercept and decipher these passwords by using publicly available tools. Therefore, Basic Authentication is not recommended unless you are confident that the connection between the user and your Web server is secure, with a direct cable connection, a dedicated line, or a secure intranet.</td>
		</tr>

		<tr>
			<td valign="top">Digest authentication</td>
			<td valign="top">A new feature of IIS 5.0, Digest Authentication offers the same features as Basic Authentication but involves a different method for transmitting the authentication credentials. The authentication credentials pass through a one-way process, often referred to as <i>hashing</i>. The result of this process is called a <i>hash</i>, or <i>message digest</i>, and the original text cannot be deciphered from the hash. The server generates additional information that is added to the password before hashing so no one can capture the password hash and use it to impersonate the true client. This is a shared secret password methodology. This a clear advantage over Basic Authentication, in which the password can be intercepted and used by an unauthorized person. Digest Authentication is structured to be usable across proxy servers and other firewall applications and is available to WebDAV. Because Digest Authentication is a new HTTP 1.1 feature, not all browsers support it. If a non-compliant browser makes a request on a server that requires Digest Authentication, the server will reject the request and send the client an error message. Digest Authentication is supported only for Windows 2000 domains, and Internet Explorer version 5 or later is one of the few browsers that supports this feature.</td>
		</tr>

		<tr>
			<td valign="top">Integrated Windows Authentication</td>
			<td valign="top">This authentication method provides NTLM (Windows NT Challenge/Response) authentication for older versions of Internet Explorer 3.0 that use it to cryptographically authenticate with IIS. Integrated Windows Authentication also provides Web sites and new versions of Internet Explorer with Kerberos v5 authentication. Integrated Windows Authentication is only used if Anonymous access is disabled or denied as a result of NTFS permissions restrictions. Integrated Windows Authentication is not supported over Proxy server connections.</td>
		</tr>
		
	</table>
</p>

<p><b>Security Mechanisms</b></p>

<p>IIS 5.0 uses five basic security mechanisms: authentication, certificates, access control, encryption, and auditing.</p>

<p><b>Authentication</b></p>

<p>Authentication allows you to confirm the identity of anyone requesting access to your Web sites. IIS supports the following types of authentication for HTTP and FTP services:</p>

<ul>
<p><li>Anonymous FTP and HTTP authentication</li></p>

<p><li>Basic FTP and HTTP authentication</li></p>

<p><li>Anonymous FTP and HTTP authentication</li></p>

<p><li>Digest authentication for Windows 2000 Domains and browsers supporting this HTTP 1.1 authentication method</li></p>

<p><li>Integrated Windows authentication (HTTP only)</li></p>
</ul>

<p><b>Certificates</b></p>

<p>To complete the authentication process, you need a mechanism for verifying user identities. Certificates are digital identification documents that allow both servers and clients to authenticate each other. They are required for the server and client's browser to set up an SSL connection over which encrypted information can be sent. Server certificates usually contain information about your company and the organization that issued the certificate. Client certificates usually contain identifying information about the user and the organization that issued the certificate.</p>

<p><b>Access Control</b></p>

<p>After verifying the identity of a user, you'll want to control their access to resources on your server. IIS 5.0 uses two layers of access control: Web permissions and NTFS permissions. Web permissions apply to all HTTP clients and define access to server resources. NTFS permissions define what level of access individual user accounts have to folders and files on the server.</p>

<p><b>Encryption</b></p>

<p>Once you've controlled access to information, you need to protect that information as it passes over the Internet. You can let users exchange private information, such as credit card numbers or phone numbers, with your server in a secure way by using encryption. Encryption scrambles the information before it is sent, and decryption unscrambles it after it is received. The foundation for this encryption is the SSL 3.0 protocol and the emerging TLS 1.0 protocol, which provides a secure way of establishing an encrypted communication link with users. SSL confirms the authenticity of your Web site and, optionally, the identity of users accessing restricted Web sites.</p>

<p><b>Auditing</b></p>

<p>The last step to ensuring security is to regularly monitor your site's usage. Administrators can use security auditing techniques to monitor a broad range of user and Web server security activity. Auditing consists of creating auditing policies for directory and file access or server events, and monitoring the security logs to detect any access attempts by unauthorized persons. For more information on auditing, read Chapter 11, Lesson 5 &quot;<a href="ch11f.htm">Windows 2000 Auditing</a>.&quot;</p>

<p><b>Security Wizards</b></p>

<p>To make it simpler to establish and maintain security settings, IIS 5.0 includes three new security task wizards: the Web Server Certificate wizard, the Permissions wizard, and the Certificate Trust Lists wizard.</p>

<p>The Certificate wizard simplifies certificate administration tasks, such as creating certificate requests and managing the certificate life cycle. The Web Server Certificate wizard is started from the Server Certificate button on the properties of a Web site in the Internet Information Services snap-in.</p>

<p>
<A HREF="javascript:fullSize('f14xx07x.htm')"> <img src="images/f14xx07.jpg" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 14.7</b> <i>Starting the Web Server Certificate wizard on the Properties page of the Administration Web site</i><!--/caption-->
</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
Using Internet Information Services (HTML) to create a Web server certificate is similar to using the Internet Information Services snap-in; however, there is no HTML-based wizard to walk you through the configuration process.
</blockquote></div>
</p>

<p>SSL security is an increasingly common requirement for Web sites that provide e-commerce and access to sensitive business information. The new wizard makes it easy to set up SSL-enabled Web sites on a Windows 2000 Server computer. In addition, this wizard makes it easier to establish and maintain SSL encryption and client certificate authentication.</p>

<p>The Permissions wizard walks administrators through the tasks of setting up permissions and authenticated access on an IIS Web site, making it much easier to set up and manage a Web site that requires authenticated access to its content.</p>

<p>The Permissions wizard is started from the Internet Information Services snap-in. Select either a Web site or FTP site. From the Action menu, point to All Tasks and then click Permissions wizard. Figure 14.8 shows the Permissions Wizard screen started from the Internet Information Services snap-in.</p>

<p>
<A HREF="javascript:fullSize('f14xx08x.htm')"> <img src="images/f14xx08.jpg" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 14.8</b> <i>Permissions Wizard screen for the Default Web site</i><!--/caption-->
</p>

<p>The Permissions wizard can also be started from Internet Services Manager (HTML) by selecting a Web or FTP site from the home page and then clicking the Permissions Wizard link in the left frame of the home page, as shown in Figure 14.9.</p>

<p>
<A HREF="javascript:fullSize('f14xx09x.htm')"> <img src="images/f14xx09.jpg" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 14.9</b> <i>HTML-based Permissions Wizard screen for the Default Web site</i><!--/caption-->
</p>

<p>The Permissions wizard provides two top-level options:</p>

<ul>
<p><li>Inherited security settings applied to the parent site or virtual directory</li></p>

<p><li>Security settings based on a template</li></p>
</ul>

<p>Two templates are available for configuring security: the Public Web Site template and the Secure Web Site template. The Public Web Site template applies security settings that are cross-browser compatible and provide access to the site regardless of whether the user has a Windows 2000 account for the network being accessed. The Secure Web Site template applies security settings that only users with Windows 2000 user accounts can access.</p>

<p>The Certificate Trust List wizard allows administrators to configure certificate trust lists (CTLs). A CTL is a list of trusted certification authorities (CAs) for a particular directory. CTLs are especially useful for ISPs that have several Web sites on their server and who need to have a different list of approved CAs for each site. CTLs are available only at the Web site level and are not available for FTP sites.</p>

<p>After a Server Certificate is configured for the site, the Certificate Trust List wizard is run from the properties of a Web site in the Internet Information Services snap-in. On the Directory Security tab of the Properties dialog box, click the Edit button under Secure Communications to display the Secure Communications dialog box. From this dialog box, select the Enable certificate trust list check box and then click New. The Certificate Trust List wizard appears (Figure 14.10).</p>

<p>
<A HREF="javascript:fullSize('f14xx10x.htm')"> <img src="images/f14xx10.jpg" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 14.10</b> <i>Navigating to the Certificate Trust List wizard after enabling CTL</i><!--/caption-->
</p>

<p>You can also enable and configure CTL from the Internet Service Manager (HTML), but there is no corresponding HTML-based wizard. Additionally, you cannot edit the certificates through the HTML interface, but you can edit the certificates from the Internet Information Services snap-in.</p>

<A NAME="804"><h3>Application Environment</h3></A>
<p>IIS 5.0 includes performance enhancements that make it easier to develop Web-enabled applications. The Active Server Pages (ASP) technology within IIS, combined with the data access and component services within Windows 2000 Server, provide a well-rounded application environment.</p>

<p>With this release, enhanced flow control and error handling, Windows Script Host Components, and other improvements make ASP easier to use for script writers and Web application developers. In addition, features such as scriptless ASP, ASP self-tuning, and performance-enhanced objects, as well as improvements within the Windows 2000 operating system, can increase the speed of ASP applications.</p>

<p>ASP is a server-side scripting environment that you can use to create and run dynamic, interactive Web server applications. With ASP, you can combine HTML pages, script commands, and Component Object Model (COM) components to create interactive Web pages or Web-based applications that are easy to deploy and modify. There are a number of new ASP features in IIS 5.0, such as new flow control capabilities and error handling features that make it easier to write and control the behavior of Web applications. Other new features, such as scriptless ASP processing, improve the performance of ASP pages.</p>

<p><b>Component Services</b></p>

<p>IIS 5.0 and the Component Services (COM+) included in Windows 2000 Server work together to form a basic architecture for building Web applications. In IIS version 4.0, Microsoft Transaction Server (MTS) provided transaction support. In IIS 5.0 and Windows 2000, Component Services provides all the transaction support of MTS, in addition to a number of other component development and deployment features. IIS uses the functionality provided by Component Services to perform the following tasks:</p>

<ul>
<p><li>Isolate applications into distinct processes</li></p>

<p><li>Manage communication between COM components (including the ASP built-in objects)</li></p>

<p><li>Coordinate transaction processing for transactional ASP applications</li></p>
</ul>

<p><b>Active Directory Services</b></p>

<p>Active Directory services in Windows 2000 Server is used to store and manage information about networked resources. By providing a centralized store for essential information, Active Directory services simplifies network management, makes it easier for users to find resources, and makes it easier for developers to write applications.</p>

<p>Microsoft Active Directory Service Interfaces (ADSI) is a COM-based directory service model that allows ADSI-compliant client applications to access a wide variety of distinct directory protocols, including Active Directory services, LDAP, and NDS, while using a single, standard set of interfaces. ADSI shields the client application from the implementation and operational details of the underlying data store or protocol.</p>

<p>IIS stores most Internet site configuration information in the IIS metabase. IIS exposes a low-level DCOM interface that allows applications to gain access to and manipulate the metabase. To make it easy to access the metabase, IIS also includes an ADSI provider that wraps most of the functionality provided by the DCOM interface, and exposes it to any ADSI-compliant client applications.</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
For more information about the new features in IIS 5.0, see the Supplemental Course Materials CD-ROM (\chapt14\articles\IISover.doc) that accompanies this book.
</blockquote></div>
</p>

<A NAME="805"><h2>Installing IIS 5.0</h2></A>
<p>Internet Information Services 5.0 is a component of the Windows 2000 operating system. Installation and removal of IIS is accomplished in one of three ways: when installing or upgrading Windows 2000, by using the Add/Remove Programs utility in Control Panel, or by using an unattended.txt file during an unattended installation.</p>

<p>When performing a clean installation of Windows 2000 Server, IIS is installed by default. You can remove IIS or select IIS components to be added or removed by using the Add/Remove Programs utility.</p>

<p>When you upgrade from a previous version of Windows
<HTML>
<HEAD>
<TITLE>Lesson 4: Administering Active Directory Services</TITLE>
<link rel="STYLESHEET" type="text/css" href="mmserver.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch06d.htm", "ch06f.htm", "images/unit_p_a1.gif", "images/unit_p_a2.gif", "images/unit_p_b1.gif", "images/unit_p_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#aa22aa", "2");
//--></SCRIPT><P>

<A NAME="270"><h1>Lesson 4: Administering Active Directory Services</h1></A>
<p>Once you have installed Active Directory services, you are ready to create and manage the objects that are stored within the directory service. This lesson describes the process of creating OUs and adding objects to those units. The lesson then provides details about how to manage those objects so that you can find, modify, and delete objects as necessary. Finally, this lesson covers how to control access to the objects, which includes managing Active Directory permissions and delegating administrative control of objects.</p>

<p>
<div class="sidebar"><blockquote>
<b>After this lesson, you will be able to</b> 

<ul>
<p><li>Create OUs and their objects</li></p>

<p><li>Find, modify, move, and delete the objects that you created</li></p>

<p><li>Control access to Active Directory objects</li></p>
</ul>

<b>Estimated lesson time: 50 minutes</b> 
</blockquote></div>
</p>

<A NAME="271"><h2>Creating Organizational Units and Their Objects</h2></A>
<p>Active Directory objects represent network resources. Each object is a distinct, named set of attributes that represents a specific network resource. When you add new resources to your network, such as user accounts, groups, or printers, you create new Active Directory objects that represent these resources.</p>

<p>Before objects are added to Active Directory services, you should create the OUs that will contain those objects.</p>

<A NAME="272"><h3>Creating Organizational Units</h3></A>
<p>You can create an OU under a domain, under the Domain Controller object, or within another OU. Once you create an OU, you can add objects to the OU.</p>

<p>To create OUs, you must have the required permissions to add OUs in the parent OU, domain, or Domain Controller node where you want to create the OU. By default, members of the Administrators group have the permissions to create OUs. You cannot create OUs within the majority of default containers, such as Computers or Users.</p>

<p>OUs are created to facilitate network administration. Your OU structure should be based on your particular administrative needs. If necessary, you can easily change your OU structure or move objects between OUs.</p>

<p>You should create an OU for any of the following reasons:</p>

<ul>
<p><li>To delegate administrative control to other users or administrators.</li></p>

<p><li>To group objects that require similar administrative tasks. Grouping objects allows the administrators to locate similar network resources easily and perform their administrative tasks. For example, they can group all user objects for temporary employees in the same OU.</li></p>

<p><li>To restrict visibility of network resources in the Active Directory store. Users can view only objects to which you have given them access. Permissions can easily be changed for an OU to restrict access to confidential network information.</li></p>
</ul>

<p>You can create an OU in the Active Directory Users and Computers snap-in by selecting the domain or existing OU where you want to create the new OU. From there, click the Action menu, point to New, and then click Organizational Unit (Figure 6.7). Enter the name of the new OU in the Name text box, and click OK.</p>

<p>
<A HREF="javascript:fullSize('f06xx07gx.htm')"> <img src="images/f06xx07g.jpg" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 6.7</b> <i>Creating an OU in the Active Directory Users and Computers snap-in</i><!--/caption-->
</p>

<A NAME="273"><h3>Adding Objects to Organizational Units</h3></A>
<p>To add objects to OUs, you must have the required permissions to create objects within the OU where you want to create the object. By default, members of the Administrators group have the permissions to add objects to OUs. The objects available to create are dictated by the rules of the schema, wizard, or snap-in you use. When you create an object, sometimes not all attributes are available for definition. Often, to completely define all the object attributes, you must modify the object after you create it.</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
Object attributes (also referred to as properties) in the schema are categories of information that define the characteristics for all instances of a defined object type. All instances of a certain object type have the same attributes. The attribute values of any object instance make it unique. For example, all instances of a user object have a First Name attribute; however, the value for the First Name attribute can be any name, such as Linda or Max.</blockquote></div>
</p>

<p>You can create object instances in the Active Directory Users and Computers snap-in. Select the OU that you want to add the object to, click the Action menu, point to New, and then click the name of the object type that you want to add. Enter the appropriate information in the dialog box(es) that appears.</p>

<p><b>Description of Active Directory Objects</b></p>

<p>Adding new resources to your network creates new Active Directory objects that represent these resources. The following table describes the most common object types that you can add to Active Directory services:</p>

<p><table cellpadding=5 width="95%"><tr>
<th>Icon </th><th>Object</th><th>Description</th>
</tr><tr>
<td valign="top"><A HREF="javascript:fullSize('g06xx08x.htm')"> <img src="images/g06xx08.jpg" border=0 ALT = "Click to view at full size."> </A></td>
<td valign="top">Computer</td> <td valign="top">A computer object represents a computer on the network. For Windows NT Workstation and Windowsç‡¦T Server computers, this is the machine account. The object contains information about a computer that is a member of the domain.</td></tr><tr>
<td valign="top"><A HREF="javascript:fullSize('g06xx09x.htm')"> <img src="images/g06xx09.jpg" border=0 ALT = "Click to view at full size."> </A></td>
<td valign="top">Contact</td> <td valign="top">A contact object is an account that does not have any security permissions. You cannot log on to the network as a contact. Contacts are typically used to represent external users for the purpose of e-mail.</td></tr><tr>
<td valign="top"><A HREF="javascript:fullSize('g06xx10x.htm')"> <img src="images/g06xx10.jpg" border=0 ALT = "Click to view at full size."> </A></td>
<td valign="top">Group</td> <td valign="top">A group object can contain users, computers, and other groups. Groups simplify the management of large numbers of objects.</td></tr><tr>
<td valign="top"><A HREF="javascript:fullSize('g06xx11x.htm')"> <img src="images/g06xx11.jpg" border=0 ALT = "Click to view at full size."> </A></td>
<td valign="top">Printer</td> <td valign="top">A printer object is a network printer that has been published in the directory. The object is actually a pointer to a printer on a computer. You must manually publish a printer on a computer that is not in Active Directory services.</td></tr><tr>
<td valign="top"><A HREF="javascript:fullSize('g06xx12x.htm')"> <img src="images/g06xx12.jpg" border=0 ALT = "Click to view at full size."> </A></td>
<td valign="top">User</td> <td valign="top">A user object is a security principal in the directory. The information in this object allows a user to log on to Windows 2000. The information also includes many optional fields, such as first name, last name, display name, and e-mail address.</td></tr><tr>
<td valign="top"><A HREF="javascript:fullSize('g06xx13x.htm')"> <img src="images/g06xx13.jpg" border=0 ALT = "Click to view at full size."> </A></td>
<td valign="top">Shared Folder</td> <td valign="top">A shared folder object is a network share that has been  published in the directory. The object is actually a pointer to the shared folder. It contains the address of the data, rather than the data itself. Shared folders exist in a computer's registry. When you publish a shared folder in Active Directory services, you 
 are creating an object that contains a pointer to the shared folder.</td></tr></table></p>

<p><img src="images/practic.JPG" border="0"></p>

<A NAME="274"><h3>Exercise 5: Creating an Organizational Unit and Its Objects</h3></A>
<p>In this practice, you create part of the organizational structure of a domain by creating an OU. You then create three user accounts that you use in a later practice.</p>

<p><li><b>Procedure 1: Creating instances of OU and user objects</b></li></p>

<p>In this procedure you will create two OUs and three User objects.</p>

<ol>
<p><li>Log on to Server01 as Administrator with a password of &quot;password.&quot;</li></p>

<p><li>Open Active Directory Users And Computers.</li></p>

<p>To ensure that you are creating a new OU in the correct location, you must first select the location.</p>

<p><li>In the console tree, click microsoft.com.</li></p>

<p><li>Click the Action menu, point to New, and then click Organizational Unit.</li></p>

<p>The New Object - Organizational Unit dialog box appears.</p>

<p>Notice that the only required information is the name. The dialog box indicates the location where the object will be created. This should be microsoft.com/.</p>

<p><li>In the Name box, type <b>Sales</b> and then click OK.</li></p>

<p>The Sales OU appears in the console tree.</p>

<p><li>Under microsoft.com, create another OU, called Servers.</li></p>

<p><li>In the console tree, click Users.</li></p>

<p><li>Click the Action menu, point to New, and then click User.</li></p>

<p>Notice that the New Object - User dialog box shows that the new user account is being created in the User folder of microsoft.com/Users.</p>
</ol>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
User objects can be created in any OU. In this procedure, you will create most user objects in the Users OU; however, this is not a requirement for creating these objects.
</blockquote></div>
</p>

<ol>
<p><li value="9">Create a new user account with the following information:</li></p>

<p><table cellpadding=5 width="95%"><tr>
<th>Text box name</th><th>Type</th>
</tr><tr>
<td valign="top">First name</td> <td valign="top">Jane</td></tr><tr>
<td valign="top">Last name</td> <td valign="top">Doe</td></tr><tr>
<td valign="top">User logon name:</td> <td valign="top">Jane_Doe</td></tr></table></p>

<p><li>Click Next.</li></p>

<p><li>Leave the password fields blank, do not change the default settings for this user account, and click Next.</li></p>

<p>The summary screen appears showing the full name and user logon name for Jane Doe.</p>

<p><li>Click Finish.</li></p>

<p><li>Click Jane_Doe in the right pane of the Active Directory Users And Computers snap-in.</li></p>

<p><li>Click the Action menu and then click Properties.</li></p>

<p>The Jane Doe Properties dialog box appears.</p>

<p><li>On the General tab of the Jane Doe Properties dialog box, in the Telephone Number text box, type 555-1234.</li></p>

<p><li>Click OK.</li></p>

<p><li>Create the following user accounts under the Users object.</li></p>

<p><table cellpadding=5 width="95%"><tr>
<th>Text box name</th><th>Type</th>
</tr><tr>
<td valign="top">First name</td> <td valign="top">John</td></tr><tr>
<td valign="top">Last name</td> <td valign="top">Smith</td></tr><tr>
<td valign="top">User logon name:</td> <td valign="top">John_Smith</td></tr></table></p>
<p><table cellpadding=5 width="95%"><tr>
<th>Text box name</th><th>Type</th>
</tr><tr>
<td valign="top">First name</td> <td valign="top">Bob</td></tr><tr>
<td valign="top">Last name</td> <td valign="top">Train</td></tr><tr>
<td valign="top">User logon name:</td> <td valign="top">Bob_Train</td></tr></table></p>
</ol>

<p>You will be working with these user accounts in the <a href="ch07a.htm">next chapter</a>.</p>

<A NAME="275"><h2>Managing Active Directory Objects</h2></A>
<p>The process of managing Active Directory objects involves several different tasks, such as locating objects, modifying and deleting objects, and moving objects. To modify, delete, or move objects, you must have the required permissions for the object and the OU to which you move the object. By default, members of the Administrators group have the required permissions.</p>

<A NAME="276"><h3>Locating Objects</h3></A>
<p>The global catalog contains a partial replica of the entire directory, so it stores information about every object in a domain tree or forest. As a result, a user can find information regardless of which domain in the tree or forest contains the data. The contents of the global catalog are automatically generated by Active Directory services from the domains that make up the directory.</p>

<p>To locate Active Directory objects, open the Active Directory Users And Computers snap-in located in the Administrative Tools folder. Then right-click a domain or OU in the console tree, and click Find. The Find dialog box appears.</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
If you access the context menu of a shared folder object and then click Find, the Windows Explorer search function is launched, and you can search the share for files and folders.
</blockquote></div>
</p>

<p>The Find dialog box provides options that allow you to search the global catalog so that you can locate user accounts, groups, and printers (see Figure 6.8).</p>

<p>
<A HREF="javascript:fullSize('f06xx08x.htm')"> <img src="images/f06xx08.jpg" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 6.8</b> <i>The Find dialog box in the Active Directory Users And Computers snap-in.</i><!--/caption-->
</p>

<p>As Figure 6.8 illustrates, the Find dialog box can be broken into several distinct sections: the main window, the object tab, the Advanced tab, and the results window. The object tab in Figure 6.8 is Users, Contacts, and Groups.</p>

<p><b>The Main Window</b></p>

<p>The main window of the Find tool contains a set of menus, buttons, and drop-down menu. Although most of these options are self-explanatory and offer standard functionality, the Find drop-down menu and the In drop-down menu (shown in Figure 6.8) are unique to the Active Directory Find dialog box and are discussed in more detail below. In addition, the main window contains two tabs: the object tab and the Advanced tab, both of which are also discussed later in this section.</p>

<p><b>The Find Drop-Down Menu</b></p>

<p>The Find drop-down menu contains the type of objects that you can include in your search.</p>

<p>You must select one of the available options to perform your search. By default, the Users, Contacts, And Groups is selected.</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
The title of the dialog box varies according to the type of search selected from the Find drop-down menu. For example, if Organizational Units is selected, the dialog box title will read Find Organizational Units.
</blockquote></div>
</p>

<p><b>The In Drop-Down Menu</b></p>

<p>The In drop-down menu contains the location that you want to search, which can be the entire Active Directory store, a specific domain, or an OU. You must select one of these options. By default, the domain you are in is selected.</p>

<p><b>Users, Contacts, and Groups Tab</b></p>

<p>The Users, Contacts, And Groups tab is selected when you open the Find dialog box. The tab contains the Name text box and the Description text box. The name of the object is entered into the Name text box, and the contents of the object's description are entered into the Description text box. You can enter information into either one of the text boxes or into both text boxes. The search is based on the combination of both. You can also use wild cards in either text box to conduct a search.</p>

<p><b>Advanced Tab</b></p>

<p>The Advanced tab provides you with advanced search features that you can use in conjunction with the object tab or use by themselves. The search results are based on a combination of the information entered on both tabs. If nothing is added the text boxes on the Users, Contacts, And Groups tab, the search results will be based only on the information entered on the Advanced tab.</p>

<p>The following table provides a detailed description of the fields on the Advanced tab:</p>

<p><table cellpadding=5 width="95%"><tr>
<th>Field</th><th>Description</th>
</tr><tr>
<td valign="top">Field</td> <td valign="top">A list of the attributes for which you can search on the object type that you select.</td></tr><tr>
<td valign="top">Condition</td> <td valign="top">The methods that are available to further define the search for an attribute. The options are Starts With, Ends With, Is (Exactly), Is Not, Present, or Not Present.</td></tr><tr>
<td valign="top">Value</td> <td valign="top">The value for the condition of the Field (attribute) value that you are using to search the directory. You can search for an object by using an attribute of the object only if you enter a value for the attribute. For example, if the Field value you select is First Name and the Condition value is Starts With, the Value text box would contain an R if you're looking for users whose first name starts with R.</td></tr><tr>
<td valign="top">Search Criteria</td> <td valign="top">The box that lists each search criteria that you have defined. After you have defined the search criteria in the Field, Condition, and Value fields, click Add. The search criteria are added to the window. You can add or remove search criteria to narrow or widen your search.</td></tr></table></p>

<p><b>Results Window</b></p>

<p>The results window opens at the bottom of the main window and displays the results of your search after you click Find Now, which is located on the main window. You can add or delete columns appearing in the Results window from the View menu Choose Columns option.</p>

<A NAME="277"><h3>Modifying Attribute Values and Deleting Objects</h3></A>
<p>You can modify the attribute values of an object to change or add information. Modifying an object changes the value of an attribute associated with the object.</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
Do not confuse modifying an object's attribute values with adding, deleting, or modifying objects or attributes in the schema. Schema modifications are permanent and are replicated to all domain controllers in the forest.
</blockquote></div>
</p>

<p>To modify the values of an attribute, open the Active Directory Users And Computers snap-in, and select an instance of an object. From the Action menu click Properties. In the Properties dialog box, make the necessary changes to the attribute values. You should modify objects when the values of the attributes change; for example, modify a user object to change the name, location, or e-mail for that user.</p>

<p>To maintain security, delete objects when they are no longer needed. To delete objects, open the Active Directory Users And Computers snap-in and select the object instance you want to delete. From the Action menu, click Delete.</p>

<A NAME="278"><h3>Moving Objects</h3></A>
<p>It is possible to move objects from one location in the Active Directory store to another location, such as from one OU to another, to reflect changes within the organization. You should move objects from one location to another when organizational or administrative functions change; for example, an employee moves from one department to another. To move an object, open the Active Directory Users And Computers snap-in, and select the object you want to move. From the Action menu, click Move and select the new location for the object.</p>

<p>
<img src="images/practic.JPG" border="0">
</p>

<A NAME="279"><h3>Exercise 6: Managing Active Directory Objects</h3></A>
<p>In this exercise you will first search for a user object that you created in the last exercise and then move the object to a new location.</p>

<p><li><b>Procedure 1: Finding a user account in the domain</b></li></p>

<p>In this procedure you will locate a user with a first name of Jane. Jane was promoted to a position in the sales department, so her user object will be moved to the Sales OU. You know most of her phone number, and you know her first name.</p>

<ol>
<p><li>Log on to Server01 as Administrator with a password of &quot;password.&quot;</li></p>

<p><li>Open Active Directory Users And Computers.</li></p>

<p><li>In the console tree, click on microsoft.com.</li></p>

<p><li>Click the Action menu and then click Find.</li></p>

<p>The Find Users, Contacts, And Groups dialog box appears.</p>

<p><li>Verify that Users, Contacts, And Groups is selected in the Find drop-down list box, and then click Find Now.</li></p>

<p>Notice how all Users and Groups are located, regardless of their location.</p>

<p><li>Click Clear All, and then click OK to acknowledge that you want to clear the search results.</li></p>

<p><li>In the In drop-down list box, verify that the microsoft domain appears.</li></p>

<p><li>In the Name text box, type <b>Jane</b>.</li></p>

<p><li>Click the Advanced tab.</li></p>

<p><li>Click Field, point to User, and then click Telephone Number.</li></p>
</ol>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
If you don't see Telephone Number listed, click the arrow at the bottom of the list to scroll down to Telephone Number.</blockquote></div>
</p>

<ol>
<p>Starts With appears in the Condition text box.</p>

<p><li value="11">In the Value text box, type <b>555-12</b> and then click Add.</li></p>

<p><li>Click the View menu, and then click Choose Columns.</li></p>

<p>The Choose Columns dialog box appears.</p>

<p><li>From the Columns Shown box, click Description and then click Remove.</li></p>

<p><li>From the Columns Available box, scroll down and click X500 Distinguished Name and then click Add.</li></p>

<p><li>Click OK to close the Choose Columns dialog box.</li></p>

<p>The Find Users, Contacts, And Groups dialog box displays Jane Doe with an object type value of User and an X.500 distinguished name value of CN=Jane Doe,CN=Users,DC=microsoft,DC=com.</p>

<p>The distinguished name tells you that user Jane Doe is located in the Users container in the microsoft.com domain.</p>

<p><li>Close the Find Users, Contacts, And Groups dialog box.</li></p>
</ol>

<p><li><b>Procedure 2: Moving an Object in Active Directory Users and Computers</b></li></p>

<p>In this procedure you will move the Jane Doe user object from the Users container to the Sales container.</p>

<ol>
<p><li>In the Active Directory Users And Computers snap-in, click on the Users OU in the console tree.</li></p>

<p>All User and Security Group objects appear in the right pane.</p>

<p><li>Click the Jane Doe user object in the right pane.</li></p>

<p><li>Click the Action menu and then click Move.</li></p>

<p>The Move window appears.</p>

<p><li>Click the Sales OU and then click OK.</li></p>

<p>Jane Doe is moved from the Users OU to the Sales OU.</p>

<p><li>Click on the Sales OU in the console tree.</li></p>

<p>The Jane Doe user object appears in the right pane.</p>

<p><li>Close the Active Directory Users and Computers snap-in.</li></p>
</ol>

<A NAME="280"><h2>Controlling Access to Active Directory Objects</h2></A>
<p>Windows 2000 uses an object-based security model to implement access control for all Active Directory objects. This security model is similar to the one that Windows 2000 uses to implement NTFS security. Every Active Directory object has a security descriptor that defines who has the permissions to gain access to the object and what type of access is allowed. Windows 2000 uses these security descriptors to control access to objects.</p>

<p>To reduce administrative overhead, you can group objects with identical security requirements into the same OU and then assign access permissions to the entire OU and all objects in it.</p>

<A NAME="281"><h3>Managing Active Directory Permissions</h3></A>
<p>Active Directory permissions provide security for resources by allowing you to control who can gain access to object instances or object attributes and the type of access that you will allow.</p>

<p><b>Active Directory Security</b></p>

<p>Use Active Directory permissions to determine who has the permissions to gain access to the object and what type of access is allowed. An administrator or the object owner must assign permissions to the object before users can gain access to the object. Windows 2000 stores a list of user access permissions, called the ACL, for every Active Directory object. The ACL for an object lists who can access the object and the specific actions each user can perform on the object.</p>

<p>You can use permissions to assign administrative privileges to a specific user or group for an OU, a hierarchy of OUs, or a single object, without assigning administrative permissions for controlling other Active Directory objects.</p>

<p><b>Object Permissions</b></p>

<p>The object type determines which permissions you can select. Permissions vary for different object types. For example, you can assign the Reset Password permission for a user object but not for a computer object.</p>

<p>A user can be a member of multiple groups, each with different permissions that provide different levels of access to objects. When you assign a permission to a user for access to an object and that user is a member of a group that has been assigned a different permission for that object, the user's effective permissions are the combination of the user and group permissions. For example, if a user is granted the write account expiration data (Write accountExpires) permission to user objects and is a member of a group with read account expiration data (Read accountExpires) permission, the user's effective permission is read and write account expiration data.</p>

<p>You can allow or deny permissions. Denied permissions take precedence over any allowed permissions for users and groups. If you deny permission to a user to gain access to an object, the user will not have that permission, even if you allow the permission for a group the user is a member of. You should deny permissions only when it is necessary to deny permissions to a specific user who is a member of a group with allowed permissions.</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
Always ensure that all objects have at least one user with the Full Control permission. Failure to do so might result in some objects being inaccessible to the person who is using the Active Directory Users And Computers snap-in, even an administrator.</blockquote></div>
</p>

<p><b>Assigning Active Directory Permissions</b></p>

<p>You can use the Active Directory Users And Computers snap-in to set permissions for objects and attributes of objects. The Security tab of the Properties dialog box for the object allows you to assign permissions.</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
If you do not see the Security tab for an object, from the View menu click Advanced Features.</blockquote></div>
</p>

<p>Standard permissions are sufficient for most administrative tasks. However, you might need to view the special permissions. To view special permissions, click Advanced. On the Permissions tab, click the entry you want to view, and then click View/Edit. To view the permissions for specific attributes, click the Properties tab of the Permission Entry dialog box.</p>

<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
Avoid assigning permissions for specific attributes of objects because this can complicate system administration. Errors can result, such as Active Directory objects not being visible.</blockquote></div>
</p>

<A NAME="282"><h3>Permissions Inheritance</h3></A>
<p>Similar to other permissions inheritance in Windows 2000, permissions inheritance in Active Directory services minimizes the number of times you need to assign permissions for objects. When you assign permissions, you can apply the permissions to subobjects (child objects), a feature that propagates the permissions to all the subobjects for a given object. This feature is called permissions inheritance.</p>

<p>You can prevent permissions inheritance so that a child object does not inherit permissions from its parent object by deselecting the check box Allow Inheritable Permissions From Parent To Propagate To This Object. When you prevent inheritance, only the permissions that you explicitly assign to the object apply. You use the Security tab in the Properties dialog box to prevent permissions inheritance.</p>

<p>When you prevent permissions inheritance, Windows 2000 Server allows you to do the following:</p>

<ul>
<p><li>Copy previously inherited permissions to the object. The new explicit permissions for the object are a copy of the permissions that it previously inherited from its parent object. Then, according to your needs, you can make any necessary changes to the permissions.</li></p>

<p><li>Remove previously inherited permissions from the object. Windows 2000 removes any previously inherited permissions. No permissions exist for the object. Then, according to your needs, you can assign any permissions for the object.</li></p>
</ul>

<A NAME="283"><h3>Delegating Administrative Control of Objects</h3></A>
<p>You can delegate administrative control of objects to individuals so that they can perform administrative tasks on the objects. There are different ways to delegate control of objects, and there are also guidelines for delegating control. After you determine who to assign control to, use the Delegation Of Control wizard to delegate control of objects.</p>

<p>You delegate administrative control of objects by assigning permissions to the object to allow users or groups of users to administer the objects. An administrator can delegate the following types of control:</p>

<ul>
<p><li>Assigning permissions to a user or group to create or modify objects in a specific OU</li></p>

<p><li>Assigning permissions to a user or group to modify specific permissions for the attributes of an object, such as assigning the permission to reset passwords on a user account object</li></p>
</ul>

<p>Because tracking permissions at the OU level is easier than tracking permissions on objects or object attributes, the most common method of delegating administrative control is to assign permissions at the OU level. Assigning permissions at the OU level allows you to delegate administrative control for the objects contained in the OU. Use the Delegation Of Control wizard to assign permissions at the OU level.</p>

<p>For example, you can delegate administrative control by assigning Full Control for an OU to the appropriate manager, only within his or her area of responsibility. By delegating control of the OU to the manager, you can decentralize administrative operations and issues. This reduces your administration time and costs by distributing administrative control closer to its point of service.</p>

<p>To help you delegate administrative control, follow these guidelines:</p>

<ul>
<p><li>Assign control at the OU level whenever possible. Assigning control at the OU level allows for easier tracking of permission assignments. Tracking permission assignments becomes more complex for objects and object attributes.</li></p>

<p><li>Use the Delegation Of Control wizard. The wizard assigns permissions to a number of objects, including OU object instances and other built-in objects like the Users object and the Subnets object. The Subnets object is part of the Active Directory Sites And Services snap-in. The wizard simplifies the process of assigning object permissions by stepping you through the process.</li></p>

<p><li>Track the delegation of permission assignments. Tracking assignments allows you to maintain records to easily review security settings.</li></p>

<p><li>Follow business requirements. Follow any guidelines your organization has in place for delegating control.</li></p>
</ul>

<p><b>Delegation Of Control Wizard</b></p>

<p>The Delegation Of Control wizard steps you through the process of assigning permissions at the OU level. For more specialized permissions, you must manually assign permissions.</p>

<p>To use the Delegation Of Control wizard, open the Active Directory Users And Computers snap-in and select the OU for which you want to delegate control. On the Action menu, click Delegate Control to start the wizard (Figure 6.9).</p>

<p>
<A HREF="javascript:fullSize('f06xx09gx.htm')"> <img src="images/f06xx09g.jpg" border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 6.9</b> <i>Navigating to the Delegate Control Wizard</i><!--/caption-->
</p>

<A NAME="284"><h2>Guidelines for Administering Active Directory Services</h2></A>
<p>The following list provides best practices for administering Active Directory services:</p>

<ul>
<p><li>In larger organizations, coordinate your Active Directory structure with other administrators. You can move objects later, but this might create extra work.</li></p>

<p><li>When you create Active Directory objects, such as users, complete all attributes that are important to your organization. Completing the attributes gives you more flexibility when you search for objects.</li></p>

<p><li>Use deny permissions sparingly. If you assign permissions correctly, you should not need to deny permissions. In most cases, denied permissions indicate mistakes that were made in assigning group membership.</li></p>

<p><li>Always ensure that at least one user has Full Control for each Active Directory object. Failure to do so might result in objects being inaccessible.</li></p>

<p><li>Ensure that delegated users take responsibility and can be held accountable. You gain nothing if you delegate administrative control without ensuring future accountability. As an administrator, you are ultimately responsible for all the administrative changes made. If the users to whom you delegate responsibility are not performing the administrative tasks, you will need to assume responsibility for their failure.</li></p>

<p><li>Provide training for users who have control of objects. Ensure that the users to whom you delegate responsibility understand their responsibilities and know how to perform the administrative tasks.</li></p>
</ul>

<A NAME="285"><h2>Lesson Summary</h2></A>
<p>After Active Directory services has been installed, you can create and manage the objects stored within the directory. Before objects are added to Active Directory services, you should create the OUs that will contain those objects. You can create an OU at the domain level, under the Domain Controllers level, or within another OU, but you must have the required permissions to create OUs in the existing OU, domain, or domain controller. To add object instances to OUs, you must have the required permissions to create objects within the OU where you want to create the object. The process of managing Active Directory objects involves several different tasks, such as locating objects, modifying and deleting objects, and moving objects. These tasks can be performed in the Active Directory Users And Computers snap-in, which is located in the Administrative Tools folder. Another aspect of Active Directory administration is controlling access to Active Directory objects. Active Directory permissions provide security for resources by allowing you to control who can gain access to individual objects or object attributes and the type of access that you will allow. In addition, you can delegate administrative control of objects to individuals so that they can perform administrative tasks on the objects.</p>

</BODY>
</HTML>




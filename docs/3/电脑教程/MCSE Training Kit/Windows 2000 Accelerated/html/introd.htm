<!DOCTYPE html SYSTEM "msxhtml1-strict.dtd">
<html lang="en" xml:lang="en">
<head>
<link rel="stylesheet" type="text/css" href="styles.css" />
<script type="text/javascript" language="JavaScript" src="expando.js"></script>
<title>Lesson 3: Windows 2000 Directory Services Overview</title>


</head>
<body>
<div class="prevnext"><p><a href="introc.htm">3</a> <a href="introe.htm">4</a></p></div>

<h1><a name="2056">Lesson 3: Windows 2000 Directory Services Overview</a></h1>


<p>You use a directory service to uniquely identify users and resources on a network. Windows 2000 uses Active Directory to provide directory services. It is important to understand the overall purpose of Active Directory and the key features it provides. Understanding the interactions of Active Directory architectural components provides the basis for understanding how Active Directory stores and retrieves data. This lesson introduces you to Active Directory functions, features, and architecture.</p>

<hr />
<p><b>After this lesson, you will be able to</b></p>

<ul>
<li>Explain the function of a directory service</li>

<li>Explain the purpose of Active Directory</li>

<li>Identify the features of Active Directory</li>

<li>Identify the layers in the Active Directory architecture</li>
</ul>
<p><b>Estimated lesson time:  20 minutes</b></p>
<hr />

<h2><a name="2057">What Is a Directory Service?</a></h2>


<p>A <i>directory</i> is a stored collection of information about objects that are related to one another in some way. For example, a telephone directory stores names of entities and their corresponding telephone numbers. The telephone directory listing may also contain an address or other information about the entity.</p>

<p>In a distributed computing system or a public computer network such as the Internet, there are many objects, such as file servers, printers, fax servers, applications, databases, and users. Users must be able to locate and use these objects. Administrators must be able to manage how these objects are used. A directory service stores all the information needed to use and manage these objects in a centralized location, simplifying the process of locating and managing these resources.</p>

<p>In this course, the terms <i>directory</i> and <i>directory service</i> refer to the directories found in public and private networks. A <i>directory</i> provides a means of storing information related to the network resources to facilitate locating and managing these resources. A <i>directory service</i> is a network service that identifies all resources on a network and makes them accessible to users and applications. A directory service differs from a directory in that it is both the source of the information and the services making the information available to the users.</p>

<p>A directory service acts as the main switchboard of the network operating system. It is the central authority that manages the identities and brokers the relationships between distributed resources, enabling them to work together. Because a directory service supplies these fundamental operating system functions, it must be tightly coupled with the management and security mechanisms of the operating system to ensure the integrity and privacy of the network. It also plays a critical role in an organization's ability to define and maintain the network infrastructure, perform system administration, and control the overall user experience of a company's information systems.</p>

<h2><a name="2058">Why Have a Directory Service?</a></h2>


<p>A directory service provides the means to organize and simplify access to resources of a networked computer system. Users and administrators may not know the exact name of the objects they need. However, they may know one or more attributes of the objects in question. As illustrated in the figure below, they can use a directory service to query the directory for a list of objects that match known attributes. For example, &quot;Find all color printers on the third floor&quot; queries the directory for all color printer objects with the attributes of color and third floor (or maybe a location attribute that has been set to &quot;third floor&quot;). A directory service makes it possible to find an object based on one or more of its attributes.</p>

<div class="figure">
<a href="javascript:fullSize('F00cc04x.htm')"><img src="images/f00cc04.jpg" /></a>
<div class="caption"><i>Using a directory service</i></div>
</div>

<p>Other functions of the directory service are:</p>

<ul>
<li>Enforcing security to protect the objects in its database from outside intruders or from internal users who do not have permission to access those objects.</li>

<li>Distributing a directory across many computers in a network.</li>

<li>Replicating a directory to make it available to more users and resistant to failure.</li>

<li>Partitioning a directory into multiple stores that are located on different computers across the network. This makes more space available to the directory as a whole and allows the storage of a large number of objects.</li>
</ul>



<p>A directory service is both an administration tool and an end user tool. As a network becomes larger, more resource objects must be managed and the directory service becomes a necessity.</p>

<h2><a name="2059">Windows 2000 Directory Services</a></h2>


<p>Active Directory is the directory service included in Windows 2000 Server. Active Directory includes the directory, which stores information about network resources, as well as all the services that make the information available and useful. The resources stored in the directory, such as user data, printers, servers, databases, groups, services, computers, and security policies, are known as <i>objects.</i></p>

<p>Active Directory is integrated within Windows 2000 Server and offers:</p>

<ul>
<li>Simplified administration</li>

<li>Scalability</li>

<li>Open standards support</li>

<li>Support for standard name formats</li>
</ul>



<h2><a name="2060">Simplified Administration</a></h2>


<p>Active Directory organizes resources hierarchically in domains. A <i>domain</i> is a logical grouping of servers and other network resources under a single domain name. The domain is the basic unit of replication and security in a Windows 2000 network.</p>

<p>Each domain includes one or more domain controllers. A <i>domain controller</i> is a computer running Windows 2000 Server that manages user access to a network, which includes logging on, authentication, and access to the directory and shared resources. To simplify administration, all domain controllers in the domain are equal. You can make changes to any domain controller, and the updates are replicated to all other domain controllers in the domain.</p>

<p>Active Directory further simplifies administration by providing a single point 
of administration for all objects on the network. Because Active Directory provides a single point of logon for all network resources, an administrator can log on to one computer and administer objects on any computer in the network.</p>

<h2><a name="2061">Scalability</a></h2>


<p>In Active Directory, the directory stores information by organizing the directory into sections that permit storage for a very large number of objects. As a result, the directory can expand as an organization grows, allowing users to scale from a small installation with a few hundred objects to a large installation with millions of objects.</p>

<blockquote><div class="note"><b>NOTE</b><hr />
You can distribute directory information across several computers in a network.
</div></blockquote>

<h2><a name="2062">Open Standards Support</a></h2>


<p>Active Directory integrates the Internet concept of a name space with the Windows 2000 directory services. This allows you to unify and manage the multiple name spaces that now exist in the heterogeneous software and hardware environments of corporate networks. Active Directory uses DNS for its name system and can exchange information with any application or directory that uses LDAP or Hypertext Transfer Protocol (HTTP).</p>

<blockquote><div class="caution"><b>IMPORTANT</b><hr />
Active Directory also shares information with other directory services that support LDAP version 2 and version 3, such as Novell Directory Services (NDS).
</div></blockquote>

<h3><a name="2063">DNS</a></h3>


<p>Because Active Directory uses DNS as its domain naming and location service, Windows 2000 domain names are also DNS names. Windows 2000 Server uses Dynamic DNS (DDNS), which enables clients with dynamically assigned addresses to register directly with a server running the DNS service and update the DNS table dynamically. DDNS eliminates the need for other Internet naming services, such as Windows Internet Name Service (WINS), in a homogeneous environment.</p>

<blockquote><div class="caution"><b>IMPORTANT</b><hr />
For Active Directory and associated client software to function correctly, you must have installed and configured the DNS service.
</div></blockquote>

<h3><a name="2064">Support for LDAP and HTTP</a></h3>


<p>Active Directory further embraces Internet standards by directly supporting LDAP and HTTP. LDAP is a version of the X.500 directory access protocol, which was developed as a simpler alternative to the Directory Access Protocol (DAP). Active Directory supports both LDAP version 2 and version 3. HTTP is the standard protocol for displaying pages on the World Wide Web. A user can display every object in Active Directory as an HTML page in a Web browser. Thus, users receive the benefit of the familiar Web browsing model when querying and viewing objects in Active Directory.</p>

<blockquote><div class="note"><b>NOTE</b><hr />
Active Directory uses LDAP to exchange information between directories and applications.
</div></blockquote>

<blockquote><div class="seealso"><b>MORE INFO</b><hr />
For more information about LDAP, use your Web browser to search for <b>RFC 1777</b> and retrieve the text of this Request for Comment.
</div></blockquote>

<h2><a name="2065">Support for Standard Name Formats</a></h2>


<p>Active Directory supports several common name formats. Consequently, users and applications can access Active Directory using the format with which they are most familiar. The following table describes some standard name formats supported by Active Directory.</p>

<p><b>Standard Name Formats Supported by Active Directory</b></p>
<table>
<tr>
<th>Format </th><th>Description</th>
</tr>
<tr>
<td>RFC 822 </td><td>Takes the form of <i>someone@domain</i> and is familiar to most users as an Internet e-mail address.</td>
</tr>
<tr>
<td>HTTP Uniform Resource Locator (URL)</td><td>Takes the form of <i>http://domain/path-to-page</i> and is familiar 
 to users with Web browsers. </td>
</tr>
<tr>
<td>Universal Naming Convention (UNC)</td><td>Takes the form of <i>\\microsoft.com\xl\budget.xls</i> and is 
 used in Windows 2000 Server-based networks to refer to shared volumes, printers, and files.</td>
</tr>
<tr>
<td>LDAP URL </td><td>Active Directory supports a draft to RFC 1779 and 
uses the attributes in the following example: LDAP://someserver.microsoft.com/CN=FirstnameLastname, OU=sys, OU=product, OU=division, DC=devel Where CN represents Common Name OU represents Organizational Unit Name DC represents Domain Component Name An LDAP URL specifies the server on which the Active Directory services reside and the attributed name of the object.</td>
</tr>
</table>


<h2><a name="2066">Active Directory in the Windows 2000 Architecture</a></h2>


<p>As you learned in the previous lesson, Windows 2000 uses modules and modes that combine to provide operating system services to applications. Two processor access modes, <i>kernel</i> and <i>user</i>, divide the low-level, platform-specific processes from the upper level processes, respectively, to shield applications from platform differences and to prevent direct access to system code and data by applications. Each application, including service applications, runs in a separate <i>module</i> in user mode, from which it requests system services through an API that gains limited access to system data. An application process begins in user mode and is transferred to kernel mode, where the actual service is provided in a protected environment. The process is then transferred back to user mode. Active Directory runs in the security subsystem in user mode. The <i>security reference monitor</i>, which runs in kernel mode, is the primary authority for enforcing the security rules of the security subsystem. The
following figure shows the location of Active Directory within Windows 2000.</p>

<div class="figure">
<a href="javascript:fullSize('F00cc05x.htm')"><img src="images/F00cc05.JPG" /></a>
<div class="caption"><i>Location of Active Directory within Windows 2000</i></div>
</div>

<p>The tight integration of the directory service and security subsystem services is key to the implementation of Windows 2000 distributed systems. Access to all directory objects first requires proof of identity (authentication), which is performed by components of the security subsystem, and then validation of access permissions (authorization), which is performed by the security subsystem in conjunction with the security reference monitor. The security reference monitor enforces the access control applied to Active Directory objects.</p>

<h2><a name="2067">Active Directory Architecture</a></h2>


<p>Active Directory functionality can be illustrated as a layered architecture in which the layers represent the server processes that provide directory services to client applications. Active Directory consists of three service layers and several interfaces and protocols that work together to provide directory services. The three service layers accommodate the different types of information required to locate records in the directory database. Above the service layers in this architecture are the protocols and APIs that enable communication between clients and directory services.</p>

<p>The following figure shows the Active Directory service layers and their respective interfaces and protocols. The direction of the arrows indicates how different clients gain access to Active Directory through the interfaces.</p>

<div class="figure">
<a href="javascript:fullSize('F00cc06x.htm')"><img src="images/F00cc06.JPG" /></a>
<div class="caption"><i>Active Directory architecture</i></div>
</div>

<p>The key service components include the following:</p>

<ul>
<li><b>Directory System Agent (DSA)</b> builds a hierarchy from the parent-child relationships stored in the directory. Provides APIs for directory access calls.</li>

<li><b>Database Layer</b> provides an abstraction layer between applications and the database. Calls from applications are never made directly to the database; they go through the database layer.</li>

<li><b>Extensible Storage Engine</b> communicates directly with individual records in the directory data store on the basis of the object's relative distinguished name attribute.</li>

<li><b>Data store (the database file NTDS.DIT)</b> is manipulated only by the Extensible Storage Engine database engine, stored in the \Winnt\ntds folder on the domain controller. You can administer the file by using the Ntdsutil tool, located in the \Winnt\system32 folder on the domain controller.</li>
</ul>



<p>Clients obtain access to Active Directory by using one of the following mechanisms that is supported by the DSA:</p>

<ul>
<li><b>LDAP/ADSI.</b> Clients that support LDAP use it to connect to the DSA. Active Directory supports LDAP version 3 (defined by RFC 2251) and LDAP version 2 (defined by RFC 1777). Windows 2000 clients, as well as Windows 98 and Windows 95 clients that have the Active Directory client components installed, use LDAP version 3 to connect to the DSA. ADSI is a means of abstracting LDAP API; however, Active Directory uses only LDAP.</li>

<li><b>Messaging API (MAPI).</b> Legacy MAPI clients, such as Microsoft Outlook, connect to the DSA by using the MAPI RPC address book provider interface.</li>

<li><b>Security Accounts Manager (SAM).</b> Windows clients that use Windows NT 4.0 or earlier use the SAM interface to connect to the DSA. Replication from backup domain controllers in a mixed-mode domain goes through the SAM interface as well.</li>

<li><b>Replication (REPL).</b> When they are performing directory replication, Active Directory DSAs connect to each other by using a proprietary RPC interface.</li>
</ul>



<h2><a name="2068">Lesson Summary</a></h2>


<p>In this lesson, you learned that a directory service is a network service that identifies all resources on a network and makes them accessible to users and applications. A directory service differs from a directory in that it is both the source of the information and the services making the information available 
to the users.</p>

<p>You also learned that Active Directory is the directory service included in Windows 2000 Server. Active Directory includes the directory, which stores information about network resources such as user data, printers, servers, databases, groups, computers, and security policies. The directory can scale from a small installation with a few hundred objects to a large installation with millions of objects. Active Directory offers simplified administration, scalability, open standards support, and support for standard name formats.</p>

<p>Finally, you learned that Active Directory runs in the security subsystem in the user mode in the Windows 2000 architecture. The security reference monitor, which runs in kernel mode, is the primary authority for enforcing the security rules of the security subsystem. Active Directory functionality can be illustrated as a layered architecture in which the layers represent the server processes that provide directory services to client applications. Active Directory consists of three service layers and several interfaces and protocols that work together to provide directory services.</p>

</body>
</html>




<HTML>
<HEAD>
<TITLE>Lesson 1: Introducing DNS</TITLE>
<link rel="STYLESHEET" type="text/css" href="mmnet.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch07a.htm">[Previous]</A> <A HREF="ch07c.htm">[Next]</A><P>



<A NAME="271"><H1>Lesson 1: Introducing DNS</H1></A>

<p>DNS is similar to a telephone book. Each computer on the Internet has both a host name and an Internet Protocol (IP) address. Typically, when you want to connect to another computer, you must enter a host name. Your computer then contacts a DNS server that cross-references the host name you provided to the actual IP address. This IP address is then used to connect to the remote computer. This lesson describes the architecture and structure of DNS.</p>

<p><div class="sidebar"><blockquote>
<b>After this lesson, you will be able to</b>

<ul>
<p><li>Describe the structure, architecture, and components of DNS</li></p>

<p><li>Explain how DNS is used to resolve names and IP addresses</li></p>
</ul>



<p><b>Estimated lesson time: 25 minutes</b></p>
</blockquote></div></p>

<A NAME="272"><H2>DNS Origins</H2></A>

<p>Before the implementation of DNS, the creation of user-friendly computer names was done using HOSTS files that contained a list of names and associated IP 
addresses. On the Internet, this file was centrally administered and each location would periodically download a new copy. As the number of computers on the Internet grew, this became an unmanageable solution. As a result, DNS was 
designed to replace the singularly administered HOSTS file with a distributed database that would allow for a hierarchical name space, distribution of administration, extensible data types, virtually unlimited database size, and better performance. DNS is the name service for Internet addresses that translates friendly domain names to numeric IP addresses. For example, <i>www.microsoft.com</i> translates to 207.46.130.149. DNS is analogous to a telephone book. The user looks up the name of the person or organization that he or she wants to contact and cross-references the name to a telephone number. Similarly, a host computer 
queries the name of a computer and a domain name server cross-references the name to an IP address.</p>

<p>The Microsoft implementation of DNS Server became a part of the operating system in Windows NT Server 4.0 and has continued to be included in Windows 2000.</p>

<A NAME="273"><H2>DNS and Windows 2000</H2></A>

<p>In addition to providing traditional Internet name resolution, DNS is the primary name service of Windows 2000. It is, by design, a highly reliable, hierarchical, distributed, and scalable database. Windows 2000 clients use DNS for name resolution and service location, including locating domain controllers for logon. DNS in Windows 2000 provides a unique DNS Server implementation that is fully interoperable with other standards-based implementations of DNS Server. For more information about the version of DNS included in Windows 2000, please see the <A HREF="ch08a.htm#329">next chapter</A>, &quot;Using Windows 2000 Domain Name Service.&quot;</p>

<A NAME="274"><H2>How DNS Works</H2></A>

<p>The purpose of the DNS database is to translate computer names into IP addresses, as illustrated in Figure 7.1. In the DNS, the clients are called resolvers and the servers are called name servers. DNS works using three main components: 
resolvers, name servers, and the domain name space. With basic DNS communication, a resolver sends queries to a name server. The name server returns the 
requested information, a pointer to another name server, or a failure message, if the request cannot be satisfied.</p>

<p>DNS maps to the application layer and uses User Datagram Protocol (UDP) and Transmission Control Protocol (TCP) as the underlying protocols. For performance reasons, resolvers send UDP queries to servers first, then resort to TCP if truncation of the returned data occurs.</p>


<p>
<img src="images/07ntk01.JPG" width=355 height=270 border="0">
</p><p>
<!-- caption --><b>Figure 7.1</b> <i>Resolvers and name servers</i><!-- /caption -->
</p>

<A NAME="275"><H3>Resolvers</H3></A>

<p>A resolver provides clients with address information about other computers on the network. The function of the resolvers is to pass name requests between 
applications and name servers. The name request contains a query, such as the IP address of a Web site. The resolver is often built into the application or is running on the host computer as a library routine. Resolvers first send UDP queries to servers for increased performance and resort to TCP only if truncation of the 
returned data occurs.</p>

<A NAME="276"><H3>Name Servers</H3></A>

<p>A name server contains address information about other computers on the network. This information can be given to client computers that make a request to the name server. If the name server is not able to resolve the request, it can forward the 
request to a different name server. The name servers are grouped into different levels that are called domains. A domain is a logical group of computers in a large network. Access to each computer in a given group is controlled by the same server.</p>

<A NAME="277"><H2>The Structure of DNS</H2></A>

<p>The domain name space is a hierarchical grouping of names, as illustrated in 
Figure 7.2.</p>


<p>
<A HREF="javascript:fullSize('07ntk02x.htm')"> <img src="images/07ntk02.JPG" width=404 height=211 border=0 ALT="Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 7.2</b> <i>Domain name space separated into levels</i><!-- /caption -->
</p>

<A NAME="278"><H3>Root-Level Domains</H3></A>

<p>Domains define different levels of authority in a hierarchical structure. The top 
of the hierarchy is called the root domain. References to the root domain are 
expressed by a period (<b>.</b>).</p>

<A NAME="279"><H3>Top-Level Domains</H3></A>

<p>The following are the present top-level domains:</p>

<ul>
<p><li><b> com</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Commercial organizations</li></p>

<p><li><b> edu</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Educational institutions and universities</li></p>

<p><li><b> org</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Not-for-profit organizations</li></p>

<p><li><b> net</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Networks (the backbone of the Internet)</li></p>

<p><li><b> gov</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Nonmilitary government organizations</li></p>

<p><li><b> mil</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Military government organizations</li></p>

<p><li><b> num</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Phone numbers</li></p>

<p><li><b> arpa</b>&nbsp;&nbsp;&nbsp;&nbsp; Reverse DNS</li></p>

<p><li><b> <i>xx</i></b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Two-letter country code</li></p>
</ul>



<p>Top-level domains can contain second-level domains and hosts.</p>

<p><div class="note"><blockquote><b>NOTE</b><HR>An Internet Society committee is planning several additional top-level 
domains such as firm and web.</blockquote></div>
</p>

<A NAME="280"><H3>Second-Level Domains</H3></A>

<p>Second-level domains can contain both hosts and other domains, called subdomains. For example, the Microsoft domain, microsoft.com, can contain computers such as ftp.microsoft.com and subdomains such as dev.microsoft.com. The subdomain dev.microsoft.com can contain hosts such as ntserver.dev.microsoft.com.</p>

<A NAME="281"><H3>Host Names</H3></A>

<p>The domain name is used with the host name to create a fully qualified domain name (FQDN) for the computer. The FQDN is the host name followed by a period (.), followed by the domain name. For example, this could be fileserver1.microsoft.com, where fileserver1 is the host name and microsoft.com is the domain name.</p>

<A NAME="282"><H2>Zones</H2></A>

<p>The administrative unit for DNS is the zone. A zone is a subtree of the DNS 
database that is administered as a single, separate entity. It can consist of a single domain or a domain with subdomains. The lower-level subdomains of a zone can also be split into separate zones.</p>

<A NAME="283"><H3>Zones of Authority</H3></A>

<p>A zone of authority is the portion of the domain name space for which a particular name server is responsible. The name server stores all address mappings for the domain name space within the zone and answers client queries for those names. The name server's zone of authority encompasses at least one domain. This domain is referred to as the zone's root domain. You can also have a secondary DNS server that can copy domain information across the network from the primary DNS server that has authority over at least one zone. This is called a zone transfer.</p>

<p>As illustrated in Figure 7.3, microsoft.com is a domain, but the entire domain is not controlled by one zone file. Part of the domain is located in a separate zone file for DEV.MICROSOFT.COM. Breaking up domains across multiple zone files may be necessary for distributing management of the domain to different groups or for data replication efficiency.</p>


<p>
<A HREF="javascript:fullSize('07ntk03x.htm')"> <img src="images/07ntk03.JPG" width=404 height=172 border=0 ALT="Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 7.3</b> <i>Domains across multiple zones</i><!-- /caption -->
</p>

<A NAME="284"><H2>Name Server Roles</H2></A>

<p>DNS name servers can be configured in different roles, affecting how they store and maintain their database of names. A Microsoft DNS server can be either a primary or secondary DNS server to another Microsoft DNS server, or to a DNS server running under another operating system such as UNIX. The minimum number of DNS servers you need in order to serve each zone is two&#8212;a primary and a secondary. Both a primary and a secondary server are required to provide database redundancy and a degree of fault tolerance.</p>

<A NAME="285"><H3>Primary Name Servers</H3></A>

<p>A primary name server is a DNS server that gets the data for its zones from the local DNS database files. When a change is made to the zone data, such as delegating a portion of the zone to another DNS server or adding hosts in the zone, the change must be made on the primary DNS server so that the new information is entered in the local zone file.</p>

<A NAME="286"><H3>Secondary Name Servers</H3></A>

<p>A secondary name server gets its zone data file from the primary DNS server that is authoritative for that zone. The primary DNS server sends a copy of the zone file to the secondary DNS server in a process referred to as a zone transfer.</p>

<p>There are three reasons to have secondary name servers:</p>

<ul>
<p><li><b>Redundancy.</b> You need at least one primary and one secondary name server for each zone. The computers should be as independent as possible. Generally, plan to install the primary and secondary servers on different subnets to provide continual support for DNS name queries if one subnet should go down.</li></p>

<p><li><b>Faster access for remote locations.</b> If you have a number of clients in remote locations, having secondary name servers (or other primary name servers for subdomains) prevents these clients from communicating across slow links for name resolution.</li></p>


<p><li><b>Reduction of load.</b> Secondary name servers reduce the load on the primary server.</li></p>

</ul>



<p>Because information for each zone is stored in separate files, this primary or secondary designation is defined at a zone level. This means that a particular name server may be a primary name server for certain zones and a secondary name server for other zones.</p>

<A NAME="287"><H3>Master Name Servers</H3></A>

<p>When you define a zone on a name server as a secondary zone, you must designate another name server from which to obtain the zone information. The source of zone information for a secondary name server in a DNS hierarchy is referred to as a master name server. A master name server can be either a primary or secondary name server for the requested zone. When a secondary name server starts up, it contacts its master name server and initiates a zone transfer with that server.</p>

<A NAME="288"><H3>Caching-Only Servers</H3></A>

<p>Although all DNS name servers cache queries that they have resolved, caching-only servers are DNS name servers that only perform queries, cache the answers, and return the results. In other words, they are not authoritative for any domains (no zone data is kept locally) and they only contain information that they have cached while resolving queries.</p>

<p>When trying to determine when to use such a server, keep in mind that when the server is initially started, it has no cached information and must build this information up over time as it services requests. Less traffic is generated between servers because the server is not doing a zone transfer. This is important if you have a slow connection between sites.</p>

<A NAME="289"><H2>Lesson Summary</H2></A>

<p>As an improvement to the original method of resolving host names to an IP address on the Internet, DNS was created. In DNS, a client (called a resolver) sends queries to a name server. Name servers then take name requests and resolve computer names to IP addresses. The domain name space is a hierarchical grouping of root-level domains, top-level domains, second-level domains, and host names. Specific servers are responsible for portions of the domain name space called zones of authority.</p>

</BODY>
</HTML>






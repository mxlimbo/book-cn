<HTML>
<HEAD>
<TITLE>Lesson 2: Configuring IPSec</TITLE>
<link rel="STYLESHEET" type="text/css" href="mmnet.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch05b.htm">[Previous]</A> <A HREF="ch05d.htm">[Next]</A><P>



<A NAME="203"><H1>Lesson 2: Configuring IPSec</H1></A>

<p>The Microsoft Management Console (MMC) can be used to create and configure IPSec policies. It can be configured to centrally manage policy (for Active Directory), manage policy locally, or manage policy remotely for a computer. In this lesson you will explore various screens used to configure IPSec. Additionally, you will create a test IP Security policy.</p>

<p><div class="sidebar"><blockquote>
<b>After this lesson, you will be able to</b>

<ul>
<p><li>Describe how to implement IPSec</li></p>

<p><li>Configure IPSec policies</li></p>

<p><li>Describe the various property sheets of an IPSec policy, Authentication Method, IP Packet Filtering, Filter Actions, and additional IPSec tasks</li></p>
</ul>

<p><b>Estimated lesson time: 30 minutes</b></p>
</blockquote></div></p>

<A NAME="204"><H2>Prerequisites for Implementing IPSec</H2></A>

<p>The computers in your network need to have an IPSec policy defined that is appropriate for your network security strategy. Computers in the same domain might be organized into groups with IPSec policy applied to the groups. Computers in different domains might have complementary IPSec policies to support secure network communications.</p>

<A NAME="205"><H2>How to Implement IPSec</H2></A>

<p>You can view the default IP Security policies in the Group Policy snap-in to MMC. The policies are listed under IP Security Policies on Active Directory: Group Policy Object\Computer Configuration\Windows Settings\Security Settings\IP Security Policies on Active Directory.</p>

<p>You can also view IPSec policies by using the IP Security Policy Management snap-in to MMC. Each IPSec policy is governed by rules that determine when and how the policy is applied. Right-click a policy and select Properties. The Rules tab lists the policy rules. Rules can be further subdivided into filter lists, filter actions, and additional properties. The default snap-in is started from the Administrative Tools menu; this allows configuration of the local computer only. To centrally manage policy for multiple computers, add the IP Security Management snap-in to an MMC.</p>

<A NAME="206"><H2>Configuring IPSec Policies</H2></A>

<p>The initial window displays three predefined policy entries: Client (Respond Only), Secure Server (Require Security), and Server (Request Security). By default, none of these policies is enabled. These policies are shown in Figure 5.5.</p>

<p>
<A HREF="javascript:fullSize('05ntk05x.htm')"> <img src="images/05ntk05.JPG" width=404 height=127 border=0 ALT="Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 5.5</b> <i>MMC of a Windows 2000 member server</i><!-- /caption -->
</p>

<p>These defaults are the same whether the IPSec policy is local or stored in Active Directory as part of a group policy. In this example, the policy is local to a member server.</p>

<ul>
<p><li>The Client (Respond Only) policy allows communications in plaintext but will respond to IPSec requests and attempt to negotiate security. This policy effectively allows clear-text communication but will attempt to negotiate security if a security request is made. Uses Kerberos V5 for authentication.</li></p>

<p><li>The Server (Request Security) policy causes the server to attempt to initiate secure communications for every session. If a client who is not IPSec-aware initiates a session, it will be allowed.</li></p>

<p><li>The Secure Server (Require Security) policy requires Kerberos trust for all IP packets sent from this computer, with the exception of broadcast, multicast, Resource Reservation Setup Protocol (RSVP), and ISAKMP packets. This policy does not allow unsecured communications with clients. Therefore, any clients who connect to a server with this policy must be IPSec-aware.</li></p>
</ul>

<p>To edit policies, right-click on the policy and select Properties.</p>

<p><div class="note"><blockquote><b>NOTE</b><HR>
Only one policy can be assigned at a time. If an IPSec policy is configured in several overlapping group policies, the normal group policy hierarchy applies.
</blockquote></div></p>

<A NAME="207"><H2>Connection Types</H2></A>

<p>The Connection Type tab can be chosen from the Edit Rule Properties dialog box (see Figure 5.6). It will also be displayed as part of the Rule Creation Wizard.</p>

<p><div class="note"><blockquote><b>NOTE</b><HR>
All policy settings can be configured through wizards. Use of the wizards is turned on by default, but can be turned off by deselecting the Use Add Wizard check box.
</blockquote></div></p>

<p>
<A HREF="javascript:fullSize('05ntk06x.htm')"> <img src="images/05ntk06.JPG" width=404 height=449 border=0 ALT="Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 5.6</b> <i>Edit Rule Properties dialog box</i><!-- /caption -->
</p>

<p>Designating a connection type for each rule will determine which computer connections (network adapters or modems) will be affected by an IPSec policy. Each rule has a connection property that designates whether the rule applies to LAN connections, Remote Access connections, or all network connections.</p>

<A NAME="208"><H2>Authentication Method</H2></A>

<p>The authentication method defines how each user is going to be assured that the other computers or users really are who they say they are. As illustrated in Figure 5.7, each authentication method provides the necessary pieces to assure identity. Windows 2000 supports three authentication methods:</p>

<ul>
<p><li><b>Kerberos.</b> The Kerberos V5 security protocol is the default authentication technology. The Kerberos protocol issues tickets, or virtual proof-of-identity cards, when a computer logs on to a trusted domain. This method can be used for any clients running the Kerberos V5 protocol (whether or not they are Windows-based clients) who are members of a trusted domain.</li></p>

<p><li><b>Certificates.</b> This requires that at least one trusted certificate authority (CA) has been configured. Windows 2000 supports X.509 Version 3 certificates, including CA certificates generated by commercial certifying authorities. A rule may specify multiple authentication methods. This ensures that a common method can be found when negotiating with a peer.</li></p>

<p>
<A HREF="javascript:fullSize('05ntk07x.htm')"> <img src="images/05ntk07.JPG" width=404 height=311 border=0 ALT="Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 5.7</b> <i>Default Response Rule Authentication Method dialog box</i><!-- /caption -->
</p>

<p><li><b>Preshared Key.</b> This is a shared key that is secret and is previously agreed on by two users. It is quick to use and does not require the client to run the Kerberos protocol or have a public key certificate. Both parties must manually configure IPSec to use this preshared key. This is a simple method for authenticating non-Windows-based hosts and stand-alone hosts.</li></p>
</ul>

<p><div class="note"><blockquote><b>NOTE</b><HR>
The key derived from the authentication is for authentication <i>only</i>; it is <i>not</i> the key used to encrypt or authenticate the data.
</blockquote></div></p>

<p>Each rule may be configured with one or more authentication methods. Each 
configured authentication method appears in a list in the order of preference. If the first method cannot be used, then the next will be attempted.</p>

<A NAME="209"><H2>IP Packet Filtering</H2></A>

<p>IP Security is applied to packets as they are sent and received. Packets are matched against filters when being sent (outbound) to see if they should be secured, blocked, or passed through in clear text. Packets are matched when received (inbound) to also see if security should be negotiated, or if the packets should be blocked or passed through and permitted into the system.</p>

<p>Individual filter specifications are grouped into a filter list to enable complex patterns of traffic to be grouped and managed as one named filter list, such as Building 7 File Servers, or All Blocked Traffic. Filter lists can be shared as necessary between different IPSec rules in the same policy or in different IPSec policies. Filter specifications should be set for incoming and outgoing traffic.</p>

<ul>
<p><li>Input filters, which apply to traffic received, allow the receiving computer to match the traffic with the IP filter list, respond to requests for secure communication, or match the traffic with an existing SA and decrypt the secured packets.</li></p>

<p><li>Output filters, which apply to traffic leaving a computer toward a destination, trigger a security negotiation that must take place before traffic is sent.</li></p>
</ul>

<p>
<div class="warning"><blockquote><b>IMPORTANT</b><hr>
Although input and output filters are defined and used in the filter list, it is unclear in the user interface as to which filter is being created. The source and destination addresses determine whether the filter is inbound or outbound.
</blockquote></div>
</p>

<p>There must be a filter to cover any traffic scenarios to which the associated rule applies. A filter contains the following parameters:</p>

<ol>
<p><li>The source and destination address of the IP packet. As illustrated in Figure 5.8, the following address options can be chosen when creating or editing the filter:</li></p>

<ul>
<p><li><b>My IP Address.</b> The IP address of the local machine.</li></p>

<p><li><b>Any IP Address.</b> Unicast addresses only. IPSec does not support multicast or broadcast addresses.</li></p>

<p><li><b>A Specific IP Address.</b> This is a specific IP address on the local network or on the Internet.</li></p>

<p><li><b>A Specific IP Subnet.</b> This includes any IP address on a specified IP subnet.</li></p>
</ul>
<p>
<img src="images/05ntk08.JPG" width=404 height=448 border="0">
</p><p>
<!-- caption --><b>Figure 5.8</b> <i>IP packet Filter Properties dialog box</i><!-- /caption -->
</p>
</ol>


<p><div class="note"><blockquote><b>NOTE</b><HR>
IPSec populates My IP Address with the first bound IP address only. If the machine is multihomed, IPSec will use only one of the IP addresses, not both. Routing and Remote Access clients are considered to be multihomed, and therefore IPSec may not populate the IP address properly.
</blockquote></div></p>

<ol start=2>
<p><li>The protocol over which the packet is being transferred. This automatically defaults to cover all IP client protocols in the TCP/IP suite.</li></p>

<p>Table 5.1 provides a list of the protocol types available in the Protocol tab in the Filter Properties dialog box illustrated in Figure 5.9.</p>

<p><b>Table 5.1</b> <i>Protocol Filtering</i></p>

<p>
	<table valign="top" cellpadding="5" width="95%">
	
		<tr>
			<th>Protocol Type</th>
			<th>Description</th>
		</tr>

		<tr>
			<td valign="top">ANY</td>
			<td valign="top">Any Protocol</td>
		</tr>

		<tr>
			<td valign="top">EGP</td>
			<td valign="top">Exterior Gateway Protocol</td>
		</tr>

		<tr>
			<td valign="top">HMP</td>
			<td valign="top">Host Monitoring Protocol</td>
		</tr>

		<tr>
			<td valign="top">ICMP</td>
			<td valign="top">Internet Control Message Protocol</td>
		</tr>

		<tr>
			<td valign="top">Other</td>
			<td valign="top">Unspecified protocol based on IP protocol number</td>
		</tr>

		<tr>
			<td valign="top">RAW</td>
			<td valign="top">Raw data on top of IP</td>
		</tr>

		<tr>
			<td valign="top">RDP</td>
			<td valign="top">Reliable Datagram Protocol</td>
		</tr>

		<tr>
			<td valign="top">RVD</td>
			<td valign="top">MIT Remote Virtual Disk</td>
		</tr>

		<tr>
			<td valign="top">TCP</td>
			<td valign="top">Transmission Control Protocol</td>
		</tr>

		<tr>
			<td valign="top">UDP</td>
			<td valign="top">User Datagram Protocol</td>
		</tr>

		<tr>
			<td valign="top">XNS-IDP</td>
			<td valign="top">Xerox NS IDP</td>
		</tr>

	</table>
</p>

<p>
<img src="images/05ntk09.JPG" width=404 height=448 border="0">
</p><p>
<!-- caption --><b>Figure 5.9</b> <i>Filter Properties dialog box</i><!-- /caption -->
</p>

<p><li>The source and destination port of the protocol for TCP and UDP. This also defaults to cover all ports, but can be configured to apply only to packets sent or received on a specific port.</li></p>
</ol>

<p>Select the filter properties when editing or creating a filter. Filters can be managed globally by right-clicking on the managed computer in the left pane. They can also be managed within each of the policies' Rule Properties pages. The Filter Creation Wizard allows these properties to be configured.</p>

<A NAME="210"><H3>Mirroring</H3></A>

<p>Mirroring allows a filter to match packets with the exact opposite source and destination addresses. An outbound filter specifying the IP address as the source address and the second computer as the destination address, for example, will automatically create an inbound filter specifying the second computer as the source address and the initiating computer's IP address as the destination.</p>

<p><div class="note"><blockquote><b>NOTE</b><HR>
The mirrored filter does not actually show in the filter list. Instead, the Mirrored check box will be checked in the Filter Properties dialog box.
</blockquote></div></p>

<p>If Host A wants to always exchange data securely with Host B</p>

<ul>
<p><li>To send secured data to Host B, Host A's IPSec policy must have a filter specification for any outbound packets going to Host B.</li></p>

<p><li>To receive secured data from Host A, Host B's IPSec policy must have a filter specification for any inbound packets from Host A, or must have a policy with the default-response rule set to active.</li></p>

<p><li>Mirroring would allow each host to send or receive from the other host without creating another filter to do so.</li></p>
</ul>

<A NAME="211"><H2>Filter Actions</H2></A>

<p>The filter action specifies what security action to take once a filter has been triggered. The action specifies whether to block the traffic, permit the traffic, or negotiate the security for the given connection. The negotiation consists of support for <i>only</i> authenticity and integrity using the authentication header (AH) protocol, or for integrity and confidentiality using the Encapsulating Security Payload (ESP) protocol. Each filter action can be customized, giving the administrator the option of choosing which protocols require authenticity and which protocols require confidentiality.</p>

<p>One or more negotiated filter actions may be specified. As illustrated in Figure 5.10, the filter actions appear as a list with the first method listed taking precedence. If that filter action cannot be negotiated, then the next filter action will 
be attempted.</p>

<p>
<img src="images/05ntk10.JPG" width=404 height=448 border="0">
</p><p>
<!-- caption --><b>Figure 5.10</b> <i>Secure Initiator Negotiation policy properties</i><!-- /caption -->
</p>

<p>It is also possible to choose either high or medium security rather than specifying a custom method. High security both encrypts and provides data integrity. Medium security provides only for data integrity.</p>

<A NAME="212"><H2>Additional IPSec Tasks</H2></A>

<p>Several other tasks available to the administrator are accessed by right-clicking on the IP Security Policy icon in the left window. These tasks include:</p>

<ul>
<p><li><b>Manage IP Filter Lists and Filter Actions.</b> This allows the administrator to configure filters and filter actions separate from individual rules. Once a rule is created, the filters or filter actions may be activated, as illustrated in Figure 5.11.</li></p>

<p><li><b>Check Policy Integrity.</b> Because Active Directory takes the last information saved as current, if multiple administrators are editing a policy, the links between policy components could be broken. For example:</li></p>

<p>Policy A uses Filter A.</p>

<p>Policy B uses Filter B.</p>

<p>This means that Filter A has a link to Policy A, and Filter B links to Policy B.</p>

<p>Suppose Bob edits Policy A, and adds a rule that uses Filter C.</p>

<p>At the same time, Alice edits Policy B from a different location, and adds a rule that also uses Filter C.</p>

<p>If both save the changes simultaneously, Filter C could link to both Policy A and Policy B; however, that timing is unlikely. Instead, if Policy A is saved last, it will overwrite the link from Filter C to Policy B. Filter C will link only to Policy A. This will cause problems in the future when Filter C is modified, because Policy A users will pick up the new changes, but Policy B users will not.</p>
</ul>

<p>
<img src="images/05ntk11.JPG" width=404 height=448 border="0">
</p><p>
<!-- caption --><b>Figure 5.11</b> <i>The Rules tab of the Main Policy properties dialog box</i><!-- /caption -->
</p>

<p>The policy integrity check eliminates this problem by verifying the links in all IPSec policies. It is a good idea to run the integrity check after modifications to a policy. Several other tasks available to the administrator are accessed by right-clicking on the IP Security Policy icon in the left window. These tasks are described in the following list:</p>

<ul>
<p><li><b>Restore Default Policies.</b> Restores the predefined policies to the original configuration.</li></p>

<p><li><b>Import Policies.</b> Allows policies to be imported from another host on the network.</li></p>

<p><li><b>Export Policies.</b> Allows a policy to be exported to another host on the network.</li></p>
</ul>

<p>
<img src="images/practic.JPG" width=90 height=72 border="0">
</p>

<A NAME="213"><H2>Practice: Testing IPSec</H2></A>

<p>In this practice, you will activate a built-in IPSec policy to see that it does block communications if the traffic cannot be secured. If both computers running Windows 2000 Server are members of the same or trusted Windows 2000 Server secure domains, then the built-in IPSec policies can be used to easily establish secure communications. Otherwise, you will need to configure your own IPSec policy for testing on each computer with the steps provided in later sections.</p>

<p>
<img src="images/cd.JPG" width=66 height=66 border="0">
</p>

<p>Before you continue with the lesson, run the Ch05.exe demonstration file located in the Media folder on the Supplemental Course Materials CD-ROM that accompanies this book. The file provides an overview of testing IPSec.</p>

<p><li><b>To test communications with another computer</b></li></p>

<ol>
<p><li>Ping the other computer's IP address.</li></p>

<p>You should receive four replies to the PING. This verifies that you can 
communicate with your partner.</p>
</ol>

<p><li><b>To add IPSec to the MMC</b></li></p>

<ol>
<p><li>Using the Administrative Tools on the Start menu, run the Local Security Policy MMC plug-in.</li></p>

<p><li>Select IP Security Policies On Local Machine in the left pane.</li></p>

<p><li>In the right pane, right-click on Secure Server (Require Security), then click Properties.</li></p>

<p><li>In the Secure Server (Require Security) Properties dialog box, click Add. The Security Rule Wizard appears.</li></p>

<p><li>At the Welcome screen, click Next.</li></p>

<p><li>At the Tunnel Endpoint screen, click Next.</li></p>

<p><li>At the Network Type screen, click Next.</li></p>

<p><li>At the Authentication Method screen, click the Use This String To Protect The Key Exchange (Preshared Key) radio button. Type <b>MSPRESS</b> in the scroll box, then click Next.</li></p>

<p><li>Click All IP Traffic, then click Next at the IP Filter List screen.</li></p>

<p><li>Click Require Security, then click Next at the Filter Action screen.</li></p>

<p><li>Click Finish to close the wizard.</li></p>

<p><li>Now that you have added a restrictive filter list, deselect all default filter lists.</li></p>

<p><li>Close the Secure Server (Require Security) Properties dialog box.</li></p>

<p><li>Right-click on Secure Server (Require Security), and click Assign from the pop-up menu.</li></p>

<p><li>Ping your partner host.</li></p>

<p>Notice that the PING was unsuccessful.</p>

<p><li>To let yourself communicate on the network again, unassign the Secure Server (Require Security) policy using the pop-up menu.</li></p>
</ol>

<A NAME="214"><H2>Lesson Summary</H2></A>

<p>Three predefined policy entries&#8212;Client (Respond Only), Secure Server (Require Security), and Server (Request Security)&#8212;come with Windows 2000. These can be modified or removed at any time. Additionally, customized policies can be added. Using IPSec, Windows 2000 can support various host authentication methods and provide IP packet filtering, thus allowing computers to communicate or deny communication based on a wide variety of rules and filters.</p>

</BODY>
</HTML>






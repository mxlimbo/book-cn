<HTML>
<HEAD>
<TITLE>Lesson 2: Planning New User Accounts</TITLE>
<link rel="STYLESHEET" type="text/css" href="mmpro.css"><SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch10b.htm", "ch10d.htm", "images/unit_p_a1.gif", "images/unit_p_a2.gif", "images/unit_p_b1.gif", "images/unit_p_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#aa22aa", "2");
//--></SCRIPT><P>



<A NAME="353"><H1>Lesson 2: Planning New User Accounts</H1></A>

<p>You can streamline the process of creating user accounts by planning and organizing the information for the user accounts. You should plan the following areas:</p>

<ul>
<p><li>Naming conventions for user accounts</li></p>

<p><li>Requirements for passwords</li></p>
</ul>

<p><div class="sidebar"><blockquote>
<b>After this lesson, you will be able to</b>

<ul>
<p><li>Plan a strategy for creating new user accounts.</li></p>
</ul>

<p><b>Estimated lesson time: 5 minutes</b></p>
</blockquote></div></p>

<A NAME="354"><H2>Naming Conventions</H2></A>

<p>The naming convention establishes how users are identified in the domain. A consistent naming convention will help you and your users remember user logon names and locate them in lists. Table 10.1 summarizes some points you might want to consider in determining a naming convention for your organization.</p>

<p><b>Table 10.1</b> <i>Naming Convention Considerations</i></p>

<p>
	<table valign="top" cellpadding="5" width="95%">
	
		<tr>
			<th>Consideration</th>
			<th>Explanation</th>
		</tr>

		<tr>
			<td valign="top">User logon names must be unique</td>
			<td valign="top">Local user account names must be unique on the computer where you create the local user account. User 
logon names for domain user accounts must be unique to the Directory.</td>
		</tr>

		<tr>
			<td valign="top">Use 20 characters maximum</td>
			<td valign="top">User logon names can contain up to 20 uppercase or lowercase characters; the field accepts more than 20 characters, but Windows 2000 recognizes only the first 20.</td>
		</tr>

		<tr>
			<td valign="top">Avoid invalid characters</td>
			<td valign="top">The following characters are invalid:<br>
&quot; / \ [ ] : ; | = , + * ? &lt; &gt;</td>
		</tr>

		<tr>
			<td valign="top">User logon names are not case sensitive</td>
			<td valign="top">You can use a combination of special and alphanumeric characters to help uniquely identify user accounts. User logon names are <i>not</i> case sensitive, but Windows 2000 preserves the case.</td>
		</tr>

		<tr>
			<td valign="top">Accommodate employees with duplicate names</td>
			<td valign="top">If two users were named John Doe, you could use the first name and the last initial, and then add additional letters from the last name to differentiate the duplicate names. In this example, one user account logon name could be Johnd and the other Johndo. Another possibility would be to number each user logon name&#8212;for example, Johnd1 and Johnd2.</td>
		</tr>
		
		<tr>
			<td valign="top">Identify the type of employee</td>
			<td valign="top">In some organizations, it is useful to identify temporary employees by their user account. To identify temporary employees, you can use a T and a dash in front of the user's logon name&#8212;for example, T-Johnd. Alternatively, use parentheses in the name&#8212;for example, John Doe (Temp).</td>
		</tr>

	</table>
</p>

<A NAME="355"><H2>Password Requirements</H2></A>

<p>To protect access to the computer, every user account should have a password. Consider the following guidelines for passwords:</p>

<ul>
<p><li>Always assign a password for the Administrator account to prevent unauthorized access to the account.</li></p>

<p><li>Determine whether the Administrator or the users will control passwords. You can assign unique passwords for the user accounts and prevent users from changing them, or you can allow users to enter their own passwords the first time they log on. In most cases, users should control their passwords.</li></p>

<p><li>Use passwords that are hard to guess. For example, avoid using passwords with an obvious association, such as a family member's name.</li></p>

<p><li>Passwords can be up to 128 characters; a minimum length of eight characters is recommended.</li></p>

<p><li>Use both uppercase and lowercase letters, numerals, and valid nonalphanumeric characters. Table 10.1 lists the invalid nonalphanumeric characters.</li></p>
</ul>

<A NAME="356"><H2>Lesson Summary</H2></A>

<p>In this lesson, you learned that in planning user accounts, you should determine naming conventions for user accounts, requirements for passwords, and account options such as logon hours, the computers from which users can log on, and 
account expiration. You learned that domain user accounts can be up to 20 characters long and must be unique within the OU where you create the domain user account. Local user account names can also be up to 20 characters long and must be unique on the computer where you create the local user account. Making these decisions before you start creating user accounts will reduce the amount of time it takes to create the needed user accounts and will simplify managing these accounts.</p>

</BODY>
</HTML>







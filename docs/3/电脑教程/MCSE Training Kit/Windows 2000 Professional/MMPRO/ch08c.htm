<HTML>
<HEAD>
<TITLE>Lesson 2: Understanding Name Resolution</TITLE>
<link rel="STYLESHEET" type="text/css" href="mmpro.css"><SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch08b.htm", "ch08d.htm", "images/unit_p_a1.gif", "images/unit_p_a2.gif", "images/unit_p_b1.gif", "images/unit_p_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#aa22aa", "2");
//--></SCRIPT><P>



<A NAME="300"><H1>Lesson 2: Understanding Name Resolution</H1></A>

<p><i>Name resolution</i> is the process of resolving names to IP addresses. Name 
resolution is similar to looking up a name in a telephone book, where the name 
is associated with a telephone number. For example, when you connect to the Microsoft Web site, you use the name www.microsoft.com. DNS resolves www.microsoft.com to its associated IP address. The mapping of names to IP addresses is stored in the DNS distributed database.</p>

<p>DNS name servers resolve forward and reverse lookup queries. A forward lookup query resolves a name to an IP address. A reverse lookup query resolves an IP address to a name. A name server can resolve a query only for a zone for which it has authority. If a name server can't resolve the query, it passes the query to other name servers that can resolve the query. The name server caches the query results to reduce the DNS traffic on the network.</p>

<p><div class="sidebar"><blockquote>
<b>After this lesson, you will be able to</b>

<ul>
<p><li>Explain the name resolution process.</li></p>
</ul>

<p><b>Estimated lesson time: 5 minutes</b></p>
</blockquote></div></p>

<A NAME="301"><H2>Forward Lookup Query</H2></A>

<p>The DNS Service uses a client/server model for name resolution. To resolve a <i>forward lookup query</i>, which resolves a name to an IP address, a client passes a query to a local name server. The local name server either resolves the query or queries another name server for resolution.</p>

<p>Figure 8.3 represents a client querying the name server for an IP address of www.microsoft.com. The numbers in the figure depict the following activities:</p>

<ol>
<p><li> The client passes a forward lookup query for www.microsoft.com to its local name server.</li></p>

<p><li> The local name server checks its zone database file to determine whether it contains the name-to-IP address mapping for the client query. The local name server doesn't have authority for the microsoft.com domain, so it passes the query to one of the DNS root servers, requesting resolution of the host name. The root name server sends back a referral to the com name servers.</li></p>

<p><li> The local name server sends a request to a com name server, which responds with a referral to the Microsoft name servers.</li></p>

<p><li> The local name server sends a request to the Microsoft name server. The Microsoft name server receives the request. Because the Microsoft name server has authority for that portion of the domain name space, it returns the IP address for www.microsoft.com to the local name server.</li></p>

<p><li> The name server sends the IP address for www.microsoft.com to the client.</li></p>

<p><li> The name resolution is complete, and the client can access www.microsoft.com.</li></p>

<p>
<A HREF="javascript:fullSize('F08tk03x.htm')"> <img src="images/F08tk03.JPG" width=404 height=303 border=0 ALT="Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 8.3</b> <i>Resolving a forward lookup query</i><!-- /caption -->
</p>

</ol>

<A NAME="302"><H2>Name Server Caching</H2></A>

<p>When a name server is processing a query, it might be required to send out several queries to find the answer. With each query, the name server discovers other name servers that have authority for a portion of the domain name space. The name server caches these query results to reduce network traffic.</p>

<p>When a name server receives a query result, the following actions take place (see Figure 8.4):</p>

<ol>
<p><li> The name server caches the query result for a specified amount of time; this is referred to as Time to Live (TTL).</li></p>
</ol>

<p><div class="note"><blockquote><b>NOTE</b><hr>The zone that provided the query results specifies the TTL. The default value is 60 minutes.</blockquote></div></p>

<ol>
<p><li value="2"> Once the name server caches the query result, TTL starts counting down from its original value.</li></p>

<p><li> When TTL expires, the name server deletes the query result from its cache.</li></p>
</ol>

<p>Caching query results enables the name server to resolve other queries to the same portion of the domain name space quickly.</p>

<p>
<A HREF="javascript:fullSize('F08tk04x.htm')"> <img src="images/F08tk04.JPG" width=404 height=212 border=0 ALT="Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 8.4</b> <i>Caching query results</i><!-- /caption -->
</p>

<p><div class="note"><blockquote><b>NOTE</b><hr>Shorter TTL values help ensure that data about the domain name space is more current across the network. Shorter TTL values <i>do</i> increase the load on name servers, however. A longer TTL value decreases the time required to resolve information. However, if a change does occur, the client will not receive the updated information until the TTL expires and a new query to that portion of the domain name space is resolved.</blockquote></div></p>

<A NAME="303"><H2>Reverse Lookup Query</H2></A>

<p>A <i>reverse lookup query</i> maps an IP address to a name. Troubleshooting tools, such as the nslookup command-line utility, use reverse lookup queries to report back host names. Additionally, certain applications implement security based on the ability to connect to names, not IP addresses.</p>

<p>Because the DNS distributed database is indexed by name and not by IP address, a reverse lookup query would require an exhaustive search of every domain name. To solve this problem, a special second-level domain called <i>in-addr.arpa</i> was created.</p>

<p>The in-addr.arpa domain follows the same hierarchical naming scheme as the rest of the domain name space; however, it is based on IP addresses, not domain names:</p>

<ul>
<p><li>Subdomains are named after the numbers in the dotted-decimal representation of IP addresses.</li></p>

<p><li>The order of the IP address octets is reversed.</li></p>

<p><li>Companies administer subdomains of the in-addr.arpa domain based on their assigned IP addresses and subnet mask.</li></p>
</ul>



<p>For example, Figure 8.5 shows a dotted-decimal representation of the IP 
address 169.254.16.200. A company that has an assigned IP address range of 169.254.16.0 to 169.254.16.255 with a subnet mask of 255.255.255.0 will have authority over the 16.254.169.in-addr.arpa domain.</p>

<p>
<A HREF="javascript:fullSize('F08tk05x.htm')"> <img src="images/F08tk05.JPG" width=404 height=291 border=0 ALT="Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 8.5</b> <i>The in-addr.arpa domain</i><!-- /caption -->
</p>

<A NAME="304"><H2>Lesson Summary</H2></A>

<p>In this lesson, you learned that name resolution is the process of resolving names to IP addresses and that the mapping of names to IP addresses is stored in the DNS distributed database. You learned that DNS name servers resolve forward lookup queries and what happens when a client queries the name server for an IP address. You also learned about name server caching and that the name server caches the query results to reduce the DNS traffic on the network.</p>

<p>You also learned that in addition to forward lookup queries, DNS name servers 
resolve reverse lookup queries. A reverse lookup query resolves an IP address to 
a name. Because the DNS distributed database is indexed by name and not by 
IP address, a special second-level domain called in-addr.arpa was created. The 
in-addr.arpa domain follows the same hierarchical naming scheme as the rest of the domain name space; however, it is based on IP addresses instead of domain names.</p>

</BODY>
</HTML>







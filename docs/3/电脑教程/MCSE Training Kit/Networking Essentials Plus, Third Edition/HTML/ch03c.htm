<HTML>
<HEAD>
<TITLE>Lesson 2: How Networks Send Data</TITLE>
<link rel="STYLESHEET" type="text/css" href="netess3.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<BODY bgcolor="#ffffff" text="#000000">
<A HREF="ch03b.htm">[Previous]</A> <A HREF="ch03d.htm">[Next]</A><P>

<A NAME="162"><h1>Lesson 2: How Networks Send Data</h1></A>
<p>At first, one might assume that data is sent as a continuous stream of ones and zeros from
one computer to another. In fact, data is broken down into small, manageable packets, each
wrapped with the essential information needed to get it from its source to the correct
destination. This lesson introduces the concept of packets as the basic building blocks of
network data communications.</p>

<p><div class="sidebar"><blockquote>
<p><b>After this lesson, you will be able to:</b> </p>

<ul>
<p><li> Define the term &quot;packet,&quot; including its function and components.</li></p>

<p><li>Describe the contents and function of each packet component: header, data, and trailer.</li></p>
</ul>

<p><b>Estimated lesson time: 30 minutes</b> </p>
</blockquote></div>
</p>

<A NAME="163"><h2>The Function of Packets in Network Communications</h2></A>
<p>Data usually exists as rather large files. However, networks cannot operate if computers put
large amounts of data on the cable at the same time. As you see in Figure 3.5, a computer
sending large amounts of data causes other computers to wait (increasing the frustration of the
other users) while the data is being moved. This is not called &quot;sharing&quot;; it is
called &quot;monopolizing the network.&quot; There are two reasons why putting large chunks of
data on the cable at one time slows down the network:</p>

<ul>
<li> Large amounts of data sent as one large unit tie up the network and make timely
interaction and communications impossible because one computer is flooding the cable with
data.</li>

<p><li>The impact of retransmitting large units of data further multiplies network traffic.</li></p>
</ul>

<p>These effects are minimized when the large data units are reformatted into smaller packages
for better management of error correction in transmission. This way, only a small section of
data is affected, and, therefore, only a small amount of data must be retransmitted, making it
relatively easy to recover from the error.</p>


<p>
<A HREF="javascript:fullSize('F03xx05x.htm')"> <img src="images/F03xx05.JPG" width=404 height=247 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 3.5</b> <i>Large continuous streams of data slow down the network</i><!--/caption-->
</p>


<p>In order for many users at once to transmit data quickly and easily across the network, the
data must be broken into small, manageable chunks. This way, users each get their share of
access to the network. These chunks are called <i>packets</i>, or frames. Although the terms
&quot;packet&quot; and &quot;frame&quot; are often used interchangeably, there are some
differences based on the type of network. This lesson uses the term &quot;packet,&quot; meaning
&quot;a unit of information transmitted as a whole from one device to another on a
network.&quot;</p>


<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
&quot;Device&quot; is a generic term for a computer subsystem. Printers,
serial ports, and disk drives are often referred to as devices; such subsystems frequently
require their own controlling software, called <i>device drivers</i>. Packets are the basic
units of network communication. Figure 3.6 shows data that is being broken into packets. With
data divided into packets, individual transmissions are speeded up so that every computer on
the network has more opportunities to transmit and receive data. At the target (receiving)
computer, the packets are collected and reassembled in the order of the original
data.
</blockquote></div>
</p>


<p>
<img src="images/F03xx06.JPG" width=353 height=279 border="0">
</p><p>
<!--caption--><b>Figure 3.6</b> <i>Breaking data into packets</i><!--/caption-->
</p>


<p>When the network operating system at the sending computer breaks the data into packets, it
adds special control information to each frame. This makes it possible to:</p>

<ul>
<p><li> Send the original, disassembled data in small chunks.</li></p>

<p><li> Reassemble the data in the proper order when it reaches its destination.</li></p>

<p><li> Check the data for errors after it has been reassembled.</li></p>
</ul>



<A NAME="164"><h2>Packet Structure</h2></A>
<p>Packets can contain several types of data including:</p>

<ul>
<p><li> Information, such as messages or files.</li></p>

<p><li> Certain types of computer control data and commands, such as service requests.</li></p>

<p><li>Session control codes, such as error correction, that indicate the need for a retransmission.</li></p>
</ul>



<A NAME="165"><h3>Packet Components</h3></A>
<p>All packets have certain components in common. These include:</p>

<ul>
<p><li> A source address that identifies the sending computer.</li></p>

<p><li> The data that is intended for transmission.</li></p>

<p><li> A destination address that identifies the recipient.</li></p>

<p><li> Instructions that tell network components how to pass the data along.</li></p>

<p><li>Information that tells the receiving computer how to connect the packet to other packets in order to reassemble the complete data package.</li></p>

<p><li> Error-checking information to ensure that the data arrives intact.</li></p>
</ul>

<p>Figure 3.7 shows these packet components grouped into three sections: header, data, and
trailer.</p>


<p>
<img src="images/F03xx07.JPG" width=181 height=195 border="0">
</p><p>
<!--caption--><b>Figure 3.7</b> <i>Packet components</i><!--/caption-->
</p>


<p><b>Header</b></p>

<p>The header includes:</p>

<ul>
<p><li> An alert signal to indicate that the packet is being transmitted.</li></p>

<p><li> The source address.</li></p>

<p><li> The destination address.</li></p>

<p><li> Clock information to synchronize transmission.</li></p>
</ul>

<p><b>Data</b></p>

<p>This describes the actual data being sent. This part of the packet varies in size, depending
on the network. The data section on most networks varies from 512 bytes&#8212;or 0.5 kilobytes
(KB)&#8212;to 4 KB.</p>

<p>Because most original data strings are much longer than 4k, data must be broken into chunks
small enough to be put into packets. It takes many packets to complete the transmission of a
large file.</p>

<p><b>Trailer</b></p>

<p>The exact content of the trailer varies depending on the communication method, or <i>
protocol</i>. However, the trailer usually contains an error-checking component called a <i>
cyclical redundancy check (CRC)</i>. The CRC is a number produced by a mathematical calculation
on the packet at its source. When the packet arrives at its destination, the calculation is
made again. If the results of both calculations are the same, this indicates that the data in
the packet has remained stable. If the calculation at the destination differs from the
calculation at the source, this means the data has changed during the transmission. In that
case, the CRC routine signals the source computer to retransmit the data.</p>


<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
A protocol is a set of rules or standards designed to enable computers
to connect with one another and to exchange information with as little error as
possible.
</blockquote></div>
</p>

<p>Different networks have differing formats for the packets and allow different-sized packets.
The packet-size limits determine how many packets the network operating system can create from
one large piece of data.</p>

<A NAME="166"><h3>Example: Packets in Printing</h3></A>
<p>The following example illustrates, step-by-step, how packets are used in network
communications.</p>

<p>A large print job must be sent from a computer to a print server.</p>

<p>
<ol>
<p><li> In Figure 3.8, the sending computer establishes a connection with the print server.</li></p>

<p>
<A HREF="javascript:fullSize('F03xx08x.htm')"> <img src="images/F03xx08.JPG" width=404 height=218 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 3.8</b> <i>Establishing a connection with a print server</i><!--/caption-->
</p>


<p><li>In Figure 3.9, the computer next breaks the large print job into packets. Each packet contains the destination address, the source address, the data, and control information.</li></p>

<p>
<A HREF="javascript:fullSize('F03xx09x.htm')"> <img src="images/F03xx09.JPG" width=404 height=351 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 3.9</b> <i>Creating packets</i><!--/caption-->
</p>


<p><li> In Figure 3.10, the network interface card (NIC) in each computer examines the
receiver's address on all frames sent on its segment of the network. However, because each
NIC has its own address, the card does not interrupt the computer until it detects a frame
addressed specifically to it.</li></p>

<p>
<A HREF="javascript:fullSize('F03xx10x.htm')"> <img src="images/F03xx10.JPG" width=404 height=285 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 3.10</b> <i>Examining the receiver's address</i><!--/caption-->
</p>


<p><li>In Figure 3.11, the destination computer is the print server. The packets enter through the cable into the NIC.</li></p>

<p>
<A HREF="javascript:fullSize('F03xx11x.htm')"> <img src="images/F03xx11.JPG" width=404 height=279 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 3.11</b> <i>Network interface card (NIC) accepts packets addressed to the print server</i><!--/caption-->
</p>


<p><li> The network software processes the frame stored in the NIC's receive buffer.
Sufficient processing power to receive and examine each incoming frame is built into the NIC.
This means that no computer resources are used until the NIC identifies a frame addressed to
itself.</li></p>

<p><li> In Figure 3.12, the network operating system in the receiving computer reassembles the
packets back into the original text file and moves the file into the computer's memory.
From there the file is sent to the printer.</li></p>

<p>
<A HREF="javascript:fullSize('F03xx12x.htm')"> <img src="images/F03xx12.JPG" width=404 height=293 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 3.12</b> <i>Reassembled packets sent to the printer</i><!--/caption-->
</p>

</ol>
</p>

<A NAME="167"><h2>Lesson Summary</h2></A>
<p>The following points summarize the main elements of this lesson:</p>

<p>
<ul>
<p><li> Data on a network is not sent in one continuous stream. It is divided up into
smaller, more manageable packets. These packets, or chunks, of data make timely interaction and
communications on a network possible.</li></p>

<p><li> All packets have these basic components:</li></p>

<ul>
<p><li> source address</li></p>

<p><li> data</li></p>

<p><li> destination address</li></p>

<p><li> instructions</li></p>

<p><li> information with which to reassemble the data package</li></p>

<p><li> error-checking information</li></p>
</ul>

<p><li> Packet components are grouped into three sections:</li></p>

<ul>
<p><li> A header that contains clock information</li></p>

<p><li> The data</li></p>

<p><li> A trailer that contains the error-checking component</li></p>
</ul>
</ul>
</p>
</BODY>
</HTML>






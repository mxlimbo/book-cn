<HTML>
<HEAD>
<TITLE>Lesson 2: Establishing a Client/Server Environment</TITLE>
<link rel="STYLESHEET" type="text/css" href="netess3.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<BODY bgcolor="#ffffff" text="#000000">
<A HREF="ch08b.htm">[Previous]</A> <A HREF="ch08d.htm">[Next]</A><P>

<A NAME="441"><h1>Lesson 2: Establishing a Client/Server Environment</h1></A>
<p>Large networks are based on the client/server model. This lesson describes how to set up and
work on a network that has servers and client workstations.</p>

<p><div class="sidebar"><blockquote>
<p><b>After this lesson, you will be able to:</b> </p>

<ul>
<p><li> Describe the differences between client/server and centralized computing.</li></p>

<p><li> List the six steps by which server-based networks process data.</li></p>

<p><li> Identify server functions.</li></p>

<p><li> Identify client-workstation functions.</li></p>

<p><li>Determine if a client/server approach is appropriate for a given networking environment.</li></p>
</ul>

<p><b>Estimated lesson time: 30 minutes</b> </p>
</blockquote></div>
</p>

<A NAME="442"><h2>Centralized vs. Client/Server Computing</h2></A>
<p>Early networks were based on the centralized-computing model. Usually, in these networks,
one large server (a mainframe computer) handled all aspects of the network, while each user
accessed the main server from a terminal. Because the centralized computer handled all the
high-level computing chores, the terminals were typically inexpensive, low-performance
computers. Today, thanks to improvements stemming from the rapid evolution of the personal
computer, the old centralized model is being replaced with the client/server model. Today's
users have爐he full power of a mainframe computer at their fingertips, with the added advantage
of an interconnected network.</p>

<A NAME="443"><h3>Centralized Computing</h3></A>
<p>In the traditional mainframe environment, an application such as a database runs on a large
and powerful centralized mainframe computer and is accessed by terminals. The terminal sends a
request for information to the mainframe computer; the mainframe retrieves the information and
then displays it on the terminal.</p>

<p>The entire database travels from the server across the network and is downloaded to the
client that made the request. The file access takes place through the network operating system
(NOS) and the cable. There is very little coordination between the terminal and the mainframe.
The data is processed on the mainframe and then delivered to the terminal. The data transfer
between the terminal and the mainframe increases network traffic and slows down requests from
other terminals.</p>

<A NAME="444"><h3>Client/Server Computing</h3></A>
<p>The term &quot;client/server computing&quot; refers to the process by which data processing
chores are shared between the client computer and the more powerful server computer. Figure 8.9
shows a simple client/server network with one server, three clients, and a printer.</p>


<p>
<A HREF="javascript:fullSize('F08xx09x.htm')"> <img src="images/F08xx09.JPG" width=404 height=277 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 8.9</b> <i>A simple client/server network</i><!--/caption-->
</p>


<p>The client/server approach can benefit any organization in which many people need continual
access to large amounts of data.</p>

<p>The client/server network is the most efficient way to provide:</p>

<ul>
<p><li>Database access and management for applications such as spreadsheets, accounting, communications, and document management.</li></p>

<p><li> Network management.</li></p>

<p><li> Centralized file storage.</li></p>
</ul>



<A NAME="445"><h2>Client/Server-Model Overview</h2></A>
<p>Most networks operate in the client/server model, also referred to as &quot;server-based
networking.&quot; A client workstation makes a request for data that is stored on a server. The
client workstation processes the data using its own CPU. Data-processing results can then be
stored on the server for future use. The data can also be stored on the client workstation and
accessed by other client workstations on the network. In peer-to-peer networks, where there is
no central server, each client workstation acts as both client and server. Differences between
the two kinds of爊etworks are discussed more fully in earlier chapters, especially <A HREF="ch01a.htm#30">Chapter 1</A>,
&quot;Introduction to Networking.&quot;</p>

<p>For an example of how the client/server model operates, let's take a look at a
database-management application. In the client/server model, the client software uses
Structured Query Language (SQL) to translate what the user sees into a request that the
database can understand. SQL is an English-like database query language originally developed by
IBM to provide a relatively simple way to manipulate data. (Manipulating data includes entering
it, retrieving it, or editing it.)</p>

<p>Other database vendors realized that it would be easier to develop database applications
using a common database language. Therefore, they supported SQL and it became an industry
standard. Most database management systems today use SQL.</p>

<A NAME="446"><h3>The Client/Server Process</h3></A>
<p>The database query is sent from the client, but processed on the server. Only the results
are sent across the network back to the client. The process of requesting and receiving
information consists of six steps:</p>

<ol>
<p><li> The client requests data.</li></p>

<p><li> The request is translated into SQL.</li></p>

<p><li> The SQL request is sent over the network to the server.</li></p>

<p><li> The database server carries out a search on the computer where the data exists.</li></p>

<p><li> The requested records are returned to the client.</li></p>

<p><li> The data is presented to the user.</li></p>
</ol>

<p>As shown in Figure 8.10, the client/server environment has two principal components:</p>

<ul>
<p><li>The application, often referred to as the &quot;client&quot; or the &quot;front end&quot;</li></p>

<p><li>The database server, often referred to as the &quot;server&quot; or the &quot;back end&quot;</li></p>
</ul>


<p>
<img src="images/F08xx10.JPG" width=297 height=291 border=0>
</p><p>
<!--caption--><b>Figure 8.10</b> <i>The client is the front end and the server is the back end</i><!--/caption-->
</p>


<A NAME="447"><h3>The Client</h3></A>
<p>The user generates a request at the front end. The client runs an application that:</p>

<ul>
<p><li> Presents an interface to the user.</li></p>

<p><li> Formats requests for data.</li></p>

<p><li> Displays data it receives from the server.</li></p>
</ul>

<p>In a client/server environment, the server does not contain the user-interface 
software. The client is responsible for presenting the data in a usable form.</p>

<p>The user enters instructions from the client computer. The client computer prepares the
input for the server. The client computer sends a request for specific information across the
network to the server. The server processes the request, locates the燼ppropriate information,
and sends it back across the network to the client. The client computer then feeds the
information to the interface, which presents the information to the user. The client computer
can also process the information further, using its own CPU and software.</p>

<p><b>Using the Front End</b></p>

<p>Front ends can present the same information to users in different ways, depending on the
request. For example, data that states Columbus first crossed the Atlantic Ocean in 1492 can be
organized and presented in several contexts, including:</p>

<ul>
<p><li>Ocean crossings.</li></p>

<p><li>Columbus's achievements.</li></p>

<p><li>Landmark events of 1492.</li></p>

<p><li>Bodies of water crossed by Columbus.</li></p>
</ul>

<p>As another example, let's consider our custom-bicycle manufacturer. The company keeps
all customer and product information in one database. But this information can be retrieved,
organized, and presented through the front end in a variety of爓ays:</p>

<ul>
<p><li>Marketers can send promotional mailings to customers who are located in a certain zip code.</li></p>

<p><li>Distributors can find out which parts are in stock.</li></p>

<p><li>Service departments can identify which customers are due for service.</li></p>

<p><li>Ordering departments can view each customer's buying history.</li></p>

<p><li>Accounts receivable departments can prevent a client who is in arrears from ordering new products.</li></p>
</ul>

<p>Each department needs a front end designed to access the common database and retrieve
information for a particular need.</p>

<p><b>Front-End Tools</b></p>

<p>A number of tools, applications, and utilities are available for the front end to make the
client/server process more efficient. These tools include:</p>

<ul>
<p><li><b>Query tools</b> These tools use predefined queries and built-in reporting capabilities to help users access back-end data.</li></p>

<p><li><b>User applications</b> Many common applications programs, such as Microsoft Excel,
can provide front-end access to back-end databases. Others, such as燤icrosoft Access, include
their own SQL to provide an interface to multivendor database-management systems.</li></p>

<p><li><b>Program development tools</b> Many client/server installations need special,
customized front-end applications for their data-retrieval tasks. Program development tools,
such as Microsoft Visual Basic, are available to help programmers develop front-end tools to
access back-end data.</li></p>
</ul>

<A NAME="448"><h3>The Server</h3></A>
<p>The server in a client/server environment is usually dedicated to storing and managing data.
This is where most of the actual database activity occurs. The server is also referred to as
the back end of the client/server model because it fulfills the requests of the client. The
server receives the structured requests from the clients, processes them, and sends the
requested information back over the network to the client.</p>

<p>The database software on the file server reacts to client queries by running searches. As
part of a client/server system, it returns only the results of the searches.</p>

<p>Back-end processing includes sorting data, extracting the requested data, and sending that
data back to the user.</p>

<p>Additionally, database server software manages the data in a database including:</p>

<ul>
<p><li>Updates.</li></p>

<p><li>Deletions.</li></p>

<p><li>Additions.</li></p>

<p><li>Security.</li></p>
</ul>

<p><b>Stored Procedures</b></p>

<p>Stored procedures are short, prewritten data-processing routines that help with
data-processing details. The procedures are stored in the server and can be used by any
client.</p>

<p>Stored procedures help process data. One stored procedure can be used by any number of
clients, thus avoiding the need to incorporate the same routine into the燾ode of each
program.</p>

<p>These stored procedures:</p>

<ul>
<p><li>Perform some of the processing usually performed by the client.</li></p>

<p><li>Reduce network traffic, because a single call from the client to the server can燽egin a series of stored procedures that otherwise would require several requests.</li></p>

<p><li>Can include security controls to prevent unauthorized users from running some of the procedures.</li></p>
</ul>

<p><b>Server Hardware</b></p>

<p>The server computers in a typical client/server environment should be more powerful and
faster than the client computers. In addition to a high-speed processor, these computers need
lots of RAM and plenty of hard-drive space. These computers must be able to handle:</p>

<ul>
<p><li>Multiple requests.</li></p>

<p><li>Security.</li></p>

<p><li>Network management tasks.</li></p>
</ul>

<p>Any organization that implements a client/server network should use dedicated servers to
handle the back-end functions.</p>

<A NAME="449"><h3>Client/Server Architecture</h3></A>
<p>There are several possible client/server arrangements. In the two primary arrangements,
illustrated in Figure 8.11:</p>

<ul>
<p><li>The data can be placed on a single server.</li></p>

<p><li>The data can be distributed across several database servers. The locations of the servers depend on the locations of the users and the nature of the data.</li></p>
</ul>


<p>
<A HREF="javascript:fullSize('F08xx11x.htm')"> <img src="images/F08xx11.JPG" width=404 height=534 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 8.11</b> <i>Data can be localized on one server or distributed over several servers</i><!--/caption-->
</p>


<p>Figure 8.12 shows two variations on the distributed server arrangement:</p>

<ul>
<p><li>Servers over a WAN periodically synchronize their databases to ensure that they all have the same data.</li></p>

<p><li>A data warehouse stores large volumes of data and forwards the most sought-after
data to an intermediate system that is able to format the data into its most requested form.
This offloads some of the data processing from the main server to other servers.</li></p>
</ul>


<p>
<A HREF="javascript:fullSize('F08xx12x.htm')"> <img src="images/F08xx12.JPG" width=404 height=341 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 8.12</b> <i>Data storage warehouse server offloads data to other servers</i><!--/caption-->
</p>


<A NAME="450"><h2>Advantages of Working in a Client/Server Environment</h2></A>
<p>Client/server technology creates a powerful environment that offers many real benefits to
organizations. A well-planned client/server system provides relatively inexpensive networks.
These systems provide mainframe-computing capacity while allowing easy customization for
specific applications. Because client/server processing sends only the results of a query
across the network, it cuts down on network traffic.</p>

<p>Client/server computing uses a powerful server to store data. The client workstation can
process some or all of the requested data. On a busy network, this means that the processing
will be distributed more efficiently than in a traditional mainframe-based system.</p>

<p>Because the file services and the data are on the back-end server, the servers are easier to
secure and maintain in one location. Data is more secure in a client/server environment because
it can be placed in a secure area away from users. The data is also more secure when Windows NT
Server-based security is used to prevent unauthorized access to files. When the data is stored
in a limited number of爈ocations and managed by one authority, backups are simplified.</p>

<p>
<img src="images/practic.JPG" width=68 height=54 border=0>
</p>

<A NAME="451"><h2>Exercise 8.2: Adding a Network Server</h2></A>
<p>In Exercise 8.1, we designed a peer-to-peer network and looked at two different topologies.
While these designs meet the immediate needs of our client, the custom bicycle manufacturer,
they are likely to fall short if this manufacturer decides to爀xpand the business in the
future. In this exercise, you will be modifying the design you carried out in Exercise 1 to
include a network server.</p>

<p>In planning your new design, consider the following issues:</p>

<ul>
<p><li> Where should the server be located?</li></p>

<p><li> What additional materials are required?</li></p>

<p><li> What compatibility issues might arise?</li></p>
</ul>


<p><a href="chaah.htm#ans35">Answers</a></p>


<A NAME="452"><h2>Lesson Summary</h2></A>
<p>The following points summarize the main elements of this lesson:</p>

<ul>
<p><li>The client/server model has several advantages over a centralized network;
for爀xample, in爐his model, tasks are divided between client and server, resulting in a more
efficient network.</li></p>

<p><li>Client/server networks can be arranged in two ways: data can be stored on a爏ingle server or distributed across several servers.</li></p>

<p><li>Client/server networks commonly use structured query language (SQL) for database management.</li></p>

<p><li>In a client/server network, the client, or front end, is responsible for presenting
data in a useful form and for writing reports; the server, or back end, is responsible for
storing and managing the data.</li></p>

<p><li>Client/server networks can be arranged in two ways: data can be stored on a single server or distributed across several servers.</li></p>
</ul>



</BODY>
</HTML>






<HTML>
<HEAD>
<TITLE>Lesson 2: The Network Interface Card</TITLE>
<link rel="STYLESHEET" type="text/css" href="netess3.css">

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</head>
<BODY bgcolor="#ffffff" text="#000000">
<A HREF="ch02b.htm">[Previous]</A> <A HREF="ch02d.htm">[Next]</A><P>

<A NAME="109"><h1>Lesson 2: The Network Interface Card</h1></A>
<p>Network interface cards (NICs) provide the interface between cables, discussed in the
previous lesson, and computers. This lesson explores the many different types of cards and how
their performance affects a network. It also discusses the various connectors used to connect
the cards to the cables.</p>

<p><div class="sidebar"><blockquote>
<p><b>After this lesson, you will be able to:</b> </p>

<ul>
<p><li>Describe the role of the NIC in a network, including preparing, sending, and燾ontrolling data.</li></p>

<p><li> Describe the configurable options for NICs.</li></p>

<p><li> List the primary considerations for selecting a NIC.</li></p>

<p><li>Describe at least two enhancements to NICs that will improve network performance.</li></p>
</ul>

<p><b>Estimated lesson time: 85 minutes</b> </p>
</blockquote></div>
</p>

<A NAME="110"><h2>The Role of the Network Interface Card</h2></A>
<p><i>Network interface cards,</i> usually referred to as NICs, act as the physical interface
or connection between the computer and the network cable. Figure 2.24 shows a NIC with a
coaxial-cable connection. The cards are installed in an expansion slot in each computer and
server on the network.</p>

<p>After the NIC has been installed, the network cable is attached to the card's port to
make the actual physical connection between the computer and the rest of the network.</p>

<p>
<img src="images/multime.JPG" width=68 height=51 border="0">
</p>

<p>Run the <b>c02dem01</b> and <b>c02dem02</b> videos located in the <b>Demos</b> folder on the
CD燼ccompanying this book to view a demonstration of how to install a network interface card
(NIC).</p>


<p>
<A HREF="javascript:fullSize('F02xx24x.htm')"> <img src="images/F02xx24.JPG" width=404 height=177 border=0 ALT = "Click to view at full size."> </A>
</p><p>
<!--caption--><b>Figure 2.24</b> <i>A sample NIC</i><!--/caption-->
</p>


<p>The role of the NIC is to:</p>

<ul>
<p><li> Prepare data from the computer for the network cable.</li></p>

<p><li> Send the data to another computer.</li></p>

<p><li> Control the flow of data between the computer and the cabling system.</li></p>

<p><li>Receive incoming data from the cable and translate it into bytes that can be爑nderstood by the computer's central processing unit (CPU).</li></p>
</ul>

<p>Stated at a more technical level, the NIC contains the hardware and <i>firmware</i>
(software routines stored in read-only memory, ROM) programming that implements the Logical
Link Control and Media Access Control functions in the燿ata-link layer of the OSI reference model. (See
Chapter 5, <a href="ch05b.htm#288">Lesson 1: Open Systems Interconnection (OSI) Reference Model</a>, for more information about the
OSI reference model.)</p>

<A NAME="111"><h3>Preparing the Data</h3></A>
<p>Before data can be sent over the network, the NIC must change it from a form the computer
can understand to a form that can travel over a network cable.</p>

<p>Data moves through a computer along paths called <i>buses</i>. These are actually several
data paths placed side by side. Because the paths are side by side (parallel), data can move
along them in lateral groups instead of in a single (serial) data stream.</p>

<p>Older buses, such as those used in the original IBM personal computer, were known as 8-bit
buses because they could move data 8 bits at a time. The IBM PC/AT computer used a 16-bit bus,
which means it could move data 16 bits at a time. Computers manufactured today use 32-bit
buses. When data travels on a computer's bus, it is said to be traveling in parallel
because the 32 bits are moving along side by side. Think of a 32-bit bus as a 32-lane highway
with 32 cars moving side by side (moving in parallel), each carrying one bit of data.</p>

<p>On the network cable, however, data must travel in a single stream of bits. When data
travels on a network cable it is said to be traveling as a <i>serial transmission</i> because
one bit follows another. In other words, the cable is a one-lane highway, and the data always
travels in one direction. The computer is either sending or receiving data, but never both at
the same time.</p>

<p>The NIC takes data that is traveling in parallel as a group and restructures it so that it
will flow through the 1-bit-serial path of the network cable. Figure 2.25 shows a server
converting parallel data to serial data on the network. This is accomplished through the
translation of the computer's digital signals into electrical or optical signals that can
travel on the network's cables. The component responsible for this is the transceiver
(transmitter/receiver).</p>


<p>
<img src="images/F02xx25.JPG" width=360 height=459 border="0">
</p><p>
<!--caption--><b>Figure 2.25</b> <i>Parallel data stream converted to a serial data stream</i><!--/caption-->
</p>


<p><b>Network Address</b></p>

<p>In addition to transforming data, the NIC also has to advertise its own location, or
address, to the rest of the network to distinguish it from all the other cards on the
network.</p>

<p>A committee of the Institute of Electrical and Electronics Engineers (IEEE) assigns blocks
of addresses to each NIC manufacturer. The manufacturers hardwire these addresses into chips on
the card by a process known as &quot;burning&quot; the address into the card. With this
process, each NIC&#8212;and therefore each computer&#8212;has a unique address on a network.</p>

<p>The NIC also participates in several other functions in sequence as it takes data from the
computer and gets it ready for the network cable:</p>

<ol>
<p><li> The computer and NIC must communicate in order to move data from the computer to the
card. On cards that can utilize direct memory access (DMA, defined later in this lesson), the
computer assigns some of its memory space to the NIC.</li></p>

<p><li> The NIC signals the computer, requesting the computer's data.</li></p>

<p><li> The computer's bus moves the data from the computer's memory to the NIC.</li></p>
</ol>

<p>Because data can often move faster on the bus or the cable than the NIC can handle, the data
is sent to the card's buffer, a reserved portion of RAM. Here it is爃eld temporarily during
both the transmission and reception of data.</p>

<A NAME="112"><h3>Sending and Controlling Data</h3></A>
<p>Before the sending NIC actually sends data over the network, it carries on an electronic
dialog with the receiving NIC so that both cards agree on the following:</p>

<ul>
<p><li> The maximum size of the groups of data to be sent</li></p>

<p><li> The amount of data to be sent before confirmation of receipt is given</li></p>

<p><li> The time intervals between sending data chunks</li></p>

<p><li> The amount of time to wait before confirmation is sent</li></p>

<p><li> How much data each card can hold before it overflows</li></p>

<p><li> The speed of the data transmission</li></p>
</ul>

<p>If a newer, faster, more sophisticated NIC needs to communicate with an older, slower NIC,
both need to find a common transmission speed that each can accommodate. Some newer NICs
incorporate circuitry that allows the faster card to adjust to the rate of the slower card.</p>

<p>Each NIC signals to the other indicating its own parameters and accepting or adjusting to
the other card's parameters. After all the communication details have been determined, the
two cards begin to send and receive data.</p>

<A NAME="113"><h2>Configuration Options and Settings</h2></A>
<p>Network interface cards often have configurable options that must be set in order for the
card to function properly. Some of the older designs use externally mounted dual inline package
(DIP) switches as shown in Figure 2.26. The following are examples of configurable options:</p>

<ul>
<p><li> Interrupt (IRQ)</li></p>

<p><li> Base input/output (I/O) port address</li></p>

<p><li> Base memory address</li></p>

<p><li> Transceiver</li></p>
</ul>




<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
Settings on older NICs are made by means of software, jumpers, or a
combination of both; see the NIC product documentation for the appropriate software or jumper
settings. Many newer NICs use Plug and Play (PnP) technology; consequently, older cards that
require setting options manually are becoming obsolete. (Plug and Play is discussed in more
detail later in this lesson.)
</blockquote></div>
</p>


<p>
<img src="images/F02xx26.JPG" width=344 height=371 border="0">
</p><p>
<!--caption--><b>Figure 2.26</b> <i>Older NIC with DIP switches</i><!--/caption-->
</p>


<A NAME="114"><h3>Interrupt Request (IRQ) Lines</h3></A>
<p><i>Interrupt request lines</i> (IRQs) are hardware lines over which devices such as 
I/O ports, the keyboard, disk drives, and NICs can send interrupts or requests for爏ervice to
the computer's microprocessor.</p>

<p>Interrupt request lines are built into the computer's internal hardware and are assigned
different levels of priority so that the microprocessor can determine the爎elative importance
of incoming service requests.</p>

<p>When the NIC sends a request to the computer, it uses an interrupt&#8212;an electronic signal
sent to the computer's CPU. Each device in the computer must use a different interrupt
request line. The interrupt line is specified when the device is configured. For examples, see
Table 2.5 that follows.</p>

<p>In most cases, IRQ3 or IRQ5 can be used for the NIC, as we will see later in this chapter.
IRQ5 is the recommended setting if it is available, and it is the default for most systems. Use
a system diagnostic tool to determine which IRQs are already being used.</p>

<p>If neither IRQ3 nor IRQ5 is available, refer to the following table for alternative values
to use. The IRQs listed here as available usually can be used for a NIC. If爐he computer does
not have the hardware device listed for a specific IRQ, that IRQ should be available for
use.</p>

<p><b>Table 2.5</b> <i>Standard IRQ Settings</i></p>

<p><table cellpadding=5 width="95%"><tr>
<th>IRQ</th>
<th>Computer with an 80486 processor (or higher)</th>
</tr><tr>
<td valign="top">2(9)</td>
<td valign="top">EGA/VGA (enhanced graphics adapter/video graphics adapter)</td>
</tr><tr>
<td valign="top">3</td>
<td valign="top">Available (unless used for second serial port [COM2, COM4] 
 or bus mouse)</td>
</tr><tr>
<td valign="top">4</td>
<td valign="top">COM1, COM3</td>
</tr><tr>
<td valign="top">5</td>
<td valign="top">Available (unless used for second parallel port [LPT2] or sound card)</td>
</tr><tr>
<td valign="top">6</td>
<td valign="top">Floppy-disk controller</td>
</tr><tr>
<td valign="top">7</td>
<td valign="top">Parallel port (LPT1)</td>
</tr><tr>
<td valign="top">8</td>
<td valign="top">Real-time clock</td>
</tr><tr>
<td valign="top">10</td>
<td valign="top">Available</td>
</tr><tr>
<td valign="top">11</td>
<td valign="top">Available</td>
</tr><tr>
<td valign="top">12</td>
<td valign="top">Mouse (PS/2)</td>
</tr><tr>
<td valign="top">13</td>
<td valign="top">Math coprocessor</td>
</tr><tr>
<td valign="top">14</td>
<td valign="top">Hard-disk controller</td>
</tr><tr>
<td valign="top">15</td>
<td valign="top">Available (unless used for secondary hard-disk controller)</td></tr></table></p>

<A NAME="115"><h3>Base I/O Port</h3></A>
<p>The <i>base I/O port</i> specifies a channel through which information flows between the
computer's hardware (such as the NIC) and its CPU. The port appears to the CPU as an
address.</p>

<p>Each hardware device in a system must have a different base I/O port number. The port
numbers, in hexadecimal format (the system that uses 16 rather than 10燼s the basis for its
numbering) in the following table, are usually available to assign to a NIC unless they are
already in use. Those with a device listed next to爐hem are addresses commonly used for the
devices. Check the computer documentation to determine which addresses are already in use.</p>

<p><b>Table 2.6</b> <i>Base I/O Port Settings</i></p>

<p><table cellpadding=5 width="95%"><tr>
<th>Port</th>
<th>Device</th>
<th>Port</th>
<th>Device</th>
</tr><tr>
<td valign="top">200 to 20F</td>
<td valign="top">Game port</td>
<td valign="top">300 to 30F</td>
<td valign="top">NIC</td>
</tr><tr>
<td valign="top">210 to 21F</td>
<td valign="top">&nbsp;</td>
<td valign="top">310 to 31F</td>
<td valign="top">NIC</td>
</tr><tr>
<td valign="top">220 to 22F</td>
<td valign="top">&nbsp;</td>
<td valign="top">320 to 32F</td>
<td valign="top">Hard-disk controller (for PS/2 Model 30)</td>
</tr><tr>
<td valign="top">230 to 23F</td>
<td valign="top">Bus mouse</td>
<td valign="top">330 to 33F</td>
<td valign="top">&nbsp;</td>
</tr><tr>
<td valign="top">240 to 24F</td>
<td valign="top">&nbsp;</td>
<td valign="top">340 to 34F</td>
<td valign="top">&nbsp;</td>
</tr><tr>
<td valign="top">250 to 25F</td>
<td valign="top">&nbsp;</td>
<td valign="top">350 to 35F</td>
<td valign="top">&nbsp;</td>
</tr><tr>
<td valign="top">260 to 26F</td>
<td valign="top">&nbsp;</td>
<td valign="top">360 to 36F</td>
<td valign="top">&nbsp;</td>
</tr><tr>
<td valign="top">270 to 27F</td>
<td valign="top">LPT3</td>
<td valign="top">370 to 37F</td>
<td valign="top">LPT2</td>
</tr><tr>
<td valign="top">280 to 28F</td>
<td valign="top">&nbsp;</td>
<td valign="top">380 to 38F</td>
<td valign="top">&nbsp;</td>
</tr><tr>
<td valign="top">290 to 29F</td>
<td valign="top">&nbsp;</td>
<td valign="top">390 to 39F</td>
<td valign="top">&nbsp;</td>
</tr><tr>
<td valign="top">2A0 to 2AF</td>
<td valign="top">&nbsp;</td>
<td valign="top">3A0 to 3AF</td>
<td valign="top">&nbsp;</td>
</tr><tr>
<td valign="top">2B0 to 2BF</td>
<td valign="top">&nbsp;</td>
<td valign="top">3B0 to 3BF</td>
<td valign="top">LPT1</td>
</tr><tr>
<td valign="top">2C0 to 2CF</td>
<td valign="top">&nbsp;</td>
<td valign="top">3C0 to 3CF</td>
<td valign="top">EGA/VGA</td>
</tr><tr>
<td valign="top">2D0 to 2DF</td>
<td valign="top">&nbsp;</td>
<td valign="top">3D0 to 3DF</td>
<td valign="top">CGA/MCGA (also EGA/VGA, 
 in color video modes)</td>
</tr><tr>
<td valign="top">2E0 to 2EF</td>
<td valign="top">&nbsp;</td>
<td valign="top">3E0 to 3EF</td>
<td valign="top">&nbsp;</td>
</tr><tr>
<td valign="top">2F0 to 2FF</td>
<td valign="top">COM2</td>
<td valign="top">3F0 to 3FF</td>
<td valign="top">Floppy-disk controller; COM1</td>
</tr></table></p>

<A NAME="116"><h3>Base Memory Address</h3></A>
<p>The <i>base memory address</i> identifies a location in a computer's memory (RAM). The
NIC uses this location as a buffer area to store the incoming and outgoing data frames. This
setting is sometimes called the RAM start address.</p>


<p>
<div class="note"><blockquote><b>NOTE</b> <hr>
A <i>data frame</i> is a packet of information transmitted as a unit on
a network. Often, the base memory address for a NIC is D8000. (For some NICs, the final
&quot;0&quot; is dropped from the base memory address&#8212;for example, D8000 would become
D800.) When configuring a NIC, you must select a base memory address that is not already being
used by another device. 
</blockquote></div></p>

<p><div class="note"><blockquote><b>NOTE</b><HR>
NICs that do not use system RAM do not have a setting for the base memory
address. Some NICs contain a setting that allows you to specify the amount of memory to be set
aside for storing data frames. For example, for some cards you can specify either 16 KB or 32
KB of memory. Specifying more memory provides better network performance but leaves less memory
available for other uses.
</blockquote></div>
</p>

<A NAME="117"><h3>Selecting the Transceiver</h3></A>
<p>The NIC can have other settings that need to be defined during configuration. For爀xample,
some cards come with one external and one on-board transceiver. Figure 2.27 shows a NIC with
both on-board and external transceivers. In this case, you would have to decide which
transceiver to use and then make the appropriate choice on your card.</p>

<p>Making the choice on the card is usually done with jumpers. <i>Jumpers</i> are small
connectors that tie two pins together to determine which circuits the card will use.</p>


<p>
<img src="images/F02xx27.JPG" width=354 height=378 border="0">
</p><p>
<!--caption--><b>Figure 2.27</b> <i>Network interface card showing external and on-board transceivers</i><!--/caption-->
</p>


<A NAME="118"><h2>NIC, Bus, and Cable Compatibility</h2></A>
<p>To ensure compatibility between the computer and the network, the NIC must:</p>

<ul>
<p><li> Fit with the computer's internal structure (data bus architecture).</li></p>

<p><li> Have the right type of cable connector for the cabling.</li></p>
</ul>

<p>For example, a card that would work in an Apple computer communicating in a bus network will
not work in an IBM computer in a ring environment: The IBM ring requires cards that are
physically different from those used in a bus; and Apple uses a different network communication
method.</p>

<A NAME="119"><h3>Data Bus Architecture</h3></A>
<p>In the personal computer environment, there are four types of computer bus architectures:
ISA, EISA, Micro Channel, and PCI. Each type of bus is physically different from the others. It
is essential that the NIC and the bus match. Figure 2.28 shows examples of each type of
computer bus.</p>

<p><b>Industry Standard Architecture (ISA)</b></p>

<p>ISA is the architecture used in the IBM PC, XT, and AT computers, as well as in all their
clones. It allows various adapters to be added to the system by means of plug-in cards that are
inserted in expansion slots. ISA was expanded from an 8-bit path to a 16-bit path in 1984 when
IBM introduced the IBM PC/AT computer. ISA refers to the expansion slot itself (an 8-bit slot
or a 16-bit slot). The 8-bit slots are shorter than the 16-bit slots that actually consist of
two slots, one behind the other. An 8-bit card could fit into a 16-bit slot, but a 16-bit card
could not fit into an 8-bit slot.</p>

<p>ISA was the standard personal-computer architecture until Compaq and several other companies
developed the EISA bus.</p>

<p><b>Extended Industry Standard Architecture (EISA)</b></p>

<p>This is the bus standard introduced in 1988 by a consortium of nine computer-industry
companies: AST Research, Compaq, Epson, Hewlett-Packard, NEC, Olivetti, Tandy, Wyse Technology,
and Zenith.</p>

<p>EISA offers a 32-bit data path and maintains compatibility with ISA, while providing for
additional features introduced by IBM in its Micro Channel Architecture bus.</p>

<p><b>Micro Channel Architecture</b></p>

<p>IBM introduced this standard in 1988 at the time it released its PS/2 computer. Micro
Channel Architecture is electrically and physically incompatible with the ISA bus. Unlike the
ISA bus, the Micro Channel functions as either a 16-bit or a
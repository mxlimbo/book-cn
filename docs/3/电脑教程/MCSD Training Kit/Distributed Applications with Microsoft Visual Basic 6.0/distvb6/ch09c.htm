<HTML>
<HEAD>
<TITLE>Lesson 2: Installing and Configuring Microsoft Transaction Server</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">

</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch09b.htm", "ch09d.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>


<A NAME="348"><H1>Lesson 2: Installing and Configuring Microsoft Transaction Server</H1></A>

<P>An MTS component is a type of COM component that executes in the MTS run-time environment. MTS requires that components running in the MTS environment must be COM DLLs. Components that are implemented as executable files (.exe files) cannot execute in the MTS run-time environment. For example, if you built a Remote Automation server executable file with Visual Basic, you must rebuild it as a DLL in order to use it in an MTS environment.</P>

<P>DCOM is the standard transport for calling MTS components. When a client calls an MTS component, DCOM provides the communications infrastructure that allows clients to communicate with the MTS component located on a different computer. DCOM is installed with Windows NT version 4.0 Service Pack 3 or higher and Microsoft Windows 98 with TCP/IP installed. If you want to use Microsoft Windows 95-based clients with MTS, install DCOM for Windows 95. This lesson describes the requirements for installing MTS, and describes various configuration options. The specific procedures in this lesson are particular to the use of MTS within Microsoft Management Console in Windows NT. Some tasks may be performed differently when using MTS Explorer in Windows 95 or Windows 98.</P>

<p>
<div class="sidebar"><blockquote>
<b>After this lesson you will be able to:</b>
<ul>

<p><li> Install MTS on Windows 95, Windows 98, or Windows NT.</li></p>

<p><li> Identify the MTS installation options.</li></p>

<p><li> Describe how to configure the System Package in MTS.</li></p>

<p><li> Use the MTS add-in for Visual Basic.</li></p>

</ul>
<b>Estimated lesson time: 20 minutes</b>
</blockquote></div>
</p>

<A NAME="349"><H2>MTS System Requirements</H2></A>

<P>Before you install MTS, you must install Microsoft Windows NT 4.0, Windows 98, or Windows 95 with DCOM support on your computer. You can install MTS on your computer by using the Windows NT 4.0 Option Pack to install MTS with Internet Information Server (IIS) or other Option Pack components. The Windows NT Option Pack requires that you install Microsoft Internet Explorer 4.0, which installs DCOM. Failure to install DCOM support for Windows 95 before setting up MTS results in the following error message: </P>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>
Setup library mtssetup.dll could not be loaded or the function
MTSSetupProc could not be found.</pre>
</td></tr>
</table>
</p>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
If you want to use a Microsoft Windows 95 client with MTS, you can install DCOM support for Windows 95 from <a href="http://msdn.microsoft.com/library/sdkdoc/mts20/settingup_1k37.htm" target="_window2">http://www.microsoft.com/com/comResource.asp</a> or <a href="http://msdn.microsoft.com/library/sdkdoc/mts20/settingup_1k37.htm" target="_window2">http://www.microsoft.com/oledev</a>. In addition, DCOM support for Windows 95 is automatically installed with Microsoft Internet Explorer 4.x. If you are running Windows 98, DCOM is already supported by the operating system. When using Windows NT Server, you must install Windows NT Service Pack 3 or later. You can download Windows NT Service Pack 4 from <a href="http://www.microsoft.com/ntserver/" target="_window2">http://www.microsoft.com/ntserver/</a>.
</blockquote></div>
</p>

<P><li><B> To install MTS using the Windows NT 4.0 Option Pack: </B></li></P>


<ol>
<p><li> Run the Option Pack Setup program.</li></p>

<p>If you are not currently running Internet Explorer 4.0 or higher, you will be prompted to install Internet Explorer 4.01 before setup will continue.</p>

<p>If you are running Windows NT 4.0 SP4 or higher, you may receive warnings that the Option Pack has not been tested on SP4.</p>

<p><li> Choose <B>Custom</B> install. </li></p>

<p><li> Uncheck all Option Pack components. </li></p>

<p><li> Check the <B>Transaction</B> <B>Server</B> check box. </li></p>

<p>Checking Transaction Server will also check Microsoft Data Access components and common files. For Windows NT 4.0, it also checks Microsoft Management Console. </p>

<p><li> Click the <B>Show</B> <B>Subcomponents</B> button. </li></p>

<p><li> Verify that the <B>Transaction Server Core Components</B> option is checked, as illustrated in Figure 9.3.</li></p>

<p><li> Click <B>OK</B> and finish the setup program.</li></p>

<p>This will install MTS with only the required Option Pack components.</p>
</ol>

<P>
<A HREF="javascript:fullSize('F09xx03x.htm')"> <img src="images/F09xx03.JPG" width=404 height=310 border=0 ALT = "Click to view at full size."> </A>
</P><P>
<!--caption--><b>Figure 9.3</b> <i>Transaction Server installation options</i><!--/caption-->
</P>


<A NAME="350"><H2>Configuring Your MTS Server</H2></A>

<P>After you install MTS on Windows NT, configure your MTS server so that you can deploy and manage MTS packages using the MTS Explorer. Before you start deploying and administering packages, set your MTS server up for deployment by doing the following: </P>

<ul>
<p><li> Configure the roles and package identity on the System package.</li></p>

<p><li> Set up computers to administer.</li></p>
</ul>

<P>In addition, use the Windows NT User Manager to verify that the user account for the identities of the System package and other MTS packages have the Windows NT &quot;Log on as a service&quot; user right. Use the User Manager for Domains administrative tool in Windows NT Server to verify rights for a user account.</P>

<A NAME="351"><H3>Configuring Roles on the System Package</H3></A>

<P>The System package includes components that cannot be modified. MTS uses these components for internal functions. You must map the System package Administrator role to the appropriate user in order to safely deploy and manage MTS packages. When MTS is installed, the System package does not have any users mapped to the administrator role. Therefore, security on the System package is disabled, and any user can use the MTS Explorer to modify package configuration on that computer. If you map users to System package roles, MTS will check roles when a user attempts to modify packages in the MTS Explorer. </P>

<P>By default, the System Package has an Administrator role and a Reader role. Users mapped to the Administrator role of the System package can use any MTS Explorer functions. Users that are mapped to the Reader role can view all objects in the MTS Explorer hierarchy but cannot install, create, change, or delete any objects, shut down server processes, or export packages. For example, if you map your Windows NT domain user name to the System Package Administrator role, you will be able to add, modify, or delete any package in the MTS Explorer. </P>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
If MTS is installed on a server whose role is a primary or backup domain controller, a user must be a domain administrator in order to manage packages in the MTS Explorer.
</blockquote></div>
</p>

<P>You can also set up new roles for the System package. For example, you can configure a Developer role that allows users to install and run packages, but not delete or export them. The Windows NT user accounts or groups that you map to that role will be able to test installation of packages on that computer without having full administrative privileges over the computer. Once you have configured roles for your computer's System package, enable authorization checking by selecting the check box in the Package Security property sheet, as illustrated in Figure 9.4.</P>

<P>
<img src="images/F09xx04.GIF" width=404 height=448 border="0">
</P><P>
<!--caption--><b>Figure 9.4</b> <i>Setting the System package to enable authorization checking</i><!--/caption-->
</P>


<A NAME="352"><H3>Using Multiple Transaction Servers</H3></A>

<P>By default, the computer on which you install MTS is managed in the MTS Explorer as &quot;My Computer&quot;. You can also use the MTS Explorer to manage other computers. You can add any new computers that you need to administer to the Computers folder in the Explorer by doing one of the following:</P>

<ul>
<p><li> Select the <B>My Computer</B> icon in the right pane, choose <B>New,</B> then choose <B>Computer</B> from the Action menu.</li></p>

<p><li> Select the <B>My Computer</B> icon in the right pane, then click the <B>Create A New Object </B>toolbar button.</li></p>

<p><li> Right-click on the <B>Computer</B> folder in the left pane, choose <B>New</B>, and then <B>Computer.</B></li></p>
</ul>

<P>In the displayed Add Computer dialog box, enter a computer name in your Windows NT domain to add the remote computer as a top-level folder. In order to access and display the MTS Explorer on a remote server, your logon account must be assigned to the Reader role. If you want full read and write privileges with the MTS Explorer on a remote server, your logon account must be mapped to the Administrator role.</P>

<A NAME="353"><H2>Configuring Your Development Computer</H2></A>

<P>In most cases, your MTS components will run on a remote Windows NT Server computer. In addition, most of your component development will be done on a workstation such as Windows 95, Windows 98, or Windows NT Workstation instead of on a server computer running MTS. In order to configure your development computer to use the MTS type libraries, you choose the Transaction Server Development option when you set up MTS, as illustrated in Figure 9.5.</P>

<P>
<A HREF="javascript:fullSize('F09xx05x.htm')"> <img src="images/F09xx05.JPG" width=404 height=310 border=0 ALT = "Click to view at full size."> </A>
</P><P>
<!--caption--><b>Figure 9.5</b> <i>Installing the MTS development files on your computer</i><!--/caption-->
</P>


<A NAME="354"><H3>Configuring Visual Basic to Use MTS</H3></A>

<P>Whenever you recompile a COM DLL (or ActiveX DLL) project in Visual Basic, Visual Basic rewrites all of the registry entries for all of the components (Visual Basic classes) that are in that DLL. Additionally, Visual Basic may generate new GUIDs (depending on your project's compatibility configuration) to identify the components in that DLL. This means that your MTS components are no longer properly registered in the <I>MTS</I> <I>catalog</I>-the MTS data store that maintains configuration information for components, packages, and roles.</P>

<P>To eliminate this problem, load the add-in named Transaction Server AddIn for VB. The Transaction Server add-in enables a feature that will automatically refresh your components after recompiling them, as illustrated in Figure 9.6.</P>

<P>
<A HREF="javascript:fullSize('F09xx06x.htm')"> <img src="images/F09xx06.JPG" width=404 height=72 border=0 ALT = "Click to view at full size."> </A>
</P><P>
<!--caption--><b>Figure 9.6</b> <i>Using the MTS add-in to refresh components after recompiling</i><!--/caption-->
</P>


<P>The next time you run Visual Basic, the Transaction Server add-in will automatically install in your Visual Basic IDE. If you decide you want to refresh all of your Microsoft Transaction Server components at any given time, you can use the Refresh All Components Now command on the Add-Ins\MS Transaction Server menu.</P>

<P>Using the Transaction Server add-in will properly refresh the MTS catalog, even after Visual Basic compilations that generate new component GUIDs. Refreshing the MTS catalog depends on you not changing the ProgIDs of your components. In Visual Basic, a component's ProgID is formed by the following concatenation: project name.class name. If you change either of these items, you will have to reinstall your component(s) in the MTS Explorer. The following is an example of a ProgID.</P>

<p>
<table cellpadding=5 width="95%"><tr><td>
<pre>Chateau.Hotel</pre>
</td></tr>
</table>
</p>


<P>When developing MTS components, you should set the project's Version Compatibility option to binary compatibility, as illustrated in Figure 9.7.</P>

<P>
<A HREF="javascript:fullSize('F09xx07x.htm')"> <img src="images/F09xx07.JPG" width=404 height=363 border=0 ALT = "Click to view at full size."> </A>
</P><P>
<!--caption--><b>Figure 9.7</b> <i>Setting the version compatibility option to Binary Compatibility</i><!--/caption-->
</P>


<P>Building your component in Visual Basic without selecting the Binary Compatibility option replaces its CLSID and IID on each compile. This has disadvantages when developing an MTS component, even with the Transaction Server add-in enabled. </P>

<ul>
<p><li> Roles you assigned to the interface using the MTS Explorer are lost, since the interface IID is obsolete. </li></p>

<p><li> Proxies and registry configurations you distributed to remote machines no longer refer to your component and must all be updated. </li></p>

<p><li> Packages you exported which contain your component require re-exporting since the package definition file GUIDs are now out of sync.</li></p>
</ul>

<A NAME="355"><H2>Lesson Summary </H2></A>

<P>An MTS component is a COM DLL that executes in the MTS run-time environment. Because MTS uses DCOM for communication between components, DCOM support for Windows 95 must be installed on Windows 95 clients. DCOM is already supported by the Windows 98 operating system. When using Windows NT, you must install Windows NT Service Pack 3 or later to ensure DCOM support. In MTS, packages are used to store components. MTS contains a system package that contains components for internal functions. Components in the system package cannot be modified. You must map the System package Administrator role to the appropriate user in order to safely deploy and manage MTS packages. </P>

<P>In most cases, your MTS components will run on a remote Windows NT Server computer. In addition, most of your component development will be done on a workstation such as Windows 95, Windows 98, or Windows NT Workstation instead of on a server computer running MTS. In order to configure your development computer to use the MTS type libraries, you should choose the Transaction Server Development option when you set up MTS. In addition to installing the MTS libraries, you should also make sure that you load the Transaction Server add-in. This will ensure that components are properly registered in the MTS catalog. The MTS catalog is a data store that maintains configuration information for components, packages, and roles. When developing MTS components with Visual Basic, you should also make sure that the Binary Compatibility option is set for the project. This will ensure the CLSIDs and IIDs for the component will maintain compatibility on each compile.</P>

</BODY>
</HTML>




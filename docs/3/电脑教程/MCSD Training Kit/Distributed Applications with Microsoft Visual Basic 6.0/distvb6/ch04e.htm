<HTML>
<HEAD>
<TITLE>Lab: Advanced COM Programming with Visual Basic </TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">

</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch04d.htm", "ch04f.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>


<A NAME="189"><H1>Lab: Advanced COM Programming with Visual Basic </H1></A>

<P>In this lab, you will create an employee payroll COM component for the Chateau St. Mark Hotel. You will use the techniques that you learned in Lesson 1 to create a custom COM interface for the classes in this component.</P>

<P>
<img src="images/video.gif" width=78 height=54 border="0">
</P>

<P>To see a demonstration of this lab, run the Lab04.exe animation located in the Animations folder on the Supplemental Course Material CD-ROM that accompanies this book.</P>


<p><b>Estimated lesson time: 60 minutes</b></p>


<A NAME="190"><H2>Exercise 1: Creating the IEmployee Interface</H2></A>

<P>In this exercise you will create a custom interface called IEmployee that will be used by public creatable classes as a way to provide polymorphism.</P>

<P><li><B> To create a new project</B></li></P>
<ol>
<p><li> Start Visual Basic and create a new <B>ActiveX DLL</B> project.</li></p>

<p><li> Name the project <B>PayRoll </B>and the class module <B>CManager.</B></li></p>

<p><li> Add two class modules to the PayRoll project, named <B>CSupervisor</B> and <B>CHourly</B>.</li></p>
</ol>

<P><li><B> To create the IEmployee interface</B></li></P>

<ol>
<p><li> Add a class module to the <B>PayRoll</B> project.</li></p>

<p><li> Set the <B>Name</B> property of the new class to <B>IEmployee</B> and the <B>Instancing</B> property to <B>PublicNotCreatable.</B></li></p>

<p><li> In the <B>IEmployee</B> class module, create the following <B>Public</B> <B>Properties</B>:</li></p>

<ul>
<p><li> EmpName (String)</li></p>

<p><li> Wage (Variant)</li></p>

<p><li> Hours (Variant)</li></p>
</ul>

<p><li> In the <B>IEmployee</B> class module, create a public function<B> </B>procedure named <B>PaySalary </B>with an optional argument named <B>Hours </B>and <B>Wage</B> with a <B>Single</B> return value. Your finished <B>IEmployee</B> resulting code should be the following:</li></p>

<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>Public Property Let EmpName(ByVal vData As String)
End Property

Public Property Get EmpName() As String
End Property

Public Function PaySalary(Optional Hours As Single, _
    Optional Wage As Single) As Single
End Function

Public Property Get Wage() As Variant
End Property

Public Property Let Wage(ByVal vNewValue As Variant)
End Property

Public Property Get Hours() As Variant
End Property

Public Property Let Hours(ByVal vNewValue As Variant)
End Property</PRE>
</TD></TR></TABLE>
</P>

<p><li> Save your application.</li></p>
</ol>

<A NAME="191"><H2>Exercise 2: Implementing the IEmployee Interface</H2></A>

<P>In this exercise you will implement the IEmployee interface in the CManager, CSupervisor and CHourly class modules. The CHourly class will contain a different implementation of the PaySalary method.</P>

<P><li><B> To implement the IEmployee interface.</B></li></P>

<ol>
<p><li> In the <B>CManager</B>, <B>CSupervisor</B> and <B>CHourly </B>class modules specify that the <B>IEmployees </B>interface will be implemented by declaring the following:</li></p>

<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>Implements IEmployee</PRE>
</TD></TR></TABLE>
</P>

<p><li>In the <B>CManager, CSupervisor</B> and <B>CHourly</B> class modules implement the <B>IEmployee</B> interface.</li></p>

<p>Use the Implements keyword in the class's General Declarations section and implement each method and property procedure defined in the IEmployee interface. For example:</p>

<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>Private Property Get IEmployee_EmpName() As String
     IEmployee_EmpName = strName
End Property</PRE>
</TD></TR></TABLE>
</P>

<p><li> In the <B>CHourly</B> class module, add the following implementation of the <B>IEmployees_PaySalary</B> method:</li></p>

<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>Private Function IEmployee_PaySalary(Optional Hours As Single, _
        Optional Wage As Single) As Single
     If Hours &lt;= 40 Then
        ' The employee didn't work any over time
        IEmployee_PaySalary = Hours * 10
     Else
        ' Calculate the hourly employee overtime
        IEmployee_PaySalary = (40 * 10) + ((Hours - 40) * 15)
     End If
End Function</PRE>
</TD></TR></TABLE>
</P>

<p><li> In the <B>CManager</B>,and <B>CSupervisor </B>class modules, add the following implementation of the <B>IEmployees_PaySalary</B> method:</li></p>

<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>Private Function IEmployee_PaySalary(Optional Hours As Single, _
        Optional Wage As Single) As Single
     ' CurWage is the Private variable declared within this module
     IEmployee_PaySalary = CurWage
End Function</PRE>
</TD></TR></TABLE>
</P>

<p><li> The following are the properties implemented in CManager, CSupervisor, and CHourly:</li></p>

<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>Implements IEmployee
Private strName As String
Private CurWage As Currency
Private sngHours As Single

Private Property Let IEmployee_EmpName(ByVal RHS As String)
     strName = RHS
End Property

Private Property Get IEmployee_EmpName() As String
     IEmployee_EmpName = strName
End Property

Private Property Let IEmployee_Hours(ByVal RHS As Variant)
     sngHours = RHS
End Property

Private Property Get IEmployee_Hours() As Variant
     IEmployee_Hours = sngHours
End Property

Private Property Let IEmployee_Wage(ByVal RHS As Variant)
     CurWage = RHS
End Property

Private Property Get IEmployee_Wage() As Variant
     IEmployee_Wage = CurWage
End Property</PRE>
</TD></TR></TABLE>
</P>

<p><li> Save your application.</li></p>
</ol>

<A NAME="192"><H2>Exercise 3: Testing the PayRoll Component</H2></A>

<P>In this exercise you will add a Standard EXE project to the ActiveX DLL project. You will create a reference to the PayRoll component and develop a client application to test the component. The client application you will create will look like Figure 4.17.</P>

<P>
<img src="images/F04xx17.GIF" width=320 height=160 border="0">
</P><P>
<!--caption--><b>Figure 4.17</b> <i>The client application to test the PayRoll component</i><!--/caption-->
</P>


<P><li><B> To create the client application</B></li></P>

<ol>
<p><li> Add a <B>Standard EXE </B>project to your project group.</li></p>

<p><li> Set the project Name property to <B>TestInterface</B>. </li></p>

<p><li> Right-click on the TestInterface project in the Project Group window and choose <B>Set as Start Up</B>.</li></p>

<p><li> Set the Form1's Name property to <B>frmEmployee</B> and set the Caption property to <B>Employees</B>.</li></p>

<p><li> Add the following controls to frmEmployee, set the specified properties, and position them as shown in this table:</li></p>
<P>
<table cellpadding=5 width="95%">
<tr>
<th>Control</th>
<th>Property</th>
<th>Value</th>
</tr>
<tr>
<TD VALIGN="TOP">Text1</TD>
<TD VALIGN="TOP">Name</TD>
<TD VALIGN="TOP">txtEmpName</TD></TR>
<TR>
<TD VALIGN="TOP"> </TD>
<TD VALIGN="TOP">Text</TD>
<TD VALIGN="TOP">&lt;blank&gt;</TD></TR>
<TR>
<TD VALIGN="TOP">Text2</TD>
<TD VALIGN="TOP">Name</TD>
<TD VALIGN="TOP">txtWage</TD></TR>
<TR>
<TD VALIGN="TOP"> </TD>
<TD VALIGN="TOP">Text</TD>
<TD VALIGN="TOP">&lt;blank&gt;</TD></TR>
<TR>
<TD VALIGN="TOP">Text3</TD>
<TD VALIGN="TOP">Name</TD>
<TD VALIGN="TOP">txtHours</TD></TR>
<TR>
<TD VALIGN="TOP"> </TD>
<TD VALIGN="TOP">Text</TD>
<TD VALIGN="TOP">&lt;blank&gt;</TD></TR>
<TR>
<TD VALIGN="TOP">Label1</TD>
<TD VALIGN="TOP">Caption</TD>
<TD VALIGN="TOP">Employee Name:</TD></TR>
<TR>
<TD VALIGN="TOP">Label2</TD>
<TD VALIGN="TOP">Caption</TD>
<TD VALIGN="TOP">Wage:</TD></TR>
<TR>
<TD VALIGN="TOP">Label3</TD>
<TD VALIGN="TOP">Caption</TD>
<TD VALIGN="TOP">Hours:</TD></TR>
<TR>
<TD VALIGN="TOP">Frame1</TD>
<TD VALIGN="TOP">Name</TD>
<TD VALIGN="TOP">grpEmpType</TD></TR>
<TR>
<TD VALIGN="TOP"> </TD>
<TD VALIGN="TOP">Caption</TD>
<TD VALIGN="TOP">Employee type:</TD></TR>
<TR>
<TD VALIGN="TOP">Option1</TD>
<TD VALIGN="TOP">Name</TD>
<TD VALIGN="TOP">optEmpType</TD></TR>
<TR>
<TD VALIGN="TOP"> </TD>
<TD VALIGN="TOP">Caption</TD>
<TD VALIGN="TOP">Manager</TD></TR>
<TR>
<TD VALIGN="TOP"> </TD>
<TD VALIGN="TOP">Index</TD>
<TD VALIGN="TOP">0</TD></TR>
<TR>
<TD VALIGN="TOP">Option2</TD>
<TD VALIGN="TOP">Name</TD>
<TD VALIGN="TOP">optEmpType</TD></TR>
<TR>
<TD VALIGN="TOP"> </TD>
<TD VALIGN="TOP">Caption</TD>
<TD VALIGN="TOP">Supervisor</TD></TR>
<TR>
<TD VALIGN="TOP"> </TD>
<TD VALIGN="TOP">Index</TD>
<TD VALIGN="TOP">1</TD></TR>
<TR>
<TD VALIGN="TOP">Option3</TD>
<TD VALIGN="TOP">Name</TD>
<TD VALIGN="TOP">optEmpType</TD></TR>
<TR>
<TD VALIGN="TOP"> </TD>
<TD VALIGN="TOP">Caption</TD>
<TD VALIGN="TOP">Hourly</TD></TR>
<TR>
<TD VALIGN="TOP"> </TD>
<TD VALIGN="TOP">Index</TD>
<TD VALIGN="TOP">2</TD></TR>
<TR>
<TD VALIGN="TOP">Command1</TD>
<TD VALIGN="TOP">Name</TD>
<TD VALIGN="TOP">cmdAddEmp</TD></TR>
<TR>
<TD VALIGN="TOP"> </TD>
<TD VALIGN="TOP">Caption</TD>
<TD VALIGN="TOP">&amp;Add Employee</TD></TR>
<TR>
<TD VALIGN="TOP">Command2</TD>
<TD VALIGN="TOP">Name</TD>
<TD VALIGN="TOP">cmdListEmployees</TD></TR>
<TR>
<TD VALIGN="TOP"> </TD>
<TD VALIGN="TOP">Caption</TD>
<TD VALIGN="TOP">&amp;List Employees</TD></TR></TABLE></P>

<p><li> Save your application.</li></p>
</ol>

<P><li><B> To test the PayRoll component</B></li></P>
<ol>
<p><li> Create a reference to your <B>PayRoll</B> component by choosing References from the Project menu and checking <B>PayRoll</B> in the References dialog box.</li></p>

<p><li> In the <B>frmEmployee</B> form add the following form level variables:</li></p>

<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>Private Employees As Collection
Private CurrEmp As IEmployee</PRE>
</TD></TR></TABLE>
</P>

<p>These variables will hold the collection of employees and their properties and track the current employee as you loop throught the collection.</p>

<p><li>Add the following code to the <B>optEmpType_Click</B> event:</li></p>

<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>Private Sub optEmpType_Click(Index As Integer)
     Select Case Index
        Case 0 ' Manager
            Set CurrEmp = New CManager
        Case 1 ' Supervisor
            Set CurrEmp = New CSupervisor
        Case 2 ' Hourly
            Set CurrEmp = New CHourly
     End Select
End Sub</PRE>
</TD></TR></TABLE>
</P>

<p>When the user clicks on the OptionButton group the CurrEmp variable will be created and defined.</p>

<p><li> Add the following code to the <B>Form_Load</B> event:</li></p>

<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>Private Sub Form_Load()
     ' Create a new collection obect
     Set Employees = New Collection
End Sub</PRE>
</TD></TR></TABLE>
</P>

<p><li> Add the following code to the <B>cmdAddEmp_Click</B> event:</li></p>

<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>Private Sub cmdAddEmp_Click()
     CurrEmp.EmpName = txtEmpName.Text
     CurrEmp.Wage = Val(txtWage.Text)
     If TypeOf CurrEmp Is CHourly Then
         CurrEmp.Hours = txtHours.Text
         CurrEmp.Wage = txtWage.Text
     End If
     Employees.Add CurrEmp
     txtEmpName.Text = &quot;&quot;
     txtWage = &quot;&quot;
     txtHours = &quot;&quot;
End Sub</PRE>
</TD></TR></TABLE>
</P>

<p><li> Add the following code to the <B>cmdListEmployees</B>:</li></p>

<P><table cellpadding=5 width="95%"><TR><TD>
<PRE>Private Sub cmdListEmployees_Click()
     Dim emp As IEmployee
     For Each emp In Employees
         If TypeOf emp Is CHourly Then
              MsgBox emp.EmpName &amp; &quot; salary: &quot; &amp;  _
                   emp.PaySalary(emp.Hours, emp.Wage)
         Else
              MsgBox emp.EmpName &amp; &quot; salary: &quot; &amp; emp.PaySalary
         End If
     Next emp
End Sub</PRE>
</TD></TR></TABLE>
</P>

<p><li> Save the application.</li></p>

<p><li> Test the application by running it, entering the following values into <B>frmEmployees</B>, and clicking <B>Add Employee</B> after each new record:</li></p>
<P>
<table cellpadding=5 width="95%">
<tr>
<th>Record</th>
<th>Control</th>
<th>Value</th></tr>
<TR>
<TD VALIGN="TOP">1</TD>
<TD VALIGN="TOP">Employee Name</TD>
<TD VALIGN="TOP">David Simpson</TD></TR>
<TR>
<TD VALIGN="TOP"> </TD>
<TD VALIGN="TOP">Wage</TD>
<TD VALIGN="TOP">30000</TD></TR>
<TR>
<TD VALIGN="TOP"> </TD>
<TD VALIGN="TOP">Hours</TD>
<TD VALIGN="TOP">&lt;blank&gt;</TD></TR>
<TR>
<TD VALIGN="TOP"> </TD>
<TD VALIGN="TOP">Employee Type</TD>
<TD VALIGN="TOP">Manager</TD></TR>
<TR>
<TD VALIGN="TOP"> </TD>
<TD VALIGN="TOP">Add Employee</TD>
<TD VALIGN="TOP">&lt;click Add Employee button&gt;</TD></TR>
<TR>
<TD VALIGN="TOP">2</TD>
<TD VALIGN="TOP">Employee Name</TD>
<TD VALIGN="TOP">James Smith</TD></TR>
<TR>
<TD VALIGN="TOP"> </TD>
<TD VALIGN="TOP">Wage</TD>
<TD VALIGN="TOP">25000</TD></TR>
<TR>
<TD VALIGN="TOP"> </TD>
<TD VALIGN="TOP">Hours</TD>
<TD VALIGN="TOP">&lt;blank&gt;</TD></TR>
<TR>
<TD VALIGN="TOP"> </TD>
<TD VALIGN="TOP">Employee Type</TD>
<TD VALIGN="TOP">Supervisor</TD></TR>
<TR>
<TD VALIGN="TOP"> </TD>
<TD VALIGN="TOP">Add Employee</TD>
<TD VALIGN="TOP">&lt;click Add Employee button&gt;</TD></TR>
<TR>
<TD VALIGN="TOP">3</TD>
<TD VALIGN="TOP">Employee Name</TD>
<TD VALIGN="TOP">Carol Poland</TD></TR>
<TR>
<TD VALIGN="TOP"> </TD>
<TD VALIGN="TOP">Wage</TD>
<TD VALIGN="TOP">10</TD></TR>
<TR>
<TD VALIGN="TOP"> </TD>
<TD VALIGN="TOP">Hours</TD>
<TD VALIGN="TOP">45</TD></TR>
<TR>
<TD VALIGN="TOP"> </TD>
<TD VALIGN="TOP">Employee Type</TD>
<TD VALIGN="TOP">Hourly</TD></TR>
<TR>
<TD VALIGN="TOP"> </TD>
<TD VALIGN="TOP">Add Employee</TD>
<TD VALIGN="TOP">&lt;click Add Employee button&gt;</TD></TR></TABLE></P>

<p><li> Click the <B>List Employees</B> button to display the salary for each employee.</li></p>
</ol>

</BODY>
</HTML>




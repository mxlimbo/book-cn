<HTML>
<HEAD>
<TITLE>Case for Project Review</title>
<link rel="STYLESHEET" type="text/css" href="library.css">


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch14a.htm", "ch14c.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="667"><H1>Case for Project Review</H1></A>

<p>In an article titled &quot;Escaping the IT Abyss,&quot; Dempsey et
al. tell us the role in which project reviews play in the most
effective IT organizations:</p>

<blockquote><i>Reviewing overall IT performance helps you to distill
lessons that will help you do better next time. Most companies claim to
perform reviews, but few do so effectively. They may complain that they
can't review big projects properly because &quot;Most of the
original people are gone or have moved on to different efforts,&quot;
as one CIO told us, or because &quot;The scope of the project has
changed many times over the years,&quot; as another explained. Both
these objections can be addressed if projects are kept short, given
clear objectives, required to produce regular deliverables, and
monitored continuously.</i> 

<p><i>In the best IT companies, business people drive the projects and are
on the hook for the results. Hard benefits are budgeted for, and
results are measured at every stage. Post-implementation review is
easier, since all the milestone results are available to help managers
weigh outcomes against objectives. Lessons learned are built into
subsequent projects.</i></p>
</blockquote>

<p>As the quoted passage above implies, only by examining the past can
organizations adequately prepare for the future. For example, an
individual interviewing for a job claims to have twenty years of
experience in a particular field. Following the interview, one of the
interviewers asks the candidate if the individual indeed has twenty
years of experience, or only one year of experience twenty times. If
organizations do not contemplate and learn from both successes and
failures, progress will be slow, or even non-existent.</p>

<p>An initial post-project review, or <i>postmortem,</i> is recommended
as a starting point for the entire project review process. A project
review as a whole is a post-milestone review meeting that formalizes
the process of learning from past experience. A thorough project review should carefully analyze the
project to identify strengths and weaknesses of the each development
phases. Post-project reviews begin the process of incorporating best
practices into an organization's development process so that the
project team learns to identify and confront potential risks in future
projects.</p>

<A NAME="668"><H3>Benefits of Project Reviews</H3></A>

<p>Numerous benefits, both individual and corporate, arise from
conducting project reviews. As mentioned earlier, the most important
benefits are self-examination, reflection, and resulting growth through
the incorporation of best practices. These benefits ideally occur for
both the individual and the organization. Additional benefits of
project reviews are that they:</p>

<ul>
<p><li> <b>Provide project closure</b> Closure is important if team
members have spent time and energy on the completed project, and will
begin another project immediately. Project closure is particularly
important if the project team will soon dissolve. Official project
closure will also help the team members to move on to something
new.</li></p>

<p><li> <b>Provide a final outlet for team communication</b> A project
review can be cathartic for team members who have strong feelings about
particular aspects of a project. If not expressed in a controlled
manner and setting, team members may express such feelings later in
less desirable circumstances, places, or means. In sharing their
thoughts, team members should focus on the team's actions rather
than on the individuals; furthermore, such a communication outlet
should <i>never</i> be used to place blame or point fingers at any
individuals or groups.</li></p>

<p><li> <b>Address the team's morale</b> Project reviews may actually
enhance team morale by allowing teammates to share positive as well as
negative feelings, and also to offer praise throughout the team.
Traditionally, software development has often been somewhat of a
solitary effort; the software development team approach addressed in
this book lends itself to shared responsibilities as well as shared
praise for a successful project.</li></p>

<p><li> <b>Set best-practice baselines</b> Future teams may also benefit
from project reviews by accessing the current team's perception of
the project's strengths and weaknesses. Such perceptions can
provide the basis for creating best-practice baselines for software
development within an organization. Project teams should remember the
framework concept, which suggests that organizations must modify their
practices to find the best methods and executions for their particular
projects. In the early stages of developing a best-practice baseline, a
good exercise for all development team members is simply to read
project reviews from their organization's previous projects. To
simplify access, these baselines should be gathered into a single
location, often referred to as a best-practice guide or process
library.</li></p>

<p><li> <b>Establish feedback loops</b> All the project review output can
be combined into a best-practice baseline and should be used as <i>
input</i> for subsequent projects. Organizations should apply project
review insights to improve future projects. Such a feedback loop marks an organization as
being dedicated to improvement. Feedback loops are key features of the
Capability Maturity Model for Software.</li></p>
</ul>



<A NAME="669"><H2>Capability Maturity Models</H2></A>

<p>Dr. Joyce Statz of TeraQuest provided the Capability Maturity Model
for 
Software information upon which this section is based. Since the
mid-1980s, Carnegie Mellon University has provided several studies and
models that describe organizations' progressions from
&quot;infancy&quot; to &quot;maturity.&quot; The Capability Maturity
Model (CMM) for Software is one of several such models. CMMs support
evolving capability for developing software, managing people, acquiring
software, personal software process, and systems engineering. Many of
these models share common features, although content and intended
audiences vary.</p>

<p>Each model provides a structured view of its focus area, generally
in a five-layer progression of increasingly sophisticated practices.
Most CMMs intend to incrementally improve an organization's overall
capability. Each layer of the CMM provides a baseline for improvement
in established practices, as well as a basis for the next layer of
mature practices. The CMM for Software comprises five layers, which are
described in Table 14.1.</p>

<p><b>Table 14.1</b> <i>Five levels of CMM for Software</i></p>

<p>
<table cellpadding=5 width="95%">
<tr> 
<th>Level  </th>
<th>Focus  </th>
<th>Key process areas  </th></tr>
<tr>
<td valign="top"><b>5: Optimizing</b>  </td>
<td valign="top">Continuous process improvement  </td>
<td valign="top">Defect prevention<br> Technology change management<br> Process change management  </td></tr>
<tr>
<td valign="top"><b>4: Managed</b>  </td>
<td valign="top">Product and process quality  </td>
<td valign="top">Quantitative process management<br> Software quality management  </td></tr>
<tr>
<td valign="top"><b>3: Defined</b>  </td>
<td valign="top">Defined engineering process  </td>
<td valign="top">Organizational process focus<br> Organizational process definition<br> Integrated software management<br> Software product engineering<br> Inter-group coordination<br> Training program <br> Peer reviews  </td></tr>
<tr>
<td valign="top"><b>2: Repeatable</b>  </td>
<td valign="top">Project management and commitment process </td>
<td valign="top">Requirements management<br> Project planning<br> Project tracking and oversight<br> Software subcontract management <br> Software quality assurance <br> Software configuration management  </td></tr>
<tr>
<td valign="top"><b>1: Initial</b>  </td>
<td valign="top">Heroes  </td>
<td valign="top">Extraordinary effort  </td></tr>
</table></p>

<p>A complete discussion of the CMM is outside the scope of this book.
Nevertheless, it is worthwhile to note that the Microsoft Solutions
Framework is an excellent guide for organizations in following the
progress from the initial stages of Level 1 to the higher maturity
levels. For additional information on the CMM for Software, please
refer to Mark C. Paulk, Charles V. Weber, Bill Curtis, and Mary Beth
Chrissis' <i>The Capability Maturity Model: Guidelines for
Improving the Software Process</i> (Addison-Wesley, 1995).</p>

<p>Our purpose in briefly discussing the CMM is to demonstrate the
importance of project reviews in evolving an organization to a more
efficient CMM maturity level. One characteristic of a CMM Level 1
organization is reinventing processes for each project. By conducting
project reviews and implementing the reviews' results as standard
practices, such an organization can avoid this inefficient, but common,
problem.</p>

<p>Two key challenges for CMM Level 2 organizations are accurate
project planning and effective project tracking. Using project reviews
to compare plans with actual events and timelines enables such a team
to hone its estimating and tracking skills. Over time, this
organization can create an increasingly realistic sense of time and
resources that project tasks require. Without a project review, it is
likely that this team will repeatedly overestimate or underestimate
project 
schedules and resources.</p>

<p>In the white paper <i>Microsoft Solutions Framework and the
Capability Maturity Model,</i> Dr. Statz points out that project
reviews are critical to reaching Level 3, as noted below:</p>

<blockquote><i>Although most Level 2 organizational discipline is seen at
a project level, members of an individual project can usually find good
practices that could be useful in another project. Leveraging those
best practices across the organization and defining processes that can
be tailored to each project is the heart of Level 3 of the CMM.</i> 

<p><i>Project teams generally accumulate a rich process history as they
complete their project. They should keep this data in a repository for
use by other project teams on future projects. The organization will
develop an appreciation for common processes and advisors who can help
tailor those processes. </i></p>
</blockquote>

<p>At Levels 4 and 5, the fundamental purpose of the project review is
to facilitate the feedback loop. As the team identifies problems, it
can change its processes to eliminate or mitigate such problems in
future projects.</p>

<p>The CMM for Software provides a solid measure of a development
organization's effectiveness and maturity. The project review is a
key tool in organizations' efforts to improve development processes
and progress to more efficient levels of software development
maturity.</p>

</BODY>
</HTML>



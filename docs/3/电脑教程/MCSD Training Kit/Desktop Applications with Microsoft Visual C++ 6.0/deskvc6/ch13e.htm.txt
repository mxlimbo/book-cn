<HTML>
<HEAD>
<TITLE>Lesson 4: Using the Integrated Debugger</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">

</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch13d.htm", "ch13f.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="492"><H1>Lesson 4: Using the Integrated Debugger</H1></A>

<p>Armed with the general overview of debugging provided in <a href="ch13d.htm#487">Lesson 3</a>, you are now ready
to use the Visual C++ debugger. As you will see, the debugger greatly facilitates the
debugging process and can help you find nearly any bug you are likely to encounter in
Windows software development.</p>

<p>
<div class="sidebar"><blockquote>
<b>After this lesson, you will be able to:</b>
<ul>
<p><li> Use the Visual C++ integrated debugger and understand the extensive information
presented in the debugger windows.</li></p>
<p><li> Monitor a running program and set breakpoints to interrupt the program.</li></p>
<p><li> Single-step through a program.</li></p>
<p><li> Use the debugger's <b>Edit and Continue</b> feature to correct code on the
fly while debugging.</li></p>
<p><li> Debug COM-based programs and components.</li></p>
<p><li> Use the Test Container utility to monitor ActiveX controls.</li></p>
</ul>
<b>Estimated lesson time: 40 minutes</b>
</blockquote></div>
</p>


<A NAME="493"><H2>Breakpoints</H2></A>

<p>The debugger does not interrupt the program being debugged. Rather, the program
interrupts itself when it locates a marker set in the text editor. The marker is called
a <i>breakpoint</i>. As the program executes, the debugger sleeps. It regains control
when the executing program triggers a breakpoint.</p>

<p>The debugger recognizes two different types of breakpoints, one based on location in
the code, and the other based on program data. A
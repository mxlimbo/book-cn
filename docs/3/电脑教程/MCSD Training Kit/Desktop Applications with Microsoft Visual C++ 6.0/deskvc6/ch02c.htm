<HTML>
<HEAD>
<TITLE>Lesson 2: Exploring the Development Environment</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">

</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch02b.htm", "ch02d.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="71"><H1>Lesson 2: Exploring the Development Environment</H1></A>

<p>Microsoft Visual Studio 6.0 provides developers a rich, visual environment, known as
the <i>integrated development environment</i> (IDE). A common IDE is shared by Visual
C++, Microsoft Visual J++, and Microsoft Visual InterDev, and it can host projects
created with these tools as well as other types of files.</p>

<p>In this lesson, you will examine some of the features of the Visual C++ development
environment typically used in the course of developing applications.</p>

<p><div class="sidebar"><blockquote>
<b>After this lesson, you will be able to:</b>

<ul>
<p><li>Understand the elements of the Visual C++ user interface, including its windows,
menus, and toolbars, and how they can be configured and customized.</li></p>

<p><li>Get help from within the development environment.</li></p>

<p><li>Change the project configuration settings.</li></p>

<p><li>Build the MyApp project.</li></p>
</ul>

<b>Estimated lesson time: 30 minutes</b>
</blockquote></div>
</p>

<A NAME="72"><H2>Visual C++ User Interface</H2></A>

<p>Figure 2.11 shows the MyApp project workspace as it was at the end of Lesson 1. It
is divided into two main areas: the workspace window and the edit window.</p>

<p>
<A HREF="javascript:fullSize('f02DA11x.htm')"> <img src="images/f02DA11.jpg" width=404 height=303 border=0 ALT="Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 2.11</b> <i>Features of the Visual C++ user interface</i><!-- /caption -->
</p>

<p>The <i>workspace</i> window uses hierarchical tree controls to display a graphical
view of the objects in your workspace. As you saw in Lesson 1, the projects in the
workspace form the root items of this hierarchy. The workspace window offers three
different views of the contents of your project, which are accessed by the three tabs
along the bottom of the window:</p>

<ul>
<p><li><b>ClassView</b> Presents an object-oriented view in terms of the C++ classes,
their data members, and their member functions. Double-clicking any of these objects
will take you directly to their definition or implementation in the source code.</li></p>

<p><li><b>ResourceView</b> Displays resource objects grouped by category.
Double-clicking any object will load the appropriate editor.</li></p>

<p><li><b>FileView</b> Shows all the editable files in your project.</li></p>
</ul>

<p>Right-clicking an object in any of the views will bring up a shortcut menu with a
set of object-related options.</p>

<p>The <i>edit</i> window is the area in which you work on open files, either with the
program editor or one of the resource editors. If you would like more space while
editing, click the <b>Full Screen</b> command on the <b>View</b> menu.</p>

<A NAME="73"><H2>Menus and Toolbars</H2></A>

<p>The Visual C++ development environment provides you with a complete set of menus
that enable you to manage files and project workspaces, configure the environment, and
access the help system, source control, and other external tools. Most of the menus
have corresponding toolbars that allow you to select options with a single button
click. Toolbars in Visual C++ are fully configurable. You can specify which toolbars
are displayed and which buttons are included on a toolbar. This means that you can
configure your environment so that your most commonly used options are easily
accessible.</p>

<p>A new installation of Visual C++ shows the three most commonly used toolbars. The
<b>Standard</b> toolbar, which contains the most frequently used commands for working
with files; the <b>Build</b> MiniBar, which contains the most frequently used commands
for building and running applications; and the <b>WizardBar</b>, which provides
commands for working with classes.</p>

<p>Right-clicking an empty area of any of the toolbars or the main window frame will
show you a list of available toolbars and will allow you to toggle their display status
on or off.</p>

<p>The following exercises will demonstrate how you can customize your user interface
and will provide you with a means to turn a full-screen edit window on or off with a
single mouse click or keystroke.</p>

<p><li><b>To add a toolbar button to a toolbar</b></li></p>

<ol>

<p><li>From the <b>Tools</b> menu, choose <b>Customize</b>. The <b>Customize</b> dialog
box appears.</li></p>

<p><li>Click the <b>Commands</b> tab.</li></p>

<p><li>In the <b>Category</b> list, click <b>View</b>.</li></p>

<p><li>Click the <b>Full Screen</b> icon (the third from the left in the top row of
icons), and note that a description of the command appears below the <b>Category</b>
drop-down list. The dialog box should now look like the one shown in Figure 2.12.</li></p>

<p>
<A HREF="javascript:fullSize('f02DA12x.htm')"> <img src="images/f02DA12.jpg" width=404 height=277 border=0 ALT="Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 2.12</b> <i>The <b>Commands</b> tag of the <b>Customize</b> dialog box</i><!-- /caption -->
</p>

<p><li>Drag the <b>Full Screen</b> icon onto your Standard toolbar.</li></p>

<p><li>Close the <b>Customize</b> dialog box.</li></p>

<p><li>Open a program source file by double-clicking a file in FileView.</li></p>

<p><li>Test your new button by clicking it to show the source file in full-screen mode.
When you want to switch back from full-screen, click the button again.</li></p>
</ol>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
While the <b>Customize</b> dialog box is open, you can delete
buttons from toolbars by right-clicking them and choosing <b>Delete</b> from the
shortcut menu. You can also delete buttons by simply dragging them off the toolbar you
want to remove them from and dropping them anywhere but on another
toolbar.</blockquote></div>
</p>

<p><li><b>To assign a shortcut key</b></li></p>

<ol>

<p><li>On the <b>Tools</b> menu, click <b>Customize</b>. The <b>Customize</b> dialog
box appears.</li></p>

<p><li>Click the <b>Keyboard</b> tab.</li></p>

<p><li>In the <b>Category</b> list, click <b>View</b>.</li></p>

<p><li>In the <b>Commands</b> box, click <b>ToggleFullScreen</b>. Note that a
description of the command appears below the <b>Category</b> drop-down list.</li></p>

<p><li>Click in the <b>Press new shortcut key</b> edit control, and then press PAUSE on
your keyboard.</li></p>

<p><li>Click <b>Assign</b>. The dialog box should now appear as it is shown in Figure
2.13.</li></p>

<p>
<A HREF="javascript:fullSize('f02DA13x.htm')"> <img src="images/f02DA13.jpg" width=404 height=277 border=0 ALT="Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 2.13</b> <i>Assigning a shortcut key</i><!-- /caption -->
</p>

<p><li>Close the <b>Customize</b> dialog box.</li></p>

<p><li>Test the effect of pressing PAUSE. Your edit window should switch back and forth
between window mode and full-screen mode.</li></p>
</ol>

<A NAME="74"><H2>Setting Environment Options</H2></A>

<p>Display the <b>Options</b> dialog box (Figure 2.14) by clicking <b>Options</b> on
the <b>Tools</b> menu. This tabbed page allows you to configure the design environment
options for your installation of Visual C++. These options affect the appearance and
behavior of the integrated tools that make up the development environment and apply to
all projects and configurations of project settings.</p>

<p>
<A HREF="javascript:fullSize('f02DA14x.htm')"> <img src="images/f02DA14.jpg" width=404 height=309 border=0 ALT="Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 2.14</b> <i>The <b>Options</b> dialog box</i><!-- /caption -->
</p>

<p>The <b>Options</b> dialog box can be used to configure:</p>

<ul>
<p><li>Aspects of the code editor, from basics such as window settings and save options,
to advanced features such as automatic code completion and colored syntax highlighting.
The editor can even be configured to emulate other popular editors such as BRIEF.</li></p>

<p><li>The information displayed by the debugger.</li></p>

<p><li>Options for integrated source control.</li></p>

<p><li>The directory paths to search when loading executable files and when looking for
source files, include files, and library files.</li></p>
</ul>

<A NAME="75"><H2>Getting Help</H2></A>

<p>Visual Studio 6.0 ships with its own release of the Microsoft Developer Network
(MSDN) library. This is an essential reference for developers, containing more than a
gigabyte of technical programming information, including documentation, technical
articles, sample code, the Microsoft Knowledge Base, and anything else you might need
to develop solutions using Microsoft technology.</p>

<p>The MSDN library runs in its own HTML-based environment, complete with a fast,
intelligent search engine. It is integrated with the Visual C++ development environment
so that context-sensitive help is always available from within the Text editor (and
from the output windows) simply by pressing F1.</p>

<p>Microsoft has provided further assistance in the form of context-sensitive Automatic
Statement Completion. This feature, also known as IntelliSense, puts the MFC, Win32,
and ATL libraries at your fingertips by displaying class members, function prototypes,
identifier declarations, and code comments at the insertion point while you're
editing your code. IntelliSense instantly shows all the available options. IntelliSense
also optionally completes recognized words for you, saving you from continually having
to type lengthy class or member names.</p>

<A NAME="76"><H2>Project Configuration Settings</H2></A>

<p>Display the <b>Project Settings</b> dialog box, shown in Figure 2.15, 
by clicking <b>Settings</b> on the <b>Project</b> menu. This dialog box is used
to configure a wide range of options for the project, including options for compilers
and the linker used by Visual C++.</p>

<p>
<A HREF="javascript:fullSize('f02DA15x.htm')"> <img src="images/f02DA15.jpg" width=404 height=260 border=0 ALT="Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 2.15</b> <i>The <b>Project Settings</b> dialog box</i><!-- /caption -->
</p>

<p>Changes made to any settings on any of the tabbed pages apply only to the currently
selected project and the build version specified in the <b>Settings For</b> list. Each
build type of each project has its own combination of settings. To maintain the same
settings for all build versions of a project, select <b>All Configurations</b> in the
<b>Settings For</b> list. When changing project settings, be careful to check the build
version you are modifying. It is easy to apply settings to the wrong build version if
you aren't careful.</p>

<p><li><b>To alter project settings</b></li></p>

<ol>

<p><li>On the <b>Project</b> menu, click <b>Settings</b>. The <b>Project Settings</b>
dialog box appears.</li></p>

<p><li>Click the <b>C/C++</b> tab.</li></p>

<p><li>In the <b>Category</b> list, click <b>C++ Language</b>.</li></p>

<p><li>In the <b>Settings For</b> box, click <b>All Configurations</b>. Note that now
only the settings common to all configurations are displayed in the <b>Common
Options</b> box on the property sheet.</li></p>

<p><li>Select <b>Enable Run-Time Type Information (RTTI)</b> to make RTTI available for
all configurations of the MyApp project. Note how the /GR compiler switch is added to
the <b>Common Options</b> box.</li></p>

<p><li>Click <b>OK</b> to close the <b>Project Settings</b> dialog box and save your
changes.</li></p>
</ol>

<p>When editing settings at the project level, the current project should be selected
in the tree view in the left pane. You can move through the project's category
folders and the individual files in the category folders. The settings available to you
on the property sheets in the dialog box will correspond to the object that you
selected in the tree. A common setting that occurs at file or folder level is the
exclusion of a particular file, or set of files, from a build.</p>

<p>The <b>Debug</b>, <b>C/C++</b>, and <b>Link</b> tabs actually contain several pages
of settings within a single page. To switch between these different groups of settings,
select one of the options from the <b>Category</b> list on each page.</p>

<p>Some of the options you can set using the <b>Project Settings</b> dialog box
are:</p>

<ul>
<p><li><b>General Settings</b> Here you can specify whether to link your executable
program with the static MFC libraries (in case you change your mind after specifying
this in Step 5 of the AppWizard). You can also specify directories for your output
files.</li></p>

<p><li><b>Debug Settings</b> Here you can pass command-line arguments to your program
when it is started in the debugger. You can also use I/O redirection as you would from
the command prompt.</li></p>

<p><li><b>C/C++ Settings</b> Here you can set general compiler settings, language
features, calling conventions, processor-dependent settings, optimizations,
preprocessor definitions, and so on.</li></p>

<p><li><b>Linker Settings</b> Here you can specify additional libraries to link to
your executable program.</li></p>
</ul>

<A NAME="77"><H2>Building a Project</H2></A>

<p>Now that you have a better understanding of the working environment, you are
going to build the MyApp application from the project you created in <a href="ch02b.htm#65">Lesson 1.</a></p>

<p><li><b>To build MyApp.exe</b></li></p>

<ol>

<p><li>On the <b>Build</b> menu, click <b>Set Active Configuration</b>. Ensure that 
<b>MyApp&#8212;Win32 Debug</b> is selected and click <b>OK</b>.</li></p>
</ol>

<p>
<div class="tip"><blockquote>
<b>TIP</b><hr>When you are working with multiple projects and configurations, consider
using the full <b>Build</b> toolbar rather than the <b>Build</b> MiniBar. The 
<b>Build</b> toolbar contains drop-down list box controls that allow you to switch between
projects or configurations quickly and easily. These controls also remind you which
project or configuration you are currently working on.</blockquote></div>
</p>

<ol>
<p><li value="2"> On the <b>Build</b> menu, click <b>Build MyApp.exe</b></li></p>

<p>or</p>

<p>On the <b>Build</b> MiniBar (shown in Figure 2.16), click <b>Build</b></p>

<p>or</p>

<p>Press F7.</p>

<p>
<img src="images/f02DA16.jpg" width=149 height=73>
</p><p>
<!-- caption --><b>Figure 2.16</b> <i>The <b>Build</b> button on the <b>Build</b> Minibar</i><!-- /caption -->
</p>
</ol>

<p>The program will compile and link, and the MyApp.exe file will be generated in the
Debug directory.</p>

<p><li><b>To test your program</b></li></p>

<ol>
<p><li>On the <b>Build</b> menu, click <b>Execute MyApp.exe</b></li></p>

<p>or</p>

<p>On the <b>Build</b> MiniBar, click the <b>Execute Program</b> button (the red
exclamation mark that is two buttons to the right of the <b>Build</b> button)</p>

<p>or</p>

<p>Press CTRL+F5.</p>

<p>Notice that the <i>output</i> <i>window</i> appears at the bottom of the screen. The
output window contains a number of views that are accessible by clicking the tabs
at the bottom. The appropriate view is generally displayed automatically according to
what kind of output is being generated by the environment. As the build process runs,
the <b>Build</b> tab displays messages from the compiler and linker.</p>

<p><li>Once the build process has completed, test the functionality that has been
provided for free by the AppWizard. On the <b>File</b> menu, click <b>Open</b> to see
how a standard file dialog box is opened for you. You will need to implement File Open
and Save routines yourself.</li></p>

<p><li>On the <b>File</b> menu, click <b>Print Preview</b> and see how the Print
Preview architecture is already in place. Code that you add to display output in your
application main window will also display in this Print Preview window, formatted as it
would appear on printed pages.</li></p>

<p><li>Click <b>Close</b> to close the Print Preview window, and choose <b>Exit</b>
from the <b>File</b> menu to close the MyApp application.</li></p>
</ol>

<A NAME="78"><H2>Lesson Summary</H2></A>

<p>Visual Studio 6.0 provides a rich, visual environment for developers, known as the
integrated development environment<i>,</i> or IDE.</p>

<p>A new installation of Visual C++ will arrange a project for you. Along with the
menus and toolbars, the user interface is organized into three main areas: the
workspace window, the edit window, and the output window. The workspace window offers
three different views of the contents of your project. ClassView presents an
object-oriented view in terms of the C++ classes, their data members, and their member
functions. ResourceView displays resource objects grouped by category. FileView
presents a view of all the editable files in your project.</p>

<p>Visual C++ provides a wide range of toolbars that you can hide, show, and configure
according to your needs. You can configure toolbars using the <b>Customize</b> command
on the <b>Tools</b> menu.</p>

<p>Visual C++ provides a fully configurable environment. You can configure the
environmental options for your installation of Visual C++ using the <b>Options</b>
command on the <b>Tools</b> menu.</p>

<p>Visual Studio 6.0 ships with its own release of the MSDN library, an essential
reference for developers.</p>

<p>Visual C++ provides a central location for configuring project settings. You can use
the <b>Project Settings</b> dialog box to configure the options for the compilers and
the linker used by Visual C++. You can specify any number of different configurations
of project settings.</p>

</BODY>
</HTML>








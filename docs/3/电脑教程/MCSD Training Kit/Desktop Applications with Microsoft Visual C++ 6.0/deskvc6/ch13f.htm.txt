<HTML>
<HEAD>
<TITLE>Lesson 5: Using the Dependency Walker</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">

</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch13e.htm", "ch13g.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="512"><H1>Lesson 5: Using the Dependency Walker</H1></A>

<p>Visual C++ provides other utilities in addition to the debugger that can help you
look inside an application or DLL module. In this lesson, you will learn how to use the
Dependency Walker utility, sometimes referred to by its file name Depends.exe.</p>

<p>
<div class="sidebar"><blockquote>
<b>After this lesson, you will be able to:</b>
<ul>
<p><li> Explain why Windows programs depend on other modules to run.</li></p>
<p><li> Execute the Dependency Walker utility to examine a program's
dependencies.</li></p>
</ul>
<b>Estimated lesson time: 15 minutes</b>
</blockquote></div>
</p>

<A NAME="513"><H2>What Is a Dependency?</H2></A>

<p>A Windows program is not as self-sufficient as it might appear on the surface. Even
the simplest &quot;Hello, world&quot; program requires the presence of several DLLs
provided by the system, such as Kernel32 and GDI32. Because the elementary MyApp
program (seen in examples throughout this book) links to MFC, the program depends on the help of other module files, such as MFC42.dll. In turn, MFC
cannot run without other files, such as the CçˆŽun-time library MSVCRT.dll. This string
of required modules must all be present and available to the operat-ing system before a
program can execute. Together, they form a program's <i>dependencies</i>.</p>

<p>Each executing Windows module, whether application or DLL, keeps a list of
its dependencies in a header area within the executable file. When the operating system
loads a module, it reads the list of dependencies and loads each required module. Only
when all dependencies are loaded does the original program run.</p>

<A NAME="514"><H2>Dependency Information</H2></A>

<p>Ordinarily, a program's dependencies are invisible to users. A dependency
usually makes itself known to users only when it is missing. In that case, Windows
displays a message explaining that the requested program cannot run because a required
file cannot be found.</p>

<p>The Dependency Walker utility reads the dependency list in a program's header and
displays information about each dependency. The results are illustrated in Figure
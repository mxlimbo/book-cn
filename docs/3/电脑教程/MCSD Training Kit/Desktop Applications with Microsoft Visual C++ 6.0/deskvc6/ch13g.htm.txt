<HTML>
<HEAD>
<TITLE>Lesson 6: Using Spy++</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">

</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch13f.htm", "ch13h.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="516"><H1>Lesson 6: Using Spy++</H1></A>

<p>In this lesson, you will learn how to use Spy++, another Visual C++ utility. This
useful, popular utility can display information about all current processes, their
threads, and all open windows&#8212;even hidden windows.</p>

<p>
<div class="sidebar"><blockquote>
<b>After this lesson, you will be able to:</b>


<ul>
<p><li> Execute the Spy++ utility and use it to display a graphical tree of relationships
among system objects, including processes, threads, and windows.</li></p>

<p><li> Use Spy++ to search for specified windows, threads, processes, or messages.</li></p>

<p><li> View the properties of selected windows, threads, and processes.</li></p>

<p><li> Use the Spy++ Finder tool to select a window for monitoring.</li></p>

<p><li> View a real-time record of messages that a window sends and receives.</li></p>
</ul>


<b>Estimated lesson time: 15 minutes</b>
</blockquote></div>
</p>


<A NAME="517"><H2>Spy++ Views</H2></A>

<p>Start Spy++ the same way as you would the Dependency Walker, by selecting it from
the <b>Microsoft Visual Studio 6.0 Tools</b> menu. The utility displays four main
views:</p>

<ul>
<p><li> <b>Windows view</b> shows a list of open windows.</li></p>

<p><li> <b>Processes view</b> lists current processes.</li></p>

<p><li> <b>Threads view</b> lists all current threads.</li></p>

<p><li> <b>Message log</b> lists the messages that a window receives.</li></p>
</ul>


<p>These four views are activated by commands in the <b>Spy</b> menu, or by the first
four buttons on the toolbar. Each time a command is invoked, it creates a view as a new
child window, so the tool buttons do not toggle between existing views. Instead, you
should create a view only once, and thereafter switch between views by making a
selection in the <b>Window</b> menu. Like the Dependency Walker, Spy++ is an MDI
program, so you can tile views within the client area.</p>

<p>Figure
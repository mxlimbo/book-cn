<html>
<head>
<title>About This Book</title>
<link rel="STYLESHEET" type="text/css" href="Library.css">


</head>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch00a.htm", "ch01a.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>




<A NAME="1"><H1>About This Book</H1></A>

<p>Welcome to <i>Desktop Applications with Microsoft Visual C++ 6.0 MCSD
Training Kit</i>. By completing the chapters and associated Lab exercises in
this course, you will acquire the knowledge and skills necessary to develop
solutions using Visual C++ 6.0.</p>

<p>This book addresses the objectives of the Microsoft Certified Solution
Developer (MCSD) Exam 70-016, <i>&quot;Designing and Implementing Desktop
Applications with Microsoft Visual C++ 6.0.&quot;</i> This book provides content that
supports the skills measured by the 70-016 exam. Review questions at the end of each
chapter test your knowledge of the chapter material, and help you prepare for the
exam.</p>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
For more information on becoming a Microsoft Certified Solution
Developer, see &quot;<A HREF="abouta.htm#14">Microsoft Certified Professional Program</A>&quot; later in this
section.</blockquote></div>
</p>


<A NAME="2"><H2>Intended Audience</H2></A>

<p>This course is designed for individuals interested in developing their skills in
Microsoft Visual C++ 6.0 while developing desktop applications. Topics include using
the Microsoft Solutions Framework (MSF); building applications with the Microsoft
Foundation Classes (MFC); creating user interfaces; implementing application behaviors;
and working with persistent data. Also included are adding database support to
applications; creating Component Object Model (COM) components and ActiveX controls;
using MFC and the Active Template Library (ATL); Internet programming; error handling,
debugging, and testing; and application deployment.</p>


<A NAME="3"><H2>Prerequisites</H2></A>

<p>This book assumes that you have a good working knowledge of C++ application
development and are acquainted with but not knowledgeable about Microsoft Visual C++
6.0 and the Microsoft Windows Application Programming Interface (API). Before beginning
this self-paced course, you should have:</p>

<ul>

<p><li> A thorough working knowledge of the C++ language as described by the ANSI
standard, including language features such as templates and exception handling.</li></p>

<p><li> A good understanding of the principles of object-oriented software
development.</li></p>

<p><li> A good basic understanding of the operation of a Windows application, and the
features of the Windows user interface.</li></p>

</ul>


<A NAME="4"><H2>Course Overview</H2></A>

<p>This course combines text, graphics, and review questions to teach you about
designing and implementing desktop applications with Visual C++ 6.0. The course assumes
that you will work through the book from beginning to end. However, you can choose a
customized track and complete only the sections
that interest you. If you choose to customize your course, see the &quot;Before You
Begin&quot; section in each chapter for important information regarding
prerequisites.</p>

<p>The book is divided into the following chapters:</p>

<ul>

<p><li> <b><A HREF="ch01a.htm">Chapter 1</A>, <i>Preparing for Application Development</i></b> In this chapter,
you will learn about the elements of designing a Visual C++ application using MSF
design concepts. You will study the issues that you should consider in planning your
design. You will also be given an overview of the Visualç‡™++ development tools through
a description of the installation options.</li></p>

<p><li> <b><A HREF="ch02a.htm">Chapter 2</A>, <i>Visual C++ Development Environment</i></b> This chapter discusses
the development environment and the tools that enable you to create applications using
Visual C++. You will use the MFC AppWizard to generate a development project, which
contains source code and resource files that you can compile into a working executable
program. You will explore features of the Visual C++ development environment and learn
how to configure options for your project. You will also learn how to use Microsoft
Visual SourceSafe to manage source code control for a software development team.</li></p>

<p><li> <b><A HREF="ch03a.htm">Chapter 3</A>, <i>Building Applications with the Microsoft Foundation
Classes</i></b> In this chapter, you will learn about specific MFC classes and their role in
Windows application development. You will learn how the MFC framework implements the
basic components of a Windows application, and how it provides an architecture that
enables the processing, display, and storage of the application's data.</li></p>

<p><li> <b><A HREF="ch04a.htm">Chapter 4</A>, <i>Creating the User Interface</i></b> This chapter explores some of
the elements of a typical Windows application user interface. You will edit application
menus and toolbars, and add code to handle user selections. You will update the
interface to communicate information to the user. You will also learn how dialog boxes
are used in an application, and you will use the dialog editor to create a dialog box
template.</li></p>

<p><li> <b><A HREF="ch05a.htm">Chapter 5</A>, <i>Implementing Application Behaviors</i></b> This chapter discusses
some of the MFC programming techniques that you can use to implement the operational
behavior of an application. You will learn how to make use of dialog box classes, and
also how to take advantage of the multithreading
capabilities of the Win32 platform. You will learn more about the techniques used
to display application data to an on-screen window or a printer. You will also
implement Help for an MFC application.</li></p>

<p><li> <b><A HREF="ch06a.htm">Chapter 6</A>, <i>Persistent Data</i></b> In this chapter, you will learn ways to
make your application data and settings persistent. You will use the MFC <b>CFile</b>
class for general file input/output (I/O) operations. You will also use the
serialization facilities of the MFC framework to save and restore structured
application data. Finally, you will save individual data items, such as application
settings, in the system registry.</li></p>

<p><li> <b><A HREF="ch07a.htm">Chapter 7</A>, <i>Adding Database Support</i></b> In this chapter, you will learn
about a variety of data access interfaces available to Visual C++ application
developers. These interfaces include features of MFC that provide support for data
access and ActiveX Data Objects (ADO), Microsoft's standard interface to
essentially all forms of external data.</li></p>

<p><li> <b><A HREF="ch08a.htm">Chapter 8</A>, <i>Introducing the Component Object Model</i></b> This chapter
provides a conceptual introduction to COM. COM is a binary standard that
defines a way for software objects, developed in different languages or operating
on different platforms, to communicate with each other and with other applications.
Also included in this introduction are ActiveX controls. ActiveX controls are COM
components designed for placement in an ActiveX control container, such as an 
application dialog box or a Web page, to perform a self-contained function.</li></p>

<p><li> <b><A HREF="ch09a.htm">Chapter 9</A>, <i>Creating COM Components</i></b> In this chapter, you will
create a simple COM component using the ActiveX Template Library (ATL). You will
review aspects of the source code generated for your COM object
by the ATL wizards, and learn about other approaches to generating COM
components.</li></p>

<p><li> <b><A HREF="ch10a.htm">Chapter 10</A>, <i>COM Clients</i></b> This chapter explains how applications and
components can act as clients of COM server components by making use of the services
that the component provides. You will learn how the Visual C++ compiler simplifies the
creation of COM client code. You will also learntechniques for creating COM objects that 
contain instances of other COM objects.</li></p>

<p><li> <b><A HREF="ch11a.htm">Chapter 11</A>, <i>Creating ActiveX Controls</i></b> In this chapter, you will
create a simple ActiveX control using MFC, and analyze the MFC-generated code. You will
then develop the same control using the ActiveX Template Library (ATL). You will thus
be able to compare the two development methods and assess which method might be most
appropriate in a particular development scenario.</li></p>

<p><li> <b><A HREF="ch12a.htm">Chapter 12</A>, <i>Internet Programming</i></b> This chapter introduces some of the
features of Visual C++ 6.0 that allow you to create Internet-based applications. You
will learn how you can use Dynamic HTML to create application user interfaces, and how
you can add Web-browsing capabilities to your
applications and components. You will study how to develop an application that
creates ActiveX documents&#8212;documents that can be hosted by Microsoft Internet
Explorer for viewing and editing over the Web. You will also learn how to create
Internet Server API (ISAPI) DLLs that enhance the services provided by Microsoft Web
servers.</li></p>

<p><li> <b><A HREF="ch13a.htm">Chapter 13</A>, <i>Error Handling, Debugging, and Testing</i></b> In this
chapter, you will learn about the three steps that make up the second half of the software
development process: error handling, debugging, and testing. These
final steps are an essential part of the development process, and merit at least as
much attention as that given to the designing and coding phases.</li></p>

<p><li> <b><A HREF="ch14a.htm">Chapter 14</A>, <i>Deploying Desktop Applications</i></b> In this chapter, you will
learn some of the ways a Windows application created with Visual C++ can be efficiently
deployed. After presenting an overview of deployment methods, the chapter shows how to
use InstallShield, a tool that helps automate the creation of installation programs for
Visualç‡™++ projects. You will also learn how installation programs install ActiveX
controls and other COM components, and how the Microsoft Zero Administration for
Windows (ZAW) initiative will affect program installation in the future.</li></p>

</ul>


<A NAME="5"><H3>Features of This Book</H3></A>

<p>The following features are designed to enhance the usefulness of this course:</p>

<ul>

<p><li> Each chapter opens with a &quot;Before You Begin&quot; section, which provides
information about chapter prerequisites.</li></p>

<p><li> Each chapter is divided into lessons. Most lessons contain procedures that give
you an opportunity to use the concepts presented, or explore the part of the
application described in the lesson. All procedures are preceded by a bullet symbol.</li></p>

<p><li> Each lesson ends with a short Lesson Summary of the material presented.</li></p>

<p><li> The Review section at the end of the chapter lets you test what you have learned
in the lesson.</li></p>

<p><li> The <a href="chaaa.htm#583">Appendix</a>, &quot;Review Questions and Answers,&quot; contains all of the
book's review questions and corresponding answers.</li></p>

<p><li> The <a href="glossa.htm#598">Glossary</a> contains key terms and definitions used in the course.</li></p>

</ul>


<A NAME="6"><H3>Conventions Used in This Book</H3></A>

<p>Before you start reading any of the chapters, it is important that you understand
the terms and notational conventions used in this book.</p>

<p><b>Notational Conventions</b></p>

<ul>

<p><li> <i>Italic</i> is used for emphasis when defining new terms or indicating
placeholders. <i>Italic</i> is also used for references to book, chapter, and section
titles.</li></p>

<p><li> <b>Bold</b> is used to emphasize selections you make during labs and procedures
and to highlight elements such as functions, methods, and classes.</li></p>

<p><li> Names of files and folders might appear in Title Caps. Unless otherwise
indicated, you can use all lowercase letters when you type a file or folder name in a
dialog box or at a command prompt.</li></p>

<p><li> File name extensions appear in all lowercase.</li></p>

<p><li> Acronyms appear in all uppercase.</li></p>

<p><li> <font face="courier">Monospace</font> type represents code samples, examples of screen text, or entries that
you might type at a command prompt or in initialization files.</li></p>

<p><li> Square brackets [ ] are used in syntax statements to enclose optional items. For
example, [<i>filename</i>] in command syntax indicates that you can choose to type a
file name with the command. Type only the information within the brackets, not the
brackets themselves.</li></p>

</ul>

<p><b>Keyboard Conventions</b></p>

<ul>

<p><li> A plus sign (+) between two key names means that you must press those keys at the
same time. For example, &quot;Press ALT+TAB&quot; means that you hold down ALT while
you press TAB.</li></p>

<p><li> A comma (,) between two or more key names means that you must press each of the
keys consecutively, not together. For example, &quot;Press ALT, F, X&quot; means that
you press and release each key in sequence. As another example, &quot;Press ALT+W,
L&quot; means that you first press ALT and W together, and then release them and press
L.</li></p>

<p><li> You can choose menu commands with the keyboard. Press the ALT key to activate the
menu bar, and then sequentially press the keys that correspond
to the highlighted or underlined letter of the menu name and the command name. For
some commands, you can also press a key combination listed in the menu.</li></p>

<p><li> You can select or clear check boxes or option buttons in dialog boxes with the
keyboard. Press the ALT key, and then press the key that corresponds to the underlined
letter of the option name. Alternately, you can press TAB
until the option is highlighted, and then press the spacebar to select or clear the
check box or option button.</li></p>

<p><li> You can cancel the display of a dialog box by pressing the ESC key.</li></p>

</ul>


<A NAME="7"><H3>About the Companion CD</H3></A>

<p>The companion CD contains sample exam questions and the files used in the hands-on
labs and procedures in the text.</p>


<p><b>Using the Lab Files</b></p>

<p>The companion CD contains files required to perform the hands-on lab exercises. To
copy the lab files to your hard drive, run the Setup.exe program in the root directory
of the CD and follow the instructions that appear on your screen.</p>

<p>By default, the lab files are copied to the \DAVC folder. Each chapter in the book
has its own subfolder. (For example, material relating to Chapter 1 can be found in
\DAVC\Chapter1.) Each of these folders might contain the following subfolders:</p>

<p>
<img src="images/cd.gif" width=45 height=45 border="0">
</p>

<ul>
<p><li> The \Code folder contains source files and code snippets that you can use as you
complete the labs or exercises in the lessons. These files are referenced
at the top of the code listing. The icon shown above identifies the
sections of code contained on the CD. You can cut and paste these files to save
yourself some typing. (Be sure to exclude the labels.)</li></p>

<p><li> The \Data folder contains other data files that you will use in the course of
developing and testing the lab exercises.</li></p>

<p><li> The \Exercises folder contains files related to the exercises in the
lessons.</li></p>

<p><li> The \Lab folder contains project files for the labs that appear at the end of
each chapter. Most \Lab folders will have the following subfolders:</li></p>

<ul>

<p><li> The \Partial folder contains the application as it looks at the beginning of each
lab.</li></p>

<p><li> The \Solution folder contains a completed version of the lab solution. This
project has had each step applied and can be used to review the completed lab.</li></p>

</ul>
</ul>

<p>The recommended procedure is to follow the labs in numerical order. Save your work
and use it in the next lab to continue developing the example application.
If you do not complete a lab, you can start the next lab using the project in the
\DAVC\Chapter <i>n</i>\Lab\Partial folder, which will allow you to proceed from the
appropriate starting point.</p>

<p>You should check your work against the project in the \DAVC\Chapter <i>
n</i>\Lab\Solution folder after you complete each lab.</p>

<p>Beneath the \DAVC folder is the \Database folder, which contains files that you use
to set up the database used by the labs.</p>

<p><b>Self Test Software Visual C++ 6.0 Sample Exam</b></p>

<p>To practice taking a certification exam, you can install the sample exam from Self
Test Software (STS) contained on the companion CD. Designed in accordance with the
actual Microsoft certification exam, this sample includes
questions to help you assess your understanding of the materials presented in this
book. Each question includes feedback with an associated course reference so that 
you can review the material presented. Visit the STS Web site at <i>
<A HREF="http://www.selftestsoftware.com" TARGET="_window2">www.selftestsoftware.com</A></i> for a complete list of available practice exams.</p>

<p>The Self Test Software demonstration for Exam 70-016 is located in the \Exam folder.
To install the sample exam on your hard drive, run the Mp016.exe program in this folder
and follow the instructions that appear on your screen.</p>

<p><b>Microsoft Visual C++ 6.0 Starts Here</b></p>

<p>This companion CD also contains the <i>Microsoft Visual C++ 6.0 Starts Here</i>
product to help you become more familiar with Visual C++ 6.0. It is located in the
\MVC6SH folder (on the companion CD). For installation instructions, refer
to the Readme.txt file.</p>

<p><b>SQL Server 7.0 Trial Edition</b></p>

<p>On a separate CD, you will find a 120-day limited trial edition of Microsoft SQL
Server 7.0 that you can install to enable you to complete the labs. Please refer to the
&quot;<A HREF="abouta.htm#8">Getting Started</A>&quot; section for information on how to install SQL Server and
how to set up the databases that are used by the labs in this courseware.</p>

<A NAME="8"><H2>Getting Started</H2></A>

<p>To complete the exercises in this book, your computer must meet the following
hardware and software requirements.</p>

<A NAME="9"><H3>Hardware Requirements</H3></A>

<p>All hardware should be on the Microsoft Windows Hardware Compatibility List located
at <i><A HREF="http://www.microsoft.com/hcl" TARGET="_window2">www.microsoft.com/hcl</A></i>.</p>

<p>
	<table cellpadding=5 width="95%">

		<tr>
			<td valign="top">Computer/Processor</td>
			<td valign="top">Personal computer with a Pentium-class processor;
166-megahertz (MHz) or higher processor recommended</td>
		</tr>

		<tr>
			<td valign="top">Memory</td>
			<td valign="top"> 24 megabytes (MB) of RAM for Microsoft Windows 95
 or later (32 MB recommended); 32 MB for Microsoft
 Windows NT 4.0 (64 MB recommended)</td>
		</tr>

		<tr>
			<td valign="top">Hard Disk Space</td>
			<td valign="top">Visual C++: 300 MB typical; 360 MB maximum</td>
		</tr>

		<tr>
			<td valign="top">Microsoft Developer Network (MSDN)</td>
			<td valign="top">57 MB typical; 493 MB maximum</td>
		</tr>

		<tr>
			<td valign="top">Internet Explorer (IE)</td>
			<td valign="top">43 MB typical; 59 MB maximum</td>
		</tr>
		
		<tr>
			<td valign="top">Windows NT 4.0 Option Pack</td>
			<td valign="top">40 MB for Windows 95 or later;<br> 
200 MB for Windows NT 4.0</td>
		</tr>

		<tr>
			<td valign="top">SQL Server 7.0</td>
			<td valign="top">170 MB typical; 266 MB maximum</td>
		</tr>

		<tr>
			<td valign="top">Drive</td>
			<td valign="top">CD-ROM drive</td>
		</tr>

		<tr>
			<td valign="top">Display</td>
			<td valign="top">VGA or higher-resolution monitor; Super VGA recommended</td>
		</tr>

		<tr>
			<td valign="top">Operating System</td>
			<td valign="top">Windows 95; Microsoft Windows 98; Windowsç‡¦T
 Workstation 4.0 with Service Pack 4 or later; Windows
 NT Server 4.0 with Service Pack 4 or later</td>
		</tr>
		
		<tr>
			<td valign="top">Peripheral/Miscellaneous</td>
			<td valign="top">Microsoft Mouse or compatible pointing device</td>
		</tr>

	</table>
</p>


<A NAME="10"><H3>Software Requirements</H3></A>

<p>The following software is required to complete the exercises in this course:</p>

<ul>

<p><li> Visual C++ 6.0, Professional or Enterprise Edition</li></p>

<p><li> Visual SourceSafe</li></p>

<p><li> Windows NT 4.0 Option Pack including Microsoft Internet Information Server or
Microsoft Personal Web Server</li></p>

<p><li> SQL Server 7.0 (trial version included with this courseware)</li></p>

<p><li> Internet Explorer 4.01 with Serviceç‡©ack
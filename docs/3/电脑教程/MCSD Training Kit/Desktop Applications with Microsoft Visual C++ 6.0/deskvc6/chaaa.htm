<html>
<head>
<title>Appendix -- Review Questions and Answers</title>
<link rel="STYLESHEET" type="text/css" href="Library.css">


</head>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch14h.htm", "glossa.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>


<A NAME="583"><H1>Appendix -- Review Questions and Answers </H1></A>

<A NAME="584"><H3>Chapter 1 Review Questions</H3></A>

<ol>
<p><li> What is MSF?</li></p>

<p><b>MSF is a collection of models, principles, and practices that helps organizations
become more effective in their creation and use of technology to solve business
problems.</b></p>

<p><li> Which models are most directly related to the development of business&#8211;oriented
software solutions?</li></p>

<p><b>Most directly related to the development of business-oriented software solutions
are the Team Model, Process Model, Application Model, and Design Process Model.</b></p>

<p><li> What is the main focus of the logical design perspective?</li></p>

<p><b>The logical design perspective views the solution from the perspective of the
project team.</b></p>

<p><li> How might a client/server application implement the three tiers of an application?</li></p>

<p><b>A client/server application might implement the three tiers of an application by integrating the business rules into either the data source tier (a thin client/fat server model) or into the client tier (a fat client/thin server
model).</b></p>

<p><li> What are some of the benefits that MFC offers to developers?</li></p>

<p><b>Some such benefits include the ability for developers to quickly and easily generate applications, libraries, and software components. MFC enables rapid
development in all aspects of Windows programming including user interface, Internet,
component technology, and database access development&#8212;all without sacrificing
programming freedom and flexibility. In addition, MFC provides the AppWizard, a
step-by-step visual tool that allows developers to quickly and easily generate frameworks to set
up a basic application structure, and to generate code to implement fundamental
application behaviors.</b></p>

<p><li> You are writing an MFC application that will allow your network administrator to
manage user accounts on an NT network. Which libraries should you install?</li></p>

<p><b>You should install the MFC libraries for Unicode (either shared or static,
according to how the application will be distributed). Internal strings used by Windows
NT, such as user account names and device names, are Unicode strings, so you will need
to install the Unicode libraries if you are planning to write programs that retrieve
and manipulate these strings directly.</b></p>

<p><li> What kind of data can you access through an OLE DB provider?</li></p>

<p><b>OLE DB is capable of dealing with any type of data regardless of its format or storage method. For instance, OLE DB can access data that resides in an
Excel spreadsheet, in text files, or even on a mail server such as Exchange.</b></p>
</ol>

<A NAME="585"><H3>Chapter 2 Review Questions</H3></A>

<ol>
<p><li> What project configurations are created for you automatically by the MFC
AppWizard?</li></p>

<p><b>AppWizard automatically creates the Debug and Release configurations.</b></p>

<p><li> Where, in the AppWizard, can you configure features of the application windows?</li></p>

<p><b>You can configure features of the application windows on the </b>Window Styles<b> tab of
the </b>Advanced Options<b> dialog box in Step 4 of the AppWizard.</b></p>

<p><li> What kinds of help are available from the Visual C++ IDE?</li></p>

<p><b>The Visual C++ IDE provides help from the MSDN library, an essential reference for
developers, containing more than a gigabyte of technical programming information.</b></p>

<p><li> What can you set on the C/C++ tab of the <b>Project Settings</b> dialog
box?</li></p>

<p><b>From the C/C++ page of the </b>Project Settings<b> dialog box, you can set compiler settings and language features such as calling conventions, processor-dependent settings, optimizations, and preprocessor definitions.</b></p>

<p><li> Why might you need to use the <b>Get Latest Version</b> feature of
Visual SourceSafe?</li></p>

<p><b>You might need to use the </b>Get Latest Version<b> feature to make sure that you have the
latest version of all files in a project. You might also use the </b>Get Latest Version<b>
command to copy the current versions of the project source files to your working
folder, in case you make changes that render your code incompatible with other recently
edited modules.</b></p>

<p><li> Under what circumstances might you use the Visual SourceSafe <b>Merge</b> facility?</li></p>


<p><b>You might use the </b>Merge<b> facility to merge the changes made to different versions of the same file to recreate a single version of the file.</b></p>
</ol>

<A NAME="586"><H3>Chapter 3 Review Questions</H3></A>

<ol>
<p><li> When developing an MFC application, under what circumstances might you need to
call the Win32 API directly?</li></p>

<p><b>When developing an MFC application, you might need to call the Win32 API directly when you need to access system functionality at a fairly low
level. For example, if you were developing a utility to modify user accounts on a
network, you would be required to use the Win32 networking functions because no MFC classes that provide access to Windows NT network management functions exist.</b></p>

<p><li> What services are provided by the <b>CObject</b> class?</li></p>

<p><b>The </b>CObject class<b> provides serialization (loading and saving data objects to a
agnostic and debugging support (validations and
dumps), and compatibility with collection classes.</b></p>

<p><li> Why would you use an MFC extension DLL?</li></p>

<p><b>Because MFC extension DLLs implement reusable classes derived from existing MFC
classes, you would use an MFC extension DLL to provide an &quot;extended&quot; version
of MFC.</b></p>

<p><li> Which member function of which MFC class implements the application message
loop?</li></p>

<p><b>The </b>Run()<b> member function of the </b>CWinApp<b> MFC class implements the application
message loop.</b></p>

<p><li> What type of classes can implement message maps?</li></p>

<p><b>Classes derived from the </b>CCmdTarget<b> class can implement message maps.</b></p>

<p><li> Name four categories of Windows messages that can be handled by message
maps.</li></p>

<p><b>Four categories of Windows messages that can be handled by message maps are Windows
messages, command messages, user interface update command messages, and control
notification messages.</b></p>

<p><li> What is the function of a document template object?</li></p>

<p><b>A document template object associates a document class with a group of resources (such as menus and icons), a frame window, and a view.</b></p>

<p><li> Which MFC class encapsulates GDI drawing functions?</li></p>

<p><b>The MFC </b>CDC<b> class encapsulates GDI drawing functions.</b></p>

<p><li> How do you ensure that the client area of your application's main window
always displays an up-to-date picture of the application data?</li></p>

<p><b>To ensure that the client area of your application's main window always displays an up-to-date picture of the application data, you should call the
document's </b>UpdateAllViews()<b> member function whenever a document's data changes in a way that will affect its visual representation.</b></p>
</ol>

<A NAME="587"><H3>Chapter 4 Review Questions</H3></A>

<ol>
<p><li> Which icons should you supply for an application that meets the Windows 98/Windows NT logo requirements?</li></p>

<p><b>You must supply both standard (32x32 pixels) and small (16x16 pixels) icons for
both application and document type to meet the Windows 98/Windows NT logo
requirements.</b></p>

<p><li> How do you implement ToolTip text for your toolbar buttons?</li></p>

<p><b>To implement ToolTip text for your toolbar buttons, add the </b>\n<b> escape sequence, followed by the ToolTip text, to the end of the </b>Prompt<b> string in the </b>Toolbar Button Properties<b> dialog box.</b></p>

<p><li> How can you dynamically change the text of a menu command from within your
application code?</li></p>

<p><b>To dynamically change the text of a menu command from within your application code,
you would use the </b>SetText<b> member function of the</b> CCmdUI <b>MFC class.</b></p>

<p><li> What is the recommended way to update a status bar indicator?</li></p>

<p><b>The recommended method for updating a status bar indicator is to set up an array of
status bar indicators associated with string IDs in the application's string table.
The recommended way to update text in a status bar pane is to use an </b>ON_UPDATE_COMMAND_UI<b> entry in a message map to
associate a user-interface update handler function with an indicator's string
ID.</b></p>

<p><li> How would you make an edit control in a dialog box read-only? Why might you want
to do this?</li></p>

<p><b>To make an edit control in a dialog box read-only, select the </b>Read Only<b> check box
on the Styles tab of the </b>Edit Properties<b> dialog box. A read-only edit control can be
used to convey dynamically changing text to a user.</b></p>

<p><li> You have created a dialog box template using the dialog editor. How would you
display a modal dialog box, based on this template, in your application?</li></p>

<p><b>To display a modal dialog box based on a template created using the dialog editor,
you would first use ClassWizard to create a dialog class based on the template. You
would then create an instance of the dialog class in your code, and call the base class
method </b>CDialog::DoModal()<b> to display the dialog box.</b></p>
</ol>

<A NAME="588"><H3>Chapter 5 Review Questions</H3></A>

<ol>
<p><li> How is the <b>DoDataExchange()</b> function called? How does it determine the
direction of the data exchange?</li></p>

<p><b>The </b>DoDataExchange()<b> function is called by the CWnd::UpdateData() function. The
</b>DoDataExchange()<b> function passes data between the dialog box controls and the
application; the </b>CDataExchange<b> class member variable m_bSaveAndValidate indicates the
direction of the data exchange.</b></p>

<p><li> How do you make controls unavailable in a dialog box?</li></p>

<p><b>To make controls unavailable in a dialog box, you would use the
</b>CWnd::EnableWindow()<b> function with the argument </b>FALSE<b>.</b></p>

<p><li> Which two functions are used to specify coordinate mapping for an unconstrained
mapping mode?</li></p>

<p><b>The two functions used to specify coordinate mapping for an unconstrained mapping
mode are the CDC functions </b>SetWindowExt()<b> and </b>SetViewportExt()<b>.</b></p>

<p><li> Which function associates a drawing tool object with a device context?</li></p>

<p><b>The </b>CDC::SelectObject()<b> function associates a drawing tool object with a device context.</b></p>

<p><li> What kinds of threads must be created by using a <b>CWinThread</b> object?</li></p>

<p><b>You should always use the </b>CWinThread<b> class to create threads that use MFC
functionality, because the </b>CWinThread<b> class uses thread-local storage to manage
information specific to the thread context in the MFC environment.</b></p>

<p><li> What is the difference between a <b>CCriticalSection</b> object and a <b>
CMutex</b> object?</li></p>

<p><b>Though both objects are synchronization classes, </b>CCriticalSection<b> allows only one
thread from within the current process to access an object, while </b>CMutex<b> allows only
one thread from any process to access an object.</b></p>

<p><li> How are Help context IDs specified in a Help project file?</li></p>

<p><b>Help context IDs are stored in files with the .hm extension as part of the Help project.</b></p>

<p><li> How do you create a hyperlink in a Help project .rtf file?</li></p>

<p><b>To create a hyperlink in a Help project .rtf file, you would format the links as
double-underlined text and follow the links immediately by the link destinations
formatted as hidden text. A pound (#) footnote mark signifies the link destinations.
The footnote text contains the context name, which can either be a name internal to the
Help file, or one of the Help context IDs specified in the Help project's .hm
file.</b></p>
</ol>

<A NAME="589"><H3>Chapter 6 Review Questions</H3></A>

<ol>
<p><li> How do you open a file in text mode?</li></p>

<p><b>To open a file in text mode, create a CStdioFile object and associate it with the
text file, and then supply the </b>CFile::typeText<b> flag to the </b>Open()<b> function.</b></p>

<p><li> What kind of exception is thrown by the <b>CFile::Open()</b> function?</li></p>

<p><b>The </b>CFile::Open()<b> function throws a </b>CFileException<b>.</b></p>

<p><li> What steps are necessary to make a class serializable?</li></p>

	<ul>
	<p><li><b>Derive the class from</b> CObject <b>or a class that was derived from</b>
	CObject<b>.</b></li></p>
	
	<p><li><b>Provide a default constructor for your class.</b></li></p>
	
	<p><li> <b>Add the MFC macro</b> DECLARE_SERIAL <b>to the class definition.</b></li></p>
	
	<p><li><b>Add the</b> IMPLEMENT_SERIAL <b>macro to your class implementation file.</b></li></p>
	
	<p><li><b>Provide an override of the</b> CObject::Serialize() <b>function for your
	class.</b></li></p>
	</ul>

<p><li> What does the default implementation of the <b>SerializeElements()</b> function
do?</li></p>

<p><b>The default </b>SerializeElements()<b> implementation performs a bitwise copy of data
contained in an MFC collection to or from an archive.</b></p>

<p><li> Which registry key should be used to store application settings that are common
to all users of the computer on which the application is installed?</li></p>

<p><b>The registry key that should be used to store application settings common to all
users of the computer on which an application is installed is
</b>HKEY_LOCAL_MACHINE\SOFTWARE<b>.</b></p>

<p><li> Where do the MFC profile management classes <b>WriteProfileString()</b> and <b>
WriteProfileInt()</b> store profile settings?</li></p>

<p><b>The MFC profile management classes </b>WriteProfileString()<b> and </b>WriteProfileInt()<b> store
profile settings to the registry key specified by the </b>CWinApp::SetRegistryKey()<b>
function.</b></p>
</ol>

<A NAME="590"><H3>Chapter 7 Review Questions</H3></A>

<ol>
<p><li>How can you connect an ADO application to an ODBC data source?</li></p>

<p><b>You can connect an ADO application to an ODBC data source by using the OLE DB
provider for ODBC.</b></p>

<p><li>What is wrong with the following SQL statement?</li></p>

<p><table cellpadding=5 width="95%"><tr><td><pre>
SELECT * FROM authors WHERE au_lname LIKE M%
</pre></td></tr></table></p>

<p><b>In the code provided, single apostrophes (') need to enclose</b> M% <b>so that the code
reads</b> 'M%'<b>. Note that apostrophes are always used when the value in the</b> WHERE
<b>clause is a string value, but not used when the </b>WHERE <b>clause value is a numeral.</b></p>

<p><li> You need to open a <b>CRecordset</b> object so that you can list all the records
in a database table to the printer. What value should you supply to the first parameter
of the <b>Open()</b> function?</li></p>

<p><b>Because you need to make only a single pass through the recordset to list the
records to the printer, you should supply CRecordset::forwardonly as the first argument
to the</b> Open() <b>function. You should always use the fastest and least memory-consumptive cursor for a given task.</b></p>

<p><li> What does the <b>CRecordset::GetDefaultConnect()</b> function specify?</li></p>

<p><b>This function specifies the data source to be used by the recordset.</b></p>

<p><li> With which ADO object is the <b>Errors</b> collection associated? What does it
contain?</li></p>

<p><b>The Errors collection is associated with the</b> Connection <b>object, and contains
specific information on provider errors.</b></p>

<p><li> Which property of the ADO Data control is used to specify an SQL command to
retrieve records from the data source?</li></p>

<p><b>The</b> RecordSource <b>property specifies an SQL command to retrieve records from the data source.</b></p>
</ol>

<A NAME="591"><H3>Chapter 8 Review Questions</H3></A>

<ol>
<p><li> What is a COM interface?</li></p>

<p><b>A COM interface is a logical grouping of related methods identified by a GUID,
known as an Interface Identifier (IID).</b></p>

<p><li> What is a GUID, and what role does it play in COM?</li></p>

<p><b>A GUID, or globally unique identifier, is a 128-bit numeric identifier that is
guaranteed to be universally unique, and to remain unique until approximately 3400
A.D.</b></p>

<p><li> What are the differences among in-process, local, and remote server COM
objects?</li></p>

<p><b>In-process servers, implemented as DLLs, execute within the same process as the
object's client application. Local (or out-of-process) servers, implemented as .exe
files, reside on the same computer as the client application, but execute in a
different process. Remote servers execute on a computer remote from the clients that
they are serving.</b></p>

<p><li> How do you implement standard marshaling?</li></p>

<p><b>You implement standard marshaling by specifying your interfaces using IDL and
allowing the MIDL compiler to create marshaling code for you.</b></p>

<p><li> What is a type library, and how is it used?</li></p>

<p><b>A type library is a binary description that includes interface properties and
methods, and method arguments. Type libraries are used in situations when
high-performance development languages, such as Visual Basic 6.0, need to be able to access interface methods directly, through the
vtable. To make this possible, type libraries provide the Visual Basic client with
information on which data types are required by the interface methods.</b></p>

<p><li> What are the implications of declaring your COM object to be free-threaded?</li></p>

<p><b>COM objects that are created to support the free-threading model must be thread
safe, and must provide their own synchronization code. By removing the bottleneck that
is created by marshaling, free-threaded objects provide the highest performance and
throughput on the server side.</b></p>

<p><li> What issues must you consider when implementing an ActiveX control?</li></p>

<p><b>When implementing an ActiveX control, you must take into consideration that,
although the definition of ActiveX controls requires only that the control support the</b>
IUnknown <b>interface, different containers have different requirements. Some containers
require certain interfaces for a control to work, while others do not. If you want your
control to work with a particular container, your control must implement the interfaces
required by the container.</b></p>
</ol>

<A NAME="592"><H3>Chapter 9 Review Questions</H3></A>

<ol>
<p><li> Describe the features provided by the templated base class <b>
CComObjectRootEx</b>.</li></p>

<p><b>The templated base class</b> CComObjectRootEx <b>provides a default implementation for the IUnknown interface methods</b> QueryInterface()<b>,</b> AddRef()<b>, and</b> Release()<b>. When you derive from this class, your client can use QueryInterface() to acquire an interface pointer to any interface that your COM object supports.</b> CComObjectRootEx <b>also provides implementations of the IUnknown methods</b> AddRef() <b>and</b> Release() <b>to perform reference counting for your object.</b></p>

<p><li> Describe the features provided by the templated base class <b>
CComCoClass</b>.</li></p>

<p><b>The templated base class</b> CComCoClass <b>provides a default implementation of a class factory, which creates an instance of your server class.</b></p>

<p><li> What is a COM map and how is it used?</li></p>

<p><b>A COM map is an element of your class declaration that contains a list of the
interfaces that your COM object supports. Add an entry to the COM map by using the</b>
COM_INTERFACE_ENTRY <b>macro. Whenever a client application executes</b> QueryInterface()<b>, the object searches this map for a matching interface GUID. If a match is found, the corresponding interface pointer is returned to the client.</b></p>

<p><li> What is an object map and how is it used?</li></p>

<p><b>An object map is a table that maintains information used by the framework to
instantiate objects through a class factory, establish communication between a client
and the root object in the component, perform lifetime management of class objects, and
enter and remove object descriptions in the system registry. You can add an entry to
the object map by using the</b> OBJECT_ENTRY <b>macro.</b></p>

<p><li> How are the keywords <b>interface</b>, <b>coclass</b>, and <b>library</b> used
in IDL, and how do they relate to each other?</li></p>

<p><b>In an IDL file each COM object definition is identified by a separate</b> coclass
<b>section, and each interface definition by a separate</b> interface <b>section. The
server's type library is defined within the</b> library <b>section. The coclass
definitions that are to be exposed through the type library are nested within the</b>
library <b>definition.</b></p>
</ol>

<A NAME="593"><H3>Chapter 10 Review Questions</H3></A>

<ol>
<p><li> What kind of class represents a COM interface in C++?</li></p>

<p><b>COM interfaces are represented in C++ code by abstract classes.</b></p>

<p><li> How does a <b>_com_ptr_t</b> object help you control the lifetime of a COM
server?</li></p>

<p>A _com_ptr_t <b>object helps manage the lifetime of your COM server object by calling
the</b> IUnknown::AddRef() <b>and</b> IUnknown::Release() <b>methods of the encapsulated interface on your behalf.</b> AddRef() <b>is called automatically when</b> a _com_ptr_t <b>object is created as a copy from an existing interface pointer, and</b> Release() <b>is called automatically when a _com_ptr_t object goes out of scope.</b></p>

<p><li> What are the advantages and disadvantages of COM containment?</li></p>

<p><b>An advantage of COM containment is that the interface on the containing (outer)
object can control access to the contained (inner) object, and can control the way in
which the inner object's services are used. A disadvantage of containment is that
some overhead is incurred by the forwarding of method calls.</b></p>

<p><li>What is the purpose of the second argument to <b>CoCreateInstance()</b>?</li></p>

<p><b>When an outer object creates an aggregated inner object, it uses the second
argument of the</b> CoCreateInstance() <b>function to pass the address of its</b> IUnknown <b>pointer (the controlling unknown) to the inner object's class
factory. If this address is not NULL, the inner object knows that it is being
aggregated, and delegates IUnknown method calls from external clients to the
controlling unknown.</b>
</p>
</ol>

<A NAME="594"><H3>Chapter 11 Review Questions</H3></A>

<ol>
<p><li> How do you implement property persistence for an MFC ActiveX control?</li></p>

<p><b>To implement property persistence for an MFC ActiveX control, you use the property
exchange functions provided by MFC, which allow you to serialize properties of
different types. The names of these functions begin with the prefix</b> PX_. PX_ <b>functions are placed within the control class's</b> DoPropExchange() <b>function.</b></p>

<p><li> What is the purpose of the DDP functions, and where are they used?</li></p>

<p><b>The purpose of the DDP functions is to transfer data between property pages and
control properties. These functions are used within the</b> DoDataExchange() <b>function of
the property page class.</b></p>

<p><li> What is a connection point?</li></p>

<p><b>A connection point is an interface that helps to manage the connection of source
interfaces to a corresponding client object, or sink. Through the connection point
mechanism, a pointer to the sink interface is passed to the source object. This pointer
provides the source with access to the sink's implementation of its interface
methods.</b></p>

<p><li> How does an object derived from <b>CComControl</b> handle Windows messages?</li></p>

<p><b>A</b> CComControl-class <b>object handles Windows messages by implementing a message
map.</b></p>

<p><li> What situations are best suited to using MFC to implement your ActiveX
control?</li></p>

<p><b>MFC greatly simplifies the process of creating an ActiveX control. Using the MFC</b>
ActiveX ControlWizard<b>, you can quickly and easily create a fully featured ActiveX
control. ActiveX controls written in ATL are smaller than their MFC counterparts, and
if written properly will perform better. Use MFC where ease and speed of development
are more important to you than the size and performance of the control.</b></p>
</ol>

<A NAME="595"><H3>Chapter 12 Review Questions</H3></A>

<ol>
<p><li> What is the preferred method of creating a Web browser&#8211;style application?</li></p>

<p><b>The preferred method of creating a Web browser&#8211;style application is using the MFC AppWizard, and specifying</b> CHtmlView <b>as the view class.</b></p>

<p><li> In an ATL HTML control, how do you define methods to be accessible to the HTML
source code of the document displayed by the control?</li></p>

<p><b>In an ATL HTML control, you define methods to be accessible to the HTML source code
of the document displayed by the control by adding the methods to the UI dispatch
interface that is created for your ATL HTML control project. This UI dispatch interface
is used to communicate between the C++ code and the HTML UI. Script in the HTML page
displayed by your control can access properties and methods defined for this interface
via the DHTML</b> window.external <b>object.</b></p>

<p><li> How does the Microsoft Scriptlet Component handle scriptlet custom events?</li></p>

<p><b>The Scriptlet Component routes all custom scriptlet events through a single event
named</b> onscriptletevent<b>. This event is fired with two parameters. The first parameter
specifies the name of the event; the second parameter can be used to pass data associated with the event.</b></p>

<p><li> How can you save changes to ActiveX documents deployed on a Web server?</li></p>

<p><b>You can save changes you make to an ActiveX document by using the</b> Save As <b>option from the</b> File <b>menu to create a new version on your own hard disk. An ActiveX document server won't let you save any changes you make to the document back to the Internet host.</b></p>

<p><li> How do you specify which menu commands of the ActiveX server application are
displayed by an ActiveX document container when it loads an ActiveX document?</li></p>

<p><b>When an ActiveX document container loads an ActiveX document, it displays the menu
commands defined on the</b> IDR_SRVR_INPLACE <b>menu of the ActiveX document server. Edit the</b> IDR_SRVR_INPLACE <b>menu (and toolbar) to make the appropriate items appear.</b></p>

<p><li> How do you specify the default function for an ISAPI server extension?</li></p>

<p><b>Specify the default function for an ISAPI server extension by using the</b>
DEFAULT_PARSE COMMAND <b>macro in the</b> PARSE MAP <b>of your ISAPI extension class.</b></p>

<p><li> How do ISAPI server extensions and ISAPI filters differ in the way they are
loaded?</li></p>

<p><b>Though both ISAPI server extensions and filters are implemented as DLLs, ISAPI
server extension DLLs are loaded into the IIS process when a client first requests
them, and stay loaded until the WWW service is stopped. ISAPI filters are loaded when
the WWW service is started.</b></p>
</ol>

<A NAME="596"><H3>Chapter 13 Review Questions</H3></A>

<ol>
<p><li> What is Structured Exception Handling?</li></p>

<p><b>Structured Exception Handling is a service of the Windows operating system
responsible for locating and calling handler code in an application when an error
occurs. The application encloses code within a</b> __try <b>block and identifies its error handler code by placing it within an</b> __except <b>block.</b></p>

<p><li> What is an HRESULT?</li></p>

<p><b>In COM programming, an HRESULT is a defined type for a 32-bit-long integer
containing an error code. COM components such as ActiveX controls export functions (or
methods) that return HRESULT codes. An HRESULT integer contains bit fields that specify
severity, facility, and a code descriptor. HRESULTs are signed integers; zero or a
positive value indicates success, whereas a negative HRESULT indicates failure and
usually causes an exception to occur.</b></p>

<p><li> Name two ways in which a COM server communicates an error to a client.</li></p>

<p><b>A COM server can indicate an error has occurred by returning an HRESULT code or by
firing the</b> Error <b>event.</b></p>

<p><li> How does a debug version of a program differ from its release build?</li></p>

<p><b>Debug and release builds differ in two main characteristics. First, a program's
debug build contains symbol information placed in the object code by the compiler,
whereas the release code does not. Second, code in a debug build is not optimized,
ensuring that the generated object code closely matches the original source code.
Release code is almost always optimized.</b></p>

<p><li> Describe MFC's <b>ASSERT</b>, <b>VERIFY</b>, and <b>DEBUG_NEW</b>
macros.</li></p>

<p>ASSERT <b>and</b> VERIFY <b>are very similar, differing in only one respect. Both macros take an expression as a parameter and cause an exception if the expression evaluates to
FALSE. The only difference is that</b> ASSERT <b>does nothing in release builds, whereas</b> VERIFY <b>works in both debug and release code.</b></p>

<p>DEBUG_NEW <b>replaces calls to the</b> new <b>operator, performing the same service but also recording the file name and line number where each new statement occurs. This can help
locate the cause of memory leaks resulting from a failure to match a new statement with
a</b> delete <b>statement.</b></p>

<p><li> How does a debugger cause a running program to interrupt itself?</li></p>

<p><b>You can place debug breakpoints at designated locations in the program. When the
program you are debugging encounters a breakpoint, execution freezes and the debugger
gains control. Two types of breakpoints exist: location and data. Visual C++ also
provides conditional and message breakpoints, but these are simply special cases of
location breakpoints.</b></p>

<p><li> What utility does Visual C++ provide for running and testing ActiveX controls?</li></p>

<p><b>Visual C++ provides the ActiveX Control Test Container, a generalpurpose container program that can embed any ActiveX control. The Test Container
can call methods, set and read properties, activate the control's property sheet, and monitor events.</b></p>

<p><li> What is a dependency?</li></p>

<p><b>A dependency is an executable module, usually a DLL or an ActiveX control, that an
application requires to execute. Dependencies can themselves have dependencies, forming
a hierarchy of modules. For example, an MFC application might make no direct use of the
C run-time library; nevertheless, the application is dependent on the library because
MFC itself requires the C run-time library.</b></p>

<p><li> What information is contained in the four lists that Spy++ can display?</li></p>

<p><b>Spy++ can display views of current windows, processes, and threads. It can also
display a log of messages that a window sends or receives.</b></p>

<p><li> What is regression testing?</li></p>

<p><b>In regression testing, an application is re-submitted to the same battery of tests
it has already gone through. Regression testing is applied after changes are made to an
application, and ensures that the changes do not introduce new bugs or unexpected
behavior.</b></p>
</ol>

<A NAME="597"><H3>Chapter 14 Review Questions</H3></A>

<ol>
<p><li> What are the two stages of deployment?</li></p>

<p><b>The first stage of deployment is the transfer of all necessary files to the
user's hard disk. The second stage involves configuring the host system so that it
recognizes and correctly runs the installed application.</b></p>

<p><li> What are cabinet files and registry files?</li></p>

<p><b>Recognizable by their .cab extensions, cabinet files contain collections of files
in compressed form. Registry or .reg files hold scripts that can be merged into system
registries using the RegSvr32 utility.</b></p>

<p><li> What is the purpose of the InstallShield tool?</li></p>

<p><b>Given a Visual C++ project, InstallShield creates an installation package
consisting of a Setup program, cabinet files, and miscellaneous information files. When
run on another computer, the installation package installs the application and
automatically configures the computer to run it.</b></p>

<p><li> Must ActiveX controls be registered on a system before they can operate? If so,
what examples can you give of a control's registry information?</li></p>

<p><b>ActiveX controls must be registered on a system before they can be used. Usually,
this process is hidden from the user because it is performed automatically by a Web browser or by installation programs. The registry
information must include the control's class identifier and its location on the
system's hard disk.</b></p>

<p><li> Name three modes of application deployment.</li></p>

<p><b>Applications can be deployed on media such as disks and CD-ROMs, and over a network
or the Internet.</b></p>

<p><li> What is the main advantage ATL offers over MFC when used to develop ActiveX
controls?</li></p>

<p><b>The main advantage ATL offers ActiveX development is that ATL can create controls
that have no dependencies. Properly written, an ActiveX control created from ATL
requires neither MFC nor the C run-time library, ensuring that only the control's executable file needs to be
downloaded from a Web page. ActiveX controls created using MFC can execute only when
MFC42.dll and MSVCRT.dll are present on a system.</b></p>

<p><li> What are two common ways ActiveX controls are licensed?</li></p>

<p><b>Licensing schemes can take many innovative forms, but generally rely on the
presence of either a specific file or a particular entry in the system registry.</b></p>

<p><li> You have created a licensed ActiveX control and have sold a copy to a
development company. Should you provide them with a copy of the control's license as well? Why or why not?</li></p>

<p><b>Yes, you should provide a copy of the license along with the product itself.
ActiveX controls are sold to other developers, who in turn use them to create
applications or Web pages designed for users. Licensing code prevents a developer from
using an ActiveX control except in the presence of a valid license. When a developer
adds an ActiveX control to an application project, the control confirms the existence
of the license; only upon confirmation that the license exists can the control then be
used.</b></p>

<p><li> Name two characteristics of an ActiveX control designed for use on a Web page.</li></p>

<p><b>An ActiveX control should be small in size, and if it requires large blocks of
data, be able to load the data asynchronously. Asynchronous loading allows the control
to interact with the user as quickly as possible while buffering downloaded data in the
background.</b></p>

<p><li> What is Zero Administration for Windows?</li></p>

<p><b>Zero Administration for Windows (ZAW) is a Microsoft initiative designed to reduce the cost and labor associated with administering a Windows-based
network.</b></p>
</ol>
</body>
</html>










<HTML>
<HEAD>
<TITLE>Lesson 2: Installing the Visual C++ Development Tools</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">

</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch01b.htm", "ch01d.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="41"><H1>Lesson 2: Installing the Visual C++ Development Tools</H1></A>

<p>In this lesson, you will learn about the options offered by Microsoft Visual
Studio 6.0 when installing the Enterprise Edition of Visual C++ 6.0 using a
custom installation. The installation setup program is a good place to gain an overview
of the features offered by the Visual C++ development environment,
as it groups together all the installable options that are available to you in one
logically organized, browsable location. If you already have Visual C++ installed, you
can still follow through this lesson to further your understanding
of the installation options.</p>

<p>
<div class="sidebar"><blockquote>
<b>After this lesson, you will be able to:</b>
<ul>
<p><li> Understand the choices presented to users when installing Visual C++ 6.0.</li></p>
</ul>
<b>Estimated lesson time: 30 minutes</b>
</blockquote></div>
</p>


<A NAME="42"><H2>Microsoft Visual C++ Installation</H2></A>

<p>Visual C++ comes as part of the Visual Studio development suite or as a stand-alone
product. In either case, you start the installation process by running the Setup.exe
file from the root directory of the CD.</p>

<p>
<div class="note"><blockquote><b>NOTE</b><hr>
If you are using Windows NT 4.0, you will need to install the
Windowsç‡¦T Service Pack 3 before you can install Visual C++.</blockquote></div>
</p>

<p>First you will be presented with a dialog box providing you with the opportunity to
browse the Readme file. This file contains important information that will likely
impact your development effort, so you should at least scan its contents.</p>

<p>Next, you will be presented with the user license agreement. Once you have read and
accepted the user license agreement and entered your product number and user ID, you
will be taken to a dialog box that presents you with setup options. At this point,
choose a <b>Custom</b> setup and click <b>Next</b>.</p>

<p>On the screen that appears, accept the default installation location by clicking <b>
Next</b>. The setup process will begin. Read the information screens and click <b>
Next</b> until you arrive at the Custom Setup screen, shown in Figure 1.8. (This figure displays the Visual Studio version of this screen, which shows
options to install the other products in the Visual Studio suite.)</p>

<p>
<A HREF="javascript:fullSize('F01DA08x.htm')"> <img src="images/F01DA08.JPG" width=404 height=303 border=0 ALT="Click to view at full size."> </A>
</p><p>
<!-- caption --><b>Figure 1.8</b> <i>The Visual Studio Custom Setup screen</i><!-- /caption -->
</p>

<p>If you already have Visual C++ installed, you'll want to get to the maintenance
dialog box that allows you to add or remove components for your current installation.
You access this dialog box by selecting the <b>Workstation</b> option. This maintenance
dialog box is identical to the setup screen, so you can use it to
explore the installation options.</p>

<p>The custom setup screen appears with a default set of installation options selected,
which you can change as required. A check mark next to an installation option means
that the option will be installed. Many of the options are arranged in a hierarchical
order. If one of the items in the <b>Options</b> list is selected and the <b>Change
Option</b> button is made available, you can click it to reveal further sub-options
beneath the currently selected option. <b>OK</b> and <b>Cancel</b> can be used to move
up the option hierarchy, saving or discarding the changes you have made to the option
selection on each screen.</p>

<p>If an option check box is selected but shaded, only some of its suboptions are
selected, meaning that only some of its options will be installed.</p>

<p>The following exercise shows you how to use the Custom Setup or Maintenance screen
to configure your installation options.</p>

<p><li> <b>To configure installation options</b></li></p>

<ol>
<p><li> In the <b>Options</b> list of the Custom Setup or Maintenance screen, select the
<b>Microsoft Visual C++ 6.0</b> option as shown in Figure 1.8.</li></p>

<p><li> Click the <b>Change Option</b> button.</li></p>

<p><li> In the <b>Options</b> list, select the <b>VC++ Runtime Libraries</b> option.
Click the <b>Change Option</b> button.</li></p>

<p>Note that the <b>CRT Source code</b> option is not selected. Note, too, that the
option requires 5805 KB of disk space. Having the C run-time source code available
means that you can use the debugger to step through the C source code of the standard C
libraries. If the CRT source code is unavailable, you will only see assembly language
instructions when you use the debugger to step into a C library function. Having this
source code available can also be instructional in that it demonstrates how
professional C programmers handle a particular programming situation.</p>


<p><li> If you would like to have the CRT library source code available, and you can
spare the half-megabyte of disk space that this option requires, select the check box
next to that option.</li></p>

<p><li> If you have changed any of the options that are currently displayed in the <b>
Options</b> list and you want to save the changes, click <b>OK</b> to revert to the
previous screen in the hierarchy. Otherwise, click <b>Cancel</b> to leave the options
as they were.</li></p>
</ol>


<p>
<div class="tip"><blockquote>
<b>TIP</b><hr>If you make changes at one level and click <b>OK</b>, and then click <b>
Cancel</b> at a higher level, the lower level changes are still reflected in your
setup. If you want to cancel the lower level changes, you must go to the dialog box on
which they were made and reverse them, and then click <b>OK</b> in that dialog
box.
</blockquote></div>
</p>



<ol start="6">
<p><li> When you have finished configuring the options, return to the main Custom Setup
or Maintenance screen, and proceed with the installation by clicking the <b>
Continue</b> button. To abandon the installation, click <b>Cancel</b>.</li></p>
</ol>

<A NAME="43"><H2>Installation Options</H2></A>

<p>The rest of this lesson consists of a brief explanation of most of the Visual C++
installation options. Using the Custom Setup or the Maintenance screen, locate each of
the options listed in the following sections and determine whether or not you require
them to be installed on your computer.</p>

<A NAME="44"><H3>Visual Studio</H3></A>

<p>You have an all or nothing choice of options with Visual Studio, and you should
hence select the default choice of <b>All</b>. The default choice installs the
development environment, wizards, and debugger.</p>

<p>The Visual C++ UI consists of an integrated set of windows, tools, menus, toolbars,
directories, and other elements that allow you to create, test, and refine your
application in one place. You can also work on other types of documents within Visual
C++, such as Microsoft Excel or Microsoft Word documents.</p>

<A NAME="45"><H3>Run-Time Libraries</H3></A>

<p>The <b>VC++ Runtime Libraries</b> selection, which you read about in the previous
exercise, offers four choices:</p>

<ul>
<p><li> <b>Static CRT Libraries</b> Multithread-capable libraries. These libraries are
linked to your application at link time, increasing the size of the executable file. An
advantage to static linking is that the executable (.exe) file contains the entire
application. A disadvantage is that a change in the program or a 
library requires a rebuild of the entire application.</li></p>

<p><li> <b>Shared CRT Libraries</b> Dynamically linked to your application at run time.
Accordingly, the application's .exe file is smaller than the same application when
statically linked to the libraries. Advantages to dynamic linking include builds that
take less time to create, and the ability to redistribute a smaller
executable program if you make changes in the application. A disadvantage to
dynamic linking is that you have to ensure that users of your program have the link
libraries installed on their computers.</li></p>

<p><li> <b>CRT Source Code</b> Installs the source code for the C++ run-time debug
libraries. Having the source code readily available makes programming and debugging
easier. You can refer to the code to see how other programmers handle a particular
programming situation.</li></p>

<p><li> <b>Single Threaded CRT Libraries</b> Used when you choose static linking and
single threading as build options.</li></p>
</ul>


<p>Each of the libraries has an optimized release version without debug symbols and a
debug version with no optimizations, but with debug symbols. When you choose to include
the source code, you can step into library functions during
debugging sessions.</p>

<p>Developers of desktop applications on the Win32 platform (that is, Windows
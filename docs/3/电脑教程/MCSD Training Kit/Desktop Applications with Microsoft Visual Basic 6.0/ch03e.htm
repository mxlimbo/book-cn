<HTML>
<HEAD>
<TITLE>Chapter 3 -- Summary</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch03d.htm", "ch03f.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="199"><H1>Summary</H1></A>


<A NAME="200"><H3>Overview of Validation</H3></A>

<P>Data validation ensures the accuracy of data that the user enters in an application.</P>

<P>Visual Basic provides two data validation methods:</P>

<UL>

<p><li>Form-level validation takes place after all fields on a form have been filled in. </li></p>

<p><li>Field-level validation takes place as each field on a form is filled in.</li></p>

</UL>

<P>In designing data validation:</P>

<UL>

<p><li>Provide an audio and/or visual notification of invalid data entry. </li></p>

<p><li>Set focus back to the field that contains invalid data. </li></p>

</UL>


<A NAME="201"><H3>Implementing Form-Level Validation</H3></A>

<P>Use form-level validation to:</P>

<UL>

<p><li>Establish a form-level keyboard handler.</li></p>

<p><li>Enable and disable controls based on user input.</li></p>

</UL>

<P>Form-level validation lets you to manage data input on a form. Monitor these control values by:</P>

<UL>

<p><li>Enabling a command button to loop through the Controls collection and validate each control when all fields have valid data.</li></p>

<p><li>Validating all the fields when the user tries to execute a command such as an OK button's Click event.</li></p>

</UL>


<A NAME="202"><H3>Implementing Field-Level Validation</H3></A>

<P>Field-level validation provides immediate direction to the user and gives the developer more control over user actions. </P>

<P>A TextBox control contains several design-time properties that restrict the type of values users can enter. Some of these properties are:</P>

<UL>

<p><li>MaxLength</li></p>

<p><li>PasswordChar</li></p>

<p><li>Locked</li></p>

</UL>

<P>Field-level keyboard events let you immediately test keystrokes. These events are specific to the control in which they occur. The field-level events include:</P>

<UL>

<p><li>KeyPress</li></p>

<p><li>KeyDown</li></p>

<p><li>KeyUp</li></p>

</UL>

<P>Visual Basic includes several functions that assist in the validation process. You use them to verify that the correct types of data are received. Commonly used functions are:</P>

<UL>

<p><li>IsNumeric</li></p>

<p><li>IsDate</li></p>

</UL>

<P>The Masked Edit control also restricts data input and supplies visual cues about the type of data entered or displayed. It provides several methods, properties, and events that are useful for validating user input.</P>

<P>Controls in Visual Basic 6.0 have a Validate event. It occurs before a control loses focus, but only when the CausesValidation property of the control that is about to receive the focus is set to True. Use the Validate event and CausesValidation property together to evaluate input before allowing the user to move focus away from that control. Examples of the Validate event include:</P>

<UL>

<p><li>A data entry application must perform more sophisticated data entry validation than can be provided by the MaskedEdit control.</li></p>

<p><li>A form must prevent users from moving off a control, by pressing the TAB key or an accelerator key, until data has been entered in a field.</li></p>

</UL>


</BODY>
</HTML>






<HTML>
<HEAD>
<TITLE>Lesson 3: Implementing Centralized Error Handling</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch05c.htm", "ch05e.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="275"><H1>Lesson 3: Implementing Centralized Error Handling</H1></A>

<P>Another technique for managing potential errors is to create centralized procedures that contain specific error-handling information. For example, your application may open a number of files from network drives. You can create the same error handler in each procedure that opens a file, or you can create a general function procedure that provides this capability. You then add a detailed error handler to this general procedure.</P>

<P>Consider using a centralized error handler when the same error-handling code is repeated throughout your application. For example, if your application contains a number of procedures that make a connection to a database, you need to create error handlers for each procedure. The code in these error handlers will probably be very similar since all of them trap for database connection errors.</P>

<p><div class="sidebar"><blockquote>
<b>After this lesson, you will be able to:</b>
<UL>

<p><li>Describe when to use a centralized error handler.</li></p>

<p><li>Create a centralized error handler in your applications.</li></p>

</UL>
<b>Estimated lesson time: 15 minutes</b>
</blockquote></div></P>

<A NAME="276"><H2>Creating a Centralized Error Handler</H2></A>

<P>A centralized error handling provides very detailed control over possible errors because you associate a procedure with a specific task. Before you create a centralized error handler, you must create a general function procedure that contains all the code necessary to perform the task, such as opening a database or reading data from a file. Then you add an error handler to the procedure that includes all the possible error numbers associated with the task. Depending on whether or not the procedure is successful, you can pass return data from the function.</P>

<P>The following example creates a centralized error handler using the OpenFile general procedure:</P>

<P><TABLE CELLPADDING=5 WIDTH="95%"><TR><TD><PRE>
Private Sub cmdGetData_Click()
     Dim filename As String
     filename = InputBox(&quot;Please enter the file name to open:&quot;)
     If OpenFile(filename) = True Then
          MsgBox &quot;The file was opened successfully.&quot;
     Else
          MsgBox &quot;The file was not opened. Please check the file name.&quot;
     End If
End Sub

Function OpenFile(filename As String) As Boolean
     'Turn on the local error handler
     On Error GoTo OpenError:

     'Open the file
     Open filename For Input As #1

     'It worked, so pass back True
     OpenFile = True

     'Exit the function before running the
     'error handler code by mistake
     Exit Function

' A local error handler
OpenError:
     Select Case Err.Number
          Case 53
               'The file was not found
          Case 55
               'The file is already open
          Case Else
               'An unexpected error occurred.
     End Select
     'The operation failed, so send back False
     OpenFile = False
End Function
</pre></td></tr></table></p>

<P>A centralized error handler is easier to maintain than a normal error handler. To change or update it, you update your code in only one place.</P>

<A NAME="277"><H2>Lesson Summary</H2></A>

<P>A centralized error handler is a more efficient solution for controlling potential run-time errors if: </P>

<ul>
<p><li>Your application performs the same general task in many different places.</li></p>

<p><li>The code has to be changed; updating a single procedure can reduce the overall cost of maintaining the application.</li></p>
</ul>

</BODY>
</HTML>






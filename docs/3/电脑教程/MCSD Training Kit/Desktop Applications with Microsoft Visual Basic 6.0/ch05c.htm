<HTML>
<HEAD>
<TITLE>Lesson 2: Using Inline Error Handling</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch05b.htm", "ch05d.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="270"><H1>Lesson 2: Using Inline Error Handling</H1></A>

<P>Implementing inline error handling is an alternative to creating procedure-specific error handlers. An inline error handler checks code after each statement to see whether an error has occurred. If an error has occurred, code is immediately run to resolve the error. To create an inline error handler, you use many of the same code statements that you use in a normal error handler.</P>

<p><div class="sidebar"><blockquote>
<b>After this lesson, you will be able to:</b>
<UL>

<p><li>Compare and contrast an inline error handler and a normal error handler.</li></p>

<p><li>Create an inline error handler in your applications.</li></p>

</UL>
<b>Estimated lesson time: 15 minutes</b>
</blockquote></div></P>

<A NAME="271"><H2>Creating an Inline Error Handler</H2></A>

<P>To create an inline error handler, use the On Error Resume Next statement. If an error occurs, this statement prevents a run-time error from stopping the execution of your program. To see whether an error has occurred, use the Err object's Number property. If the Number property's value is greater than zero, an error has occurred. </P>

<P>The following example enables an inline error handler and opens a file:</P>

<P><TABLE CELLPADDING=5 WIDTH="95%"><TR><TD><PRE>
On Error Resume Next
Open &quot;c:\MyFile.dat&quot; For Input As #1
Select Case Err.Number
     Case 0:
          'No error occurred
     Case 53:
          'File not Found
          'Prompt the user user for the correct filename
     Case 55:
          'File already open
          'Add code here to resolve this error
     Case Else
          'An unknown error occurred
          'Add code here to resolve this
End Select
</pre></td></tr></table></p>

<A NAME="272"><H3>Clearing the Err object</H3></A>

<P>With a normal error handler, an error is cleared automatically, but when you use an inline error handler, you must manually clear the error from the Err object after it has been resolved. To manually clear the error from the Err object, use the Clear method. The following example clears the Err object:</P>

<P><TABLE CELLPADDING=5 WIDTH="95%"><TR><TD><PRE>
'Reset Err.Number
Err.Clear
</pre></td></tr></table></p>

<P>If you do not first clear the Err object, subsequent inline error handlers will report the same error. If a new error occurs, the previous error will be removed from the Err object.</P>

<A NAME="273"><H2>Disabling an Inline Error Handler</H2></A>

<P>To disable an inline error handler, use the On Error GoTo 0 statement. This is the same procedure that you use with a normal error handler. The following example disables an inline error handler:</P>

<P><TABLE CELLPADDING=5 WIDTH="95%"><TR><TD><PRE>
On Error GoTo 0

'If an error occurs next, the default Visual Basic
'error handler will be used
Open &quot;C:\AnotherFile.dat&quot; For Input As #2
</pre></td></tr></table></p>

<A NAME="274"><H2>Lesson Summary</H2></A>

<P>An inline error handler is an alternative to a normal error handler for trapping potential run-time errors. With an inline error handler, use the On Error Resume Next statement to disable the normal Visual Basic handler. Then add code after each executable line to check the Err object. The Number property notifies your application when a run-time error occurs.</P>

<P>When all run-time errors are resolved, call the Clear method to remove the error from the Err object. To disable an inline error handler, use the On Error GoTo 0 statement.</P>

</BODY>
</HTML>






<HTML>
<HEAD>
<TITLE>Lesson 1: Creating DHTML Applications</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch11a.htm", "ch11c.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="582"><H1>Lesson 1: Creating DHTML Applications</H1></A>

<P>Visual Basic 6.0 supports Internet programming. You can add active content to Web pages with little effort. Visual Basic Internet applications link Visual Basic code to one or more HTML pages and handle events raised in those pages by interacting with programs on either a client or a server. You can create two types of Internet applications in Visual Basic: client-based DHTML applications and server-based IIS applications. In this lesson, you will learn how to create client-based DHTML applications.</P>

<p><div class="sidebar"><blockquote>
<b>After this lesson, you will be able to:</b>
<UL>

<p><li>Describe Internet client and server relationships.</li></p>

<p><li>Describe how to use Dynamic HTML.</li></p>

<p><li>Create a Dynamic HTML application using the DHTML Page designer.</li></p>

</UL>
<b>Estimated lesson time: 25 minutes</b>
</blockquote></div></P>

<A NAME="583"><H2>Review of the Internet and HTML </H2></A>

<P>The Internet is a global, distributed network of computers operating on the TCP/IP protocol. An intranet is also a network of computers operating on the TCP/IP protocol, but it is not global. Generally, an intranet is restricted to a particular set of users and cannot be accessed by the outside world. A corporation may run an intranet to provide information to employees only, and run a separate Internet site for external users. Users within the company can access both, but users outside the company can access only the company's Internet site. </P>

<P>Corporate intranets facilitate distributing information, such as customer order information, sales data, performance figures, or training materials, to employees while preventing outside access to the data. Properly used, an intranet can be a very cost-effective tool. </P>

<p><div class="note"><blockquote><b>NOTE</b><HR>
In this chapter, we will use the term Internet to include both the global network of computers and intranet networks.
</blockquote></div></p>

<P>HTML is the language that displays .htm files in a Web browser on the Internet. An .htm file is a text document that contains a series of tags that tell the browser how to display the file. These HTML tags supply information about the page's structure, appearance, and content.</P>

<A NAME="584"><H2>Visual Basic and Internet Development</H2></A>

<P>A common way to think about Internet development is in terms of client/server relationships. The client is the browser on a desktop PC, and the server is the Web server. Most Internet interactions can be thought of in terms of requests and responses. The browser makes a request to the Web server (usually to display a page that the user wants to see) and the Web server returns a response (usually an HTML page, an element such as a file, or an image) to the browser.</P>

<P>Web designers usually create HTML pages, but you can also choose to create them in conjunction with developing your Visual Basic application. When you create an Internet application in Visual Basic, the user interface is typically an HTML page rather than a form. In many ways, an .htm file is analogous to a Visual Basic .frm file.</P>

<A NAME="585"><H2>Introduction to DHTML Applications</H2></A>

<P>DHTML is a technology extension of Internet Explorer 4.<I>x</I> that allows developers and users to interact with Web pages in diverse ways. A major benefit of DHTML is that much of the processing can be done on the client without having to transfer processing to the server.</P>

<P>A DHTML application is a Visual Basic application that uses a combination of DHTML and compiled Visual Basic code in an interactive, browser-based application. DHTML applications must be run on Internet Explorer 4.<I>x</I> .</P>

<P>In its simplest form, a DHTML application can be a single HTML page that uses Visual Basic code and the Dynamic HTML object model to instantly respond to actions that occur on the page. This might involve:</P>

<ul>
<p><li>Responding to user-initiated actions such as mouse movements or clicks.</li></p>

<p><li>Responding to an action that the browser itself performs, such as opening a page or loading a picture. </li></p>
</ul>

<P>In a more complex DHTML application, you might: </P>

<ul>
<p><li>Retrieve data from the page and use it to query a database.</li></p>

<p><li>Update the page's appearance and behavior.</li></p>

<p><li>Create HTML elements and insert them onto a page in response to user requests.</li></p>
</ul>

<P>DHTML applications use Visual Basic code to perform much of the same processing you could accomplish with other methods of Internet application development, such as JavaScript or CGI. You write Visual Basic code to handle events that occur when a page is viewed in the browser. You can respond to events that occur on any element on the page&#8212;clicking a button, loading an image, passing the mouse over a certain part of the page, etc. While most of the processing associated with a DHTML application occurs on the client computer, the application can also make calls to the server.</P>

<A NAME="586"><H3>Advantages of DHTML Applications </H3></A>

<P>A major advantage of these applications is that they combine the power and capabilities of DHTML and Visual Basic's controls and codes. Another advantage is the conservation of server resources since much of the processing takes place on the client. This also provides a faster refresh or response to the user. In addition, you can use DHTML applications offline through the browser's cache. Security of your application is also an advantage. Although code embedded in an HTML page is accessible, a DHTML application is not since it is compiled on the client. </P>

<A NAME="587"><H3>Using the DHTML Page Designer</H3></A>

<P>To create a DHTML application, you use Visual Basic's DHTML Page designer (see Figure 11.1) to create the Web pages that act as the user interface of your application. You can write Visual Basic code and attach it to a Web page or import an existing Web page into the designer and modify it. The designer's Treeview window on the left displays a hierarchical representation of all of the elements within an HTML page. The Detail pane on the right presents a drawing surface on which you can create the new page or edit the contents of an existing page.</P>

<P>
<A HREF="javascript:fullSize('F11xx01x.htm')"> <img src="images/F11xx01.JPG" width=404 height=251 border=0 ALT = "Click to view at full size."> </A>
</P><P>
<!--caption--><B>Figure 11.1</B> <i>The DHTML Page designer</i>  <!--/caption-->
</P>


<p><div class="note"><blockquote><b>NOTE</b><HR>
There is a one-to-one relationship between DHTML Page designers and HTML pages. If you want to use more than one HTML page in your application, you can add more DHTML Page designers to your project by clicking Add DHTML Page on the Project menu.
</blockquote></div></p>

<P>Here is the basic process for creating a DHTML application in Visual Basic:</P>

<OL>
<P><LI>Create a new project in Visual Basic using the DHTML Application template.</LI></P>

<P>Your project contains a DHTML Page designer and a code module by default.</P>
<P><LI>Create an HTML page or use an existing HTML page as the user interface for your application.</LI></P>

<P><LI>Assign an ID property to uniquely identify each element, such as a TextField or Button on the HTML page that you want to access programmatically.</LI></P>

<P><LI>Write code to add functionality to your application.</LI></P>

<P><LI>Test and debug your application as you would any other Visual Basic application.</LI></P>

<P>When you start your DHTML application from Visual Basic, it runs in Internet Explorer, but you will still debug your code in the Visual Basic IDE.</P>
<P><LI>Compile your application, and use the Package and Deployment Wizard to package the DLLs and supporting files for distribution.</LI></P>
</ol>

<A NAME="588"><H2>Modifying HTML with DHTML</H2></A>

<P>In HTML, tags provide the formatting instructions. For example, a third-level heading is written &lt;H3&gt;My Heading&lt;/H3&gt;. The H3 tags determine the size of the text that is displayed by the browser.</P>

<P>In DHTML, you can include additional information in these HTML tags to control and modify the appearance of the page. ID is a DHTML attribute that assigns a unique identifier to the heading and makes it programmable. This example shows the ID attribute added to the HTML tag:</P>

<P><TABLE Cellpadding=5 width="95%"><TR><TD><PRE>
&lt;H3 ID=Subhead1&gt;My Heading&lt;/H3&gt;
</pre></td></tr></table></p>

<P>In a Visual Basic application, you might replace text to customize the user's HTML page or change the appearance or format of the text on the HTML page. In a DHTML application, you handle text replacements differently. In a DHTML application, you can dynamically make changes to text, as well as to HTML tags, at run time. </P>

<P>You must specify whether you are replacing the current HTML text with straight text or text that includes additional HTML tags. Additionally, you must indicate whether the original tags for the element should be affected by the replacement. You do this with two sets of properties: innerText and outerText, and innerHTML and outerHTML.</P>

<P>To change text within HTML tags, use the innerText or innerHTML properties. InnerText provides changes that the system inserts as straight text, without performing any parsing. InnerHTML provides text replacements and additional HTML tags that must be parsed and inserted between the original tags. For example:</P>


<p><TABLE CELLPADDING=5 WIDTH="95%">
<TR>
<Th>Using innerText</th>
<Th>Code</th></TR>
<TR>
<TD VALIGN="TOP">The original HTML
</TD>
<TD VALIGN="TOP">&lt;H3 ID=Subhead1&gt;My Heading&lt;/H3&gt;
</TD></TR>
<TR>
<TD VALIGN="TOP">Using the innerText property
</TD>
<TD VALIGN="TOP">Subhead1.innerText = &quot;Heading One&quot;
</TD></TR>
<TR>
<TD VALIGN="TOP">Resulting HTML
</TD>
<TD VALIGN="TOP">&lt;H3 ID=Subhead1&gt;Heading One&lt;/H3&gt;
</TD></TR></TABLE></p>

<p><TABLE width=95% cellpadding=5>
<tr>
<Th>Using innerHTML</th>
<Th>Code</th></TR>
<TR>
<TD VALIGN="TOP">The original HTML
</TD>
<TD VALIGN="TOP">&lt;H3 ID=Subhead1&gt;My Heading&lt;/H3&gt;
</TD></TR>
<TR>
<TD VALIGN="TOP">Using the innerHTML property
</TD>
<TD VALIGN="TOP">Subhead1.innerHTML=&quot;&lt;I&gt;Heading One&lt;/I&gt;&quot;
</TD></TR>
<TR>
<TD VALIGN="TOP">Resulting HTML
</TD>
<TD VALIGN="TOP">&lt;H3 Subhead1&gt;&lt;I&gt;Heading One&lt;/I&gt;&lt;/H3&gt;
</TD></TR></TABLE></p>

<P>To change both the text and the original tags around an element, use two properties called outerText and outerHTML. Both properties replace the text enclosed in the HTML for a specific element and the element tags themselves.</P>

<p>
<img src="images/practice.gif" width=67 height=55 border="0">
</p>


<A NAME="589"><H2>Practice: Creating a DHTML Application</H2></A>

<P>In this practice, you will create a simple DHTML application using the DHTML Page Designer.</P>

<P><LI><B>To create a DHTML project</B></LI></P>

<OL>
<P><LI>Create a new project in Visual Basic using the <B>DHTML Application</B> project template.</LI></P>

<P>The <B>Project Explorer</B> window appears.</P>
<P><LI>Double-click the <B>Designers</B> folder, then double-click <B>DHTMLPage1.</B></LI></P>

<P>The <B>DHTML Page designer</B> appears. </P>
<P><LI>Click in the <B>Detail</B> pane, type <B>Mortgage Payment Calculator</B>, then press<B>  Enter</B>. </LI></P>

<P><LI>Type the text shown in Figure 11.2.</LI></P>
</ol>

<P><div class="note"><blockquote><B>Note</B><hr>
Do not press <B>Enter</B> after the last line.
</blockquote></div></P>

<ol>
<P><LI value="5">With the cursor after <B>Total:</B>, press<B> F4 </B>and<B> </B>set<B> </B>the<B> </B>ID<B> </B>property<B> </B>to<B> TotalPayment.</B></LI></P>

<P><LI>Press the <B>Enter</B> key three times to add blank lines after <B>Total</B>.</LI></P>

<P><LI>From the HTML toolbox (see Figure 11.3), add three TextField controls and one Button control to the <B>Detail</B> pane.</LI></P>

<P>
<A HREF="javascript:fullSize('F11xx02x.htm')"> <img src="images/F11xx02.JPG" width=404 height=266 border=0 ALT = "Click to view at full size."> </A>
</P><P>
<!--caption--><B>Figure 11.2</B> <i>Practice text layout</i>  <!--/caption-->
</P>


<P>
<img src="images/F11xx03.GIF" width=84 height=328 border=0>
</P><P>
<!--caption--><B>Figure 11.3</B> <i>The HTML toolbox</i>  <!--/caption-->
</P>



<P><LI>Set the following properties for the new controls. Figure 11.4 illustrates the layout of the controls.</LI></P>

<p><TABLE width=95% cellpadding=5>
<TR>
<Th>Control</th>
<Th>Properties</th>
<Th>Value</th></TR>
<TR>
<TD VALIGN="TOP">TextField1
</TD>
<TD VALIGN="TOP">ID
</TD>
<TD COLSPAN=2 VALIGN="TOP">LoanAmt
</TD></TR>
<TR>
<TD VALIGN="TOP"> 
</TD>
<TD VALIGN="TOP">Value
</TD>
<TD COLSPAN=2 VALIGN="TOP">&lt;blank&gt;
</TD></TR>
<TR>
<TD VALIGN="TOP"> 
</TD>
<TD VALIGN="TOP">Title
</TD>
<TD COLSPAN=2 VALIGN="TOP">Loan Amount
</TD></TR>
<TR>
<TD VALIGN="TOP">TextField2
</TD>
<TD VALIGN="TOP">ID
</TD>
<TD COLSPAN=2 VALIGN="TOP">Interest
</TD></TR>
<TR>
<TD VALIGN="TOP"> 
</TD>
<TD VALIGN="TOP">Value
</TD>
<TD COLSPAN=2 VALIGN="TOP">&lt;blank&gt;
</TD></TR>
<TR>
<TD VALIGN="TOP"> 
</TD>
<TD VALIGN="TOP">Title
</TD>
<TD COLSPAN=2 VALIGN="TOP">Interest Rate
</TD></TR>
<TR>
<TD VALIGN="TOP">TextField3
</TD>
<TD VALIGN="TOP">ID
</TD>
<TD COLSPAN=2 VALIGN="TOP">Term
</TD></TR>
<TR>
<TD VALIGN="TOP"> 
</TD>
<TD VALIGN="TOP">Value
</TD>
<TD COLSPAN=2 VALIGN="TOP">&lt;blank&gt;
</TD></TR>
<TR>
<TD VALIGN="TOP"> 
</TD>
<TD VALIGN="TOP">Title
</TD>
<TD COLSPAN=2 VALIGN="TOP">Term
</TD></TR>
<TR>
<TD VALIGN="TOP">Button1
</TD>
<TD VALIGN="TOP">ID
</TD>
<TD COLSPAN=2 VALIGN="TOP">Calculate
</TD></TR>
<TR>
<TD VALIGN="TOP"> 
</TD>
<TD VALIGN="TOP">Value
</TD>
<TD COLSPAN=2 VALIGN="TOP">Calculate
</TD></TR></TABLE></p>

<P>
<A HREF="javascript:fullSize('F11xx04x.htm')"> <img src="images/F11xx04.JPG" width=404 height=267 border=0 ALT = "Click to view at full size."> </A>
</P><P>
<!--caption--><B>Figure 11.4</B> <i>Practice control layout</i>  <!--/caption-->
</P>


<P><LI>Double-click the <B>Calculate</B> button and add the following code:</LI></P>

<P><TABLE Cellpadding=5 width="95%"><TR><TD><PRE>
Dim MonthPmt As Double
MonthPmt = Pmt(Val((Interest.Value) / 100) / 12, _
     Val(Term.Value), Val(LoanAmt.Value))
TotalPayment.innerText = &quot;Your monthly payment is: &quot; &amp; _
     Format(MonthPmt, &quot;currency&quot;)
</pre></td></tr></table></p>

<P><LI>Save the application with the default filenames to the \Practice\Ch11 folder.</LI></P>

<P><LI>Test the application by pressing <B>F5</B>. In the <B>Project Properties</B> dialog box, select <B>DHTMLPage1</B> as the <B>Startup Component</B>, then<B> </B>click<B> OK</B>.</LI></P>

<P><LI>Enter the following values in the Web page, then click <B>Calculate</B>.</LI></P>

<P>
<TABLE width=95% cellpadding=5>
<TR>
<Th>Field</th>
<Th>Value</th></TR>
<TR>
<TD VALIGN="TOP">Loan Amount:
</TD>
<TD VALIGN="TOP">150000
</TD></TR>
<TR>
<TD VALIGN="TOP">Interest Rate:
</TD>
<TD VALIGN="TOP">7
</TD></TR>
<TR>
<TD VALIGN="TOP">Term:
</TD>
<TD VALIGN="TOP">360
</TD></TR></TABLE></p>

<P>The resulting value is $997.95.</P>
</ol>


<A NAME="590"><H2>Lesson Summary</H2></A>

<P>HTML (Hypertext Markup Language) allows you to display documents in a Web browser. Tags<I>,</I> the foundation of HTML, are formatting instructions embedded in the text. When you create an Internet application in Visual Basic, your user interface is usually made up of HTML pages rather than forms. </P>

<P>A DHTML application is a Visual Basic application that uses a combination of Dynamic HTML and compiled Visual Basic code in an interactive, browser-based application. A DHTML application lets you:</P>

<ul>
<p><li>Retrieve data from the page and use it to query a database.</li></p>

<p><li>Update the page's appearance and behavior.</li></p>

<p><li>Create HTML elements and insert them onto a page in response to user requests.</li></p>
</ul>

<P>A DHTML application resides on the browser (client), where it interprets and responds to actions the user performs in the browser.</P>

<P>Use the Visual Basic DHTML Page designer to create Web pages that act as the user interface of your application.</P>

<P>Two sets of properties let you manipulate text and/or the surrounding tags: innerText and outerText, and innerHTML and outerHTML. </P>




</BODY>
</HTML>






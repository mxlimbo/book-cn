<HTML>
<HEAD>
<TITLE>Lab: Implementing Error Handling</TITLE>
<link rel="STYLESHEET" type="text/css" href="Library.css">


</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<SCRIPT LANGUAGE="JavaScript">
<!--

function fullSize(sURL){
	window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}

function LibraryHeaderNav(sBackward, sForward, sImgLeftOff, sImgLeftOn, sImgRightOff, sImgRightOn, iH, iW, sImgLeftStyle, sImgRightStyle, sImgRuleStyle, sRuleColor, sRuleSize){
	var tableStr;
	//validate questionable args for defs
	tableStr = "<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 border=0 width=100%>";
	tableStr += "<TR VALIGN=top ALIGN=right>";

	tableStr += "<TD align=right class=" + sImgRuleStyle + ">&nbsp;</TD>";	
	
	tableStr += "<TD width=34 align=right class=" + sImgLeftStyle + ">";
	tableStr += "<A href='" + sBackward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgLeftOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgLeftOff + '\'\"';
	tableStr += " SRC='" + sImgLeftOff + "' vspace=0 hspace=0></a></TD>";
	
	tableStr += "<TD width=34 align=left class=" + sImgRightStyle + ">";
	tableStr += "<A href='" + sForward + "'>";
	tableStr += "<IMG HEIGHT=" + iH + " WIDTH=" + iW + " BORDER=0";
	tableStr += ' OnMouseOver=\"this.src=\'' + sImgRightOn + '\'\"';
	tableStr += ' OnMouseOut=\"this.src=\'' + sImgRightOff + '\'\"';
	tableStr += " SRC='" + sImgRightOff + "' vspace=0 hspace=0></a></TD></TR>";

	tableStr += "<TR VALIGN=top>";
	tableStr += "<TD height=3 align=center colspan=3 class=" + sImgRuleStyle + ">";
	tableStr += "<HR color=" + sRuleColor + " size=" + sRuleSize + "></TD></TR></TABLE>";
	//alert(tableStr);
	document.write(tableStr);
}

 																						     //purple is: #aa22aa   orange is: #ff9900
LibraryHeaderNav("ch05e.htm", "ch05g.htm", "images/unit_o_a1.gif", "images/unit_o_a2.gif", "images/unit_o_b1.gif", "images/unit_o_b2.gif", 18, 34, "unit01", "unit02", "headerrule", "#ff9900", "2");
//--></SCRIPT>

<A NAME="282"><H1>Lab: Implementing Error Handling</H1></A>

<P>In this lab, you will implement procedural and inline error handling to avoid run-time errors that occur in an application provided with this course.</P>

<p>
<img src="images/video.gif" width=78 height=54 border=0>
</p>

<P>To see a demonstration of the solution, run the Lab05.exe animation located in the Animations folder on the Supplemental Course Materials CD-ROM that accompanies this book.</P>

<b>Estimated lesson time: 45 minutes</b>

<A NAME="283"><H2>Exercise 1: Implementing Procedural Error Handling</H2></A>

<P><LI><B>To open the project</B></LI></P>

<ol>
<P><LI>Start Visual Basic.</li></P>

<P><LI>Open the prjLab5.vbp file located in the \Labs\Lab05\Partial folder.</li></P>
</ol>

<P><LI><B>To test the project</B></LI></P>

<ol>
<P><LI>On the <B>Run</B> menu, click <B>Start</B>.</li></P>

<P><LI>Click the <B>Import File Text</B> button.</li></P>

<P>The common dialog box appears and prompts you to open a file.</P>
<P><LI>Browse to the \Labs\Lab05\Partial folder, click the Lab5.txt file, then click <B>Open</B>. </li></P>

<P>Notice that the text is imported from the text file without any run-time errors, as illustrated in Figure 5.3</P>

<P>
<img src="images/F05xx03.GIF" width=260 height=295 border=0>
</P><P>
<!--caption--><B>Figure 5.3</B> <i>Text imported from the Lab5.txt file</i>  <!--/caption-->
</P>

</ol>

<P><LI><B>To implement error handling</B></LI></P>

<ol>
<P><LI>Click the <B>Import File Text</B> button, browse to the \Labs\Lab05\Partial folder, select the Lab5.bmp file, then click <B>Open</B>.</li></P>

<P>Notice that a run-time error occurs, as illustrated in Figure 5.4. This is because the application is written only to handle text files for input.</P>

<P>
<img src="images/F05xx04.GIF" width=371 height=201 border=0>
</P><P>
<!--caption--><B>Figure 5.4</B> <i>Visual Basic Out of memory run-time error</i>  <!--/caption-->
</P>


<P><LI>Click <B>End</B> to stop the application.</li></P>

<P><LI>Using procedural error handling (On Error Goto...), implement an error-handling procedure to trap any &quot;Out of memory&quot; errors that could occur in the future.</li></P>
</ol>

<P><DIV CLASS="NOTE"><BLOCKQUOTE><B>Note</B><HR>
Input validation is another efficient solution, but for illustration purposes implement procedural error handling for this exercise.</blockquote></div></P>

<A NAME="284"><H2>Exercise 2: Implementing Inline Error Handling</H2></A>

<P>In this exercise you will add a button to the frmEditor to start an application using the Shell command. You will then implement inline error handling to prevent application run-time errors.</P>

<A NAME="285"><H3>Add a command button to the frmEditor</H3></A>

<ol>
<P><LI>Add a command button to <B>frmEditor</B>. Set the Name property to <B>cmdOpenApp</B> and set the Caption property to <B>&amp;Open Application</B>, as shown in Figure 5.5.</li></P>

<P>
<img src="images/F05xx05.GIF" width=261 height=296 border=0>
</P><P>
<!--caption--><B>Figure 5.5</B> <i>Form with new command button</i>  <!--/caption-->
</P>


<P><LI>Add the following code to the <B>cmdOpenApp_Click</B> event:</li></P>

<P><TABLE CELLPADDING=5 WIDTH="95%"><TR><TD><PRE>
Private Sub cmdOpenApp_Click()
     Dim strFile As String
     strFile = InputBox(&quot;Enter file name and path to be opened.&quot;)
     Shell strFile, vbNormalFocus
End Sub
</pre></td></tr></table></p>

<P><LI>Save and run the application.</li></p>

<P><LI>Test the <B>Open Application</B> button by entering <B>Calc.exe</B> into the input box.</li></p>

<P>If Calc.exe is installed on your computer, the calculator appears. If it is not installed on you computer, you get a run-time error. You can install Calc.exe in the Windows Setup tab for Add/Remove Programs in Control Panel.</P>

<P><LI>Test the <B>Open Application</B> button again by entering an invalid program name. For example, <B>xyz</B>.</li></p>

<P>You receive a run-time error because xyz is not a valid application name.</P>

<P><LI>Click the <B>End</B> button to terminate the application.</li></p>
</ol>

<P><LI><B>To implement inline error handling</B></LI></P>

<ol>
<P><LI>Use the <B>On Error Resume Next</B> statement to implement inline error handling.</li></p>

<P><LI>In your code, evaluate the <B>Err.Number</B> property and display a message box to the users informing them when errors occur.</li></p>

<P><LI>Save and test your application.</li></p>
</ol>

</BODY>
</HTML>






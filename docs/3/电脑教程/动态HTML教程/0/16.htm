<html>
<head>
<title>第二页：下拉菜单脚本</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="all.css">
</head>
<body leftmargin="0" background="bodybg.jpg" topmargin="0" marginwidth="0" marginheight="0">
<table border="0" cellpadding="0" cellspacing="0" width="776">
  <tr valign="top"> 
    <td><img width="199" height="142" border="0" src="top1.jpg"></td>
    <td><img src="top2.jpg" width="577" height="105"></td>
  </tr>
</table>
<table border="0" cellpadding="0" cellspacing="0" width="776">
  <tr valign="top">
    <td width="110"><img src="left.jpg" width="92" height="137" border="0" usemap="#Map"><map name="Map"><area shape="rect" coords="9,78,62,97" href="17.htm"><area shape="rect" coords="9,46,62,65" href="15.htm"><area shape="rect" coords="10,17,63,36" href="content.htm"></map></td>
    <td> 
      <table width="580" cellspacing="0" cellpadding="0" border="0">
        <tr> 
          <td> 
            <p align="center" class="h">第四天</p>
            <p align="center" class="h"> 第二页：下拉菜单脚本</p>
          </td>
        </tr>
      </table>
      <br>
      <table width="580" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td>　　让我们编写一些我们所熟悉的用户界面元素——下拉菜单，子菜单。这些元素和你现在正在浏览的窗口顶部的菜单条很类似。大多数操作系统都有一个类属专用接口工具集，当你需要应用下拉菜单时就可调用该工具集。然后你可以设定被选项目的的名称和执行的行为。 
            <p>　　由于HTML不包含这样的专用接口工具集，所以你必须建立自己的工具集。首先你必须描述它的外观。我们在菜单条上加入一定的颜色以及描述各项功能的名称，例如file、edit、view等等。当你点击该文字时，就会显示该菜单项下的子菜单。在子菜单框中点击相应的菜单项目就可触发某个执行程序的行为。让我们在HTML中编写这样的菜单。</p>
            <p>　　首先，你需要生成一个DIV作为顶部的菜单条： </p>
            <p>　　&lt;div id=&quot;menuBar&quot;&gt; &lt;/div&gt;</p>
            <p>　　现在将该菜单条放在页面顶部，加上特定的颜色： </p>
            <p>　　&lt;style type=&quot;text/css&quot;&gt; </p>
            <p>　　#menuBar {position: absolute; </p>
            <p>　　 left: 0; </p>
            <p>　　 top: 0; </p>
            <p>　　 width: 100%; </p>
            <p>　　 height: 22px; </p>
            <p>　　 border: 1px solid #99ffff; </p>
            <p>　　 background-color: #99ffff; </p>
            <p>　　 layer-background-color: #99ffff;</p>
            <p>　　 }</p>
            <p>　　&lt;/style&gt; </p>
            <p>　　则生成这样一个DIV：</p>
            <p>　　你可能会对最后一条CSS规范不知所以然，这项是Netscape 对CSS的扩展，它指的是绝对定位了的元素的背景色。由于边框设置为border: 
              1px solid #99ffff;，所以有必要加入这一条使背景色延伸到DIV的边框。否则背景色只能在DIV所包含的内容底下显示。</p>
          </td>
        </tr>
      </table>
      <br>
      <table width="580" cellspacing="0" cellpadding="0" border="0">
        <tr> 
          <td> 
            <table border=0 align=center>
              <tr> 
                <td width=101 height="21"> 
                  <div align="center"><a href='15.htm'>上一页 </a></div>
                </td>
                <td width=99 height="21"> 
                  <div align="center"><a href="content.htm">目　录</a></div>
                </td>
                <td width=100 height="21"> 
                  <div align="center"><a href='17.htm'>下一页 </a></div>
                </td>
              </tr>
            </table>
            <p align=center>□ 资料来源：<a href="http://www.sohu.com">sohu.com</a><br>
            <p align=center>本书由“<a href="http://www.eshunet.com/">E书时空</a>”免费制作； 
              <br>
              想要更多的免费电子图书，请光临 <br>
              <a href="http://www.eshunet.com/">http://www.eshunet.com/</a> 
            <p align=center>&nbsp; 
          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>


<html>
<head>
<title>第五页：关于Event对象</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="all.css">
</head>
<body leftmargin="0" background="bodybg.jpg" topmargin="0" marginwidth="0" marginheight="0">
<table border="0" cellpadding="0" cellspacing="0" width="776">
  <tr valign="top"> 
    <td><img width="199" height="142" border="0" src="top1.jpg"></td>
    <td><img src="top2.jpg" width="577" height="105"></td>
  </tr>
</table>
<table border="0" cellpadding="0" cellspacing="0" width="776">
  <tr valign="top">
    <td width="110"><img src="left.jpg" width="92" height="137" border="0" usemap="#Map"><map name="Map"><area shape="rect" coords="9,78,62,97" href="25.htm"><area shape="rect" coords="9,46,62,65" href="23.htm"><area shape="rect" coords="10,17,63,36" href="content.htm"></map></td>
    <td> 
      <table width="580" cellspacing="0" cellpadding="0" border="0">
        <tr> 
          <td> 
            <p align="center" class="h">第五天</p>
            <p align="center" class="h">第五页：关于Event对象</p>
          </td>
        </tr>
      </table>
      <br>
      <table width="580" border="0" cellspacing="0" cellpadding="0">
        <tr> 
          <td>
            <p>　　在你完全掌握dHTML前，你需要了解event对象。两种4.0浏览器都包含event对象。它在事件创立时产生，如点击一个可点击的对象，移动鼠标，或聚焦到一个窗体元素上。Event对象被创建然后传递给处理事件的函数。<br>
            </p>
            <p>　　下面是event对象属性的描述，以及Netscape和IE处理它们的方式： </p>
            <table border="1" align="center" cellspacing="0" cellpadding="2" bordercolorlight="#000000" bordercolordark="#D8E8B0">
              <tbody> 
              <tr> 
                <td align="left" height="28" valign="baseline" width="202"><b>描述</b></td>
                <td align="left" height="28" valign="baseline" width="142">Microsoft 
                  属性</td>
                <td align="left" height="28" valign="baseline" width="145"><b>Netscape 
                  属性</b></td>
              </tr>
              <tr> 
                <td align="left" valign="baseline" width="202">代表事件类型的字符串</td>
                <td align="left" valign="baseline" width="142">type </td>
                <td align="left" valign="baseline" width="145">type </td>
              </tr>
              <tr> 
                <td align="left" valign="baseline" width="202">代表最初发送给对象事件的字符串</td>
                <td align="left" valign="baseline" width="142">srcElement </td>
                <td align="left" valign="baseline" width="145">target </td>
              </tr>
              <tr> 
                <td align="left" height="30" valign="top" width="202">&nbsp;</td>
                <td align="left" height="30" valign="top" width="142">x </td>
                <td align="left" height="30" valign="top" width="145">x </td>
              </tr>
              <tr> 
                <td align="left" valign="baseline" width="202">光标纵坐标</td>
                <td align="left" valign="baseline" width="142">y </td>
                <td align="left" valign="baseline" width="145">y</td>
              </tr>
              <tr> 
                <td align="left" valign="baseline" width="202">&nbsp; </td>
                <td align="left" valign="baseline" width="142">clientX </td>
                <td align="left" valign="baseline" width="145">pageX </td>
              </tr>
              <tr> 
                <td align="left" valign="baseline" width="202">&nbsp; </td>
                <td align="left" valign="baseline" width="142">clientY </td>
                <td align="left" valign="baseline" width="145">pageY </td>
              </tr>
              <tr> 
                <td align="left" valign="baseline" width="202">&nbsp; </td>
                <td align="left" valign="baseline" width="142">screenX </td>
                <td align="left" valign="baseline" width="145">screenX </td>
              </tr>
              <tr> 
                <td align="left" valign="baseline" width="202">&nbsp; </td>
                <td align="left" valign="baseline" width="142">screenY </td>
                <td align="left" valign="baseline" width="145">screenY </td>
              </tr>
              <tr> 
                <td align="left" valign="baseline" width="202">&nbsp; </td>
                <td align="left" valign="baseline" width="142">keyCode </td>
                <td align="left" valign="baseline" width="145">which </td>
              </tr>
              <tr> 
                <td align="left" valign="baseline" width="202">&nbsp;</td>
                <td align="left" valign="baseline" width="142">altKey<br>
                  ctrlKey<br>
                  shiftKey </td>
                <td align="left" valign="baseline" width="145">&nbsp;</td>
              </tr>
              </tbody> 
            </table>
            <p>&nbsp;</p>
            <p>4.0浏览器增加了一些新事件：</p>
            <table border="1" width="80%" align="center" cellspacing="0" cellpadding="2" bordercolorlight="#000000" bordercolordark="#C0D090">
              <tbody> 
              <tr> 
                <td width="32%">onDblClick</td>
                <td width="68%">鼠标双击</td>
              </tr>
              <tr> 
                <td width="32%">onKeyDown</td>
                <td width="68%">键被按下</td>
              </tr>
              <tr> 
                <td width="32%">onKeyPress</td>
                <td width="68%">键被按下然后被释放</td>
              </tr>
              <tr> 
                <td width="32%">onKeyUp</td>
                <td width="68%">键被释放</td>
              </tr>
              <tr> 
                <td width="32%">onMouseDown</td>
                <td width="68%">鼠标被按下</td>
              </tr>
              <tr> 
                <td width="32%">onMouseMove</td>
                <td width="68%">鼠标移动</td>
              </tr>
              <tr> 
                <td width="32%">onMouseUp</td>
                <td width="68%">鼠标被释放</td>
              </tr>
              <tr> 
                <td width="32%">onResize</td>
                <td width="68%">窗口被调整大小</td>
              </tr>
              </tbody> 
            </table>
            <p>&nbsp;</p>
            <p> 　　4.0浏览器也增加了处理事件的新方法，虽然它们（Netscape和IE）的方式不同。Netscape用的是&quot;时间捕捉&quot;，IE用的是&quot;事件气泡&quot;。<br>
            </p>
            <p>　　事件处理对Netscape处理如mouseMove或keyPress等事件是必须的，它并不隐含指向一个标记或元素。你应该告诉客户注意这些事件，并告诉它用什么函数来处理它们。下面例子用window对象的captureEvents方法来描述正在捕捉的事件：<br>
            </p>
            <p>　　window.captureEvents(Event.MOUSEMOVE);<br>
            </p>
            <p>　　注意到在不用on作为名称一部分的情况下特定事件是如何被指向的。你只是告诉Netscape注意所有发生在窗口中的事件并捕捉它们。然后你需要告诉Netscape用这些被捕捉的时间做些什么。注意on又出现了。<br>
            </p>
            <p>　　window.onMouseMove = handlerFunction;</p>
            <p>　　function handerFunction(yourEvent) {</p>
            <p> 　　alert(yourEvent.screenX);</p>
            <p>　　}<br>
            </p>
            <p>　　这段代码是一个演示事件过程的烦人的例子。每次你移动鼠标，一个对话框会跳出来告诉你它的横坐标位置。以这种方式处理的事件传递一个指针到event对象。从这儿你可以获取必要的信息。一旦你厌倦了捕捉事件，你可以象这样释放它们：<br>
            </p>
            <p>　　window.releaseEvents(Event.MOUSEMOVE);<br>
            </p>
            <p>　　于是这种类型的事件不再被捕捉。<br>
            </p>
            <p>　　IE用不同的方法处理事件，叫做&quot;事件气泡&quot;。在这种方法中，如果你有这样一个结构：<br>
            </p>
            <p>&lt;body onclick=&quot;bloorf()&quot;&gt;</p>
            <p> 　　&lt;p onclick=&quot;baz()&quot;&gt;</p>
            <p> 　　　&lt;em onclick=&quot;bar()&quot;&gt;</p>
            <p> 　　　　&lt;strong onclick=&quot;foo()&quot;&gt;Click on me&lt;/strong&gt;</p>
            <p> 　　　&lt;/em&gt;</p>
            <p> 　　&lt;/p&gt;</p>
            <p>&lt;/body&gt;<br>
            </p>
            <p>　　如果你点击strong标记内的文本，它接收到一个onClick事件，然后发送onclick事件给&lt;em&gt;标记，处理它然后发送到&lt;p&gt;标记，等等，然后直到窗口。这样每个元素以自己的方式处理点击。但是如果你想停止气泡上传，可以取消气泡。<br>
            </p>
            <p>　　&lt;script&gt;function foo() {<br>
            </p>
            <p>　　doSomeThing(); <br>
            </p>
            <p>　　this.event.cancelBubble = true;}</p>
            <p>　　&lt;/script&gt;<br>
            </p>
            <p>　　所以如果你不想让某个事件传递到所有它包含的标记，可以象上面那样阻止它。<br>
            </p>
            <p>　　你可以看到，因为两种浏览器存在相似的事件，每一步都需要大量的条件化工作，而且没有简单的方式把它们映射到一个句法中。</p>
          </td>
        </tr>
      </table>
      <br>
      <table width="580" cellspacing="0" cellpadding="0" border="0">
        <tr> 
          <td> 
            <table border=0 align=center>
              <tr> 
                <td width=101 height="21"> 
                  <div align="center"><a href='23.htm'>上一页 </a></div>
                </td>
                <td width=99 height="21"> 
                  <div align="center"><a href="content.htm">目　录</a></div>
                </td>
                <td width=100 height="21"> 
                  <div align="center"><a href='25.htm'>下一页 </a></div>
                </td>
              </tr>
            </table>
            <p align=center>□ 资料来源：<a href="http://www.sohu.com">sohu.com</a><br>
            <p align=center>本书由“<a href="http://www.eshunet.com/">E书时空</a>”免费制作； 
              <br>
              想要更多的免费电子图书，请光临 <br>
              <a href="http://www.eshunet.com/">http://www.eshunet.com/</a> 
            <p align=center>&nbsp; 
          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
</body>
</html>


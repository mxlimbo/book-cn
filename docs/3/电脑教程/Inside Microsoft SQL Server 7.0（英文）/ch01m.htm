<HTML>
<HEAD>
<link rel="STYLESHEET" type="text/css" href="squeal7.css">
<TITLE>The Secret of the Sphinx</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY BGCOLOR="#ffffff" TEXT="#000000">
<A HREF="ch01l.htm">[Previous]</A> <A HREF="ch01n.htm">[Next]</A><P>

<A NAME="15"><H1>The Secret of the Sphinx</H1></A>

<P>Slowing down was never really an option. Even before SQL Server 6.5 was released, an entirely separate team of developers was hard at work on a brand new vision for Microsoft SQL Server. In 1993, Microsoft had made the decision that databases were to be a core technology in the product line, and in late 1994, it began to hire expertise from DEC and other major vendors to work with Microsoft's Jet and SQL Server teams to start planning components for a whole new generation of database technology. During 1995, the period when SQL Server 6.0 and SQL Server 6.5 were being released, this team was building a new query processor that was being planned as a component for what was to become the Microsoft Data Engine (MSDE).</P>

<P>Development of the component was enhanced by the simultaneous development of OLE DB, which allowed components to be developed independently. Components could then communicate with other components using an OLE DB layer. At the end of 1995, the new query-processing component was integrated into the SQL Server code base, and development of a brand new SQL Server, with the code name 
<I>Sphinx,</I> began in earnest. The team working on the query processor joinedthe rest of the SQL Server development team.</P>

<P>The development of this new generation of SQL Server had one overriding theme: to re-architect the entire database engine so that the SQL Server product could scale as much as its users wanted it to. This would mean upward growth, to take full advantage of more and faster processors, and as much memory as the operating system could handle. This growth would also have to allow for new techniques to be added to any of the components so that, for example, the query processor code could add an entirely new join algorithm 
to its repertoire as easily as a new hard drive could be added. In addition to 
the upward growth, SQL Server would also be expanded outward to support whole new classes of database applications. It would also need to scale downward to run on smaller systems like desktops and laptops.</P>

<P>There were two immediate goals for the first version of this new 
re-architected system:</P>

<UL>
<P><LI>
Full row-level locking with an extremely smart lock manager.
</LI></P>

<P><LI>A brand new query processor allowing such techniques as 
distributed heterogeneous queries, and efficient processing of ad hoc 
queries. (Ad hoc queries are a fact of life when dealing with data 
warehousing, Internet-based applications, or both.)
</LI></P>
</UL>

<P>This brand new SQL Server version 7.0 debuted in a limited Beta 1 release in the fall of 1997. Beta 2 was made available to several hundred sites in December 1997. Because of the new architecture, all databases, and the data structures they contained, needed to be completely rebuilt during the upgrade process. Microsoft and the SQL Server development team were absolutely committed to making sure all customers would be successful in moving from SQL Server 6.5 to SQL Server 7.0. A program called the 1K Challenge was instituted, for which 1000 customers were invited to send copies of their databases to the SQL Server development team to be upgraded to version 7.0. A porting lab was set up in the building where the entire development team worked on the Redmond campus. Four or five ISVs every week, from February 1998 through August 1998, sent a team of their own developers to Microsoft to spend an entire week in the lab, making sure their products would work out of the box with the new SQL Server 7.0. The core SQL Server development engineers made themselves available to immediately isolate and fix any bugs encountered, and to spend time talking to the ISVs about the best ways to take advantage of all the new features of SQL Server 7.0 to make their own products even better.</P>

<P>In June 1998, Microsoft publicly released SQL Server 7.0 Beta 3 from its SQL Server Web site, along with a set of exercises demonstrating many of the new features and capabilities of the product. An Internet news server was set up so that any Beta 3 user could report bugs and ask questions of the SQL Server development team. More than 120,000 sites received the Beta 3 version of SQL Server 7.0. This included companies directly requesting the product through the Microsoft Web site, MSDN subscriptions, and Microsoft Beta Program participants (who receive beta versions of all Microsoft products when available). And then at last, after almost four years for some of the earliest team members, SQL Server 7.0 was publicly announced at COMDEX in Las Vegas on November 16, 1998. By the time of the launch, more than a dozen sites were in full production with SQL Server 7.0, including Microsoft's internal Service Advertising Protocol (SAP) implementation and barnesandnoble.com, HarperCollins, CBS Sportsline, Comcast Cellular, and Southwest Securities. The SQL Server 7.0 development team released the product to manufacturing on December 2, 1998, using build 7.00.623.07, with a code freeze date of November 27, 1998. The product became available to the public in January 1999.</P>

</BODY>
</HTML>




<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<title>Delphi下汉字输入法的编程及使用</title>
</head>

<body bgcolor="#FFFFFF" text="#000000">

<p align="center"><font size="2">　</p>

<h2 align="center"><font color="#000080">Delphi下汉字输入法的编程及使用 </font></h2>

<p>　　．王俊峰 李怀立 </p>

<p>　　许多Windows应用程序的中西文录入界面中，中西文的录入需要反复切换汉字输入法，这样使用起来非常麻烦，下面来介绍一种比较简便的解决方法。本文的程序设计环境为Delphi 
Client/Server Suit Ver 3.0（以下简称Delphi 3.0）和中文Windows 95。 </p>

<p>　　1．Delphi下的Imename、Imemode属性 </p>

<p>　　在Delphi 3.0中的Tedit、Tmemo、TmaskEdit等编辑元件在应用程序中经常使用，这三种元件都具有ImeName、ImeMode属性。其中ImeName属性是输入法名称，在对象观察器中对应一个包括当前系统中所有汉字输入法的下拉组合框；ImeMode属性是输入法模式，在对象观察器中也对应一个下拉组合框，组合框中包含imClose、imOpen、imChinese、imDontCare、imSAlpha、imAlpha六项内容。 
</p>

<p>　　imClose 表示输入法处于关闭状态； </p>

<p>　　ImOpen 表示输入法处于打开状态； </p>

<p>　　ImChinese 表示处于中文输入法状态； </p>

<p>　　ImDontCare 
表示若输入法处于关闭状态则打开最近一次使用过的输入法； </p>

<p>　　ImSAlpha 表示输入处于半角状态； </p>

<p>　　ImAlpha 表示输入处于全角状态。 </p>

<p>　　2．Delphi下汉字输入法的编程 </p>

<p>　　在Delphi 3.0中，中西文录入界面中涉及到的输入元件都具有ImeName、ImeMode属性。在设计录入界面表单时，对其中每一个元件的这两种属性赋值，系统就可以在元件获得焦点时自动打开或关闭所设定的汉字输入法。但是对于用户来说，这种编程方法一点灵活性也没有。若系统所设定的输入法不是用户所喜欢的，那么只好再通过Windows 
95的输入法选择器重新选择。其实，通过在Form下放置一个标签及一个下拉组合框的方法就可以灵活地解决这个问题了。本文示例的Form中共放置了四个Label、两个Edit、一个ComboBox、一个Memo及一个Button，下面对这个示例作个说明。 
</p>

<p>　　(1)在Delphi中选择File | New Application菜单项生成一个新的应用程序，设定新窗体Form1的属性为： 
</p>

<p>　　Caption=输入法编程示例； </p>

<p>　　(2)在Form1中添加标签Label1、Label2、Label3及编辑框Edit1、Edit2、Memo1，设定其属性为： 
</p>

<p>　　Label1.Caption=中文输入编辑框 </p>

<p>　　Label1.Font.Size=12 </p>

<p>　　Label2.Caption= 西文输入编辑框 </p>

<p>　　Label2.Font.Size=12 </p>

<p>　　Label3.Caption= 中文多行文本编辑器 </p>

<p>　　Label3.Font.Size=12 </p>

<p>　　Edit1.ImeMode=ImOpen </p>

<p>　　Edit2.ImeMode=ImDontCare（缺省值） </p>

<p>　　Memo1.ImeMode=ImOpen </p>

<p>　　编程时，一般把输入西文或以西文为主的元件的ImeMode属性设为缺省值；而把输入中文或以中文为主的元件的ImeMode属性设为ImOpen；ImeName属性值则在程序运行时由用户设定。这个方法的灵活性就在于此。另外，还需要把Edit1.Text、Edit2.Text、Memo1.Lines的值设为空。 
</p>

<p>　　(3)在Form1中添加一个标签Label4，设定其属性为： </p>

<p>　　Caption = 选择最喜欢的输入法 </p>

<p>　　Font.Size=12 </p>

<p>　　Font.Color=红色 </p>

<p>　　(4)在Form1中添加一个下拉组合框ComboBox1，在对象观察器Object 
Inpector中选择Events选项卡，双击OnDropDown，对此事件进行编程，其代码如下： 
</p>

<p>　　ComboBox1.Items.CommaText:=Screen.Imes.CommaText; </p>

<p>　　上面这个语句可以将中文Windows 95中安装的汉字输入法添加到下拉组合框中，它巧妙地运用了TScreen类的Imes特性，而Imes特性本身又是一个Tstring类，其属性Commatext包含了Windows 
95已安装的汉字输入法，可以将其直接赋值给ComboBox1的相应属性。如果直接编辑ComboBox1的属性Items来添加汉字输入法名称，则会在应用程序发布时，因用户机器汉字输入法的不确定性造成应用程序的不通用性。 
</p>

<p>　　在对象观察器中双击OnExit事件，对此事件进行编程，代码如下： 
</p>

<p>　　Edit1.ImeName:=ComboBox1.Text; </p>

<p>　　Memo1.ImeName:=ComboBox1.Text; </p>

<p>　　(5)在Form1中添加一个命令按钮Button1，设置其属性为： </p>

<p>　　Caption=退出 </p>

<p>　　Font.Size=12 </p>

<p>　　双击此命令按钮，对Click事件进行编程，代码如下： </p>

<p>　　Close； </p>

<p>　　至此，整个示例的程序设计过程就完成了，保存此应用程序及表单，再进行编译、运行，运行后其界面<a
href="file://\\黄凯\D\pcccontent.htm/pcc/99_03/images/0301135.gif">如图所示。</a> </p>

<p>　　3．汉字输入法的使用 </p>

<p>　　首先在下拉组合框中选择你所喜欢的汉字输入法，将光标移到中文输入编辑框中就会发现所选的汉字输入法已自动出现在屏幕上；再将光标移到西文输入编辑框中，汉字输入法就会自动关闭；如果将光标移到中文多行文本编辑框中，则已选中汉字输入法又自动出现了。 
</p>

<p>　　从上面的程序中可以得出，在应用程序的录入界面中，设置一个选择输入法的下拉组合框，并让其控制录入界面中所有可输入项的ImeName属性，既可以做到在中西文录入过程中不必进行录入法的来回切换，还可以做到让用户选择自己最喜欢的汉字输入法，而且这样的录入界面对于用户来说也是非常友好、方便、快捷的。PCC 
</p>

<p>　　（作者地址：山东省潍坊市东风东街181号 261031 收稿日期：1998.12.08）</font></p>
</body>
</html>

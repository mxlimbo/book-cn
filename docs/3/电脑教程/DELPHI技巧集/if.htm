<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<title>Delphi数据集过滤技巧</title>
</head>

<body bgcolor="#FFFFFF" text="#000000">

<table>
  <tr>
    <td vAlign="top" width="672"><p align="center"><font color="#004080" face="黑体"><strong>Delphi数据集过滤技巧<br>
    </strong></font></td>
  </tr>
  <tr>
    <td vAlign="top" width="672"><p align="left" class="ourfont"><font color="#000000">&nbsp;&nbsp; 
    当我们在操作数据集时，往往需要对数据进行筛眩例如：一个名为Customer的数据表，它具有CustNo、CustName、Country、Address、Phone、State、TaxRate等字段，如果只想查看国别为China或顾客号大于1000的顾客记录，就需要对数据集进行过滤。经总结，有下面这些过滤方法：<br>
    &nbsp;&nbsp;&nbsp; 一、利用TTable和TQuery的Filter属性<br>
    &nbsp;&nbsp;&nbsp; 1.在设计时设置Filter属性<br>
    &nbsp;&nbsp;&nbsp; 例如，设置Filter为：Country=′China′然后改变Filtered属性为True（注意，Filtered为True时过滤才有效）。则只能看到对应的Country字段内容为‘China’的记录。<br>
    &nbsp;&nbsp;&nbsp; 设置Filter时可以使用的操作符有：＜、＞、＜=、＞=、=、＜＞、AND、OR、NOT。<br>
    &nbsp;&nbsp;&nbsp; 例如，设置Filter为：CustNo&amp;gt;=1000andCustNo&amp;lt;=5000，则只能看到顾客号在1000与5000之间的顾客记录。<br>
    &nbsp;&nbsp;&nbsp; 2.在程序运行期间进行动态过滤<br>
    &nbsp;&nbsp;&nbsp; 要在程序运行时改变Filter属性，这包括两种情况：<br>
    &nbsp;&nbsp;&nbsp; (1)操作符右边为常量，例如：Table1Filter:=′State′＋′=′＋′′′HI′′′；<br>
    &nbsp;&nbsp; 注意：字符串常量必须用三对单引号括起来。<br>
    &nbsp;&nbsp;&nbsp; (2)操作符右边不为常量，可能是通过一个变量指定的值，或由一输入框给出的值。这时需要用到Format函数。其代码形式为：Table1Filter:=Format(′State′＋′=′＋′′′％S′′′，[StateValue]);其中StateValue为已经赋值的一个字符串变量，也可以为其他形式，例如：Edit1Text。<br>
    &nbsp;&nbsp;&nbsp; 二、用ApplyRange筛选数据集的记录<br>
    &nbsp;&nbsp;&nbsp; 执行下面这段代码，将只能看到顾客号在1000至5000之间的顾客记录。组成该例程的几个过程为： 
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>
    &nbsp;&nbsp;&nbsp; ApplyRange,SetRangeStart,SetRangeEnd。<br>
    &nbsp;&nbsp;&nbsp; Table1SetRangeStart;<br>
    &nbsp;&nbsp;&nbsp; Table1[′CustNo′]:=1000;<br>
    &nbsp;&nbsp;&nbsp; Table1SetRangeEnd;<br>
    &nbsp;&nbsp;&nbsp; Table1[′CustNo′]:=5000;<br>
    &nbsp;&nbsp;&nbsp; Table1ApplyRange;<br>
    &nbsp;&nbsp;&nbsp; 
    注意：该过程只适用于索引的字段。如果想基于非索引字段筛选，则不妨使用一点小花招：建立假索引。实现的方法为：Table1.IndexFieldNames:=字段名；Delphi还提供了简单的调用SetRangeStart、SetRangeEnd和ApplyRange的方法，例如：Table1.SetRange([Edit1.Text],[Edit2.Text]);<br>
    &nbsp;&nbsp;&nbsp; 三、用OnFilterRecord事件筛选OnFilterRecord事件允许按非键控字段建立筛选程序，例如：<br>
    &nbsp; procedure TForm1.Table1FilterRecord(DataSet:TDataSet;varAccept:Boolean);<br>
    &nbsp; begin<br>
    &nbsp; Accept:=DataSet[′State′]=′CA′；<br>
    &nbsp; end;<br>
    &nbsp;&nbsp;&nbsp; 四、用TQuery控件的SQL语句<br>
    &nbsp;&nbsp;&nbsp; 1.SQL语句中不包含变量和参数<br>
    &nbsp; Select＊fromCustomer<br>
    &nbsp; WhereCustNo＞=1000and CustNo＜=5000<br>
    &nbsp;&nbsp;&nbsp; 2.SQL语句中包含参数<br>
    &nbsp; Select＊fromCustomer<br>
    &nbsp; WhereCustNo＞=:CustNo<br>
    &nbsp; 在运行期间给参数CustNo赋值。<br>
    &nbsp;&nbsp;&nbsp;&nbsp; 3.SQL语句中包含变量<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 这时向TQuery控件添加SQL语句的代码应当这样写：<br>
    &nbsp;&nbsp; Query1.Close;<br>
    &nbsp;&nbsp; Query1.SQL.Clear;<br>
    &nbsp;&nbsp; Query1.SQL.Add(Format(′Select＊fromCustomer′＋′′＋′whereState=′＋′′′％S′′′，[StateValue]));<br>
    &nbsp;&nbsp; Query1.Open;在上面的四种方法中，第四种功能最强大，使用最灵活。(四川 
    李海川)</font></td>
  </tr>
</table>
</body>
</html>

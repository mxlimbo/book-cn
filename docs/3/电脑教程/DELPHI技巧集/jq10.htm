<html>

<head>
<base font="system">
<title>Delphi编程技巧十则</title>
</head>

<body bgcolor="#FFFFFF" link="#003366" text="#000000" vlink="#003366" alink="#FFFFFF">
<font face="system">

<p ALIGN="CENTER"><big><strong>Delphi编程技巧十则</strong></big> </p>

<p><font size="-1" face="system"><!-- EM -->　<br>
发信人: mxx (心心相印正义使者), 信区: Visual <br>
标 题: Delphi编程技巧十则(转寄) (转载) <br>
发信站: 日月光华站 (Sat May 9 15:59:49 1998) , 转信 </font></p>
<font size="-1" face="system">

<p>【 以下文字转载自 Zord 的信箱 】 <br>
【 原文由 所发表 】 <br>
发信人: icefh (冰原) <br>
信 区: RAD <br>
标 题: Delphi编程技巧十则 <br>
发信站: '紫金飞鸿' (Thu May 7 21:56:30 1998) , 转信 </p>

<p>Delphi编程技巧十则 </p>

<p>裔隽 <br>
　　Delphi作为一门新起的Windows编程语言，由于其集 <br>
众多的优秀特性于一身，因而越来越得到广大编程人员和 <br>
发烧友的青睐。以下十则技巧涉及的面比较广泛，希望能 <br>
够对Delphi的爱好者有所裨益。 </p>

<p>　　1．类似于vb．中的doevents功能。 </p>

<p>　　大家或许发现，在Delphi中没有类似于vb．中的doevents <br>
函数，这样有的时候，我们将无法使Windows响应多 <br>
个同时发生的事件。其实，在Delphi的application对象 <br>
中包括类似的一个方法：ProcessMessage，你可以通过调 <br>
用Application．ProcessMessage来完成象vb．中的doevents <br>
一样的功能。 </p>

<p>　　2．在Delphi中调用NetscapeNavigator。 </p>

<p>　　随着Internet的火爆，有没有想过在你的Delphi程序 <br>
中启动Netscape浏览器，显示出你指定的WWW地址的主页 <br>
。下面这个程序能够完成这一功能。 </p>

<p>　　programNetscape； </p>

<p>　　usesDDEMan； </p>

<p>　　procedureGotoURL（sURL：string）； </p>

<p>　　var </p>

<p>　　dde：TDDEClientConv； </p>

<p>　　begin </p>

<p>　　dde：TDDEClientConv．Create（nil）； </p>

<p>　　withddedo </p>

<p>　　begin </p>

<p>　　／／specifythelocationofnetscape．exe </p>

<p>　　ServiceApplication：′c：ιns32ιprogramιnetscape．exe′； </p>

<p>　　／／activatetheNetscapeNavigator </p>

<p>　　SetLink（′Netscape′，′WWW—Activate′）； </p>

<p>　　RequestData（′0xFFFFFFFF′）； </p>

<p>　　／／gotothespecifiedURL </p>

<p>　　SetLink（′Netscape′，′WWW—OpenURL′）； </p>

<p>　　RequestData（sURL＋′，，0xFFFFFFFF，0x3，，，′）； </p>

<p>　　CloseLink； </p>

<p>　　end； </p>

<p>　　dde．Free； </p>

<p>　　end； </p>

<p>　　begin </p>

<p>　　GotoURL（′http：／／www．yahoo．com／′）； </p>

<p>　　end． </p>

<p>　　3．格式化整数输出。 </p>

<p>　　比较大的数字在输出时会显得不易阅读，在Delphi中 <br>
显示带分节号的数字是相当简单的一件事，如下即可：xxxxx． <br>
caption：ΚFormatFloat（′＃′，524667500）。 </p>

<p>　　4．在编译时获得提示。 </p>

<p>　　在Delphi2．0中，编译时，可以让编译器告诉你一些 <br>
提示，比如哪些变量声明了，却从来没有使用过。我们知 <br>
道，可以通过菜单中的选项来控制是否要Delphi这样做， <br>
但如果由于一些特殊需要，你只要在指定的代码段需要Delphi <br>
这样的提示，怎么办呢？请参考如下的程序。 </p>

<p>　　｛＄HINTON｝ </p>

<p>　　procedureTform1．Button1Click（Sender：TObject）； </p>

<p>　　var </p>

<p>　　X：integer； </p>

<p>　　begin </p>

<p>　　end； </p>

<p>　　Reg．WriteString（′desktop′！洌?′）； </p>

<p>　　Reg．Free； </p>

<p>　　SystemParametersInfo（SPI—SETDESKWALLPAPER，0 <br>
，nil，SPIF—SENDWININICHANGE）； </p>

<p>　　end； </p>

<p>　　6．获得最后使用文件的日期。 </p>

<p>　　在Win95中有一项新的功能，就是可以获得访问文件 <br>
的最后日期。著名的CleanSweapforWin95软件中就是靠这 <br>
一功能来作为判断某个文件是否被经常访问的依据之一。 <br>
在Delphi中，我们可以通过下面的程序来达到此功能。 </p>

<p>　　functionGetFileLastAccessTime（sFileName：string） <br>
：TDateTime； </p>

<p>　　var </p>

<p>　　ffd：TWin32FindData； </p>

<p>　　dft：DWord； </p>

<p>　　lft：TFileTime； </p>

<p>　　h：THandle； </p>

<p>　　begin </p>

<p>　　／／getfileinformation </p>

<p>　　h：ΚWindows．FindFirstFile（PChar（sFileName），ffd）； </p>

<p>　　if（INVALID—HANDLE—VALUEΙΛh）then </p>

<p>　　begin </p>

<p>　　／／we′relookingforjustonefile，socloseour″f <br>
ind″ </p>

<p>　　Windows．FindClose（h）； </p>

<p>　　／／converttheFILETIMEtolocalFILETIME </p>

<p>　　FileTimeToLocalFileTime（ffd．ftLastAccessTime，lft）； </p>

<p>　　／／convertFILETIMEtoDOStime </p>

<p>　　FileTimeToDosDateTime（lft，LongRec（dft）．Hi <br>
，LongRec（dft）．Lo）； </p>

<p>　　／／finally，convertDOStimetoTDateTimeforusein <br>
Delphi′snativedate／timefunctions </p>

<p>　　Result：FileDateToDateTime（dft）； </p>

<p>　　end； </p>

<p>　　end； </p>

<p>　　GetFileLastAccessTime（）将会以Delphi的TdateTime <br>
格式返回你所指定的文件的最后访问日期。 </p>

<p>　　7．丰富多彩的标签。 </p>

<p>　　我们已经不满足于Delphi提供的简单的标签，能不能 <br>
在标签中有不同的字体，有不同的颜色，以此来丰富我们 <br>
的表现能力。回答是肯定的，并且用不着第三方提供的控 <br>
件，我们只要巧妙的利用Delphi自己提供的TRichEdit就 <br>
可以了。首先将TRichEdit控件的边框去除：RichEdit1 <br>
．BorderStyle：bsNone；同时设置只读属性为真：RichEdit1． <br>
ReadOnly：ΚTrue；然后，你利用write之类的 <br>
软件制作好RichText格式的文本，通过以下语句就可以显 <br>
示出来了： </p>

<p>　　RichEdit1．PlainText：False； </p>

<p>　　RichEdit1．Lines．LoadFromFile（′c：ιtest．rtf′）； </p>

<p>　　8．如何防止Win95显示严重错误。 </p>

<p>　　不管你的程序如何反复调试，交给用户之后，总有可 <br>
能发生你意想不到的错误，如何避免Win95显示出白色的 <br>
窗口，告诉你的用户发生了难堪的意外错误呢？我们可以 <br>
这样做： </p>

<p>　　var </p>

<p>　　wOldErrorMode：Word； </p>

<p>　　begin </p>

<p>　　／／tellwindowstoignorecriticalerrorsandsavecurrenterrormode </p>

<p>　　wOldErrorMode：SetErrorMode（SEM—FAILCRITICALERRORS）； </p>

<p>　　try </p>

<p>　　／／codethatmightgenerateacriticalerrorgoeshere．．． </p>

<p>　　finally </p>

<p>　　／／gobacktopreviouserrormode </p>

<p>　　SetErrorMode（wOldErrorMode）； </p>

<p>　　end； </p>

<p>　　end； </p>

<p>　　主要是利用SetErrorMode（）来完成这一功能。 </p>

<p>　　9．刚才用鼠标击了哪一个对象。 </p>

<p>　　在Win95中，鼠标的右键起到了很大的作用，但是， <br>
由于历史的原因，对于右键的使用即使在Delphi中，也还 <br>
不够有效，下面的程序可以告诉你如何知道刚才鼠标右击 <br>
的对象名称。首先建立一个popmenu，然后以下的代码就可 <br>
以告诉你刚才右击的对象名称：PopupMenu1．PopupComponent． <br>
ClassName。 </p>

<p>　　 </p>

<p>　　10．检测CD－ROM或是其他磁盘是否有过变化。 </p>

<p>　　 </p>

<p>　　最简单的检查CD－ROM或是磁盘是否有过变化的方法 <br>
是检查其volume号码。你可以简单地运用下面的函数来返 <br>
回磁盘的volume系列号码GetDiskVolSerialID（′E′）， <br>
函数代码如下： </p>

<p>　　functionGetDiskVolSerialID（cDriveName：char） <br>
：DWord； </p>

<p>　　var </p>

<p>　　dwTemp1，dwTemp2：DWord； </p>

<p>　　begin </p>

<p>　　GetVolumeInformation（PChar（cDriveName＋′：ι′）， </p>

<p>　　Nil， </p>

<p>　　0， </p>

<p>　　ΝResult， </p>

<p>　　dwTemp2， </p>

<p>　　dwTemp2， </p>

<p>　　Nil， </p>

<p>　　0）； </p>

<p>　　end； </p>

<p>-- </p>

<p>人生得意须尽欢 </p>

<p>莫使金樽空对月 </p>

<p>天生我材必有用 </p>

<p>千金散尽还复来 </p>

<p>※ 修改:&middot;mxx 於 May 9 21:20:38 修改本文&middot;[FROM: ms] <br>
※ 来源:&middot;日月光华站 bbs.fudan.edu.cn&middot;[FROM: ms] </p>
</font></font>
</body>
</html>

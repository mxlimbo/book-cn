<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="basicIE4.css" TYPE="text/css">
<TITLE>GDI Bitmaps and Device-Independent Bitmaps</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY>
<A NAME="212"><H1>GDI Bitmaps and Device-Independent Bitmaps</H1></A>
<P>There are two kinds of Windows bitmaps: <U>GDI</U> <U>bitmaps</U> and <U>DIBs</U>. GDI bitmap objects are represented by the Microsoft Foundation Class (MFC) Library version 6.0 <I>CBitmap</I> class. The GDI bitmap object has an associated Windows data structure, maintained inside the Windows GDI module, that is device-dependent. Your program can get a copy of the bitmap data, but the bit arrangement depends on the display hardware. GDI bitmaps can be freely transferred among programs on a single computer, but because of their device dependency, transferring bitmaps by disk or modem doesn't make sense.
<P><DIV CLASS=note>
<BLOCKQUOTE>
<IMG SRC="note.jpg" width=123 height=18 BORDER="0"><P>
In Win32, you're allowed to put a GDI bitmap handle on the clipboard for transfer to another process, but behind the scenes Windows converts the device-dependent bitmap to a DIB and copies the DIB to shared memory. That's a good reason to consider using DIBs from the start.
</BLOCKQUOTE></DIV>
<P>DIBs offer many programming advantages over GDI bitmaps. Because a DIB carries its own color information, color palette management is easier. DIBs also make it easy to control gray shades when printing. Any computer running Windows can process DIBs, which are usually stored in BMP disk files or as a resource in your program's EXE or DLL file. The wallpaper background on your monitor is read from a BMP file when you start Windows. The primary storage format for Microsoft Paint is the BMP file, and Visual C++ uses BMP files for toolbar buttons and other images. Other graphic interchange formats are 
available, such as TIFF, GIF, and JPEG, but only the DIB format is directly 
supported by the Win32 API.
<A NAME="213"><H2>Color Bitmaps and Monochrome Bitmaps</H2></A>
<P>Now might be a good time to reread the &quot;<A HREF="ch05d.htm#97">Windows Color Mapping</A>&quot; section in Chapter 5. As you'll see in this chapter, Windows deals with color bitmaps a little differently from the way it deals with brush colors.
<P>Many color bitmaps are 16-color. A standard VGA board has four contiguous color planes, with 1 corresponding bit from each plane combining to represent a pixel. The 4-bit color values are set when the bitmap is created. With a standard VGA board, bitmap colors are limited to the standard 16 colors. Windows does not use dithered colors in bitmaps.
<P>A monochrome bitmap has only one plane. Each pixel is represented by a single bit that is either off (0) or on (1). The <I>CDC::SetTextColor</I> function sets the &quot;off&quot; display color, and <I>SetBkColor</I> sets the &quot;on&quot; color. You can specify these pure colors individually with the Windows <I>RGB</I> macro.
</BODY>
</HTML>




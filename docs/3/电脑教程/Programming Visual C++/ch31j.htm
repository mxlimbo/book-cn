<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="basicIE4.css" TYPE="text/css">
<TITLE>Joining Two Database Tables</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY>
<A NAME="780"><H1>Joining Two Database Tables</H1></A><P>Most database programmers know that a 
<U>join</U> is one big logical table composed of fields from two or more related tables. In the Student Registration 
database, you could join the Student table with the Enrollment table to get a list of 
students and the classes they are enrolled in.
<P>Joins are easy to do with Visual C++ because ClassWizard lets you 
add tables to an existing recordset. A few additional programming tasks are 
needed, though. Here are the steps for joining the Enrollment table to the Student 
table in EX31A.
<OL>
<LI>Use ClassWizard to access the 
<I>CEx31aSet</I> class on the Member Variables tab. Click the Update Columns button, and then select the Enrollment table from the Student Registration database. If you 
get a warning message indicating that the data source does not 
contain all the columns that the recordset classes need, click the Yes 
button to continue. Then click the Bind All button to add the data 
members for the Enrollment fields.<P>
<LI>Edit the <I>CEx31aSet::GetDefaultSQL</I> function, as shown here, to 
access the Student and Enrollment tables: 
<P><PRE>CString CEx31aSet::GetDefaultSQL()
{
    <B>return _T(&quot;[Student],[Enrollment]&quot;);</B>
}</PRE><P>
<LI>Two StudentID fields are now in the joined table. In 
the <I>CEx31aSet::DoFieldExchange</I> function, edit the StudentID line 
to qualify the field with a table name:
<P><PRE><B>RFX_Long(pFX, _T(&quot;[Student].[StudentID]&quot;), m_StudentID);</B></PRE><P>
<LI>In the <I>CEx31aView::OnInitialUpdate</I> function, set the 
recordset's <I>m_strFilter</I> string as follows:
<P><PRE><B>m_pSet-&gt;m_strFilter = &quot;[Student].[StudentID] =
    [Enrollment].[StudentID]&quot;;</B></PRE><P>
<LI>In the <I>CEx31aView::OnDraw</I> function, add code to display the 
new Enrollment fields. Here is a sample:
<P><PRE><B>pDC-&gt;TextOut(pText.x+5000, pText.y, m_pSet-&gt;m_CourseID);</B></PRE>
</OL>

</BODY>
</HTML>




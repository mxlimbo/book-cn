<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="basicIE4.css" TYPE="text/css">
<TITLE>Chapter Thirty-Two -- Database Management with Microsoft Data Access Objects</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY>

<font size="+3">Chapter Thirty-Two</font>

<A NAME="789"><H1>Database Management with Microsoft Data Access Objects</H1></A>
<P>In <A HREF="ch31a.htm">Chapter 31</A>, you saw database management programming with the Microsoft Foundation Class (MFC) Library and Microsoft Open Database Connectivity (ODBC). In this chapter, you'll see a completely different database programming approach&#151;the MFC Data Access Objects (DAO) classes and the underlying DAO software. Actually, the approach is not so different. Instead of the ODBC classes <I>CDatabase</I> and <I>CRecordset</I>, you'll be using <I>CDaoDatabase</I> and <I>CDaoRecordset</I>. The ODBC and DAO classes are so similar (many member function names are the same) that you can convert ODBC applications, such as the examples in <A HREF="ch31a.htm">Chapter 31</A>, to DAO applications simply by changing class names and little else. Thus, you can look at DAO as a sort of replacement for ODBC. But as you'll see, DAO goes far beyond ODBC.

<p>This chapter merely scratches the surface of DAO, highlighting its features and outlining the differences between DAO and ODBC. Along the way, it explains the relationships between DAO, COM, the Microsoft Jet database engine, Visual Basic for Applications (VBA), and the MFC library. Finally, it presents a dynamic database example.

</BODY>
</HTML>




<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="basicIE4.css" TYPE="text/css">
<TITLE>The Application Framework's Built-In Menu Items</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY>
<A NAME="262"><H1>The Application Framework's Built-In Menu Items</H1></A>
<P>You don't have to start each frame menu from scratch&#151;the MFC library defines some useful menu items for you, along with all the command handler functions, as shown in Figure 13-3.
<P><A HREF="javascript:fullSize('F13OG03x.htm')"> <img src="F13OG03.JPG" width=404 height=149 border=0 ALT = "Click to view at full size."> </A><P>
<!-- caption -->
<B>Figure 13-3.</B> <I>The standard SDI frame menus.</I>
<!-- /caption -->
<P>The menu items and command message handlers that you get depend on the options you choose in AppWizard. If you deselect Printing and Print Preview, 
for example, the Print and Print Preview menu items don't appear. Because 
printing is optional, the message map entries are not defined in the <I>CView</I> class but are generated in your derived view class. That's why entries such as the following are defined in the <I>CMyView</I> class instead of in the <I>CView</I> class:
<P><pre>ON_COMMAND(ID_FILE_PRINT, CView::OnFilePrint)
ON_COMMAND(ID_FILE_PRINT_PREVIEW, CView::OnFilePrintPreview)</pre>
<A NAME="263"><H2>Enabling/Disabling Menu Items</H2></A>
<P>The application framework can disable a menu item if it does not find a command message handler in the current command route. This feature saves you the trouble of having to write <I>ON_UPDATE_COMMAND_UI</I> handlers. You can disable the feature if you set the <I>CFrameWnd</I> data member <I>m_bAutoMenuEnable</I> to <I>FALSE</I>.
<P>Suppose you have two views for one document, but only the first view class has a message handler for the <I>IDM_ZOOM</I> command. The Zoom item on the frame menu will be enabled only when the first view is active. Or consider the application framework-supplied Edit Cut, Copy, and Paste menu items. These will be disabled if you have not provided message handlers in your derived view or document class.
</BODY>
</HTML>




<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="basicIE4.css" TYPE="text/css">
<TITLE>The EX17A Example -- SDI with Serialization</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY>
<A NAME="374"><H1>The EX17A Example&#151;SDI with Serialization</H1></A><P>The EX17A example is similar to example EX16B. The student dialog and 
the toolbar are the same, and the view class is the same. Serialization has been 
added, together with an update command UI function for File Save. The header 
and implementation files for the view and document classes will be reused in 
example EX18A in the <A HREF="ch18a.htm">next chapter</A>.
<P>All the new code (code that is different from EX16B) is listed, with 
additions and changes to the AppWizard-generated code and the ClassWizard 
code in boldface. A list of the files and classes in the EX17A example is shown in 
the following table.
<TABLE WIDTH="95%" CELLPADDING="5">
<TR><TD VALIGN="TOP"><B>Header File</B></TD><TD VALIGN="TOP"> <B>Source Code File</B></TD><TD VALIGN="TOP"><B>Class</B></TD><TD VALIGN="TOP"><B>Description</B></TD></TR>
<TR><TD VALIGN="TOP">ex17a.h</TD><TD VALIGN="TOP">ex17a.cpp</TD><TD VALIGN="TOP"><I>CEx17aApp</I></TD><TD VALIGN="TOP">Application class (from AppWizard)</TD></TR>
<TR><TD VALIGN="TOP">&nbsp;</TD><TD VALIGN="TOP">&nbsp;</TD><TD VALIGN="TOP"><I>CAboutDlg</I></TD><TD VALIGN="TOP">About dialog</TD></TR>
<TR><TD VALIGN="TOP">MainFrm.h</TD><TD VALIGN="TOP">MainFrm.cpp</TD><TD VALIGN="TOP"><I>CMainFrame</I></TD><TD VALIGN="TOP">SDI main frame</TD></TR>
<TR><TD VALIGN="TOP">StuDoc.h</TD><TD VALIGN="TOP">StuDoc.cpp</TD><TD VALIGN="TOP"><I>CStudentDoc</I></TD><TD VALIGN="TOP">Student document</TD></TR>
<TR><TD VALIGN="TOP">StuView.h</TD><TD VALIGN="TOP">StuView.cpp</TD><TD VALIGN="TOP"><I>CStudentView</I></TD><TD VALIGN="TOP">Student form view (from EX16B)</TD></TR>
<TR><TD VALIGN="TOP">Student.h</TD><TD VALIGN="TOP">Student.cpp</TD><TD VALIGN="TOP"><I>CStudent</I></TD><TD VALIGN="TOP">Student record</TD></TR>
<TR><TD VALIGN="TOP">StdAfx.h</TD><TD VALIGN="TOP">StdAfx.cpp</TD><TD VALIGN="TOP">&nbsp;</TD><TD VALIGN="TOP">Precompiled headers (with afxtempl.h included)</TD></TR>
</TABLE>

<A NAME="375"><H2><I>CStudent</I></H2></A><P>The EX17A Student.h file is almost the same as the file in the EX16A 
project. (See Figure 16-2.) The header contains the macro
<P><PRE><B>DECLARE_SERIAL(CStudent)</B></PRE>
<P>instead of
<P><PRE>DECLARE_DYNAMIC(CStudent)</PRE>
<P>and the implementation file contains the macro
<P><PRE><B>IMPLEMENT_SERIAL(CStudent, CObject, 0)</B></PRE>
<P>instead of
<P><PRE>IMPLEMENT_DYNAMIC(CStudent, Cobject)</PRE>
<P>The virtual <I>Serialize</I> function has also been added.
<A NAME="376"><H2><I>CEx17aApp</I></H2></A><P>The application class files, shown in Figure 
17-4, contain only code generated by AppWizard. The application was generated with a default file extension and with the Microsoft Windows Explorer launch and drag-and-drop 
capabilities. These features are described later in this chapter.
<P>To generate additional code, you must do the following when you first 
run AppWizard: in the AppWizard Step 4 page, click the Advanced button. 
When the Advanced Options dialog appears, you must enter the filename 
extension in the upper-left control, as shown here.
<P><IMG SRC="G17OG01.GIF" width=335 height=387 BORDER=0>
<P>This ensures that the document template resource string contains 
the correct default extension and that the correct Explorer-related code is 
inserted into your application class 
<I>InitInstance</I> member function. You can change 
some of the other resource substrings if you want.
<DIV CLASS=note>
<BLOCKQUOTE>
<IMG SRC="note.jpg" width=123 height=18 BORDER="0"><P>
The generated calls to <I>Enable3dControls</I> and 
<I>Enable3dControlsStatic</I> in 
<I>CEx17aApp::InitInstance</I> are not necessary 
with Microsoft Windows 95, Microsoft Windows 98, or Microsoft 
Windows NT 4.0. These two functions support an older DLL that 
is shipped with Microsoft Windows 3.51.
</BLOCKQUOTE></DIV>
<P>

<TABLE cellpadding=5 width="95%"><TR><TD>

<P><B>EX17A.H</B>
<P>
<PRE>// ex17a.h : main header file for the EX17A application
//

#if !defined(AFX_EX17A_H__1A036EA3_821A_11D0_8FE2_00C04FC2A0C2__INCLUDED_)
#define AFX_EX17A_H__1A036EA3_821A_11D0_8FE2_00C04FC2A0C2__INCLUDED_

#if _MSC_VER &gt; 1000
#pragma once
#endif // _MSC_VER &gt; 1000
#ifndef __AFXWIN_H__
    #error include `stdafx.h' before including this file for PCH
#endif

#include &quot;resource.h&quot;       // main symbols

///////////////////////////////////////////////////////////////////////
// CEx17aApp:
// See ex17a.cpp for the implementation of this class
//

class CEx17aApp : public CWinApp
{
public:
    CEx17aApp();

// Overrides
    // ClassWizard generated virtual function overrides
    //{{AFX_VIRTUAL(CEx17aApp)
    public:
    virtual BOOL InitInstance();
    //}}AFX_VIRTUAL

// Implementation

    //{{AFX_MSG(CEx17aApp)
    afx_msg void OnAppAbout();
        // NOTE - the ClassWizard will add and remove member functions here.
        //    DO NOT EDIT what you see in these blocks of generated code !
    //}}AFX_MSG
    DECLARE_MESSAGE_MAP()
};


/////////////////////////////////////////////////////////////////////
//

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations
//  immediately before the previous line.

#endif // !defined(AFX_EX17A_H__1A036EA3_821A_11D0_8FE2_00C04FC2A0C2__INCLUDED_)
</PRE>

<P><B>EX17A.CPP</B>
<P>
<PRE>// ex17a.cpp : Defines the class behaviors for the application.
//

#include &quot;stdafx.h&quot;
#include &quot;ex17a.h&quot;

#include &quot;MainFrm.h&quot;
#include &quot;StuDoc.h&quot;
#include &quot;StuView.h&quot;

#ifdef _DEBUG
#define new DEBUG_NEW
#undef THIS_FILE
static char THIS_FILE[] = __FILE__;
#endif

///////////////////////////////////////////////////////////////////////
// CEx17aApp

BEGIN_MESSAGE_MAP(CEx17aApp, CWinApp)
    //{{AFX_MSG_MAP(CEx17aApp)

    ON_COMMAND(ID_APP_ABOUT, OnAppAbout)
        // NOTE - the ClassWizard will add and remove mapping macros here.
        //    DO NOT EDIT what you see in these blocks of generated code!
    //}}AFX_MSG_MAP
    // Standard file based document commands
    ON_COMMAND(ID_FILE_NEW, CWinApp::OnFileNew)
    ON_COMMAND(ID_FILE_OPEN, CWinApp::OnFileOpen)
END_MESSAGE_MAP()

///////////////////////////////////////////////////////////////////////
// CEx17aApp construction

CEx17aApp::CEx17aApp()
{
    // TODO: add construction code here,
    // Place all significant initialization in InitInstance
}

///////////////////////////////////////////////////////////////////////
// The one and only CEx17aApp object

CEx17aApp theApp;
///////////////////////////////////////////////////////////////////////
// CEx17aApp initialization

BOOL CEx17aApp::InitInstance()
{
    AfxEnableControlContainer();

    // Standard initialization
    // If you are not using these features and wish to reduce the size
    //  of your final executable, you should remove from the following
    //  the specific initialization routines you do not need.

#ifdef _AFXDLL
    Enable3dControls();       // Call this when using MFC in a shared DLL
#else
    Enable3dControlsStatic(); // Call this when linking to MFC statically
#endif

    // Change the registry key under which our settings are stored.
    // You should modify this string to be something appropriate
    // such as the name of your company or organization.
    SetRegistryKey(_T(&quot;Local AppWizard-Generated Applications&quot;));

    LoadStdProfileSettings();  // Load standard INI file options 
                               //  (including MRU)

    // Register the application's document templates.
    //  Document templates serve as the connection between
    //  documents, frame windows and views.

    CSingleDocTemplate* pDocTemplate;
    pDocTemplate = new CSingleDocTemplate(
        IDR_MAINFRAME,
        RUNTIME_CLASS(CStudentDoc),
        RUNTIME_CLASS(CMainFrame),       // main SDI frame window
        RUNTIME_CLASS(CStudentView));
    AddDocTemplate(pDocTemplate);

    // Enable DDE Execute open
    EnableShellOpen();
    RegisterShellFileTypes(TRUE);
    // Parse command line for standard shell commands, DDE, file open
    CCommandLineInfo cmdInfo;
    ParseCommandLine(cmdInfo);

    // Dispatch commands specified on the command line
    if (!ProcessShellCommand(cmdInfo))
        return FALSE;

    // The one and only window has been initialized,
    //  so show and update it.
    m_pMainWnd-&gt;ShowWindow(SW_SHOW);
    m_pMainWnd-&gt;UpdateWindow();

    // Enable drag/drop open
    m_pMainWnd-&gt;DragAcceptFiles();

    return TRUE;
}

///////////////////////////////////////////////////////////////////////
// CAboutDlg dialog used for App About

class CAboutDlg : public CDialog
{
public:
    CAboutDlg();

// Dialog Data
    //{{AFX_DATA(CAboutDlg)

    enum { IDD = IDD_ABOUTBOX };
    //}}AFX_DATA

    // ClassWizard generated virtual function overrides
    //{{AFX_VIRTUAL(CAboutDlg)
    protected:
    virtual void DoDataExchange(CDataExchange* pDX); // DDX/DDV support
    //}}AFX_VIRTUAL

// Implementation
protected:
    //{{AFX_MSG(CAboutDlg)
        // No message handlers
    //}}AFX_MSG
    DECLARE_MESSAGE_MAP()
};
CAboutDlg::CAboutDlg() : CDialog(CAboutDlg::IDD)
{
    //{{AFX_DATA_INIT(CAboutDlg)
    //}}AFX_DATA_INIT
}

void CAboutDlg::DoDataExchange(CDataExchange* pDX)
{
    CDialog::DoDataExchange(pDX);
    //{{AFX_DATA_MAP(CAboutDlg)
    //}}AFX_DATA_MAP
}

BEGIN_MESSAGE_MAP(CAboutDlg, CDialog)
    //{{AFX_MSG_MAP(CAboutDlg)
        // No message handlers
    //}}AFX_MSG_MAP
END_MESSAGE_MAP()

// App command to run the dialog
void CEx17aApp::OnAppAbout()
{
    CAboutDlg aboutDlg;
    aboutDlg.DoModal();
}

///////////////////////////////////////////////////////////////////////
// CEx17aApp commands
</PRE>

</TD></TR></TABLE>
<B>Figure 17-4.</B> <I>The </I>CEx17aApp<I> class listing.</I>

<A NAME="377"><H2><I>CMainFrame</I></H2></A><P>The main frame window class code, shown in Figure 
17-5, is almost unchanged from the code that AppWizard generated. The overridden 
<I>ActivateFrame</I> function and the 
<I>WM_DROPFILES</I> handler exist solely for trace purposes.
<P>

<TABLE cellpadding=5 width="95%"><TR><TD>
<P><B>MAINFRM.H</B>
<P>
<PRE>// MainFrm.h : interface of the CMainFrame class
//
///////////////////////////////////////////////////////////////////////

#if !defined(AFX_MAINFRM_H__1A036EA7_821A_11D0_8FE2_00C04FC2A0C2__INCLUDED_)
#define AFX_MAINFRM_H__1A036EA7_821A_11D0_8FE2_00C04FC2A0C2__INCLUDED_
#if _MSC_VER &gt;= 1000
#pragma once
#endif // _MSC_VER &gt;= 1000

class CMainFrame : public CFrameWnd
{
protected: // create from serialization only
    CMainFrame();
    DECLARE_DYNCREATE(CMainFrame)

// Attributes
public:

// Operations
public:

// Overrides
    // ClassWizard generated virtual function overrides
    //{{AFX_VIRTUAL(CMainFrame)
    public:
    virtual BOOL PreCreateWindow(CREATESTRUCT&amp; cs);
    virtual void ActivateFrame(int nCmdShow = -1);
    //}}AFX_VIRTUAL

// Implementation
public:
    virtual ~CMainFrame();
#ifdef _DEBUG
    virtual void AssertValid() const;
    virtual void Dump(CDumpContext&amp; dc) const;
#endif

protected:  // control bar embedded members
    CStatusBar  m_wndStatusBar;
    CToolBar    m_wndToolBar;

// Generated message map functions
protected:
    //{{AFX_MSG(CMainFrame)
    afx_msg int OnCreate(LPCREATESTRUCT lpCreateStruct);
    afx_msg void OnDropFiles(HDROP hDropInfo);
    //}}AFX_MSG
    DECLARE_MESSAGE_MAP()
};
///////////////////////////////////////////////////////////////////////

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations 
//  immediately before the previous line.

#endif // !defined(AFX_MAINFRM_H__1A036EA7_821A_11D0_8FE2_00C04FC2A0C2__INCLUDED_)
</PRE>
<P><B>MAINFRM.CPP</B>
<P><PRE>// MainFrm.cpp : implementation of the CMainFrame class
//

#include &quot;stdafx.h&quot;
#include &quot;ex17a.h&quot;

#include &quot;MainFrm.h&quot;

#ifdef _DEBUG
#define new DEBUG_NEW
#undef THIS_FILE
static char THIS_FILE[] = __FILE__;
#endif

///////////////////////////////////////////////////////////////////////
// CMainFrame

IMPLEMENT_DYNCREATE(CMainFrame, CFrameWnd)

BEGIN_MESSAGE_MAP(CMainFrame, CFrameWnd)
    //{{AFX_MSG_MAP(CMainFrame)
    ON_WM_CREATE()
    ON_WM_DROPFILES()
    //}}AFX_MSG_MAP
END_MESSAGE_MAP()

static UINT indicators[] =
{
    ID_SEPARATOR,           // status line indicator
    ID_INDICATOR_CAPS,
    ID_INDICATOR_NUM,
    ID_INDICATOR_SCRL,
};
///////////////////////////////////////////////////////////////////////
// CMainFrame construction/destruction

CMainFrame::CMainFrame()
{
    // TODO: add member initialization code here

}

CMainFrame::~CMainFrame()
{
}

int CMainFrame::OnCreate(LPCREATESTRUCT lpCreateStruct)
{
    if (CFrameWnd::OnCreate(lpCreateStruct) == -1)
        return -1;
    
    if (!m_wndToolBar.Create(this) ||
        !m_wndToolBar.LoadToolBar(IDR_MAINFRAME))
    {
        TRACE0(&quot;Failed to create toolbar\n&quot;);
        return -1;      // fail to create
    }

    if (!m_wndStatusBar.Create(this) ||
        !m_wndStatusBar.SetIndicators(indicators,
          sizeof(indicators)/sizeof(UINT)))
    {
        TRACE0(&quot;Failed to create status bar\n&quot;);
        return -1;      // fail to create
    }

    // TODO: Remove this if you don't want tool tips
    //  or a resizeable toolbar
    m_wndToolBar.SetBarStyle(m_wndToolBar.GetBarStyle() |
        CBRS_TOOLTIPS | CBRS_FLYBY | CBRS_SIZE_DYNAMIC);

    // TODO: Delete these three lines if you don't want the toolbar to
    //  be dockable
    m_wndToolBar.EnableDocking(CBRS_ALIGN_ANY);
    EnableDocking(CBRS_ALIGN_ANY);
  
DockControlBar(&amp;m_wndToolBar);
    return 0;
}

BOOL CMainFrame::PreCreateWindow(CREATESTRUCT&amp; cs)
{
    // TODO: Modify the Window class or styles here by modifying
    //  the CREATESTRUCT cs

    return CFrameWnd::PreCreateWindow(cs);
}

///////////////////////////////////////////////////////////////////////
// CMainFrame diagnostics

#ifdef _DEBUG
void CMainFrame::AssertValid() const
{
    CFrameWnd::AssertValid();
}

void CMainFrame::Dump(CDumpContext&amp; dc) const
{
    CFrameWnd::Dump(dc);
}

#endif //_DEBUG

///////////////////////////////////////////////////////////////////////
// CMainFrame message handlers
void CMainFrame::ActivateFrame(int nCmdShow) 
{
<B>    TRACE(&quot;Entering CMainFrame::ActivateFrame\n&quot;);</B>
    CFrameWnd::ActivateFrame(nCmdShow);
}

void CMainFrame::OnDropFiles(HDROP hDropInfo) 
{
<B>    TRACE(&quot;Entering CMainFrame::OnDropFiles\n&quot;);</B>
    CFrameWnd::OnDropFiles(hDropInfo);
}</PRE>
</TD></TR></TABLE>

<B>Figure 17-5.</B> <I>The </I>CMainFrame<I> class listing.</I>




<A NAME="378"><H2><I>CStudentDoc</I></H2></A><P>The <I>CStudentDoc</I> class is the same as the 
<I>CStudentDoc</I> class from the <A HREF="ch16a.htm">previous chapter</A> (shown in Figure 16-4) except for four functions: 
<I>Serialize</I>, <I>DeleteContents</I>, 
<I>OnOpenDocument</I>, and <I>OnUpdateFileSave</I>.
<A NAME="379"><H3><I>Serialize</I></H3></A><P>One line has been added to the AppWizard-generated function to serialize 
the document's student list, as shown here:
<P>
<PRE>///////////////////////////////////////////////////////////////////////
// CStudentDoc serialization

void CStudentDoc::Serialize(CArchive&amp; ar)
{
<B>    TRACE(&quot;Entering CStudentDoc::Serialize\n&quot;);</B>
    if (ar.IsStoring())
    {
        // TODO: add storing code here
    }
    else
    {
        // TODO: add loading code here
    }
<B>    m_studentList.Serialize(ar);</B>
}</PRE>
<A NAME="380"><H3><I>DeleteContents</I></H3></A><P>The <I>Dump</I> statement is replaced by a simple 
<I>TRACE</I> statement. Here is the modified code:
<P>
<PRE>void CStudentDoc::DeleteContents() 
{
    TRACE(&quot;Entering CStudentDoc::DeleteContents\n&quot;);
    while (m_studentList.GetHeadPosition()) {
        delete m_studentList.RemoveHead();
    }
}</PRE>
<A NAME="381"><H3><I>OnOpenDocument</I></H3></A><P>This virtual function is overridden only for the purpose of displaying a 
<I>TRACE</I> message, as shown below.
<P><PRE>BOOL CStudentDoc::OnOpenDocument(LPCTSTR lpszPathName)
{
<B>    TRACE(&quot;Entering CStudentDoc::OnOpenDocument\n&quot;);</B>
     if (!CDocument::OnOpenDocument(lpszPathName))
        return FALSE;
     
    // TODO: Add your specialized creation code here
     
    return TRUE;
}</PRE>
<A NAME="382"><H3><I>OnUpdateFileSave</I></H3></A><P>This message map function grays the File Save toolbar button when the 
document is in the unmodified state. The view controls this state by calling 
the document's <I>SetModifiedFlag</I> function, as shown here:
<P><PRE>void CStudentDoc::OnUpdateFileSave(CCmdUI* pCmdUI)
{
<B>    // Disable disk toolbar button if file is not modified
    pCmdUI-&gt;Enable(IsModified());</B>
}</PRE>
<A NAME="383"><H2><I>CStudentView</I></H2></A><P>The code for the <I>CStudentView</I> class comes from the <A HREF="ch16a.htm">previous chapter</A>. 
Figure 16-5 shows the code.
<A NAME="384"><H2>Testing the EX17A Application</H2></A><P>Build the program and start it from the debugger, and then test it by typing 
some data and saving it on disk with the filename Test.17a. (You don't need to 
type the <I>.17a</I>.)
<P>Exit the program, and then restart it and open the file you saved. Did 
the data you typed come back? Take a look at the Debug window and observe 
the sequence of function calls. Is the following sequence produced when you 
start the application and open the file?
<P><PRE>Entering CStudentDoc constructor
Entering CStudentView constructor
Entering CStudentDoc::OnNewDocument
Entering CStudentDoc::DeleteContents
Entering CStudentView::OnInitialUpdate
Entering CStudentView::OnUpdate
Entering CMainFrame::ActivateFrame
Entering CStudentDoc::OnOpenDocument
Entering CStudentDoc::DeleteContents
Entering CStudentDoc::Serialize
Entering CStudent::Serialize
Entering CStudent::Serialize
Entering CStudent::Serialize
Entering CStudentView::OnInitialUpdate
Entering CStudentView::OnUpdate
Entering CMainFrame::ActivateFrame</PRE>
</BODY>
</HTML>




<HTML>
<HEAD>
<LINK REL=StyleSheet HREF="basicIE4.css" TYPE="text/css">
<TITLE>The MFC OLE Architecture for Component Programs</TITLE>

<SCRIPT LANGUAGE="JavaScript"><!-- 
function fullSize(sURL){window.open(sURL,'scrshot','width=500,height=375,top=20,left=20,directories=no , Toolbar = no, resizable = yes, menubar = no, ScrollBars = yes ');
}
--></SCRIPT>
</HEAD>
<BODY>
<A NAME="640"><H1><B>The MFC OLE Architecture for Component Programs</B></H1></A>
<P>We're not going into too many details here&#151;just enough to allow you to understand the new files in the next example. You need to know about three new MFC base classes&#151;<I>COleIPFrameWnd</I>, <I>COleServerDoc</I>, and <I>COleServerItem</I>.

<P>When you use AppWizard to generate an OLE component, AppWizard generates a class derived from each of the base classes, in addition to an application class, a main frame class, and a view class. The 
<I>COleIPFrameWnd</I> class is rather like <I>CFrameWnd</I>. It's your application's main frame window, which contains the view. It has a menu associated with it, <I>IDR_SRVR_INPLACE</I>, which will be merged into the container program's menu. When your component program is running in place, it's using the in-place frame, and when it's running stand-alone or embedded, it's using the regular frame, which is an object of a class derived from <I>CFrameWnd</I>. The embedded menu is <I>IDR_SRVR_EMBEDDED</I>, and the stand-alone menu is <I>IDR_MAINFRAME</I>.

<P>The <I>COleServerDoc</I> class is a replacement for <I>CDocument</I>. It contains added features that support OLE connections to the container. The <I>COleServerItem</I> class works with the 
<I>COleServerDoc</I> class. If components never supported OLE linking, the functionality of the two classes could be combined into one class. Because stand-alone component programs do support linking, the MFC architecture dictates that both classes be present in all components. You'll see in 
the EX28C example that we can make our own simple mini-server without this division.

<P>Together, the <I>COleServerItem</I> class and the <I>COleServerDoc</I> class implement a whole series of OLE interfaces, including <I>IOleObject</I>, <I>IDataObject</I>, <I>IPersistStorage</I>, and 
<I>IOleInPlaceActiveObject</I>. These classes make calls to the container, using interface pointers that the container passes to them. The important things to know, however, are that your derived 
<I>CView</I> class draws in the component's in-place-active window and that the derived <I>COleServerItem</I> class draws in the metafile on command from the container.

</BODY>
</HTML>





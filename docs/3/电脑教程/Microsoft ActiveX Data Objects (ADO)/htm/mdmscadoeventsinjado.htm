<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=GB_2312-80">
<title>ADO/WFC 中的 ADO 事件</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h2><a name="mdmscadoeventsinjado"></a>ADO/WFC 中的 ADO 事件</h2>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:请参阅">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdmscADOEventsInJADO_C">
</object></p>
<p>
ADO for Windows Foundation Classes (ADO/WFC) 建立在 ADO 事件模型之上，提供简化的应用程序接口。通常，ADO/WFC 截取 ADO 事件，将事件参数合并到单个事件类之中，然后调用事件处理程序。 </p>
<p>
<b>使用 ADO/WFC 中的 ADO 事件 </b>
<ol>
<li>
定义自己的事件处理程序方法以处理事件。例如，当您要处理 <b>ConnectionEvent </b>类中的 <b>ConnectComplete </b>事件时，可使用下列程序：<pre>public void onConnectComplete(Object sender,ConnectionEvent e)
{
System.out.println("onConnectComplete:" + e);
}
</pre>
</li>
<li>
定义对象处理程序以表示您的事件处理程序方法。对 <b>ConnectionEvent</b> 类型的事件，处理程序对象数据类型应该是 <b>ConnectEventHandler</b>，而对 <b>RecordsetEvent</b> 类型事件则应为 <b>RecordsetEventHandler</b> 数据类型。例如，请为 <b>ConnectComplete</b> 事件处理程序编写如下程序：<pre>ConnectionEventHandler handler = 
new ConnectionEventHandler(this, "onConnectComplete");
</pre>
<p class=tl>
<b>ConnectionEventHandler</b> 构造函数的第一个参数是对某个类的引用，该类含有第二个参数命名的方法。</P><p class=tl>
Microsoft Visual J++ 编译器也支持相同的语法：</P><pre>ConnectionEventHandler handler = 
new ConnectionEventHandler(this.onConnectComplete);</pre>
<p class=tl>
</P><p class=tl>
单个参数是对所需类（即 <b>this</b>）及其方法的引用（即 <b>onConnectComplete</b>）。</P></li>
<li>
在指定用来处理特殊类型事件的处理程序列表中添加事件处理程序。使用带有 <b>addOn</b>EventName(handler) 这类名称的方法。<br><br></li>
<li>
ADO/WFC 在内部执行所有的 ADO 事件处理程序。所以，<b>Connection </b>或 <b>Recordset </b>操作引起的事件都由 ADO/WFC 事件处理程序截取。<p class=tl>
ADO/WFC 事件处理程序传送 ADO/WFC <b>ConnectionEvent</b> 类实例的 ADO <b>ConnectionEvent</b> 参数，或 ADO/WFC <b>RecordsetEvent</b> 类实例的 ADO <b>RecordsetEvent</b> 参数。这些 ADO/WFC 类将合并 ADO 事件参数；也就是说，对所有 ADO <b>ConnectionEvent</b> 或 <b>RecordsetEvent</b> 方法的每个特有的参数，每个 ADO/WFC 都含有一个相应的数据成员。</P></li>
<li>
然后 ADO/WFC 通过 ADO/WFC 的事件对象调用事件处理程序。例如，<b>onConnectComplete </b>事件处理程序有下列签名：<pre>public void onConnectComplete(Object sender,ConnectionEvent e)
</pre>
<p class=tl>
第一个参数是传送事件（<b>Connection</b> 或 <b>Recordset</b>）的对象类型，而第二个参数则是 ADO/WFC 事件对象（<b>ConnectionEvent</b> 或 <b>RecordsetEvent</b>）。</P><p class=tl>
事件处理程序的签名比 ADO 事件简单。但是，您还必须要了解 ADO 事件模型才能知道适用于事件的参数以及响应的方法。</P></li>
<li>
从事件处理程序返回到 ADO 事件的 ADO/WFC 处理程序。ADO/WFC 将复制相关的 ADO/WFC 事件数据成员到 ADO 事件参数，然后返回 ADO 事件处理程序。<br><br></li>
<li>
结束处理的时候，从 ADO/WFC 事件处理程序列表上删除处理程序。使用带有 <b>removeOn</b>EventName(handler) 这类名称的方法。</li>
</ol>
</BODY>
</HTML>

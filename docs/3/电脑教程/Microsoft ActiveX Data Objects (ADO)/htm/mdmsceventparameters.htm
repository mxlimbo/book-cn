<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=GB_2312-80">
<title>事件参数</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="mdmsceventparameters"></a>事件参数</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:请参阅">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdmscEventParameters_C">
</object></p>
<p>
每个事件处理程序都有一个控制它的状态参数。大部分 <b>Complete</b> 事件都有错误参数用于报告引起事件发生的操作是否成功。另外还有一个对象参数，用于标识操作所针对的 ADO 对象。</p>
<p>
参数同时被传递到 Will 事件以便用于挂起操作。这样您就有机会检查参数并确定操作是否应该完成。</p>
<p>
某些事件处理程序有原因参数，该参数可以提供有关事件发生原因的详细信息。</p>
<h3>状态参数</h3>
<p>
当事件处理程序例程被调用时，状态参数将被设置为下列信息值之一。</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=50%><b>值</b></td>
<td class=label width=50%><b>说明</b></td>
</tr>
<tr valign=top>
<td width=50%><b>adStatusOK</b></td>
<td width=50%>引发事件的操作已成功发生。</td>
</tr>
<tr valign=top>
<td width=50%><b>adStatusErrorsOccurred</b></td>
<td width=50%>引发事件的操作未成功发生，或 <b>Will</b> 事件取消了操作。有关细节，请单击错误参数。 </td>
</tr>
<tr valign=top>
<td width=50%><b>adStatusCantDeny</b></td>
<td width=50%><b>Will </b>事件无法请求取消即将开始的操作。</td>
</tr>
</table><br>
<p>
在事件处理程序例程返回之前，应当保持状态参数不变，或将其设置为下列请求值之一。</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=50%><b>值</b></td>
<td class=label width=50%><b>说明</b></td>
</tr>
<tr valign=top>
<td width=50%><b>adStatusUnwantedEvent</b></td>
<td width=50%>请求该事件处理程序不接收以后的通知。 </td>
</tr>
<tr valign=top>
<td width=50%><b>adStatusCancel</b></td>
<td width=50%>请求取消即将开始的操作。</td>
</tr>
</table><br>
<p>
由事件类型所决定，当事件处理程序被调用时，状态参数可以取下列值之一。</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=50%><b>事件类型</b></td>
<td class=label width=50%><b>值</b></td>
</tr>
<tr valign=top>
<td width=50%>Will </td>
<td width=50%><b>adStatusOK</b>,<b> adStatusCantDeny</b></td>
</tr>
<tr valign=top>
<td width=50%>Complete </td>
<td width=50%><b>adStatusOK</b>,<b> adStatusErrorsOccurred</b></td>
</tr>
</table><br>
<p>
取决于事件类型，在事件处理程序返回时，状态参数可以取下列值之一。</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=50%><b>事件类型</b></td>
<td class=label width=50%><b>值</b></td>
</tr>
<tr valign=top>
<td width=50%>Will</td>
<td width=50%><b>adStatusOK</b>, <b>adStatusCancel</b>,<b> adStatusUnwantedEvent </b></td>
</tr>
<tr valign=top>
<td width=50%>Complete </td>
<td width=50%><b>adStatusOK</b>,<b> adStatusUnwantedEvent </b></td>
</tr>
</table><br>
<h3>错误参数</h3>
<p>
错误参数是对 ADO <a href="mdobjerror.htm">Error</a> 对象的引用。状态参数为 <b>adStatusErrorsOccurred</b> 时，该对象包含操作失败的详细信息。</p>
<h3>对象参数</h3>
<p>
对象参数是对所操作的 ADO 对象的引用。例如，可以同时打开几个 <b>Connection</b> 对象，但一次只能打开一个 <b>Disconnect</b> 事件处理程序。如果所有连接关闭，将对象参数设置为关闭的 <b>Connection</b> 对象，即可调用 <b>Disconnect</b> 事件处理程序。</p>
<p>
<b>原因参数</b></p>
<p>
原因参数（<b>adReason</b>）提供有关事件发生原因的附加信息。带有 <b>adReason</b> 参数的方法可以被多次调用 — 甚至被相同的操作调用，但每次调用都有不同原因。</p>
<p>
例如，<b>WillChangeRecord</b> 事件处理程序被某些操作调用，这些操作将进行或撤消记录的插入、删除或修改。<b>adReason</b> 参数被作为只处理特殊事件的筛选器来使用。</p>
<p>
必须在 <b>adStatus</b> 参数中返回 <b>adStatusUnwantedEvent</b>，要求不带 <b>adReason</b> 参数的事件处理程序停止接收事件通知。但是，带有 <b>adReason</b> 参数的事件处理程序可能会接收几个通知，每个通知有不同原因。所以，对每个不同原因产生的通知，必须返回 <b>adStatusUnwantedEvent</b>。</p>
<p>
例如，假设 <b>WillChangeRecord</b> 事件处理程序是用 Microsoft&reg;<sup> </sup>Visual Basic&reg; 编写的。如果您以后不想接收任何进一步的通知，只需编写如下代码：</p>
<pre>Set <span class=cfe><b>adStatus</b></span> = adStatusUnwantedEvent
</pre>
<p>
但是，如果要处理其行将被删除的事件，但取消所有其他原因所带来的通知时，请编写如下程序：</p>
<pre>if (<span class=cfe><b>adReason</b></span> = adRsnDelete)
'处理此原因引起的事件。
...
else
'停止接收任何其他原因引起的事件。
Set <span class=cfe><b>adStatus</b></span> = adStatusUnwantedEvent
... 
</pre>
</BODY>
</HTML>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=GB_2312-80">
<title>多维模式和数据的概述</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="ammscoverviewmdschemasanddata"></a>多维模式和数据的概述</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:请参阅">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="ammscOverviewMDschemasanddata_C">
</object></p>
<h2>了解多维模式</h2>
<p>
在 ADO MD 中，中心元数据对象是“立方”。立方由相关的维、分级结构、级别和成员所构造的集合组成。</p>
<p>
“维”是多维数据库中数据的独立目录，由业务实体产生。通常，维包含用作查询标准以度量数据库的项目。</p>
<p>
“分级结构”是合计维的路径。维可以有多个间隔级别，级别具有父子关系。分级结构定义这些级别之间的关系。</p>
<p>
“级别”是分级结构中进行合计的一个步骤。对具有多层信息的维，每一层就是一个级别。</p>
<p>
“成员”是维中的数据项目。通常，使用成员来创建标题或描述数据库的度量。</p>
<p>
立方由 ADO MD 中的 <a href="amobjcubedef.htm">CubeDef</a> 对象表示。维、分级结构、级别和成员也由它们相应的 ADO MD 对象表示：<a href="amobjdimension.htm">Dimension</a>、<a href="amobjhierarchy.htm">Hierarchy</a>、<a href="amobjlevel.htm">Level</a> 和 <a href="amobjmember.htm">Member</a>。</p>
<h3>维</h3>
<p>
立方的维取决于要在数据库中模型化的业务实体及数据类型。通常，对于选定数据，每个维均是独立的条目点或机制。</p>
<p>
例如，包含销售数据的立方有如下五个维：Salesperson、Geography、Time、Products 和 Measures。Measures 维包含实际的销售数据值，其它维代表对销售数据值进行分类和分组的方法。</p>
<p>
Geography 维具有如下成员集：</p>
<pre>{All, North America, Europe, Canada, USA, UK, Germany, Canada-West,
Canada-East, USA-NW, USA-SW, USA-NE, USA-SE, England, Scotland, 
Wales,Ireland, Germany-North, Germany-South, Ottawa, Toronto, 
Vancouver, Calgary, Seattle, Boise, Los Angeles, Houston, 
Shreveport, Miami, Boston, New York, London, Dover, Glasgow, 
Edinburgh, Cardiff, Pembroke, Belfast, Londonderry, Berlin, 
Hamburg, Munich, Stuttgart}</pre>
<h3>分级结构</h3>
<p>
分级结构定义使维的级别能被“卷起”或分组的方法。维可以有多个分级结构。在 Geography 维中，存在天然的分级结构：</p>
<p>
<img src="mdhierarchy.gif" border=0></p>
<h3>级别</h3>
<p>
在上面的图表所描述的范例 Geography 维中，每个方框均代表分级结构中级别。</p>
<p>
每个级别均有成员集合，如下所示：
<ul type=disc>
<li>
The World = {All}<br><br></li>
<li>
Continents = {North America, Europe}<br><br></li>
<li>
Countries = {Canada, USA, UK, Germany}<br><br></li>
<li>
Regions = {Canada-East, Canada-West, USA-NE, USA-NW, USA-SE, USA-SW, England, Ireland, Scotland, Wales, Germany-North, Germany-South}<br><br></li>
<li>
Cities = {Ottawa, Toronto, Vancouver, Calgary, Seattle, Boise, Los Angeles, Houston, Shreveport, Miami, Boston, New York, London, Dover, Glasgow, Edinburgh, Cardiff, Pembroke, Belfast, Londonderry, Berlin, Hamburg, Munich, Stuttgart}</li>
</ul>
<h3>成员</h3>
<p>
位于分级结构叶级别处的成员没有子，位于根级别处的成员则没有父。所有其它成员均至少有一个父，并至少有一个子。例如，对 Geography 维分级结构树进行部分截断产生如下父子关系：
<ul type=disc>
<li>
{All}（是）{Europe, North America}（的父）<br><br></li>
<li>
{North America}（是）{Canada, USA}（的父）<br><br></li>
<li>
{USA}（是）{USA-NE, USA-NW, USA-SE, USA-SW}（的父）<br><br></li>
<li>
{USA-NW}（是）{Boise, Seattle}（的父）</li>
</ul>
<p>
每个维沿一个或多个分级结构即可固定成员。假设有一个 Time 维，有两种方法从 Days 级别卷起到 Year 级别：</p>
<p>
<img src="mshchart.gif" border=0></p>
<p>
该范例也说明了另一个特性：Year-Week 分级结构的 Week 级别上的一些成员没有在 Year-Quarter 分级结构的任何级别中出现。即分级结构不必包括维的所有成员。</p>
</BODY>
</HTML>

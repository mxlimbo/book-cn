<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=GB_2312-80">
<title>自定义文件 SQL 节</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h2><a name="mdmsccustomizationfilesqlsection"></a>自定义文件 SQL 节</h2>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:请参阅">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdmscCustomizationFileSQLSection_C">
</object></p>
<p>
SQL 节可包含新的 SQL 字符串，用于替代客户端命令字符串。如果节内没有 SQL 字符串，则该节将被忽略。</p>
<p>
新的 SQL 字符串可以“参数化”。也就是说，<b>sql</b> 节的 SQL 字符串（由‘？’标明）中的参数，可以用客户端命令字符串（由一个用括号括起的、以逗号分隔的列表标明）的标识符中的相应参数替代。标识符和括号内的参数列表可以象函数调用一样操作。</p>
<p>
例如，假设客户端命令字符串为“CustomerByID(4)”，SQL 节标头为 [SQL CustomerByID]，而新的 SQL 节的字符串为“SELECT * FROM Customers WHERE CustomerID = ?”。处理程序将生成“SELECT * FROM Customers WHERE CustomerID = 4”并使用该字符串查询数据源。</p>
<p>
如果新的 SQL 语句为空字符串("")，则该节将被忽略。</p>
<p>
如果新的 SQL 语句字符串无效，则该语句执行会失败，客户端参数实际上被忽略。使用如下指定可由此“故意”关闭客户端的所有 SQL 命令：</p>
<pre>[SQL default] 
SQL = " "
</pre>
<p>
<b>语法</b></p>
<p>
替代 SQL 字符串条目的格式：</p>
<p>
<b>SQL=<i>sqlString</i></b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=33%><b>组成部分</b></td>
<td class=label width=67%><b>说明</b></td>
</tr>
<tr valign=top>
<td width=33%><b>SQL</b></td>
<td width=67%>文字字符串 — 指示这是 SQL 节条目。</td>
</tr>
<tr valign=top>
<td width=33%><b><i>sqlString</i></b></td>
<td width=67%>SQL 字符串，用于替代客户端字符串。 </td>
</tr>
</table><br>
</BODY>
</HTML>

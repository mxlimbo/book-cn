<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=GB_2312-80">
<title>ADO 的 VC++ Extensions</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="mdmscadovcextensions"></a>VC++ Extensions for ADO</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:请参阅">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdmscADOVCExtensions_C">
</object></p>
<p>
用 ADO 恢复数据时，Visual C++ 程序员所面对的一个最冗长而乏味的工作是必须将以 VARIANT 数据类型返回的数据转换为 C++ 数据类型，然后将转换后的数据存入类或结构中。除繁琐外，通过 VARIANT 数据类型恢复 C++ 数据会降低性能。</p>
<p>
ADO 提供的接口支持直接将数据恢复到 C/C++ 自有数据类型中，而不通过 VARIANT 的转换。并提供预处理宏简化对接口的使用。由此获得一个高效易用的灵活工具。</p>
<p>
普通 C/C++ 客户端方案将 <b>Recordset </b>中的记录绑定到包含自有 C/C++ 类型的 C/C++ 结构/类上。使用 VARIANT 时，将涉及编写从 VARIANT 到 C/C++ 自有类型的转换代码。ADO VC++ Extensions 的目的便是使 VC++ 程序员更容易地实现该方案。</p>
<p>
有关 ADO VC++ Extensions 的详细信息，请参阅如下主题：
<ul type=disc>
<li>
<a href="mdmscusingadovcextensions.htm">使用 ADO VC++ Extensions</a><br><br></li>
<li>
<a href="mdmscvcextensionsheaderindetail.htm">VC++ Extensions 头文件的详细资料</a><br><br></li>
<li>
<a href="mdmscexampleadowithoutextensions.htm">范例：无 Extensions 的 ADO</a> <br><br></li>
<li>
<a href="mdmscexampleadowithextensions.htm">范例：带 Extensions 的 ADO</a></li>
</ul>
</BODY>
</HTML>

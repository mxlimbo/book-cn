<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=GB_2312-80">
<title>编写代码以便用自定义的 ActiveX DLL 传送 Recordset 对象</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<h4><a name="mdhowcode"></a>编写代码以便用自定义的 ActiveX DLL 传送 Recordset 对象</h4>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:请参阅">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdhowCode_C">
</object></p>
<p>
除了使用自定义业务对象以外，下列客户端 Microsoft&reg; Visual Basic&reg; Scripting Edition 代码实现的操作与<a href="mdhowgetdf.htm">前面的 RDSServer.DataFactory 代码</a>相同。您仍然可以在客户端上使用 <a href="mdobjdataspace.htm">RDS.DataSpace</a> 对象创建服务器中业务对象的实例（在这种情况下是<b> </b>MyCustomBusinessObject）。</p>
<pre>&lt;HTML&gt;
&lt;HEAD&gt;&lt;/HEAD&gt;
&lt;BODY&gt;

&lt;!-- RDS.DataControl --&gt;
&lt;OBJECT classid="clsid:BD96C556-65A3-11D0-983A-00C04FC29E33" ID=ADC1&gt;
&lt;/OBJECT&gt;
&lt;!-- RDS.DataSpace --&gt;
&lt;OBJECT ID="ADS1" WIDTH=1 HEIGHT=1
  CLASSID="CLSID:BD96C556-65A3-11D0-983A-00C04FC29E36"&gt;
&lt;/OBJECT&gt;
.
.
.
&lt;SCRIPT LANGUAGE="VBScript"&gt;
Option Explicit
Sub GetRecords()
  Dim objMyCustomBusinessObject, myRS
  Set objMyCustomBusinessObject = _
  ADS1.<span class=cfe><b>CreateObject</b></span>("MyCustomBusinessObject", _
  "http://&lt;%=Request.ServerVariables("SERVER_NAME")%&gt;")
  ' 假定 MyCustomBusinessObject 具有
  ' 称为 GetData 的方法，该方法可获得连接字符串和SQL 参数。&nbsp;&nbsp; 
  ' parameters.
  Set myRS = _
  objCustomBusinessObject.<span class=cfe><b>GetData _</b></span>
<span class=cfe><b>  </b></span>("DSN=pubs;UID=sa;PWD=permission;", _
  "Select * From Authors")
  ' 将返回的记录集赋给&nbsp; SourceRecordset。
  ADC1.SourceRecordset = myRS
End Sub
&lt;/SCRIPT&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;
</pre>
<p>
假定使用 Visual Basic 创建位于中间层上的 MyCustomBusinessObject ActiveX DLL，那么 MyCustomBusinessObject<b> </b>类中<b> GetData</b> 方法的代码应该与如下代码类似。注意您可以直接使用 ActiveX&reg; 数据对象 (ADO)。</p>
<pre>'返回 ADO 结果集。
Public Function GetData(szCnStr As String, szSQL _
  As String) As Object

  Dim cn As New ADODB.Connection
  Dim rs As New ADODB.Recordset

  cn.Open szCnStr
  ' ADODB.Recordset 应该生成 Recordset
  ' 对象，该对象可以被断开，随后&nbsp;&nbsp; 
  ' 再恢复连接以处理批更新。
  rs.<span class=cfe><b>CursorLocation</b></span> = <span class=cfe><b>adUseClientBatch</b></span>
  ' 使用非指定参数，ADO/R
  '记录集被返回。
  rs.Open szSQL, cn, _
  adOpenUnspecified, adLockUnspecified, _
  adCmdUnspecified
  Set GetData = rs
End Function
</pre>
<p class=label>
<b>提示&nbsp; </b>
<ul type=disc>
<li>
在试图将 Recordset<b> </b>对象返回之前，把一个简单的方法放在服务器组件中来测试最小的功能。<br><br></li>
<li>
在用 Internet Explorer 部署和测试服务器组件之前，构造简单的客户应用程序对它进行测试。<br><br></li>
<li>
在本地测试<b> </b>Web 服务器上开发应用程序要更方便一些。在每次编译后需要在测试服务器上复制并注册 .dll。<br><br></li>
<li>
传送到业务对象的 DSN 应该是服务器上的“系统 DSN”。如果它不存在或没有正确设置，那么用户组件将失败。最好用其它的 ODBC 应用程序（例如 MSQuery）来测试服务器上的 DSN 以确保正确设置 DSN。<br><br></li>
<li>
自定义<a href="mddefbusinessobject.htm">业务对象</a>上的方法名不能超过 255 个字符，以确保能兼容 RDS 支持的所有协议（HTTP、HTTPS、DCOM 和进程内）。<br><br></li>
<li>
如果使用 Visual Basic 创建的自定义业务对象使用以前与<b> </b>ADOR 1.0 类型库的绑定，那么应该将自定义业务对象重新构造为使用 ADOR 2.0 类型库。</li>
</ul>
</BODY>
</HTML>

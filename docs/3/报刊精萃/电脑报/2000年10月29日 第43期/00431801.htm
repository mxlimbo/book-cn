 
<HTML>
<!-- #BeginTemplate "/模板/software.dwt" --> 
<HEAD>
<META HTTP-EQUIV='Content-Type' CONTENT='text/html; charset=gb2312'>
<META NAME='author' CONTENT='William Wan'>
<LINK REL='STYLESHEET' HREF='epcw.css' TYPE='text/css'>
<!-- #BeginEditable "doctitle" --> 
<TITLE>电脑报电子版 -- Visual C＋＋中的ODBC编程实例（上）</TITLE>
<!-- #EndEditable --> 
<style type="text/css">
<!--
.centertitle {  font-weight: bold; text-align: center; line-height: 35px; font-size: 9pt; color: #000000}
.lefttitle {  line-height: 35px; font-weight: bold; font-size: 9pt; color: #000000}
-->
</style>
</HEAD>
<BODY BGCOLOR='white'>
<span class="centertitle"></span> 
<TABLE BORDER='0' WIDTH='615' CELLSPACING='0' CELLPADDING='0' HEIGHT='6' ALIGN='Center' BGCOLOR='#CCCC99'>
  <TR VALIGN='top'> 
    <TD WIDTH='100%'><IMG SRC='../../images/dot.gif' WIDTH='615' HEIGHT='1'></TD>
  </TR>
</TABLE>
<TABLE WIDTH='615' BORDER='0' CELLSPACING='0' CELLPADDING='0' ALIGN='Center'>
  <TR> 
    <TD WIDTH='145' BGCOLOR='#CCCC99' 	ALIGN='Center' VALIGN='top'><A HREF='http://www.yesky.com'><IMG SRC='images/logo.gif' WIDTH='140' HEIGHT='60' ALT='天极网' BORDER='0'></A></TD>
    <TD WIDTH='470' BGCOLOR='#CCCC99' HEIGHT='50'> 
      <a href="http://chat.yesky.com/" target="_blank"><img src="images/0823-3.gif" width="468" height="60" border="0" alt="天极聊天室"></a>
    </TD>
  </TR>
</TABLE>
<TABLE BORDER='0' WIDTH='615' CELLSPACING='0' CELLPADDING='0' HEIGHT='2' ALIGN='Center' BGCOLOR='#CCCC99'>
  <TR> 
    <TD WIDTH='100%'><IMG SRC='../../images/pixel.gif' WIDTH='1' HEIGHT='1'></TD>
  </TR>
</TABLE>
<TABLE BORDER='0' WIDTH='615' CELLSPACING='0' CELLPADDING='0' HEIGHT='3' ALIGN='Center' BGCOLOR='#CCCC99'>
  <TR VALIGN='bottom'> 
    <TD WIDTH='100%'><IMG SRC='../../images/dot.gif' WIDTH='615' HEIGHT='1'></TD>
  </TR>
</TABLE>
<table width='615' border='0' cellspacing='0' cellpadding='2' align='Center'>
  <tr> 
    <td width='615' colspan='2'><font color="#FF6666">当前位置：</font><a href='http://www.cpcw.com/issue/index.html'>CPCW电子版</a> 
      &gt; <A HREF='http://www.cpcw.com/issue/all.html' target="_blank">2000年</A> &gt; <a href="index.html"><!-- #BeginEditable "%C6%DA" -->43期<!-- #EndEditable --></a> 
      &gt; <!-- #BeginEditable "%C0%B8%C4%BF" --><a href="software.html">软件世界</a><!-- #EndEditable --> 
      &gt; <!-- #BeginEditable "%B1%EA%CC%E2" -->{Visual C＋＋中的ODBC编程实例（上）}<!-- #EndEditable --></td>
  </tr>
</table>
<TABLE WIDTH='615' BORDER='0' CELLSPACING='0' CELLPADDING='0' ALIGN='center'>
  <TR ALIGN='center' VALIGN='bottom'> 
    <TD HEIGHT='6'><IMG SRC='../../images/dot.gif' WIDTH='615' HEIGHT='1'></TD>
  </TR>
</TABLE>
<BR>
<TABLE WIDTH='615' BORDER='0' CELLSPACING='0' CELLPADDING='2' BGCOLOR='#FFCC66' ALIGN='center'>
  <TR> 
    <TD><SPAN CLASS='title'>《 <!-- #BeginEditable "%CE%C4%D5%C2%CD%B7" -->{Visual 
      C＋＋中的ODBC编程实例（上）}<!-- #EndEditable --> 》</SPAN></TD>
  </TR>
</TABLE>
<BR>
<TABLE WIDTH='615' BORDER='0' CELLSPACING='0' CELLPADDING='2' ALIGN='center'>
  <TR> 
    <TD><!-- #BeginEditable "%CE%C4%D5%C2%C4%DA%C8%DD" -->{　　编者按：ODBC（开放式数据库连接）是一种使用SQL的程序设计接口,使用ODBC使数据库应用程序的编写者避免了与数据源相连接的复杂性。利用ODBC技术使得程序员从具体的DBMS中解脱出来,从而可以减少软件开发的工作量,缩短开发周期,并提高效率和软件的可靠性。这项技术目前已经得到了大多数DBMS厂商的广泛支持。<br>
      　　Microsoft Developer Studio为大多数标准的数据库格式提供了32位ODBC驱动器。这些标准数据格式包括有:SQL Server、Access、Paradox、dBase、FoxPro、Excel、Oracle以及Microsoft 
      Text。如果用户希望使用其他数据格式,则需要安装相应的ODBC驱动器及DBMS。<br>
      　　用户使用自己的DBMS数据库管理功能生成新的数据库模式后,就可以使用ODBC来登录数据源。对用户的应用程序来说,只要安装有驱动程序,就能注册很多不同的数据库。登录数据库的具体操作参见有关ODBC的联机帮助。<br>
      　　一、MFC提供的ODBC数据库类<br>
      　　Visual C＋＋的MFC基类库定义了几个数据库类。在利用ODBC编程时,经常要使用到 CDatabase(数据库类)、CRecordSet(记录集类)和CRecordView(可视记录集类)。<br>
      　　CDatabase类对象提供了对数据源的连接,通过它可以对数据源进行操作。<br>
      　　CRecordSet类对象提供了从数据源中提取出的记录集。CRecordSet对象通常用于两种形式:动态行集(dynasets)和快照集(snapshots)。动态行集能与其他用户所做的更改保持同步,快照集则是数据的一个静态视图。每种形式在记录集被打开时都提供一组记录,所不同的是,当在一个动态行集里滚动到一条记录时,由其他用户或应用程序中的其他记录集对该记录所做的更改会相应地显示出来。<br>
      　　CRecordView类对象能以控件的形式显示数据库记录,这个视图是直接连到一个CRecordSet对象的表视图。　　二、应用ODBC编程<br>
      　　应用Visual C＋＋的AppWizard可以自动生成一个ODBC应用程序框架,步骤是:打开File菜单的New选项,选取Projects,填入工程名,选择MFC 
      AppWizard (exe),然后按AppWizard的提示进行操作。<br>
      　　当AppWizard询问是否包含数据库支持时,如果想读写数据库,那么选定Database view with file support;如果想访问数据库的信息而不想写回所做的改变,那么选定Database 
      view without file support。<br>
      　　选好数据库支持之后,Database Source 按钮会被激活,选中它去调用Data Options对话框。在Database Options对话框中会显示出已向ODBC注册的数据库资源,选定所要操作的数据库,如:Super_ES,单击OK后出现Select 
      Database Tables对话框,其中列举了选中的数据库包含的全部表;选择要操作的表后,单击OK。在选定了数据库和数据表之后,就可以按照惯例继续进行AppWizard操作。<br>
      　　特别需要指出的是:在生成的应用程序框架View类(如:CSuper_ESView)中,包含一个指向CSuper_ESSet对象的指针m_pSet,该指针由AppWizard建立,目的是在视表单和记录集之间建立联系,使得记录集中的查询结果能够很容易地在视表单上显示出来。<br>
      　　要使程序与数据源建立联系,需用CDateBase::OpenEx()或CDatabase::Open()函数来进行初始化。数据库对象必须在使用它构造记录集对象之前初始化。<br>
      　　三、实例<br>
      　　1.查询记录<br>
      　　查询记录使用CRecordSet::Open()和CRecordSet::Requery()成员函数。在使用CRecordSet类对象之前,必须使用CRecordSet::Open()函数来获得有效的记录集。一旦已经使用过CRecordSet::Open()函数,再次查询时就可以应用CRecordSet::Requery()函数。<br>
      　　在调用CRecordSet::Open()函数时,如果将一个已经打开的CDatabase对象指针传给CRecordSet类对象的m_pDatabase成员变量,则使用该数据库对象建立ODBC连接;否则如果m_pDatabase为空指针,就新建一个CDatabase类对象,并使其与缺省的数据源相连,然后进行CRecordSet类对象的初始化。缺省数据源由GetDefaultConnect()函数获得。也可以提供所需要的SQL语句,并以它来调用CRecordSet::Open()函数,例如:Super_ESSet.Open(AFX_DATABASE_USE_DEFAULT,strSQL);<br>
      　　如果没有指定参数,程序则使用缺省的SQL语句,即对在GetDefaultSQL()函数中指定的SQL语句进行操作:<br>
      　　CString CSuper_ESSet::GetDefaultSQL()<br>
      　　{return _T(″[BsicData],[MinSize]″);}<br>
      　　对于GetDefaultSQL()函数返回的表名,对应的缺省操作是SELECT语句,即:<br>
      　　SELECT ＊ FROM BasicData,MainSize<br>
      　　在查询过程中,也可以利用CRecordSet的成员变量m_strFilter和m_strSort来执行条件查询和结果排序。m_strFilter为过滤字符串,存放着SQL语句中WHERE后的条件串;m_strSort为排序字符串,存放着SQL语句中ORDER 
      BY后的字符串。如:<br>
      　　Super_ESSet.m_strFilter=″TYPE=‘电动机’″;<br>
      　　Super_ESSet.m_strSort=″VOLTAGE″;<br>
      　　Super_ESSet.Requery();<br>
      　　对应的SQL语句为:<br>
      　　SELECT ＊ FROM BasicData,MainSize<br>
      　　WHERE TYPE=‘电动机’<br>
      　　ORDER BY VOLTAGE<br>
      　　除了直接赋值给m_strFilter以外,还可以使用参数化。利用参数化可以更直观、更方便地完成条件查询任务。使用参数化的步骤如下:<br>
      　　S声明参变量:<br>
      　　CString p1;<br>
      　　float p2;<br>
      　　S在构造函数中初始化参变量:<br>
      　　p1=_T(″″);<br>
      　　p2=0.0f;<br>
      　　m_nParams=2;<br>
      　　S将参变量与对应列绑定:<br>
      　　pFX－&gt;SetFieldType(CFieldExchange::param)<br>
      　　RFX_Text(pFX,_T(″P1″),p1);<br>
      　　RFX_Single(pFX,_T(″P2″),p2);<br>
      　　完成以上步骤后就可以利用参变量进行条件查询:<br>
      　　m_pSet－&gt;m_strFilter=″TYPE=? AND VOLTAGE=?″;m_pSet－&gt;p1=″电动机″;<br>
      　　m_pSet－&gt;p2=60.0;<br>
      　　m_pSet－&gt;Requery();<br>
      　　参变量的值按绑定的顺序替换查询字串中的“?”通配符。<br>
      　　如果查询的结果是多条记录,可以用CRecordSet类的函数Move()、MoveNext()、MovePrev()、MoveFirst()和MoveLast()来移动光标。(未完待续)}<!-- #EndEditable --></TD>
  </TR>
</TABLE>
<TABLE WIDTH='615' BORDER='0' CELLSPACING='0' CELLPADDING='2' ALIGN='center'>
  <TR> 
    <TD>&nbsp;</TD>
    <TD ALIGN='right'><A HREF='#top'>页 首</A></TD>
  </TR>
</TABLE>
<BR>
<TABLE WIDTH='615' BORDER='0' CELLSPACING='0' CELLPADDING='0' ALIGN='center'>
  <TR ALIGN='center' VALIGN='bottom'> 
    <TD HEIGHT='6'><IMG SRC='../../images/dot.gif' WIDTH='615' HEIGHT='1'></TD>
  </TR>
</TABLE>
<TABLE WIDTH='615' BORDER='0' CELLSPACING='0' CELLPADDING='2' ALIGN='center'>
  <TR ALIGN='center'> 
    <TD> 
      <script language="JavaScript" src="../../download/yeskye.js">
</script>
    </TD>
    <TD> <noscript></noscript> <a href='/'>《电脑报》版权所有</a>，<a href='mailto:webmaster@staff.yesky.com'>YESKY网站编辑部</a>设计制作发布</TD>
  </TR>
</TABLE>
</BODY>
<!-- #EndTemplate -->
</HTML>

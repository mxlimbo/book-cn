<html>
<head>
<title>中科院计算机研究所98年试题　数据结构和程序设计</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="all.css">
</head>

<body bgcolor="#FFFFFF" background="bg.gif" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<table width="776" border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td height="21"><img src="up1.gif" width="120" height="21"><img src="up2.gif" width="13" height="21"><a href="content.htm"><img src="top.gif" width="47" height="21" border="0"></a><img src="up3.gif" width="22" height="21"><a href="67.htm"><img src="last.gif" width="49" height="21" border="0"></a><img src="up4.gif" width="23" height="21"><a href="69.htm"><img src="next.gif" width="48" height="21" border="0"></a><img src="up5.gif" width="6" height="21"></td>
  </tr>
</table>
<table width="776" border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td valign="top" width="120" background="leftbg.gif"><img src="left.gif" width="120" height="199"></td>
    <td valign="top" align="center"> <br>
      <table width="500" cellspacing="0" cellpadding="0" align="center" border="0">
        <tr> 
          <td> 
            <p align="center" class="h">&nbsp;</p>
            <p align="center" class="h">中科院计算机研究所98年试题<br>
              数据结构和程序设计</p>
          </td>
        </tr>
      </table>
      <br>
      <table width="500" border="0" cellspacing="0" cellpadding="0" align="center">
        <tr> 
          <td>要求：算法题目写注解
            <p>一.填空(15分,每空一分)<br>
              1.用循环链表表示的队列长度为n,若只设头指针,则出队和入队的时间复杂度分别是__和__; 若只设尾指针,则出队和入队的时间复杂度分别是__和__.<br>
              2.设广义表L=( (),() ) ,则head(L)是___;tail(L)是___;L的长度是___;深度是___.<br>
              3.深度为h的完全二叉树至少有__个结点;至多有__个结点;h和结点总数n之间的关系是__.<br>
              4.在n个记录的有序顺序表中进行折半查找,最大的比较次数是___.<br>
              5.在一棵m阶B+树中,若在某结点中插入一个新关键字而引起该结点分裂,则此结点中原有的关键字的个数是___.<br>
              6.n个顶点的连通图用邻接矩阵表示时,该矩阵至少有__个非零元素.</p>
            <p>二.请在下列各题中选择一个正确的答案(20分 ,每题2分)<br>
              1.算法的时间复杂度取决于<br>
              a.问题的规模<br>
              b.待处理数据的初态<br>
              c.both a and b</p>
            <p>2.消除递归不一定需要使用栈,此说法<br>
              a.true<br>
              b.false</p>
            <p>3.假定有k个关键字互为同义词,若用线性探测法把这k个关键字存入散列表中,至少要进行多少次探测?<br>
              a.k-1<br>
              b.k<br>
              c.k=1<br>
              d.k(k+1)/2</p>
            <p>4.若需要在O(nlog2(n))的时间内完成对数组的排序,且要求排序是稳定的,则可选择的排序方法是:<br>
              a.快速排序 b.堆排序 c.归并排序 d.直接插入排序</p>
            <p>5.用ISAM和VSAM组织文件属于:<br>
              a.顺序文件<br>
              b.索引文件<br>
              c.散列文件</p>
            <p>6.若一个有向图的邻接矩阵中,主对角线以下的元素均为零,则该图的拓扑有序序列<br>
              a.存在<br>
              b.不存在</p>
            <p>7.将两个各有n个元素的有序表归并成一个有序表,其最少的比较次数是<br>
              a.n<br>
              b.2n-1<br>
              c.2n<br>
              d.n-1</p>
            <p>8下述二叉树中,那一种满足性质:从任意结点出发到根的路径上所经过的结点序列<br>
              按其关键字有序:<br>
              a.二叉排序树<br>
              b.哈夫曼树<br>
              c.AVL树<br>
              d.堆</p>
            <p>9.以知待排序的n个元素可分为n/k个组,每个组包含k个元素,且任一组内的个元素均分别大于前一组内的所有元素和小于后一组内的所有元素,若采用基于比较的排序,其时间下限应为:<br>
              a.O(klog2(k)) <br>
              b.O(klog2(n))<br>
              c.O(nlog2(k))<br>
              d.O(nlog2(n))</p>
            <p>10.在叶子数目和权值相同的所有二叉树中,最优二叉树定是完全二叉树,该说法:<br>
              a.正确<br>
              b.错误</p>
            <p>三.设二叉排序树T中各结点关键字互不相同,x^是T的叶子,y^是x^的双亲.证明y^.key是T中大于x^.key的所有关键字中的最小者,或是小于x^.key的所有关键字的最大者.(10分)</p>
            <p>四.(共15分)设数组A的长度为2N,前N个元素A[1..N]递减有序,后N个元素A[N+1..2N]递增有序,且2N是2的整数次幂,即k=log2(2N) 
              为整数.例如A[1..8]=[90,85,50,10,30,65,80,100] 满足上述要求,这里N=4,k=3,A的前4个元素和后4个元素分别递减和递增有序.用次例调用如下的Demo过程,并要求:<br>
              (1).给出for循环中每次执行 PerfectShuffle(A,N)和CompareExchange(A,N)的结果.(10分)<br>
              (2)解释Demo的功能.(2分)<br>
              (3)给出Demo的时间复杂度.(3分)<br>
              Procedure PerfectShuffle (Var A:arraytype; N:integer){<br>
              i:=1; j:=1;<br>
              while i&lt;=N do {<br>
              B[j]:=A[i];<br>
              B[j+1]:=A[i+N];<br>
              i:=i+1;<br>
              j:=j+2;<br>
              }<br>
              A[1..2N]:=B[1..2N];//B copy to A<br>
              }</p>
            <p>Procedure CompareExchange(Var A:arraytype; N:integer){<br>
              j:=1;<br>
              while j&lt;2N do{<br>
              if A[j]&gt;A[j+1] then<br>
              A[j]&lt;-&gt;A[j+1];//exchange A[j] and A[j+1]<br>
              j:=j+2;<br>
              }<br>
              }</p>
            <p>Procedure Demo(Var A:arraytype; N:integer){<br>
              //the length of A is 2N,k=log2(N) is integer<br>
              for i:=1 to log2(2N) do <br>
              {PerfectShuffle(A,N);<br>
              CompareExchange(A,N);<br>
              }<br>
              }</p>
            <p>五.(共20分)<br>
              (1).设二叉排序中关键字由1至1000的整数构成,现要检索关键字为363的结点,下述关键字序列中那些可能是二叉排序树上搜索到的序列,那些不可能是二叉排序树上搜索到的序列?(5分)<br>
              (a)2,252,401,393,330,344,397,363<br>
              (b)924,220,911,244,898,258,362,363<br>
              (c)925,202,911,240,912,245,363<br>
              (d)2,399,387,219,266,382,381,278,363<br>
              (2).通过对(1)的分析,写一个算法判定给定的关键字序列(假定关键字互不相同)是否可能是二叉排序树的搜索序列.若可能是返回真,否则返回假.可假定被判定的序列已存入数组中.(15分)</p>
            <p>六.(共20分)图的D-搜索类似于BFS,不同之处在于使用栈代替BFS中的队列,入出队列的操作改为入出栈的操作.即当一个顶点的所有邻接点被搜索后,下一个搜索的出发点应该是最近入栈(栈顶)的顶点.<br>
              (1)用邻接表做存储结构,写一个D-搜索算法(15分)<br>
              (2)用 D-搜索方法搜索右图,设初始出发点为1,写出顶点的访问次序和响应的生成树,<br>
              当从某顶点出发搜索他的邻接点是，请按邻接点序号递增序搜索,以使答案唯一.(5分)</p>
          </td>
        </tr>
      </table>
      <p>&nbsp;</p><table width="460" border="0" cellspacing="0" cellpadding="0" align="center">
        <tr> 
          <td> 
            <table border=0 align=center>
              <tr> 
                <td width=101 height="21"> 
                  <div align="center"><a href='67.htm'>上一页 </a></div>
                </td>
                <td width=99 height="21"> 
                  <div align="center"><a href="content.htm">目　录</a></div>
                </td>
                <td width=100 height="21"> 
                  <div align="center"><a href='69.htm'>下一页 </a></div>
                </td>
              </tr>
            </table>
            <p align=center>
            <p align=center>□ E书时空编辑整理 
            <p align=center>本书由“<a href="http://www.eshunet.com">E书时空</a>”免费制作；<br>
              想要更多的免费电子图书，请光临<br>
              <a href="http://www.eshunet.com">http://www.eshunet.com/</a>
            <p align=center>&nbsp; 
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
</table>
</body>
</html>

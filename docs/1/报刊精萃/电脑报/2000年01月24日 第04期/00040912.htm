<HTML><!-- #BeginTemplate "/模板/software.dwt" -->
<HEAD>
<META HTTP-EQUIV='Content-Type' CONTENT='text/html; charset=gb2312'>
<META NAME='author' CONTENT='William Wan'>
<LINK REL='STYLESHEET' HREF='epcw.css' TYPE='text/css'>
<!-- #BeginEditable "doctitle" --> 
<TITLE>电脑报电子版 -- 在VC6.0中编写网络应用程序</TITLE>
<!-- #EndEditable --> 
<style type="text/css">
<!--
.centertitle {  font-weight: bold; text-align: center; line-height: 35px; font-size: 9pt; color: #000000}
.lefttitle {  line-height: 35px; font-weight: bold; font-size: 9pt; color: #000000}
-->
</style>
</HEAD>
<BODY BGCOLOR='white'>
<span class="centertitle"></span> 
<TABLE BORDER='0' WIDTH='615' CELLSPACING='0' CELLPADDING='0' HEIGHT='6' ALIGN='Center' BGCOLOR='#CCCC99'>
<TR VALIGN='top'><TD WIDTH='100%'><IMG SRC='../../images/dot.gif' WIDTH='615' HEIGHT='1'></TD></TR>
</TABLE><TABLE WIDTH='615' BORDER='0' CELLSPACING='0' CELLPADDING='0' ALIGN='Center'>
<TR>
<TD WIDTH='145' BGCOLOR='#CCCC99' 	ALIGN='Center' VALIGN='top'><A HREF='http://www.yesky.com'><IMG SRC='images/logo.gif' WIDTH='140' HEIGHT='60' ALT='天极网' BORDER='0'></A></TD>
<TD WIDTH='470' BGCOLOR='#CCCC99' HEIGHT='50'><script language="JavaScript" src="http://ad.cpcw.com/js/hardware.js"></script></TD>
</TR>
</TABLE><TABLE BORDER='0' WIDTH='615' CELLSPACING='0' CELLPADDING='0' HEIGHT='2' ALIGN='Center' BGCOLOR='#CCCC99'>
<TR>
<TD WIDTH='100%'><IMG SRC='../../images/pixel.gif' WIDTH='1' HEIGHT='1'></TD>
</TR>
</TABLE>
<TABLE BORDER='0' WIDTH='615' CELLSPACING='0' CELLPADDING='0' HEIGHT='3' ALIGN='Center' BGCOLOR='#CCCC99'>
<TR VALIGN='bottom'>
<TD WIDTH='100%'><IMG SRC='../../images/dot.gif' WIDTH='615' HEIGHT='1'></TD>
</TR></TABLE>
<table width='615' border='0' cellspacing='0' cellpadding='2' align='Center'>
  <tr> 
    <td width='615' colspan='2'><font color="#FF6666">当前位置：</font><a href='http://www.cpcw.com/issue/index.html'>CPCW电子版</a> 
      &gt; <a href='http://www.cpcw.com/issue/all.html'>2000年</a> &gt; <a href="index.html"><!-- #BeginEditable "%C6%DA" -->04期<!-- #EndEditable --></a> 
      &gt; <!-- #BeginEditable "%C0%B8%C4%BF" --><a href="software.html">软件世界</a><!-- #EndEditable --> 
      &gt; <!-- #BeginEditable "%B1%EA%CC%E2" -->{在VC6.0中编写网络应用程序}<!-- #EndEditable --></td>
  </tr>
</table>
<TABLE WIDTH='615' BORDER='0' CELLSPACING='0' CELLPADDING='0' ALIGN='center'><TR ALIGN='center' VALIGN='bottom'><TD HEIGHT='6'><IMG SRC='../../images/dot.gif' WIDTH='615' HEIGHT='1'></TD></TR></TABLE>
<BR><TABLE WIDTH='615' BORDER='0' CELLSPACING='0' CELLPADDING='2' BGCOLOR='#FFCC66' ALIGN='center'>
<TR>
    <TD><SPAN CLASS='title'>《 <!-- #BeginEditable "%CE%C4%D5%C2%CD%B7" -->{在VC6.0中编写网络应用程序}<!-- #EndEditable --> 
      》</SPAN></TD>
</TR></TABLE><BR><TABLE WIDTH='615' BORDER='0' CELLSPACING='0' CELLPADDING='2' ALIGN='center'>
<TR>
    <TD><!-- #BeginEditable "%CE%C4%D5%C2%C4%DA%C8%DD" -->{　　在网络技术日益发展的今天,如果自己也能够编写一个实用的网络应用程序,那么,不仅能够激发对网络的兴趣,促使自己对网络知识的追求，同时开发过程本身也是一个很好的学习过程。<br>
      　　在VC6.0中MFC对网络编程有着很好的支持,针对不同用途的网络应用程序,VC有不同的封装类进行支持,如FTP、HTTP等等，使用户能够很快的开发出相应的程序,但同时，也使用户失去了一些了解网络程序运行的底层机制的机会，更重要的是也失去了一定程度上的灵活性。在此我们介绍利用SOCKET套接字进行开发的一般步骤，供读者参考。<br>
      　　在Windows和UNIX下编写网络应用程序，基本上都是利用SOCKET套接字进行数据通讯，SOCKET套接字是从UNIX环境下承袭而来，它在程序中的作用可以理解为网络数据通讯的一个代理，其在Windows中的设计思路与UNIX下相比基本没有多大变化，分为服务器套接字和客户机套接字两个设计部分，设计思路如下：<br>
      　　第一部分　服务器端<br>
      　　一、创建服务器套接字（CREATE）。<br>
      　　二、服务器套接字进行信息绑定（BIND），并开始监听连接（LISTEN）。<br>
      　　三、接受来自客户端的连接请求（ACCEPT），并创建接收进程。<br>
      　　四、开始数据传输(SEND、RECEIVE)。<br>
      　　五、关闭套接字（CLOSESOCKET）。<br>
      　　第二部分　客户机端<br>
      　　一、创建客户机套接字（CREATE）。<br>
      　　二、与远程服务器进行连接（CONNECT），如被接受则创建接收进程。<br>
      　　三、开始数据传输(SEND、RECEIVE)。<br>
      　　四、关闭套接字（CLOSESOCKET）。<br>
      　　以上的设计思路是我们开发的基本步骤，同时也是大多数网络应用程序运行的基本方式，下面我们具体说明它在VC中的实现。<br>
      　　服务器端：<br>
      　　一、建立支持SOCKET项目。<br>
      　　利用APP WIZARD创建MFC EXE项目，进行到WIZARD的第四步时，在“What features would you like 
      include?”中，选中“Windows Sockets”项。其它各步骤各选项根据实际应用进行选择即可。这样创建的项目就已经支持SOCKET，并已经初始化了。<br>
      　　如果要在已有的项目中添加SOCKET支持，只须进行两项工作：<br>
      　　1在stdafx.h文件中包含头文件WINSOCK.H (＃include “winsock.h” )。<br>
      　　2初始化套接字，在应用程序类的成员函数：“::InitInstance()”中添加如下初始化套接字代码。<br>
      　　if (!AfxSocketInit())<br>
      　　{AfxMessageBox(IDP_SOCKETS_INIT_FAILED);<br>
      　　return FALSE;}<br>
      　　二、创建服务套接字并创建监听线程。<br>
      　　//创建服务套接字<br>
      　　SOCKET sercon=socket(PF_INET,SOCK_STREAM,0);<br>
      　　//判断是否成功创建<br>
      　　if (sercon==INVALID_SOCKET)<br>
      　　{AfxMessageBox(“Server WRONG !”);<br>
      　　return －1;}<br>
      　　//配置套接字地址等信息<br>
      　　SOCKADDR_IN sin;<br>
      　　sin.sin_family=AF_INET;<br>
      　　//指定本地地址<br>
      　　sin.sin_addr.s_addr=htonl(INADDR_ANY);<br>
      　　//指定服务器端口号nPort，可自设<br>
      　　int nPort=5080;<br>
      　　sin.sin_port=htons(nPort);<br>
      　　//地址信息与套接字进行绑定。<br>
      　　if (bind(sercon,(LPSOCKADDR)＆sin,sizeof(sin))==SOCKET_ERROR)<br>
      　　{AfxMessageBox(“bind wrong!”);<br>
      　　return －1;}<br>
      　　//建立监听队列（大小为3），开始监听<br>
      　　if (listen(sercon,3)==SOCKET_ERROR)<br>
      　　{AfxMessageBox(“listen wrong!”);<br>
      　　return －1;};<br>
      　　①实现监听线程，并创建数据接收线程。<br>
      　　//在程序需要开始监听连接的地方创建监听线程，并实现。<br>
      　　//创建监听线程（在程序开始或按钮事件实现中）<br>
      　　AfxBeginThread(waitconnect,NULL)；<br>
      　　//实现监听线程<br>
      　　UINT waitconnect(LPVOID lpParm)<br>
      　　{SOCKET conn[3];<br>
      　　int lenc=sizeof(sockaddr);<br>
      　　int alreadycon=0;<br>
      　　//sercon为前面所创建服务器套接字<br>
      　　while(1)<br>
      　　{if (alreadycon&lt;=3) <br>
      　　{//接受连接请求<br>
      　　conn[alreadycon]=accept(sercon,＆cin,＆lenc);<br>
      　　if (conn[alreadycon]==INVALID_SOCKET)<br>
      　　{AfxMessageBox(“accept WRONG !”);}<br>
      　　else<br>
      　　{//创建数据接收线程<br>
      　　AfxBeginThread(readdata,＆connn[alreadycon]);<br>
      　　Alreadycon= alreadycon＋1;<br>
      　　return 0；}}<br>
      　　else<br>
      　　{//避免影响主线程运行<br>
      　　Sleep(200);}<br>
      　　}<br>
      　　}<br>
      　　②实现数据接收线程。<br>
      　　UINT waitconnect(LPVOID ss)<br>
      　　{ SOCKET ＊readsock;<br>
      　　readsock=(SOCKET ＊)ss;<br>
      　　char buf[2000];<br>
      　　int revnum=0;<br>
      　　//开始循环接受数据<br>
      　　while (revnum!=－1)<br>
      　　{//revnum&lt;=0则表示连接已断！<br>
      　　revnum=recv(＊readsock,buf,2000,0);<br>
      　　if (revnum&gt;0)<br>
      　　buf[revnum]=0;//截断缓冲区<br>
      　　//buf中存储已接受数据。}<br>
      　　}<br>
      　　③发送数据<br>
      　　//conn[1]为用于接受连接的套接字， sendstr为所发送数据。<br>
      　　send(conn[1],LPCTSTR(sendstr),sendstr.GetLength(),0);<br>
      　　④关闭套接字。<br>
      　　//conn[1]为用于接受连接的套接字<br>
      　　closesocket(conn[1]);<br>
      　　客户程序端：<br>
      　　客户端程序的编程有很多与服务器端相同或相近，甚至相同的代码。<br>
      　　一、建立支持SOCKET项目。<br>
      　　方法同服务器端。<br>
      　　二、创建客户套接字、对服务器进行连接。<br>
      　　//nHost 须用户指定的远程服务机，IP或域名。<br>
      　　CString nHost;<br>
      　　//h为地址信息<br>
      　　struct hostent ＊h;<br>
      　　h=gethostbyname(nHost);<br>
      　　//nHost 须用户指定的远程服务端口号<br>
      　　int nPort;<br>
      　　SOCKET con_client;<br>
      　　SOCKADDR_IN csin;<br>
      　　if (h!=NULL)<br>
      　　{//创建套接字<br>
      　　con_client =socket(AF_INET,SOCK_STREAM,0);<br>
      　　csin.sin_family=AF_INET;<br>
      　　memcpy(＆(csin.sin_addr.s_addr),h－&gt;h_addr,sizeof(int));<br>
      　　csin.sin_port=htons(nPort);<br>
      　　//开始连接<br>
      　　if (connect(con_client,(LPSOCKADDR)＆csin,sizeof(csin)))<br>
      　　{//AfxMessageBox(“connect wrong!”); <br>
      　　return －1;}<br>
      　　else<br>
      　　{//连接成功，创建数据接收线程<br>
      　　AfxBeginThread(readdata,＆con_client);}<br>
      　　}<br>
      　　三、实现数据接收线程。<br>
      　　代码与服务器端完全相同。<br>
      　　四、发送数据。<br>
      　　//con_client 为与服务器进行连接的套接字。<br>
      　　send(con_client,LPCTSTR(sendstr),sendstr.GetLength(),0);<br>
      　　五、关闭套接字。<br>
      　　// con_client 为与服务器进行连接的套接字。<br>
      　　closesocket(conn[1]);<br>
      　　在实际应用中，应当根据需要调整并改变一些变量的作用域。<br>
      　　以上程序在VC6.0 、WIN NT4.0 及Windows 98中调试通过。<br>
      　　最后说一点，在VC6.0 MFC中的CSOCKET类是对SOCKET的一个MFC封装，并且它支持文档序列化，可以方便地实现不同数据类型的传输。本文前面之所以没有介绍CSOCKET，是因为用CSOCKET的实现方法与上面所讲述的思路相同，并且更为简单。另外一个更重要的原因是便于向UNIX编程时移植，因为UNIX支持SOCKET。}<!-- #EndEditable --></TD>
  </TR></TABLE><TABLE WIDTH='615' BORDER='0' CELLSPACING='0' CELLPADDING='2' ALIGN='center'>
<TR>
    <TD>&nbsp;</TD>
    <TD ALIGN='right'><A HREF='#top'>页 首</A></TD>
</TR></TABLE><BR>
<TABLE WIDTH='615' BORDER='0' CELLSPACING='0' CELLPADDING='0' ALIGN='center'>
<TR ALIGN='center' VALIGN='bottom'>
<TD HEIGHT='6'><IMG SRC='../../images/dot.gif' WIDTH='615' HEIGHT='1'></TD>
</TR></TABLE><TABLE WIDTH='615' BORDER='0' CELLSPACING='0' CELLPADDING='2' ALIGN='center'>
<TR ALIGN='center'>
    <TD>
      <script language="JavaScript" src="../../download/yeskye.js">
</script>
    </TD>
    <TD> <noscript></noscript> <a href='/'>《电脑报》版权所有</a>，<a href='mailto:webmaster@staff.yesky.com'>YESKY网站编辑部</a>设计制作发布</TD>
</TR>
</TABLE></BODY><!-- #EndTemplate --></HTML>
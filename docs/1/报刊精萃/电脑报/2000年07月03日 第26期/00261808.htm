 
<HTML>
 
<HEAD>
<META HTTP-EQUIV='Content-Type' CONTENT='text/html; charset=gb2312'>
<META NAME='author' CONTENT='William Wan'>
<LINK REL='STYLESHEET' HREF='images/epcw.css' TYPE='text/css'>
 
<TITLE>电脑报电子版 -- VFP6.0实用技巧集锦(上)</TITLE>
 
<style type="text/css">
<!--
.centertitle {  font-weight: bold; text-align: center; line-height: 35px; font-size: 9pt; color: #000000}
.lefttitle {  line-height: 35px; font-weight: bold; font-size: 9pt; color: #000000}
-->
</style>
</HEAD>
<BODY BGCOLOR='white'>
<span class="centertitle"></span> 
<TABLE BORDER='0' WIDTH='468' CELLSPACING='0' CELLPADDING='0' HEIGHT='6' ALIGN='Center' BGCOLOR='#CCCC99'>
  <TR VALIGN='top'> 
    <TD WIDTH='100%'><IMG SRC='../images/dot.gif' WIDTH='468' HEIGHT='1'></TD>
  </TR>
</TABLE>
<TABLE WIDTH='468' BORDER='0' CELLSPACING='0' CELLPADDING='0' ALIGN='Center'>
  <TR> 
    <TD WIDTH='470' BGCOLOR='#CCCC99' HEIGHT='50'> 
      <img src="images/yjds.gif" width="468" height="50">
    </TD>
  </TR>
</TABLE>
<TABLE BORDER='0' WIDTH='468' CELLSPACING='0' CELLPADDING='0' HEIGHT='2' ALIGN='Center' BGCOLOR='#CCCC99'>
  <TR> 
    <TD WIDTH='100%'><IMG SRC='../images/pixel.gif' WIDTH='1' HEIGHT='1'></TD>
  </TR>
</TABLE>
<TABLE BORDER='0' WIDTH='468' CELLSPACING='0' CELLPADDING='0' HEIGHT='3' ALIGN='Center' BGCOLOR='#CCCC99'>
  <TR VALIGN='bottom'> 
    <TD WIDTH='100%'><IMG SRC='../images/dot.gif' WIDTH='468' HEIGHT='1'></TD>
  </TR>
</TABLE>
<table width='468' border='0' cellspacing='0' cellpadding='2' align='Center'>
  <tr> 
    <td width='615' colspan='2'><font color="#FF6666">当前位置：</font>CPCW电子版 
      &gt; <a href='http://drivers.cpcw.com/issue.htm'>2000 年</a> &gt; <a href="index.html">26期</a> 
      &gt; <a href="software.html">软件世界</a> &gt; VFP6.0实用技巧集锦(上)</td>
  </tr>
</table>
<TABLE WIDTH='468' BORDER='0' CELLSPACING='0' CELLPADDING='0' ALIGN='center'>
  <TR ALIGN='center' VALIGN='bottom'> 
    <TD HEIGHT='6'><IMG SRC='../images/dot.gif' WIDTH='468' HEIGHT='1'></TD>
  </TR>
</TABLE>
<BR>
<TABLE WIDTH='468' BORDER='0' CELLSPACING='0' CELLPADDING='2' BGCOLOR='#FFCC66' ALIGN='center'>
  <TR> 
    <TD><SPAN CLASS='title'>《 VFP6.0实用技巧集锦(上) 
      》</SPAN></TD>
  </TR>
</TABLE>
<BR>
<TABLE WIDTH='468' BORDER='0' CELLSPACING='0' CELLPADDING='2' ALIGN='center'>
  <TR> 
    <TD>
      <p><b>　　一、选择网络打印机</b><br>
        　　如果单位里的局域网上安装有多台网络打印机，在使用VFP 6.0编制的程序进行打印操作时，可以选择其中的任意一台空闲的网络打印机进行打印，只须在执行命令：Report 
        From … To Printer 之前，先执行：Set Printer To Name Getprinter()，就可以调用操作系统的“打印设定”对话框，用户利用该窗口即可达到灵活选择空闲打印机进行打印输出的功能。(注：可供选择的打印机名是用户计算机上已安装好的打印机名。)<br>
        　　<b>二、找回丢失了的FPT文件</b><br>
        　　由于误操作，将自由表的备注文件删除，致使自由表无法打开。遇到这种情况我们可采用下述两种方法解决:<br>
        　　1.创建一个新的自由表，且该自由表只含一个字段，其类型为备注型。关闭该自由表，将其扩展名为FPT的备注文件复制给误删除的自由表的备注文件，或将该备注文件改名为误删除的自由表的备注文件即可。<br>
        　　运行下面的程序同样也可以找回丢失了的FPT文件：<br>
        　　accept ′请输入丢失了.FPT文件的自由表名称(不带扩展名)：′ to namef<br>
        　　namef=trim(namef)＋′.bbb′<br>
        　　crea dbf ＆namef (aa m)<br>
        　　use<br>
        　　dele file ＆namef<br>
        　　2.用VFP低级文件函数创建一个空的FPT文件，原自由表即可打开。程序清单如下：<br>
        　　accept ′请输入丢失了.FPT文件的自由表名称(不带扩展名)：′ to namef<br>
        　　namef=trim(namef)＋′.FPT′<br>
        　　hand=fcreate(namef)<br>
        　　abc=repl(chr(0),3)＋chr(8)＋repl(chr(0),3)＋′@′＋repl(chr(0),504)<br>
        　　=fwrite(hand,abc)<br>
        　　=fclose(hand)<br>
        　　return<br>
        　　上述方法只是为丢失了FPT文件的自由表建立了一个新的FPT文件，原FPT文件中的内容已经丢失，无法恢复。在实际操作中若遇到这种情况，最好是恢复原来的FPT文件，若原FPT文件无法恢复时再采用上述方法。<br>
        　　<b>三、脱离VFP运行程序</b><br>
        　　利用VFP 6.0创建的应用程序，被编译成可执行程序后，若要使其脱离VFP环境独立运行，除了我们所知道的在应用程序目录中需包含一个名为“CONFIG.FPW”的配置文件外，经笔者试验发现还必须包含“VFP6R.DLL”、“VFP6RCHS.DLL”、“VFP6RENU.DLL”这三个动态链接库文件。这三个文件在“Windows\System”目录下，用户可直接将其复制到自己的应用程序目录中。最后再经过编译形成可执行程序，运行安装向导创建发布磁盘，我们开发的小应用程序就可以堂堂正正地在Win98下安装运行了。<br>
        　　<b>四、简易设置TextBox对象的输入长度</b><br>
        　　在以前的XBASE语法中，我们可以通过Picture参数定义某变量或文本栏的输入长度格式，而在VFP中的TextBox对象中则支持Format和InputMask属性来定义输入的格式。我们可以使用比较原始的方法来进行设定，比如当要求输入有20个栏位的文本框对象时，我们可以在此对象的InputMask属性中定义为InputMask=“XXXXXXXXXXXXXXXXX<br>
        XXX”。<br>
        　　但是这样的设定方法非常麻烦，尤其是当面对更长的字符串输入时更是不方便。其实我们完全可以利用Replicate()函数设定输入长度来简化这样的需求设计过程。<br>
        　　这里我们同样利用了对象的InputMask属性来定义输入格式和输入长度，但是当对象的输入长度比较长时，则可以借助算术表达式的方式来对其进行设定。通过属性窗口中的InputMask属性建立表达式对话框，我们可以利用Replicate()函数设定重复的“X”的个数即可(本例为20)。完成后回到属性设置窗口，我们可以看到在InputMask属性栏中出现了“=Replicate(20)”位值的表达式，这样，我们就轻松地完成了长字符输入的长度控制。由此我们也可以体会到善于使用表达式给我们带来的方便。<br>
        　　<b>五、中文文本框的设计方法</b><br>
        　　在程序开发过程中,我们经常要设计一些文本框,而且这些文本框要求只能输入中文。在这种情况下,通常需要手工启动某一种中文输入法。如果软件能够自动启动缺省的中文输入法,那么将会给编程人员带来很大的方便。下面的类便能实现这一功能,具体的设计步骤如下: 
        <br>
        　　1.创建一个新类,其基类是“TextBox”,类名为“中文TextBox”,存储于“myclass”类库中。<br>
        　　2.进入类设计器后,设置“中文TextBox”的各项属性,如字体、颜色等。<br>
        　　3.设计GotFocus事件,代码为:<br>
        　　=IMESTATUS(1)<br>
        　　表示当光标移到此框后,自动启动中文输入法。<br>
        　　4.设计LostFocus事件,代码为:<br>
        　　=IMESTATUS(0)<br>
        　　表示当光标移开此框后,自动关闭中文输入法。设计好后,保存到文件即可。</p>
      <p align="right"><br>
        　　（河北　朱运喜）</p>
      </TD>
  </TR>
</TABLE>
<TABLE WIDTH='468' BORDER='0' CELLSPACING='0' CELLPADDING='2' ALIGN='center'>
  <TR> 
    <TD>&nbsp;</TD>
    <TD ALIGN='right'><A HREF='#top'>页 首</A></TD>
  </TR>
</TABLE>
<BR>
<TABLE WIDTH='468' BORDER='0' CELLSPACING='0' CELLPADDING='0' ALIGN='center'>
  <TR ALIGN='center' VALIGN='bottom'> 
    <TD HEIGHT='6'><IMG SRC='../images/dot.gif' WIDTH='468' HEIGHT='1'></TD>
  </TR>
</TABLE>
<TABLE WIDTH='468' BORDER='0' CELLSPACING='0' CELLPADDING='2' ALIGN='center'>
  <TR ALIGN='center'> 
    <TD>&nbsp;</TD>
    <TD> <a name='top'></a>  
      
       CPCW版权所有，<A HREF='mailto:webmaster@cpcw.com'>CPCW网站编辑部</A>设计制作发布</TD>
  </TR>
</TABLE>
</BODY>

</HTML>

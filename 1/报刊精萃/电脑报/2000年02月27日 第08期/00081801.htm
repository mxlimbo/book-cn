 
<HTML>
 
<HEAD>
<META HTTP-EQUIV='Content-Type' CONTENT='text/html; charset=gb2312'>
<META NAME='author' CONTENT='William Wan'>
<LINK REL='STYLESHEET' HREF='images/cpcw.css' TYPE='text/css'>
 
<TITLE>电脑报电子版 -- C/C＋＋与汇编的接口设计</TITLE>
 
<style type="text/css">
<!--
.centertitle {  font-weight: bold; text-align: center; line-height: 35px; font-size: 9pt; color: #000000}
.lefttitle {  line-height: 35px; font-weight: bold; font-size: 9pt; color: #000000}
-->
</style>
</HEAD>
<BODY BGCOLOR='white'>
<span class="centertitle"></span><A NAME='top'></A> 
<TABLE BORDER='0' WIDTH='468' CELLSPACING='0' CELLPADDING='0' HEIGHT='6' ALIGN='Center' BGCOLOR='#CCCC99'>
  <TR VALIGN='top'> 
    <TD WIDTH='100%'><IMG SRC='../../images/dot.gif' WIDTH='468' HEIGHT='1'></TD>
  </TR>
</TABLE>
<TABLE WIDTH='468' BORDER='0' CELLSPACING='0' CELLPADDING='0' ALIGN='Center'>
  <TR> 
    
    <TD WIDTH='470' BGCOLOR='#CCCC99' HEIGHT='50'><IMG SRC='images/yjds.gif' WIDTH='468' HEIGHT='60' ALT='广告Logo' BORDER='0'></TD>
  </TR>
</TABLE>
<TABLE BORDER='0' WIDTH='468' CELLSPACING='0' CELLPADDING='0' HEIGHT='2' ALIGN='Center' BGCOLOR='#CCCC99'>
  <TR> 
    <TD WIDTH='100%'><IMG SRC='../../images/pixel.gif' WIDTH='1' HEIGHT='1'></TD>
  </TR>
</TABLE>
<TABLE BORDER='0' WIDTH='468' CELLSPACING='0' CELLPADDING='0' HEIGHT='3' ALIGN='Center' BGCOLOR='#CCCC99'>
  <TR VALIGN='bottom'> 
    <TD WIDTH='100%'><IMG SRC='../../images/dot.gif' WIDTH='468' HEIGHT='1'></TD>
  </TR>
</TABLE>
<TABLE WIDTH='468' BORDER='0' CELLSPACING='0' CELLPADDING='2' ALIGN='Center'>
  <TR> 
    <TD WIDTH='615' COLSPAN='2'><font color="#FF6666">当前位置：</font>CPCW电子版 
      &gt; 2000 年 &gt; <a href="index.html">08期</a> 
      &gt; <a href="software.html">软件世界</a> 
      &gt; C/C＋＋与汇编的接口设计</TD>
  </TR>
</TABLE>
<TABLE WIDTH='468' BORDER='0' CELLSPACING='0' CELLPADDING='0' ALIGN='center'>
  <TR ALIGN='center' VALIGN='bottom'> 
    <TD HEIGHT='6'><IMG SRC='../../images/dot.gif' WIDTH='468' HEIGHT='1'></TD>
  </TR>
</TABLE>
<BR>
<TABLE WIDTH='468' BORDER='0' CELLSPACING='0' CELLPADDING='2' BGCOLOR='#FFCC66' ALIGN='center'>
  <TR> 
    <TD><SPAN CLASS='title'>《 C/C＋＋与汇编的接口设计 
      》</SPAN></TD>
  </TR>
</TABLE>
<BR>
<TABLE WIDTH='468' BORDER='0' CELLSPACING='0' CELLPADDING='2' ALIGN='center'>
  <TR> 
    <TD>　　C/C＋＋功能强大，产生的代码效率高，是目前最流行的编程语言之一。但是效率最高的语言不是C/C＋＋，而是汇编语言。只不过C/C＋＋比起汇编语言来易移植，容易学习；汇编语言比C/C＋＋功能更强大，冗余更少。因此，许多软件可以兼顾二者的优点，用C/C＋＋和汇编语言混合编程。混合编程主要要解决的问题是二者的接口和参数传递，参数传递包括值传递、指针传递、引用传递等。下面以Borland 
      C 3.1简单介绍一下值传递时的接口。<br>
      　　例程用C语言编写主程序，汇编语言编写子程序，主程序中要声明子程序的原型。主程序CMAIN.CPP如下：<br>
      　　//主程序cmain.cpp<br>
      &gt:<br>
      　　extern ″C″ int addition(int x，int y);<br>
      　　//此处声明子程序的原型，C必须大写，最后有分号。<br>
      　　void main()<br>
      　　{ int x=120,y=15,z;<br>
      　　z=addition(x,y);<br>
      　　printf(″x,y,z:％d,％d,％d″,x,y,z);}<br>
      　　Borland C 3.1中带有用于80X86的汇编工具TASM。汇编语言中须说明为何种语言调用，调用的参数以及类型。主程序调用子程序时，从后往前向堆栈中压入参数，然后是主程序的返回地址(80X86中堆栈向低地址方向生长)。前面的主程序调用子程序时堆栈情况如图所示：<br>
      　　当从堆栈中取有关参数时要用到寄存器BP，因此还须要保存BP；如果子程序中有自己的数据段，也要保存原有的DS。返回的结果如果是短整数，请放在AX中；长整数放在DX∶AX中。子程序ADDITION.ASM如下：<br>
      　　;子程序addition.asm<br>
      　　.model small,c ；声明此为C/C＋＋的子程序。<br>
      　　.486 ；可以使用486的指令，包括387。<br>
      　　public addition ；addition公用，可为其它程序远调用。<br>
      　　.code ；代码段开始。<br>
      　　addition proc c x:word，y：word ；addition子程序的格式。<br>
      　　push bp ；保存BP，<br>
      　　mov bp,sp ；把SP值传给BP。<br>
      　　mov ax，[bp＋6] ；取出X。<br>
      　　mov bx，[bp＋8] ；取出Y。<br>
      　　add ax，bx ；（AX）←X＋Y 。<br>
      　　pop bp ；恢复BP。<br>
      　　ret ；返回主程序。<br>
      　　addition endp<br>
      　　end<br>
      　　现在主程序和子程序都已经完成，下面可以用Borland C 3.1来编译和连接了。<br>
      　　首先，进入C主程序，选择“Options/Linker/Libraries”，在Libraries对话框中，选择“Turbo Vision”，以保证与tv.lib连接。<br>
      　　其次，新建或打开ADDITION.ASM，确认无误后选择“≡/Turbo As－sembler”，汇编成功后，选择“File/Dos Shell”，在DOS提示符下键入：<br>
      　　tlib tv.lib ＋addition.obj<br>
      　　如果以后ADDITION.ASM修改了，相应ADDITION.OBJ也改变了，只需键入：<br>
      　　tlib tv.lib －＋addition.obj<br>
      　　现在，键入exit回到Borland C 3.1环境。<br>
      　　接着，新建或打开cmain.cpp，选中“Compile/Compile”，对cmain.cpp编译；选中“Compile/Link”，进行连接。<br>
      　　至此，一个名为cmain.exe的可执文件产生了。<br>
      　　下面，将浮点数的调用和返回加以介绍。<br>
      　　C/C＋＋中，浮点数有两种：float，占四字节；doble，占八字节。浮点参数调进汇编语言时，仍然压入堆栈，可以用上面的方法找到参数；值返回时，只需把结果保留在80X87的TOS中即可。其余与上相同。例程如下：<br>
      　　//主程序fmain.cpp<br>
      &gt:<br>
      　　extern ″C″ double fsqr(double x);<br>
      　　void main()<br>
      　　{double x,y;<br>
      　　printf(″Enter x:″);<br>
      　　scanf(″％e″,＆x);<br>
      　　y=fsqrt(x);<br>
      　　printf(″\nx=％e\ny=％e\n″,x,y);}<br>
      　　;子程序fsqr.asm<br>
      　　.model small,c<br>
      　　. 486<br>
      　　public fsqrt<br>
      　　.code<br>
      　　fsqr proc c x:qword ；X为double型，占8字节。<br>
      　　push bp<br>
      　　mov bp,sp<br>
      　　finit ；协处理器初始化。<br>
      　　fld qword ptr [bp＋6] ；载入X至TOS。<br>
      　　fsqrt ；TOS开方，结果仍在TOS内。<br>
      　　fwait ；与主处理器同步。<br>
      　　pop bp<br>
      　　ret<br>
      　　fsqr exdp<br>
      　　end <br>
      <b>　　（江苏　黄建华）</b></TD>
  </TR>
</TABLE>
<TABLE WIDTH='468' BORDER='0' CELLSPACING='0' CELLPADDING='2' ALIGN='center'>
  <TR> 
    <TD><A HREF='http://www.mydown.com/dnb/' TARGET='_blank'>下载本期推荐软件</A></TD>
    <TD ALIGN='right'><A HREF='#top'>页 首</A></TD>
  </TR>
</TABLE>
<BR>
<TABLE WIDTH='468' BORDER='0' CELLSPACING='0' CELLPADDING='0' ALIGN='center'>
  <TR ALIGN='center' VALIGN='bottom'> 
    <TD HEIGHT='6'><IMG SRC='../../images/dot.gif' WIDTH='468' HEIGHT='1'></TD>
  </TR>
</TABLE>
<TABLE WIDTH='468' BORDER='0' CELLSPACING='0' CELLPADDING='2' ALIGN='center'>
  <TR ALIGN='center'> 
    <TD>&nbsp; 
      
       </TD>
    <TD> CPCW版权所有，<A HREF='mailto:webmaster@cpcw.com'>CPCW网站编辑部</A>设计制作发布</TD>
  </TR>
</TABLE>
</BODY>

</HTML>
